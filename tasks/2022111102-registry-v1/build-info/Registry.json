{
  "id": "1aac843bba5cc8416f9e2dd898734091",
  "_format": "hh-sol-build-info-1",
  "solcVersion": "0.8.3",
  "solcLongVersion": "0.8.3+commit.8d00100c",
  "input": {
    "language": "Solidity",
    "sources": {
      "contracts/implementations/BaseAuthorizedImplementation.sol": {
        "content": "// SPDX-License-Identifier: GPL-3.0-or-later\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n\n// You should have received a copy of the GNU General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\npragma solidity ^0.8.0;\n\nimport '@mimic-fi/v2-helpers/contracts/auth/Authorizer.sol';\n\nimport './BaseImplementation.sol';\n\n/**\n * @title BaseAuthorizedImplementation\n * @dev BaseImplementation using the Authorizer mixin. Base implementations that want to use the Authorizer\n * permissions mechanism should inherit from this contract instead.\n */\nabstract contract BaseAuthorizedImplementation is BaseImplementation, Authorizer {\n    /**\n     * @dev Creates a new BaseAuthorizedImplementation\n     * @param admin Address to be granted authorize and unauthorize permissions\n     * @param registry Address of the Mimic Registry\n     */\n    constructor(address admin, address registry) BaseImplementation(registry) {\n        _authorize(admin, Authorizer.authorize.selector);\n        _authorize(admin, Authorizer.unauthorize.selector);\n    }\n}\n"
      },
      "@mimic-fi/v2-helpers/contracts/auth/Authorizer.sol": {
        "content": "// SPDX-License-Identifier: GPL-3.0-or-later\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n\n// You should have received a copy of the GNU General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\npragma solidity ^0.8.0;\n\nimport './IAuthorizer.sol';\n\n/**\n * @title Authorizer\n * @dev Authorization module to be used by contracts that need to implement permissions for their methods.\n * It provides a permissions model to list who is allowed to call what function in a contract. And only accounts\n * authorized to manage those permissions are the ones that are allowed to authorize or unauthorize accounts.\n */\ncontract Authorizer is IAuthorizer {\n    // Constant used to denote that a permission is open to anyone\n    address public constant ANY_ADDRESS = address(0xFFfFfFffFFfffFFfFFfFFFFFffFFFffffFfFFFfF);\n\n    // Internal mapping to tell who is allowed to do what indexed by (account, function selector)\n    mapping (address => mapping (bytes4 => bool)) private authorized;\n\n    /**\n     * @dev Modifier that should be used to tag protected functions\n     */\n    modifier auth() {\n        _authenticate(msg.sender, msg.sig);\n        _;\n    }\n\n    /**\n     * @dev Tells whether someone is allowed to call a function or not. It returns true if it's allowed to anyone.\n     * @param who Address asking permission for\n     * @param what Function selector asking permission for\n     */\n    function isAuthorized(address who, bytes4 what) public view override returns (bool) {\n        return authorized[ANY_ADDRESS][what] || authorized[who][what];\n    }\n\n    /**\n     * @dev Authorizes someone to call a function. Sender must be authorize to do so.\n     * @param who Address to be authorized\n     * @param what Function selector to be granted\n     */\n    function authorize(address who, bytes4 what) external override auth {\n        _authorize(who, what);\n    }\n\n    /**\n     * @dev Unauthorizes someone to call a function. Sender must be authorize to do so.\n     * @param who Address to be unauthorized\n     * @param what Function selector to be revoked\n     */\n    function unauthorize(address who, bytes4 what) external override auth {\n        _unauthorize(who, what);\n    }\n\n    /**\n     * @dev Internal function to authenticate someone over a function.\n     * It reverts if the given account is not authorized to call the requested function.\n     * @param who Address to be authenticated\n     * @param what Function selector to be authenticated\n     */\n    function _authenticate(address who, bytes4 what) internal view {\n        require(isAuthorized(who, what), 'AUTH_SENDER_NOT_ALLOWED');\n    }\n\n    /**\n     * @dev Internal function to authorize someone to call a function\n     * @param who Address to be authorized\n     * @param what Function selector to be granted\n     */\n    function _authorize(address who, bytes4 what) internal {\n        authorized[who][what] = true;\n        emit Authorized(who, what);\n    }\n\n    /**\n     * @dev Internal function to unauthorize someone to call a function\n     * @param who Address to be unauthorized\n     * @param what Function selector to be revoked\n     */\n    function _unauthorize(address who, bytes4 what) internal {\n        authorized[who][what] = false;\n        emit Unauthorized(who, what);\n    }\n}\n"
      },
      "contracts/implementations/BaseImplementation.sol": {
        "content": "// SPDX-License-Identifier: GPL-3.0-or-later\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n\n// You should have received a copy of the GNU General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\npragma solidity ^0.8.0;\n\nimport '@openzeppelin/contracts/proxy/utils/Initializable.sol';\n\nimport './IImplementation.sol';\nimport '../registry/IRegistry.sol';\n\n/**\n * @title BaseImplementation\n * @dev This implementation contract comes with an immutable reference to an implementations registry where it should\n * be registered as well (checked during initialization). It allows requesting new instances of other registered\n * implementations to as another safety check to make sure valid instances are referenced in case it's needed.\n */\nabstract contract BaseImplementation is IImplementation {\n    // Immutable implementations registry reference\n    address public immutable override registry;\n\n    /**\n     * @dev Creates a new BaseImplementation\n     * @param _registry Address of the Mimic Registry where dependencies will be validated against\n     */\n    constructor(address _registry) {\n        registry = _registry;\n    }\n\n    /**\n     * @dev Internal function to validate a new dependency that must be registered as stateless.\n     * It checks the new dependency is registered, not deprecated, and stateless.\n     * @param dependency New stateless dependency to be set\n     */\n    function _validateStatelessDependency(address dependency) internal view {\n        require(_validateDependency(dependency), 'DEPENDENCY_NOT_STATELESS');\n    }\n\n    /**\n     * @dev Internal function to validate a new dependency that cannot be registered as stateless.\n     * It checks the new dependency is registered, not deprecated, and not stateful.\n     * @param dependency New stateful dependency to be set\n     */\n    function _validateStatefulDependency(address dependency) internal view {\n        require(!_validateDependency(dependency), 'DEPENDENCY_NOT_STATEFUL');\n    }\n\n    /**\n     * @dev Internal function to validate a new dependency. It checks the dependency is registered and not deprecated.\n     * @param dependency New dependency to be set\n     * @return Whether the dependency is stateless or not\n     */\n    function _validateDependency(address dependency) private view returns (bool) {\n        // If there is an implementation registered for the dependency, check the dependency as an instance.\n        // Otherwise, treat the dependency as an implementation.\n        address dependencyImplementation = IRegistry(registry).implementationOf(dependency);\n        address implementation = dependencyImplementation != address(0) ? dependencyImplementation : dependency;\n\n        (bool stateless, bool deprecated, bytes32 namespace) = IRegistry(registry).implementationData(implementation);\n        require(namespace != bytes32(0), 'DEPENDENCY_NOT_REGISTERED');\n        require(!deprecated, 'DEPENDENCY_DEPRECATED');\n        return stateless;\n    }\n}\n"
      },
      "@mimic-fi/v2-helpers/contracts/auth/IAuthorizer.sol": {
        "content": "// SPDX-License-Identifier: GPL-3.0-or-later\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n\n// You should have received a copy of the GNU General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\npragma solidity >=0.8.0;\n\n/**\n * @title IAuthorizer\n */\ninterface IAuthorizer {\n    /**\n     * @dev Emitted when an account is authorized to call a function\n     */\n    event Authorized(address indexed who, bytes4 what);\n\n    /**\n     * @dev Emitted when an account is unauthorized to call a function\n     */\n    event Unauthorized(address indexed who, bytes4 what);\n\n    /**\n     * @dev Authorizes someone to call a function. Sender must be authorize to do so.\n     * @param who Address to be authorized\n     * @param what Function selector to be granted\n     */\n    function authorize(address who, bytes4 what) external;\n\n    /**\n     * @dev Unauthorizes someone to call a function. Sender must be authorize to do so.\n     * @param who Address to be unauthorized\n     * @param what Function selector to be revoked\n     */\n    function unauthorize(address who, bytes4 what) external;\n\n    /**\n     * @dev Tells whether someone is allowed to call a function or not. It returns true if it's allowed to anyone.\n     * @param who Address asking permission for\n     * @param what Function selector asking permission for\n     */\n    function isAuthorized(address who, bytes4 what) external view returns (bool);\n}\n"
      },
      "@openzeppelin/contracts/proxy/utils/Initializable.sol": {
        "content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.7.0) (proxy/utils/Initializable.sol)\n\npragma solidity ^0.8.2;\n\nimport \"../../utils/Address.sol\";\n\n/**\n * @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\n * behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\n * external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\n * function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\n *\n * The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\n * reused. This mechanism prevents re-execution of each \"step\" but allows the creation of new initialization steps in\n * case an upgrade adds a module that needs to be initialized.\n *\n * For example:\n *\n * [.hljs-theme-light.nopadding]\n * ```\n * contract MyToken is ERC20Upgradeable {\n *     function initialize() initializer public {\n *         __ERC20_init(\"MyToken\", \"MTK\");\n *     }\n * }\n * contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\n *     function initializeV2() reinitializer(2) public {\n *         __ERC20Permit_init(\"MyToken\");\n *     }\n * }\n * ```\n *\n * TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\n * possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\n *\n * CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\n * that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\n *\n * [CAUTION]\n * ====\n * Avoid leaving a contract uninitialized.\n *\n * An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\n * contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\n * the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\n *\n * [.hljs-theme-light.nopadding]\n * ```\n * /// @custom:oz-upgrades-unsafe-allow constructor\n * constructor() {\n *     _disableInitializers();\n * }\n * ```\n * ====\n */\nabstract contract Initializable {\n    /**\n     * @dev Indicates that the contract has been initialized.\n     * @custom:oz-retyped-from bool\n     */\n    uint8 private _initialized;\n\n    /**\n     * @dev Indicates that the contract is in the process of being initialized.\n     */\n    bool private _initializing;\n\n    /**\n     * @dev Triggered when the contract has been initialized or reinitialized.\n     */\n    event Initialized(uint8 version);\n\n    /**\n     * @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\n     * `onlyInitializing` functions can be used to initialize parent contracts. Equivalent to `reinitializer(1)`.\n     */\n    modifier initializer() {\n        bool isTopLevelCall = !_initializing;\n        require(\n            (isTopLevelCall && _initialized < 1) || (!Address.isContract(address(this)) && _initialized == 1),\n            \"Initializable: contract is already initialized\"\n        );\n        _initialized = 1;\n        if (isTopLevelCall) {\n            _initializing = true;\n        }\n        _;\n        if (isTopLevelCall) {\n            _initializing = false;\n            emit Initialized(1);\n        }\n    }\n\n    /**\n     * @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\n     * contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\n     * used to initialize parent contracts.\n     *\n     * `initializer` is equivalent to `reinitializer(1)`, so a reinitializer may be used after the original\n     * initialization step. This is essential to configure modules that are added through upgrades and that require\n     * initialization.\n     *\n     * Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\n     * a contract, executing them in the right order is up to the developer or operator.\n     */\n    modifier reinitializer(uint8 version) {\n        require(!_initializing && _initialized < version, \"Initializable: contract is already initialized\");\n        _initialized = version;\n        _initializing = true;\n        _;\n        _initializing = false;\n        emit Initialized(version);\n    }\n\n    /**\n     * @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\n     * {initializer} and {reinitializer} modifiers, directly or indirectly.\n     */\n    modifier onlyInitializing() {\n        require(_initializing, \"Initializable: contract is not initializing\");\n        _;\n    }\n\n    /**\n     * @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\n     * Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\n     * to any version. It is recommended to use this to lock implementation contracts that are designed to be called\n     * through proxies.\n     */\n    function _disableInitializers() internal virtual {\n        require(!_initializing, \"Initializable: contract is initializing\");\n        if (_initialized < type(uint8).max) {\n            _initialized = type(uint8).max;\n            emit Initialized(type(uint8).max);\n        }\n    }\n}\n"
      },
      "contracts/implementations/IImplementation.sol": {
        "content": "// SPDX-License-Identifier: GPL-3.0-or-later\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n\n// You should have received a copy of the GNU General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\npragma solidity >=0.8.0;\n\n// solhint-disable func-name-mixedcase\n\n/**\n * @title IImplementation\n * @dev Implementation interface that must be followed for implementations to be registered in the Mimic Registry\n */\ninterface IImplementation {\n    /**\n     * @dev Tells the namespace under which the implementation is registered in the Mimic Registry\n     */\n    function NAMESPACE() external view returns (bytes32);\n\n    /**\n     * @dev Tells the address of the Mimic Registry\n     */\n    function registry() external view returns (address);\n}\n"
      },
      "contracts/registry/IRegistry.sol": {
        "content": "// SPDX-License-Identifier: GPL-3.0-or-later\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n\n// You should have received a copy of the GNU General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\npragma solidity >=0.8.0;\n\nimport '@mimic-fi/v2-helpers/contracts/auth/IAuthorizer.sol';\n\n/**\n * @title IRegistry\n * @dev Registry interface, it must follow the IAuthorizer interface.\n */\ninterface IRegistry is IAuthorizer {\n    /**\n     * @dev Emitted every time a new implementation is registered\n     */\n    event Registered(bytes32 indexed namespace, address indexed implementation, bool stateless);\n\n    /**\n     * @dev Emitted every time an implementation is deprecated\n     */\n    event Deprecated(bytes32 indexed namespace, address indexed implementation);\n\n    /**\n     * @dev Emitted every time an implementation is cloned\n     */\n    event Cloned(bytes32 indexed namespace, address indexed implementation, address instance, bytes initResult);\n\n    /**\n     * @dev Tells the implementation associated to a contract instance\n     * @param instance Address of the instance to request it's implementation\n     */\n    function implementationOf(address instance) external view returns (address);\n\n    /**\n     * @dev Tells the data of an implementation:\n     * @param implementation Address of the implementation to request it's data\n     */\n    function implementationData(address implementation)\n        external\n        view\n        returns (bool stateless, bool deprecated, bytes32 namespace);\n\n    /**\n     * @dev Tells if a specific implementation is registered under a certain namespace and it's not deprecated\n     * @param namespace Namespace asking for\n     * @param implementation Address of the implementation to be checked\n     */\n    function isActive(bytes32 namespace, address implementation) external view returns (bool);\n\n    /**\n     * @dev Registers a new implementation for a given namespace\n     * @param namespace Namespace to be used for the implementation\n     * @param implementation Address of the implementation to be registered\n     * @param stateless Whether the implementation is stateless or not\n     */\n    function register(bytes32 namespace, address implementation, bool stateless) external;\n\n    /**\n     * @dev Deprecates a registered implementation\n     * @param implementation Address of the implementation to be deprecated\n     */\n    function deprecate(address implementation) external;\n\n    /**\n     * @dev Clones a registered implementation\n     * @param implementation Address of the implementation to be cloned\n     * @param initializeData Arbitrary data to be sent after deployment\n     * @return instance Address of the new instance created\n     */\n    function clone(address implementation, bytes memory initializeData) external returns (address);\n}\n"
      },
      "@openzeppelin/contracts/utils/Address.sol": {
        "content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.7.0) (utils/Address.sol)\n\npragma solidity ^0.8.1;\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary Address {\n    /**\n     * @dev Returns true if `account` is a contract.\n     *\n     * [IMPORTANT]\n     * ====\n     * It is unsafe to assume that an address for which this function returns\n     * false is an externally-owned account (EOA) and not a contract.\n     *\n     * Among others, `isContract` will return false for the following\n     * types of addresses:\n     *\n     *  - an externally-owned account\n     *  - a contract in construction\n     *  - an address where a contract will be created\n     *  - an address where a contract lived, but was destroyed\n     * ====\n     *\n     * [IMPORTANT]\n     * ====\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\n     *\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n     * constructor.\n     * ====\n     */\n    function isContract(address account) internal view returns (bool) {\n        // This method relies on extcodesize/address.code.length, which returns 0\n        // for contracts in construction, since the code is only stored at the end\n        // of the constructor execution.\n\n        return account.code.length > 0;\n    }\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        require(address(this).balance >= amount, \"Address: insufficient balance\");\n\n        (bool success, ) = recipient.call{value: amount}(\"\");\n        require(success, \"Address: unable to send value, recipient may have reverted\");\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain `call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason, it is bubbled up by this\n     * function (like regular Solidity function calls).\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionCall(target, data, \"Address: low-level call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n     * `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, value, \"Address: low-level call with value failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        require(address(this).balance >= value, \"Address: insufficient balance for call\");\n        require(isContract(target), \"Address: call to non-contract\");\n\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\n        return verifyCallResult(success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\n        return functionStaticCall(target, data, \"Address: low-level static call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal view returns (bytes memory) {\n        require(isContract(target), \"Address: static call to non-contract\");\n\n        (bool success, bytes memory returndata) = target.staticcall(data);\n        return verifyCallResult(success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionDelegateCall(target, data, \"Address: low-level delegate call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        require(isContract(target), \"Address: delegate call to non-contract\");\n\n        (bool success, bytes memory returndata) = target.delegatecall(data);\n        return verifyCallResult(success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Tool to verifies that a low level call was successful, and revert if it wasn't, either by bubbling the\n     * revert reason using the provided one.\n     *\n     * _Available since v4.3._\n     */\n    function verifyCallResult(\n        bool success,\n        bytes memory returndata,\n        string memory errorMessage\n    ) internal pure returns (bytes memory) {\n        if (success) {\n            return returndata;\n        } else {\n            // Look for revert reason and bubble it up if present\n            if (returndata.length > 0) {\n                // The easiest way to bubble the revert reason is using memory via assembly\n                /// @solidity memory-safe-assembly\n                assembly {\n                    let returndata_size := mload(returndata)\n                    revert(add(32, returndata), returndata_size)\n                }\n            } else {\n                revert(errorMessage);\n            }\n        }\n    }\n}\n"
      },
      "contracts/test/BaseImplementationMock.sol": {
        "content": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.0;\n\nimport '../implementations/BaseImplementation.sol';\n\ncontract BaseImplementationMock is BaseImplementation {\n    bytes32 public constant override NAMESPACE = keccak256('BASE_IMPLEMENTATION_MOCK');\n\n    constructor(address registry) BaseImplementation(registry) {\n        // solhint-disable-previous-line no-empty-blocks\n    }\n\n    function validateStatefulDependency(address dependency) external view {\n        _validateStatefulDependency(dependency);\n    }\n\n    function validateStatelessDependency(address dependency) external view {\n        _validateStatelessDependency(dependency);\n    }\n}\n"
      },
      "contracts/implementations/InitializableImplementation.sol": {
        "content": "// SPDX-License-Identifier: GPL-3.0-or-later\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n\n// You should have received a copy of the GNU General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\npragma solidity ^0.8.0;\n\nimport '@openzeppelin/contracts/proxy/utils/Initializable.sol';\n\nimport './BaseImplementation.sol';\n\n/**\n * @title InitializableImplementation\n * @dev Implementation contract to be used through proxies. Inheriting contracts are meant to be initialized through\n * initialization functions instead of constructor functions. It allows re-using the same logic contract while making\n * deployments cheaper.\n */\nabstract contract InitializableImplementation is BaseImplementation, Initializable {\n    /**\n     * @dev Creates a new BaseImplementation. Note that initializers are disabled at creation time.\n     */\n    constructor(address registry) BaseImplementation(registry) {\n        _disableInitializers();\n    }\n\n    /**\n     * @dev Initialization function to check a new instance is properly set up in the registry.\n     * Note this function can only be called from a function marked with the `initializer` modifier.\n     */\n    function _initialize() internal view onlyInitializing {\n        address implementation = IRegistry(registry).implementationOf(address(this));\n        require(implementation != address(0), 'IMPLEMENTATION_NOT_REGISTERED');\n\n        (, bool deprecated, bytes32 namespace) = IRegistry(registry).implementationData(implementation);\n        require(!deprecated, 'IMPLEMENTATION_DEPRECATED');\n        require(this.NAMESPACE() == namespace, 'INVALID_IMPLEMENTATION_NAMESPACE');\n    }\n}\n"
      },
      "contracts/test/InitializableImplementationMock.sol": {
        "content": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.0;\n\nimport '../implementations/InitializableImplementation.sol';\n\ncontract InitializableImplementationMock is InitializableImplementation {\n    bytes32 public constant override NAMESPACE = keccak256('INITIALIZABLE_IMPLEMENTATION_MOCK');\n\n    constructor(address registry) InitializableImplementation(registry) {\n        // solhint-disable-previous-line no-empty-blocks\n    }\n\n    function initialize() external initializer {\n        _initialize();\n    }\n}\n"
      },
      "contracts/registry/Registry.sol": {
        "content": "// SPDX-License-Identifier: GPL-3.0-or-later\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n\n// You should have received a copy of the GNU General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\npragma solidity ^0.8.0;\n\nimport '@openzeppelin/contracts/proxy/Clones.sol';\nimport '@openzeppelin/contracts/utils/Address.sol';\n\nimport '@mimic-fi/v2-helpers/contracts/auth/Authorizer.sol';\n\nimport './IRegistry.sol';\n\n/**\n * @title Registry\n * @dev Registry of contracts that acts as a curated list of implementations and instances to be trusted by the Mimic\n * protocol. Here consumers can find either implementation contracts (to be cloned through proxies) and contract\n * instances (from cloned implementations).\n *\n * The registry follows the Authorizer mixin and only authorized parties are allowed to register implementations.\n * Instances are automatically registered when a new clone is requested to the registry.\n */\ncontract Registry is IRegistry, Authorizer {\n    using Address for address;\n\n    struct ImplementationData {\n        bool stateless;\n        bool deprecated;\n        bytes32 namespace;\n    }\n\n    // List of instances' implementations indexed by instance address\n    mapping (address => address) public override implementationOf;\n\n    // List of implementations indexed by address\n    mapping (address => ImplementationData) public override implementationData;\n\n    /**\n     * @dev Initializes the Registry contract\n     * @param admin Address to be granted with register, deprecate, authorize, and unauthorize permissions\n     */\n    constructor(address admin) {\n        _authorize(admin, Registry.register.selector);\n        _authorize(admin, Registry.deprecate.selector);\n        _authorize(admin, Authorizer.authorize.selector);\n        _authorize(admin, Authorizer.unauthorize.selector);\n    }\n\n    /**\n     * @dev Tells if a specific implementation is registered under a certain namespace and it's not deprecated\n     * @param namespace Namespace asking for\n     * @param implementation Address of the implementation to be checked\n     */\n    function isActive(bytes32 namespace, address implementation) external view override returns (bool) {\n        ImplementationData storage data = implementationData[implementation];\n        return !data.deprecated && data.namespace == namespace;\n    }\n\n    /**\n     * @dev Registers a new implementation for a given namespace. Sender must be authorized.\n     * @param namespace Namespace to be used for the implementation\n     * @param implementation Address of the implementation to be registered\n     * @param stateless Whether the implementation is stateless or not\n     */\n    function register(bytes32 namespace, address implementation, bool stateless) external override auth {\n        require(namespace != bytes32(0), 'INVALID_NAMESPACE');\n        require(implementation != address(0), 'INVALID_IMPLEMENTATION');\n\n        ImplementationData storage data = implementationData[implementation];\n        require(data.namespace == bytes32(0), 'REGISTERED_IMPLEMENTATION');\n        require(implementationOf[implementation] == address(0), 'CANNOT_REGISTER_INSTANCE');\n\n        data.deprecated = false;\n        data.stateless = stateless;\n        data.namespace = namespace;\n        emit Registered(namespace, implementation, stateless);\n    }\n\n    /**\n     * @dev Deprecates a registered implementation. Sender must be authorized.\n     * @param implementation Address of the implementation to be deprecated. It must be registered and not deprecated.\n     */\n    function deprecate(address implementation) external override auth {\n        require(implementation != address(0), 'IMPLEMENTATION_ADDRESS_ZERO');\n\n        ImplementationData storage data = implementationData[implementation];\n        require(data.namespace != bytes32(0), 'UNREGISTERED_IMPLEMENTATION');\n        require(!data.deprecated, 'DEPRECATED_IMPLEMENTATION');\n\n        data.deprecated = true;\n        emit Deprecated(data.namespace, implementation);\n    }\n\n    /**\n     * @dev Clones a registered implementation\n     * @param implementation Address of the implementation to be cloned. It must be registered and not deprecated.\n     * @param initializeData Arbitrary data to be sent after deployment. It can be used to initialize the new instance.\n     * @return instance Address of the new instance created\n     */\n    function clone(address implementation, bytes memory initializeData) external override returns (address instance) {\n        require(implementation != address(0), 'IMPLEMENTATION_ADDRESS_ZERO');\n\n        ImplementationData storage data = implementationData[implementation];\n        require(data.namespace != bytes32(0), 'UNREGISTERED_IMPLEMENTATION');\n        require(!data.deprecated, 'DEPRECATED_IMPLEMENTATION');\n\n        instance = Clones.clone(address(implementation));\n        implementationOf[instance] = implementation;\n        bytes memory result = initializeData.length == 0\n            ? new bytes(0)\n            : instance.functionCall(initializeData, 'CLONE_INIT_FAILED');\n\n        emit Cloned(data.namespace, implementation, instance, result);\n    }\n}\n"
      },
      "@openzeppelin/contracts/proxy/Clones.sol": {
        "content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.7.0) (proxy/Clones.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev https://eips.ethereum.org/EIPS/eip-1167[EIP 1167] is a standard for\n * deploying minimal proxy contracts, also known as \"clones\".\n *\n * > To simply and cheaply clone contract functionality in an immutable way, this standard specifies\n * > a minimal bytecode implementation that delegates all calls to a known, fixed address.\n *\n * The library includes functions to deploy a proxy using either `create` (traditional deployment) or `create2`\n * (salted deterministic deployment). It also includes functions to predict the addresses of clones deployed using the\n * deterministic method.\n *\n * _Available since v3.4._\n */\nlibrary Clones {\n    /**\n     * @dev Deploys and returns the address of a clone that mimics the behaviour of `implementation`.\n     *\n     * This function uses the create opcode, which should never revert.\n     */\n    function clone(address implementation) internal returns (address instance) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            let ptr := mload(0x40)\n            mstore(ptr, 0x3d602d80600a3d3981f3363d3d373d3d3d363d73000000000000000000000000)\n            mstore(add(ptr, 0x14), shl(0x60, implementation))\n            mstore(add(ptr, 0x28), 0x5af43d82803e903d91602b57fd5bf30000000000000000000000000000000000)\n            instance := create(0, ptr, 0x37)\n        }\n        require(instance != address(0), \"ERC1167: create failed\");\n    }\n\n    /**\n     * @dev Deploys and returns the address of a clone that mimics the behaviour of `implementation`.\n     *\n     * This function uses the create2 opcode and a `salt` to deterministically deploy\n     * the clone. Using the same `implementation` and `salt` multiple time will revert, since\n     * the clones cannot be deployed twice at the same address.\n     */\n    function cloneDeterministic(address implementation, bytes32 salt) internal returns (address instance) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            let ptr := mload(0x40)\n            mstore(ptr, 0x3d602d80600a3d3981f3363d3d373d3d3d363d73000000000000000000000000)\n            mstore(add(ptr, 0x14), shl(0x60, implementation))\n            mstore(add(ptr, 0x28), 0x5af43d82803e903d91602b57fd5bf30000000000000000000000000000000000)\n            instance := create2(0, ptr, 0x37, salt)\n        }\n        require(instance != address(0), \"ERC1167: create2 failed\");\n    }\n\n    /**\n     * @dev Computes the address of a clone deployed using {Clones-cloneDeterministic}.\n     */\n    function predictDeterministicAddress(\n        address implementation,\n        bytes32 salt,\n        address deployer\n    ) internal pure returns (address predicted) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            let ptr := mload(0x40)\n            mstore(ptr, 0x3d602d80600a3d3981f3363d3d373d3d3d363d73000000000000000000000000)\n            mstore(add(ptr, 0x14), shl(0x60, implementation))\n            mstore(add(ptr, 0x28), 0x5af43d82803e903d91602b57fd5bf3ff00000000000000000000000000000000)\n            mstore(add(ptr, 0x38), shl(0x60, deployer))\n            mstore(add(ptr, 0x4c), salt)\n            mstore(add(ptr, 0x6c), keccak256(ptr, 0x37))\n            predicted := keccak256(add(ptr, 0x37), 0x55)\n        }\n    }\n\n    /**\n     * @dev Computes the address of a clone deployed using {Clones-cloneDeterministic}.\n     */\n    function predictDeterministicAddress(address implementation, bytes32 salt)\n        internal\n        view\n        returns (address predicted)\n    {\n        return predictDeterministicAddress(implementation, salt, address(this));\n    }\n}\n"
      },
      "contracts/implementations/InitializableAuthorizedImplementation.sol": {
        "content": "// SPDX-License-Identifier: GPL-3.0-or-later\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n\n// You should have received a copy of the GNU General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\npragma solidity ^0.8.0;\n\nimport '@mimic-fi/v2-helpers/contracts/auth/Authorizer.sol';\n\nimport './InitializableImplementation.sol';\n\n/**\n * @title InitializableAuthorizedImplementation\n * @dev InitializableImplementation using the Authorizer mixin. Initializable implementations that want to use the\n * Authorizer permissions mechanism should inherit from this contract instead.\n */\nabstract contract InitializableAuthorizedImplementation is InitializableImplementation, Authorizer {\n    /**\n     * @dev Creates a new InitializableAuthorizedImplementation\n     * @param registry Address of the Mimic Registry\n     */\n    constructor(address registry) InitializableImplementation(registry) {\n        // solhint-disable-previous-line no-empty-blocks\n    }\n\n    /**\n     * @dev Initialization function that authorizes an admin account to authorize and unauthorize accounts.\n     * Note this function can only be called from a function marked with the `initializer` modifier.\n     * @param admin Address to be granted authorize and unauthorize permissions\n     */\n    function _initialize(address admin) internal onlyInitializing {\n        _initialize();\n        _authorize(admin, Authorizer.authorize.selector);\n        _authorize(admin, Authorizer.unauthorize.selector);\n    }\n}\n"
      },
      "contracts/test/InitializableAuthorizedImplementationMock.sol": {
        "content": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.0;\n\nimport '../implementations/InitializableAuthorizedImplementation.sol';\n\ncontract InitializableAuthorizedImplementationMock is InitializableAuthorizedImplementation {\n    bytes32 public constant override NAMESPACE = keccak256('INITIALIZABLE_AUTHORIZED_IMPLEMENTATION_MOCK');\n\n    constructor(address registry) InitializableAuthorizedImplementation(registry) {\n        // solhint-disable-previous-line no-empty-blocks\n    }\n\n    function initialize(address admin) external initializer {\n        _initialize(admin);\n    }\n}\n"
      }
    },
    "settings": {
      "optimizer": {
        "enabled": true,
        "runs": 10000
      },
      "outputSelection": {
        "*": {
          "*": [
            "abi",
            "evm.bytecode",
            "evm.deployedBytecode",
            "evm.methodIdentifiers",
            "metadata"
          ],
          "": [
            "ast"
          ]
        }
      }
    }
  },
  "output": {
    "contracts": {
      "@mimic-fi/v2-helpers/contracts/auth/Authorizer.sol": {
        "Authorizer": {
          "abi": [
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "who",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "bytes4",
                  "name": "what",
                  "type": "bytes4"
                }
              ],
              "name": "Authorized",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "who",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "bytes4",
                  "name": "what",
                  "type": "bytes4"
                }
              ],
              "name": "Unauthorized",
              "type": "event"
            },
            {
              "inputs": [],
              "name": "ANY_ADDRESS",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "who",
                  "type": "address"
                },
                {
                  "internalType": "bytes4",
                  "name": "what",
                  "type": "bytes4"
                }
              ],
              "name": "authorize",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "who",
                  "type": "address"
                },
                {
                  "internalType": "bytes4",
                  "name": "what",
                  "type": "bytes4"
                }
              ],
              "name": "isAuthorized",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "who",
                  "type": "address"
                },
                {
                  "internalType": "bytes4",
                  "name": "what",
                  "type": "bytes4"
                }
              ],
              "name": "unauthorize",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "generatedSources": [],
              "linkReferences": {},
              "object": "608060405234801561001057600080fd5b5061047e806100206000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c80633f81a192146100515780636646a43614610096578063933f0f3c146100ab578063d9972b96146100be575b600080fd5b61006c73ffffffffffffffffffffffffffffffffffffffff81565b60405173ffffffffffffffffffffffffffffffffffffffff90911681526020015b60405180910390f35b6100a96100a43660046103d4565b6100e1565b005b6100a96100b93660046103d4565b61011d565b6100d16100cc3660046103d4565b610155565b604051901515815260200161008d565b61010f336000357fffffffff000000000000000000000000000000000000000000000000000000001661020b565b610119828261027f565b5050565b61014b336000357fffffffff000000000000000000000000000000000000000000000000000000001661020b565b610119828261032c565b7fffffffff00000000000000000000000000000000000000000000000000000000811660009081527f50c7a3d1a23c7ff4a61d37c3f2c4aeb36cf60b43ee893723db201d3eb941cbad602052604081205460ff1680610204575073ffffffffffffffffffffffffffffffffffffffff83166000908152602081815260408083207fffffffff000000000000000000000000000000000000000000000000000000008616845290915290205460ff165b9392505050565b6102158282610155565b610119576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601760248201527f415554485f53454e4445525f4e4f545f414c4c4f574544000000000000000000604482015260640160405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff82166000818152602081815260408083207fffffffff0000000000000000000000000000000000000000000000000000000086168085529083529281902080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00169055519182527fa2e97b9eea8d1168700e334304edd057dff89c0384ca6f920c73cc3e48c8e52391015b60405180910390a25050565b73ffffffffffffffffffffffffffffffffffffffff82166000818152602081815260408083207fffffffff0000000000000000000000000000000000000000000000000000000086168085529083529281902080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00166001179055519182527f7f06c1c34ad47198873da9dcde2e40904035d41b23da3a9132df674a75022df79101610320565b600080604083850312156103e6578182fd5b823573ffffffffffffffffffffffffffffffffffffffff81168114610409578283fd5b915060208301357fffffffff000000000000000000000000000000000000000000000000000000008116811461043d578182fd5b80915050925092905056fea2646970667358221220f1d8ee0c14c064bcafa56d1f7d75c4a66d40be164dd3151066d33a96ff7f43ef64736f6c63430008030033",
              "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x47E DUP1 PUSH2 0x20 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x4C JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x3F81A192 EQ PUSH2 0x51 JUMPI DUP1 PUSH4 0x6646A436 EQ PUSH2 0x96 JUMPI DUP1 PUSH4 0x933F0F3C EQ PUSH2 0xAB JUMPI DUP1 PUSH4 0xD9972B96 EQ PUSH2 0xBE JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x6C PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xA9 PUSH2 0xA4 CALLDATASIZE PUSH1 0x4 PUSH2 0x3D4 JUMP JUMPDEST PUSH2 0xE1 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xA9 PUSH2 0xB9 CALLDATASIZE PUSH1 0x4 PUSH2 0x3D4 JUMP JUMPDEST PUSH2 0x11D JUMP JUMPDEST PUSH2 0xD1 PUSH2 0xCC CALLDATASIZE PUSH1 0x4 PUSH2 0x3D4 JUMP JUMPDEST PUSH2 0x155 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x8D JUMP JUMPDEST PUSH2 0x10F CALLER PUSH1 0x0 CALLDATALOAD PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 AND PUSH2 0x20B JUMP JUMPDEST PUSH2 0x119 DUP3 DUP3 PUSH2 0x27F JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x14B CALLER PUSH1 0x0 CALLDATALOAD PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 AND PUSH2 0x20B JUMP JUMPDEST PUSH2 0x119 DUP3 DUP3 PUSH2 0x32C JUMP JUMPDEST PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH32 0x50C7A3D1A23C7FF4A61D37C3F2C4AEB36CF60B43EE893723DB201D3EB941CBAD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0xFF AND DUP1 PUSH2 0x204 JUMPI POP PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP7 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x215 DUP3 DUP3 PUSH2 0x155 JUMP JUMPDEST PUSH2 0x119 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x415554485F53454E4445525F4E4F545F414C4C4F574544000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP7 AND DUP1 DUP6 MSTORE SWAP1 DUP4 MSTORE SWAP3 DUP2 SWAP1 KECCAK256 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00 AND SWAP1 SSTORE MLOAD SWAP2 DUP3 MSTORE PUSH32 0xA2E97B9EEA8D1168700E334304EDD057DFF89C0384CA6F920C73CC3E48C8E523 SWAP2 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP7 AND DUP1 DUP6 MSTORE SWAP1 DUP4 MSTORE SWAP3 DUP2 SWAP1 KECCAK256 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00 AND PUSH1 0x1 OR SWAP1 SSTORE MLOAD SWAP2 DUP3 MSTORE PUSH32 0x7F06C1C34AD47198873DA9DCDE2E40904035D41B23DA3A9132DF674A75022DF7 SWAP2 ADD PUSH2 0x320 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x3E6 JUMPI DUP2 DUP3 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND DUP2 EQ PUSH2 0x409 JUMPI DUP3 DUP4 REVERT JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP2 AND DUP2 EQ PUSH2 0x43D JUMPI DUP2 DUP3 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CALL 0xD8 0xEE 0xC EQ 0xC0 PUSH5 0xBCAFA56D1F PUSH30 0x75C4A66D40BE164DD3151066D33A96FF7F43EF64736F6C63430008030033 ",
              "sourceMap": "1101:2644:0:-:0;;;;;;;;;;;;;;;;;;;"
            },
            "deployedBytecode": {
              "generatedSources": [
                {
                  "ast": {
                    "nodeType": "YulBlock",
                    "src": "0:1611:15",
                    "statements": [
                      {
                        "nodeType": "YulBlock",
                        "src": "6:3:15",
                        "statements": []
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "100:481:15",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "146:26:15",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "name": "value0",
                                          "nodeType": "YulIdentifier",
                                          "src": "155:6:15"
                                        },
                                        {
                                          "name": "value0",
                                          "nodeType": "YulIdentifier",
                                          "src": "163:6:15"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "148:6:15"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "148:22:15"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "148:22:15"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "121:7:15"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "130:9:15"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "117:3:15"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "117:23:15"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "142:2:15",
                                    "type": "",
                                    "value": "64"
                                  }
                                ],
                                "functionName": {
                                  "name": "slt",
                                  "nodeType": "YulIdentifier",
                                  "src": "113:3:15"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "113:32:15"
                              },
                              "nodeType": "YulIf",
                              "src": "110:2:15"
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "181:36:15",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "207:9:15"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldataload",
                                  "nodeType": "YulIdentifier",
                                  "src": "194:12:15"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "194:23:15"
                              },
                              "variables": [
                                {
                                  "name": "value",
                                  "nodeType": "YulTypedName",
                                  "src": "185:5:15",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "303:26:15",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "name": "value0",
                                          "nodeType": "YulIdentifier",
                                          "src": "312:6:15"
                                        },
                                        {
                                          "name": "value0",
                                          "nodeType": "YulIdentifier",
                                          "src": "320:6:15"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "305:6:15"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "305:22:15"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "305:22:15"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "239:5:15"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "name": "value",
                                            "nodeType": "YulIdentifier",
                                            "src": "250:5:15"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "257:42:15",
                                            "type": "",
                                            "value": "0xffffffffffffffffffffffffffffffffffffffff"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "and",
                                          "nodeType": "YulIdentifier",
                                          "src": "246:3:15"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "246:54:15"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "eq",
                                      "nodeType": "YulIdentifier",
                                      "src": "236:2:15"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "236:65:15"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "229:6:15"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "229:73:15"
                              },
                              "nodeType": "YulIf",
                              "src": "226:2:15"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "338:15:15",
                              "value": {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "348:5:15"
                              },
                              "variableNames": [
                                {
                                  "name": "value0",
                                  "nodeType": "YulIdentifier",
                                  "src": "338:6:15"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "362:47:15",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "394:9:15"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "405:2:15",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "390:3:15"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "390:18:15"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldataload",
                                  "nodeType": "YulIdentifier",
                                  "src": "377:12:15"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "377:32:15"
                              },
                              "variables": [
                                {
                                  "name": "value_1",
                                  "nodeType": "YulTypedName",
                                  "src": "366:7:15",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "523:26:15",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "name": "value1",
                                          "nodeType": "YulIdentifier",
                                          "src": "532:6:15"
                                        },
                                        {
                                          "name": "value1",
                                          "nodeType": "YulIdentifier",
                                          "src": "540:6:15"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "525:6:15"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "525:22:15"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "525:22:15"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "value_1",
                                        "nodeType": "YulIdentifier",
                                        "src": "431:7:15"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "name": "value_1",
                                            "nodeType": "YulIdentifier",
                                            "src": "444:7:15"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "453:66:15",
                                            "type": "",
                                            "value": "0xffffffff00000000000000000000000000000000000000000000000000000000"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "and",
                                          "nodeType": "YulIdentifier",
                                          "src": "440:3:15"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "440:80:15"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "eq",
                                      "nodeType": "YulIdentifier",
                                      "src": "428:2:15"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "428:93:15"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "421:6:15"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "421:101:15"
                              },
                              "nodeType": "YulIf",
                              "src": "418:2:15"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "558:17:15",
                              "value": {
                                "name": "value_1",
                                "nodeType": "YulIdentifier",
                                "src": "568:7:15"
                              },
                              "variableNames": [
                                {
                                  "name": "value1",
                                  "nodeType": "YulIdentifier",
                                  "src": "558:6:15"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_decode_tuple_t_addresst_bytes4",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "58:9:15",
                            "type": ""
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulTypedName",
                            "src": "69:7:15",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "81:6:15",
                            "type": ""
                          },
                          {
                            "name": "value1",
                            "nodeType": "YulTypedName",
                            "src": "89:6:15",
                            "type": ""
                          }
                        ],
                        "src": "14:567:15"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "687:125:15",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "697:26:15",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "709:9:15"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "720:2:15",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "705:3:15"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "705:18:15"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "697:4:15"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "739:9:15"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "value0",
                                        "nodeType": "YulIdentifier",
                                        "src": "754:6:15"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "762:42:15",
                                        "type": "",
                                        "value": "0xffffffffffffffffffffffffffffffffffffffff"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "and",
                                      "nodeType": "YulIdentifier",
                                      "src": "750:3:15"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "750:55:15"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "732:6:15"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "732:74:15"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "732:74:15"
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "656:9:15",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "667:6:15",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "678:4:15",
                            "type": ""
                          }
                        ],
                        "src": "586:226:15"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "912:92:15",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "922:26:15",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "934:9:15"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "945:2:15",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "930:3:15"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "930:18:15"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "922:4:15"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "964:9:15"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "value0",
                                            "nodeType": "YulIdentifier",
                                            "src": "989:6:15"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "iszero",
                                          "nodeType": "YulIdentifier",
                                          "src": "982:6:15"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "982:14:15"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "iszero",
                                      "nodeType": "YulIdentifier",
                                      "src": "975:6:15"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "975:22:15"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "957:6:15"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "957:41:15"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "957:41:15"
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "881:9:15",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "892:6:15",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "903:4:15",
                            "type": ""
                          }
                        ],
                        "src": "817:187:15"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "1108:149:15",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "1118:26:15",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "1130:9:15"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1141:2:15",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "1126:3:15"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1126:18:15"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "1118:4:15"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "1160:9:15"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "value0",
                                        "nodeType": "YulIdentifier",
                                        "src": "1175:6:15"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "1183:66:15",
                                        "type": "",
                                        "value": "0xffffffff00000000000000000000000000000000000000000000000000000000"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "and",
                                      "nodeType": "YulIdentifier",
                                      "src": "1171:3:15"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1171:79:15"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "1153:6:15"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1153:98:15"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "1153:98:15"
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_bytes4__to_t_bytes4__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "1077:9:15",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "1088:6:15",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "1099:4:15",
                            "type": ""
                          }
                        ],
                        "src": "1009:248:15"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "1436:173:15",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "1453:9:15"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1464:2:15",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "1446:6:15"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1446:21:15"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "1446:21:15"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "1487:9:15"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "1498:2:15",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "1483:3:15"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1483:18:15"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1503:2:15",
                                    "type": "",
                                    "value": "23"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "1476:6:15"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1476:30:15"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "1476:30:15"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "1526:9:15"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "1537:2:15",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "1522:3:15"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1522:18:15"
                                  },
                                  {
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "1542:25:15",
                                    "type": "",
                                    "value": "AUTH_SENDER_NOT_ALLOWED"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "1515:6:15"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1515:53:15"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "1515:53:15"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "1577:26:15",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "1589:9:15"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1600:2:15",
                                    "type": "",
                                    "value": "96"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "1585:3:15"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1585:18:15"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "1577:4:15"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_stringliteral_cca20d5e6b0a009174175165fdf5a759ef555d3516bd42d178ac016ae5f041d7__to_t_string_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "1413:9:15",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "1427:4:15",
                            "type": ""
                          }
                        ],
                        "src": "1262:347:15"
                      }
                    ]
                  },
                  "contents": "{\n    { }\n    function abi_decode_tuple_t_addresst_bytes4(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(value0, value0) }\n        let value := calldataload(headStart)\n        if iszero(eq(value, and(value, 0xffffffffffffffffffffffffffffffffffffffff))) { revert(value0, value0) }\n        value0 := value\n        let value_1 := calldataload(add(headStart, 32))\n        if iszero(eq(value_1, and(value_1, 0xffffffff00000000000000000000000000000000000000000000000000000000))) { revert(value1, value1) }\n        value1 := value_1\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_bytes4__to_t_bytes4__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffffffff00000000000000000000000000000000000000000000000000000000))\n    }\n    function abi_encode_tuple_t_stringliteral_cca20d5e6b0a009174175165fdf5a759ef555d3516bd42d178ac016ae5f041d7__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 23)\n        mstore(add(headStart, 64), \"AUTH_SENDER_NOT_ALLOWED\")\n        tail := add(headStart, 96)\n    }\n}",
                  "id": 15,
                  "language": "Yul",
                  "name": "#utility.yul"
                }
              ],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "608060405234801561001057600080fd5b506004361061004c5760003560e01c80633f81a192146100515780636646a43614610096578063933f0f3c146100ab578063d9972b96146100be575b600080fd5b61006c73ffffffffffffffffffffffffffffffffffffffff81565b60405173ffffffffffffffffffffffffffffffffffffffff90911681526020015b60405180910390f35b6100a96100a43660046103d4565b6100e1565b005b6100a96100b93660046103d4565b61011d565b6100d16100cc3660046103d4565b610155565b604051901515815260200161008d565b61010f336000357fffffffff000000000000000000000000000000000000000000000000000000001661020b565b610119828261027f565b5050565b61014b336000357fffffffff000000000000000000000000000000000000000000000000000000001661020b565b610119828261032c565b7fffffffff00000000000000000000000000000000000000000000000000000000811660009081527f50c7a3d1a23c7ff4a61d37c3f2c4aeb36cf60b43ee893723db201d3eb941cbad602052604081205460ff1680610204575073ffffffffffffffffffffffffffffffffffffffff83166000908152602081815260408083207fffffffff000000000000000000000000000000000000000000000000000000008616845290915290205460ff165b9392505050565b6102158282610155565b610119576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601760248201527f415554485f53454e4445525f4e4f545f414c4c4f574544000000000000000000604482015260640160405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff82166000818152602081815260408083207fffffffff0000000000000000000000000000000000000000000000000000000086168085529083529281902080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00169055519182527fa2e97b9eea8d1168700e334304edd057dff89c0384ca6f920c73cc3e48c8e52391015b60405180910390a25050565b73ffffffffffffffffffffffffffffffffffffffff82166000818152602081815260408083207fffffffff0000000000000000000000000000000000000000000000000000000086168085529083529281902080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00166001179055519182527f7f06c1c34ad47198873da9dcde2e40904035d41b23da3a9132df674a75022df79101610320565b600080604083850312156103e6578182fd5b823573ffffffffffffffffffffffffffffffffffffffff81168114610409578283fd5b915060208301357fffffffff000000000000000000000000000000000000000000000000000000008116811461043d578182fd5b80915050925092905056fea2646970667358221220f1d8ee0c14c064bcafa56d1f7d75c4a66d40be164dd3151066d33a96ff7f43ef64736f6c63430008030033",
              "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x4C JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x3F81A192 EQ PUSH2 0x51 JUMPI DUP1 PUSH4 0x6646A436 EQ PUSH2 0x96 JUMPI DUP1 PUSH4 0x933F0F3C EQ PUSH2 0xAB JUMPI DUP1 PUSH4 0xD9972B96 EQ PUSH2 0xBE JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x6C PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xA9 PUSH2 0xA4 CALLDATASIZE PUSH1 0x4 PUSH2 0x3D4 JUMP JUMPDEST PUSH2 0xE1 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xA9 PUSH2 0xB9 CALLDATASIZE PUSH1 0x4 PUSH2 0x3D4 JUMP JUMPDEST PUSH2 0x11D JUMP JUMPDEST PUSH2 0xD1 PUSH2 0xCC CALLDATASIZE PUSH1 0x4 PUSH2 0x3D4 JUMP JUMPDEST PUSH2 0x155 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x8D JUMP JUMPDEST PUSH2 0x10F CALLER PUSH1 0x0 CALLDATALOAD PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 AND PUSH2 0x20B JUMP JUMPDEST PUSH2 0x119 DUP3 DUP3 PUSH2 0x27F JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x14B CALLER PUSH1 0x0 CALLDATALOAD PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 AND PUSH2 0x20B JUMP JUMPDEST PUSH2 0x119 DUP3 DUP3 PUSH2 0x32C JUMP JUMPDEST PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH32 0x50C7A3D1A23C7FF4A61D37C3F2C4AEB36CF60B43EE893723DB201D3EB941CBAD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0xFF AND DUP1 PUSH2 0x204 JUMPI POP PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP7 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x215 DUP3 DUP3 PUSH2 0x155 JUMP JUMPDEST PUSH2 0x119 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x415554485F53454E4445525F4E4F545F414C4C4F574544000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP7 AND DUP1 DUP6 MSTORE SWAP1 DUP4 MSTORE SWAP3 DUP2 SWAP1 KECCAK256 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00 AND SWAP1 SSTORE MLOAD SWAP2 DUP3 MSTORE PUSH32 0xA2E97B9EEA8D1168700E334304EDD057DFF89C0384CA6F920C73CC3E48C8E523 SWAP2 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP7 AND DUP1 DUP6 MSTORE SWAP1 DUP4 MSTORE SWAP3 DUP2 SWAP1 KECCAK256 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00 AND PUSH1 0x1 OR SWAP1 SSTORE MLOAD SWAP2 DUP3 MSTORE PUSH32 0x7F06C1C34AD47198873DA9DCDE2E40904035D41B23DA3A9132DF674A75022DF7 SWAP2 ADD PUSH2 0x320 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x3E6 JUMPI DUP2 DUP3 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND DUP2 EQ PUSH2 0x409 JUMPI DUP3 DUP4 REVERT JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP2 AND DUP2 EQ PUSH2 0x43D JUMPI DUP2 DUP3 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CALL 0xD8 0xEE 0xC EQ 0xC0 PUSH5 0xBCAFA56D1F PUSH30 0x75C4A66D40BE164DD3151066D33A96FF7F43EF64736F6C63430008030033 ",
              "sourceMap": "1101:2644:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1209:89;;1255:42;1209:89;;;;;762:42:15;750:55;;;732:74;;720:2;705:18;1209:89:0;;;;;;;;2556:110;;;;;;:::i;:::-;;:::i;:::-;;2244:106;;;;;;:::i;:::-;;:::i;1880:162::-;;;;;;:::i;:::-;;:::i;:::-;;;982:14:15;;975:22;957:41;;945:2;930:18;1880:162:0;912:92:15;2556:110:0;1584:34;1598:10;1610:7;;;;1584:13;:34::i;:::-;2636:23:::1;2649:3;2654:4;2636:12;:23::i;:::-;2556:110:::0;;:::o;2244:106::-;1584:34;1598:10;1610:7;;;;1584:13;:34::i;:::-;2322:21:::1;2333:3;2338:4;2322:10;:21::i;1880:162::-:0;1981:29;;;1958:4;1981:29;;;:23;;:29;:23;:29;;;;;;:54;;-1:-1:-1;2014:15:0;;;:10;:15;;;;;;;;;;;:21;;;;;;;;;;;;;1981:54;1974:61;1880:162;-1:-1:-1;;;1880:162:0:o;2951:139::-;3032:23;3045:3;3050:4;3032:12;:23::i;:::-;3024:59;;;;;;;1464:2:15;3024:59:0;;;1446:21:15;1503:2;1483:18;;;1476:30;1542:25;1522:18;;;1515:53;1585:18;;3024:59:0;;;;;;;3602:141;3669:15;;;3693:5;3669:15;;;;;;;;;;;:21;;;;;;;;;;;;;:29;;;;;;3713:23;1153:98:15;;;3713:23:0;;1126:18:15;3713:23:0;;;;;;;;3602:141;;:::o;3276:136::-;3341:15;;;:10;:15;;;;;;;;;;;:21;;;;;;;;;;;;;:28;;;;3365:4;3341:28;;;3384:21;1153:98:15;;;3384:21:0;;1126:18:15;3384:21:0;1108:149:15;14:567;;;142:2;130:9;121:7;117:23;113:32;110:2;;;163:6;155;148:22;110:2;207:9;194:23;257:42;250:5;246:54;239:5;236:65;226:2;;320:6;312;305:22;226:2;348:5;-1:-1:-1;405:2:15;390:18;;377:32;453:66;440:80;;428:93;;418:2;;540:6;532;525:22;418:2;568:7;558:17;;;100:481;;;;;:::o"
            },
            "methodIdentifiers": {
              "ANY_ADDRESS()": "3f81a192",
              "authorize(address,bytes4)": "933f0f3c",
              "isAuthorized(address,bytes4)": "d9972b96",
              "unauthorize(address,bytes4)": "6646a436"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.3+commit.8d00100c\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"who\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes4\",\"name\":\"what\",\"type\":\"bytes4\"}],\"name\":\"Authorized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"who\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes4\",\"name\":\"what\",\"type\":\"bytes4\"}],\"name\":\"Unauthorized\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"ANY_ADDRESS\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"who\",\"type\":\"address\"},{\"internalType\":\"bytes4\",\"name\":\"what\",\"type\":\"bytes4\"}],\"name\":\"authorize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"who\",\"type\":\"address\"},{\"internalType\":\"bytes4\",\"name\":\"what\",\"type\":\"bytes4\"}],\"name\":\"isAuthorized\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"who\",\"type\":\"address\"},{\"internalType\":\"bytes4\",\"name\":\"what\",\"type\":\"bytes4\"}],\"name\":\"unauthorize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Authorization module to be used by contracts that need to implement permissions for their methods. It provides a permissions model to list who is allowed to call what function in a contract. And only accounts authorized to manage those permissions are the ones that are allowed to authorize or unauthorize accounts.\",\"kind\":\"dev\",\"methods\":{\"authorize(address,bytes4)\":{\"details\":\"Authorizes someone to call a function. Sender must be authorize to do so.\",\"params\":{\"what\":\"Function selector to be granted\",\"who\":\"Address to be authorized\"}},\"isAuthorized(address,bytes4)\":{\"details\":\"Tells whether someone is allowed to call a function or not. It returns true if it's allowed to anyone.\",\"params\":{\"what\":\"Function selector asking permission for\",\"who\":\"Address asking permission for\"}},\"unauthorize(address,bytes4)\":{\"details\":\"Unauthorizes someone to call a function. Sender must be authorize to do so.\",\"params\":{\"what\":\"Function selector to be revoked\",\"who\":\"Address to be unauthorized\"}}},\"title\":\"Authorizer\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@mimic-fi/v2-helpers/contracts/auth/Authorizer.sol\":\"Authorizer\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":10000},\"remappings\":[]},\"sources\":{\"@mimic-fi/v2-helpers/contracts/auth/Authorizer.sol\":{\"keccak256\":\"0x6c9de187060f53d7a3dc095d061fca507222259af53d8c12301119bf05448b5b\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://d925a2acb78a8539e4ea32e2d4c50250869260d683f3cb591610112140751e98\",\"dweb:/ipfs/QmdVC9L1PNwMSphiqdJpt99ND4kCumEAaJNU8BJLQqcZ8q\"]},\"@mimic-fi/v2-helpers/contracts/auth/IAuthorizer.sol\":{\"keccak256\":\"0x7e5d1c440a02d16c3d62d8ca982749b4cf044ba14e0a40c4f2fe23257a5304d2\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://bdad507d0bdc80eb1ca9fc01d4ef4ff5e0258b631305033b5945aad85fa5068a\",\"dweb:/ipfs/QmaRdsSorrzkxYpeTNMrZvH5RbbM9JYPQ9HyNAcQGmXNAe\"]}},\"version\":1}"
        }
      },
      "@mimic-fi/v2-helpers/contracts/auth/IAuthorizer.sol": {
        "IAuthorizer": {
          "abi": [
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "who",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "bytes4",
                  "name": "what",
                  "type": "bytes4"
                }
              ],
              "name": "Authorized",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "who",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "bytes4",
                  "name": "what",
                  "type": "bytes4"
                }
              ],
              "name": "Unauthorized",
              "type": "event"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "who",
                  "type": "address"
                },
                {
                  "internalType": "bytes4",
                  "name": "what",
                  "type": "bytes4"
                }
              ],
              "name": "authorize",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "who",
                  "type": "address"
                },
                {
                  "internalType": "bytes4",
                  "name": "what",
                  "type": "bytes4"
                }
              ],
              "name": "isAuthorized",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "who",
                  "type": "address"
                },
                {
                  "internalType": "bytes4",
                  "name": "what",
                  "type": "bytes4"
                }
              ],
              "name": "unauthorize",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {
              "authorize(address,bytes4)": "933f0f3c",
              "isAuthorized(address,bytes4)": "d9972b96",
              "unauthorize(address,bytes4)": "6646a436"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.3+commit.8d00100c\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"who\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes4\",\"name\":\"what\",\"type\":\"bytes4\"}],\"name\":\"Authorized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"who\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes4\",\"name\":\"what\",\"type\":\"bytes4\"}],\"name\":\"Unauthorized\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"who\",\"type\":\"address\"},{\"internalType\":\"bytes4\",\"name\":\"what\",\"type\":\"bytes4\"}],\"name\":\"authorize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"who\",\"type\":\"address\"},{\"internalType\":\"bytes4\",\"name\":\"what\",\"type\":\"bytes4\"}],\"name\":\"isAuthorized\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"who\",\"type\":\"address\"},{\"internalType\":\"bytes4\",\"name\":\"what\",\"type\":\"bytes4\"}],\"name\":\"unauthorize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"Authorized(address,bytes4)\":{\"details\":\"Emitted when an account is authorized to call a function\"},\"Unauthorized(address,bytes4)\":{\"details\":\"Emitted when an account is unauthorized to call a function\"}},\"kind\":\"dev\",\"methods\":{\"authorize(address,bytes4)\":{\"details\":\"Authorizes someone to call a function. Sender must be authorize to do so.\",\"params\":{\"what\":\"Function selector to be granted\",\"who\":\"Address to be authorized\"}},\"isAuthorized(address,bytes4)\":{\"details\":\"Tells whether someone is allowed to call a function or not. It returns true if it's allowed to anyone.\",\"params\":{\"what\":\"Function selector asking permission for\",\"who\":\"Address asking permission for\"}},\"unauthorize(address,bytes4)\":{\"details\":\"Unauthorizes someone to call a function. Sender must be authorize to do so.\",\"params\":{\"what\":\"Function selector to be revoked\",\"who\":\"Address to be unauthorized\"}}},\"title\":\"IAuthorizer\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@mimic-fi/v2-helpers/contracts/auth/IAuthorizer.sol\":\"IAuthorizer\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":10000},\"remappings\":[]},\"sources\":{\"@mimic-fi/v2-helpers/contracts/auth/IAuthorizer.sol\":{\"keccak256\":\"0x7e5d1c440a02d16c3d62d8ca982749b4cf044ba14e0a40c4f2fe23257a5304d2\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://bdad507d0bdc80eb1ca9fc01d4ef4ff5e0258b631305033b5945aad85fa5068a\",\"dweb:/ipfs/QmaRdsSorrzkxYpeTNMrZvH5RbbM9JYPQ9HyNAcQGmXNAe\"]}},\"version\":1}"
        }
      },
      "@openzeppelin/contracts/proxy/Clones.sol": {
        "Clones": {
          "abi": [],
          "evm": {
            "bytecode": {
              "generatedSources": [],
              "linkReferences": {},
              "object": "60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220550e9823912da193cb9013af9c98905b04caa8c016e8ab6a0aa1c9f1d79808a064736f6c63430008030033",
              "opcodes": "PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SSTORE 0xE SWAP9 0x23 SWAP2 0x2D LOG1 SWAP4 0xCB SWAP1 SGT 0xAF SWAP13 SWAP9 SWAP1 JUMPDEST DIV 0xCA 0xA8 0xC0 AND 0xE8 0xAB PUSH11 0xAA1C9F1D79808A064736F PUSH13 0x63430008030033000000000000 ",
              "sourceMap": "755:2946:2:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;755:2946:2;;;;;;;;;;;;;;;;;"
            },
            "deployedBytecode": {
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220550e9823912da193cb9013af9c98905b04caa8c016e8ab6a0aa1c9f1d79808a064736f6c63430008030033",
              "opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SSTORE 0xE SWAP9 0x23 SWAP2 0x2D LOG1 SWAP4 0xCB SWAP1 SGT 0xAF SWAP13 SWAP9 SWAP1 JUMPDEST DIV 0xCA 0xA8 0xC0 AND 0xE8 0xAB PUSH11 0xAA1C9F1D79808A064736F PUSH13 0x63430008030033000000000000 ",
              "sourceMap": "755:2946:2:-:0;;;;;;;;"
            },
            "methodIdentifiers": {}
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.3+commit.8d00100c\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"https://eips.ethereum.org/EIPS/eip-1167[EIP 1167] is a standard for deploying minimal proxy contracts, also known as \\\"clones\\\". > To simply and cheaply clone contract functionality in an immutable way, this standard specifies > a minimal bytecode implementation that delegates all calls to a known, fixed address. The library includes functions to deploy a proxy using either `create` (traditional deployment) or `create2` (salted deterministic deployment). It also includes functions to predict the addresses of clones deployed using the deterministic method. _Available since v3.4._\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/proxy/Clones.sol\":\"Clones\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":10000},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/proxy/Clones.sol\":{\"keccak256\":\"0xae614c6b103b743c62e9544632f7ef4fc8950de4e9c783d2e765a3b86701dda3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1840012075b9b05caa02da1b16d2d2662b2c383feb3169c8159fd8deb4840f5c\",\"dweb:/ipfs/QmPj63a7JH3aAqVj1wvkuGEdth7s9f33vK26A5aE9k23S4\"]}},\"version\":1}"
        }
      },
      "@openzeppelin/contracts/proxy/utils/Initializable.sol": {
        "Initializable": {
          "abi": [
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": false,
                  "internalType": "uint8",
                  "name": "version",
                  "type": "uint8"
                }
              ],
              "name": "Initialized",
              "type": "event"
            }
          ],
          "evm": {
            "bytecode": {
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {}
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.3+commit.8d00100c\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"}],\"devdoc\":{\"custom:oz-upgrades-unsafe-allow\":\"constructor constructor() {     _disableInitializers(); } ``` ====\",\"details\":\"This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer function so it can only be called once. The {initializer} modifier provided by this contract will have this effect. The initialization functions use a version number. Once a version number is used, it is consumed and cannot be reused. This mechanism prevents re-execution of each \\\"step\\\" but allows the creation of new initialization steps in case an upgrade adds a module that needs to be initialized. For example: [.hljs-theme-light.nopadding] ``` contract MyToken is ERC20Upgradeable {     function initialize() initializer public {         __ERC20_init(\\\"MyToken\\\", \\\"MTK\\\");     } } contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {     function initializeV2() reinitializer(2) public {         __ERC20Permit_init(\\\"MyToken\\\");     } } ``` TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}. CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure that all initializers are idempotent. This is not verified automatically as constructors are by Solidity. [CAUTION] ==== Avoid leaving a contract uninitialized. An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke the {_disableInitializers} function in the constructor to automatically lock it when it is deployed: [.hljs-theme-light.nopadding] ```\",\"events\":{\"Initialized(uint8)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{},\"stateVariables\":{\"_initialized\":{\"custom:oz-retyped-from\":\"bool\",\"details\":\"Indicates that the contract has been initialized.\"},\"_initializing\":{\"details\":\"Indicates that the contract is in the process of being initialized.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/proxy/utils/Initializable.sol\":\"Initializable\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":10000},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x2a21b14ff90012878752f230d3ffd5c3405e5938d06c97a7d89c0a64561d0d66\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3313a8f9bb1f9476857c9050067b31982bf2140b83d84f3bc0cec1f62bbe947f\",\"dweb:/ipfs/Qma17Pk8NRe7aB4UD3jjVxk7nSFaov3eQyv86hcyqkwJRV\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xd6153ce99bcdcce22b124f755e72553295be6abcd63804cfdffceb188b8bef10\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://35c47bece3c03caaa07fab37dd2bb3413bfbca20db7bd9895024390e0a469487\",\"dweb:/ipfs/QmPGWT2x3QHcKxqe6gRmAkdakhbaRgx3DLzcakHz5M4eXG\"]}},\"version\":1}"
        }
      },
      "@openzeppelin/contracts/utils/Address.sol": {
        "Address": {
          "abi": [],
          "evm": {
            "bytecode": {
              "generatedSources": [],
              "linkReferences": {},
              "object": "60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122041497d3a81e969a4d7c01e9faf5c2945dd14f91546df0e6ec6e832fea756aa9364736f6c63430008030033",
              "opcodes": "PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 COINBASE 0x49 PUSH30 0x3A81E969A4D7C01E9FAF5C2945DD14F91546DF0E6EC6E832FEA756AA9364 PUSH20 0x6F6C634300080300330000000000000000000000 ",
              "sourceMap": "194:8111:4:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;194:8111:4;;;;;;;;;;;;;;;;;"
            },
            "deployedBytecode": {
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122041497d3a81e969a4d7c01e9faf5c2945dd14f91546df0e6ec6e832fea756aa9364736f6c63430008030033",
              "opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 COINBASE 0x49 PUSH30 0x3A81E969A4D7C01E9FAF5C2945DD14F91546DF0E6EC6E832FEA756AA9364 PUSH20 0x6F6C634300080300330000000000000000000000 ",
              "sourceMap": "194:8111:4:-:0;;;;;;;;"
            },
            "methodIdentifiers": {}
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.3+commit.8d00100c\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Address.sol\":\"Address\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":10000},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xd6153ce99bcdcce22b124f755e72553295be6abcd63804cfdffceb188b8bef10\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://35c47bece3c03caaa07fab37dd2bb3413bfbca20db7bd9895024390e0a469487\",\"dweb:/ipfs/QmPGWT2x3QHcKxqe6gRmAkdakhbaRgx3DLzcakHz5M4eXG\"]}},\"version\":1}"
        }
      },
      "contracts/implementations/BaseAuthorizedImplementation.sol": {
        "BaseAuthorizedImplementation": {
          "abi": [
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "who",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "bytes4",
                  "name": "what",
                  "type": "bytes4"
                }
              ],
              "name": "Authorized",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "who",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "bytes4",
                  "name": "what",
                  "type": "bytes4"
                }
              ],
              "name": "Unauthorized",
              "type": "event"
            },
            {
              "inputs": [],
              "name": "ANY_ADDRESS",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "NAMESPACE",
              "outputs": [
                {
                  "internalType": "bytes32",
                  "name": "",
                  "type": "bytes32"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "who",
                  "type": "address"
                },
                {
                  "internalType": "bytes4",
                  "name": "what",
                  "type": "bytes4"
                }
              ],
              "name": "authorize",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "who",
                  "type": "address"
                },
                {
                  "internalType": "bytes4",
                  "name": "what",
                  "type": "bytes4"
                }
              ],
              "name": "isAuthorized",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "registry",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "who",
                  "type": "address"
                },
                {
                  "internalType": "bytes4",
                  "name": "what",
                  "type": "bytes4"
                }
              ],
              "name": "unauthorize",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {
              "ANY_ADDRESS()": "3f81a192",
              "NAMESPACE()": "44ba1fca",
              "authorize(address,bytes4)": "933f0f3c",
              "isAuthorized(address,bytes4)": "d9972b96",
              "registry()": "7b103999",
              "unauthorize(address,bytes4)": "6646a436"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.3+commit.8d00100c\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"who\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes4\",\"name\":\"what\",\"type\":\"bytes4\"}],\"name\":\"Authorized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"who\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes4\",\"name\":\"what\",\"type\":\"bytes4\"}],\"name\":\"Unauthorized\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"ANY_ADDRESS\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"NAMESPACE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"who\",\"type\":\"address\"},{\"internalType\":\"bytes4\",\"name\":\"what\",\"type\":\"bytes4\"}],\"name\":\"authorize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"who\",\"type\":\"address\"},{\"internalType\":\"bytes4\",\"name\":\"what\",\"type\":\"bytes4\"}],\"name\":\"isAuthorized\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"registry\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"who\",\"type\":\"address\"},{\"internalType\":\"bytes4\",\"name\":\"what\",\"type\":\"bytes4\"}],\"name\":\"unauthorize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"BaseImplementation using the Authorizer mixin. Base implementations that want to use the Authorizer permissions mechanism should inherit from this contract instead.\",\"kind\":\"dev\",\"methods\":{\"NAMESPACE()\":{\"details\":\"Tells the namespace under which the implementation is registered in the Mimic Registry\"},\"authorize(address,bytes4)\":{\"details\":\"Authorizes someone to call a function. Sender must be authorize to do so.\",\"params\":{\"what\":\"Function selector to be granted\",\"who\":\"Address to be authorized\"}},\"constructor\":{\"details\":\"Creates a new BaseAuthorizedImplementation\",\"params\":{\"admin\":\"Address to be granted authorize and unauthorize permissions\",\"registry\":\"Address of the Mimic Registry\"}},\"isAuthorized(address,bytes4)\":{\"details\":\"Tells whether someone is allowed to call a function or not. It returns true if it's allowed to anyone.\",\"params\":{\"what\":\"Function selector asking permission for\",\"who\":\"Address asking permission for\"}},\"unauthorize(address,bytes4)\":{\"details\":\"Unauthorizes someone to call a function. Sender must be authorize to do so.\",\"params\":{\"what\":\"Function selector to be revoked\",\"who\":\"Address to be unauthorized\"}}},\"title\":\"BaseAuthorizedImplementation\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/implementations/BaseAuthorizedImplementation.sol\":\"BaseAuthorizedImplementation\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":10000},\"remappings\":[]},\"sources\":{\"@mimic-fi/v2-helpers/contracts/auth/Authorizer.sol\":{\"keccak256\":\"0x6c9de187060f53d7a3dc095d061fca507222259af53d8c12301119bf05448b5b\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://d925a2acb78a8539e4ea32e2d4c50250869260d683f3cb591610112140751e98\",\"dweb:/ipfs/QmdVC9L1PNwMSphiqdJpt99ND4kCumEAaJNU8BJLQqcZ8q\"]},\"@mimic-fi/v2-helpers/contracts/auth/IAuthorizer.sol\":{\"keccak256\":\"0x7e5d1c440a02d16c3d62d8ca982749b4cf044ba14e0a40c4f2fe23257a5304d2\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://bdad507d0bdc80eb1ca9fc01d4ef4ff5e0258b631305033b5945aad85fa5068a\",\"dweb:/ipfs/QmaRdsSorrzkxYpeTNMrZvH5RbbM9JYPQ9HyNAcQGmXNAe\"]},\"@openzeppelin/contracts/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x2a21b14ff90012878752f230d3ffd5c3405e5938d06c97a7d89c0a64561d0d66\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3313a8f9bb1f9476857c9050067b31982bf2140b83d84f3bc0cec1f62bbe947f\",\"dweb:/ipfs/Qma17Pk8NRe7aB4UD3jjVxk7nSFaov3eQyv86hcyqkwJRV\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xd6153ce99bcdcce22b124f755e72553295be6abcd63804cfdffceb188b8bef10\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://35c47bece3c03caaa07fab37dd2bb3413bfbca20db7bd9895024390e0a469487\",\"dweb:/ipfs/QmPGWT2x3QHcKxqe6gRmAkdakhbaRgx3DLzcakHz5M4eXG\"]},\"contracts/implementations/BaseAuthorizedImplementation.sol\":{\"keccak256\":\"0x4217ecbeb5ee8f02fe4eb558a02289cef878a585e7de2beb455f11403d19fab3\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://0c19a941bea0ffa77529f75c25dabbdaf50294b05d131529af007dc565f1ced2\",\"dweb:/ipfs/QmWfWnG7QA4DFAxazkiTTFG9XdamHswKghVjwD8kP47ykt\"]},\"contracts/implementations/BaseImplementation.sol\":{\"keccak256\":\"0x2cb9bedf44e1c7dc11d9b4024df8910152b7d4902336aae6b7629d3f78db12ee\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://171c638ab1f4d887923c08a819d99b9acf635b9702099220e7881dda789597d7\",\"dweb:/ipfs/QmQ1aw3hyeScFKjazTYZDYBS2Smqib5fXRgfwiibikac8P\"]},\"contracts/implementations/IImplementation.sol\":{\"keccak256\":\"0x621ffadea8fdc214f95fa95ff480ebc7f5f51d9678544883def90b59a3851f78\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://9933e44069dee9bf8410f405d734b1320e2b26f11108e723576f9df6ff410b59\",\"dweb:/ipfs/QmfEmrt9bRhjN86BJRST7ZSjkDjegJgd9JtLheizUNzDwN\"]},\"contracts/registry/IRegistry.sol\":{\"keccak256\":\"0xa7d49ecd7b34ed1fdb3cd114432e037d88cf097ceadec01fb5e3d7895d617a65\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://352176031f1aa60f58daf223f0feaeb4fc892107d7a94deec4f25c1cfe7d934b\",\"dweb:/ipfs/QmVnujTPV3v76xU4QpMysSriUEfzPkLci7zaxfLnY27zRw\"]}},\"version\":1}"
        }
      },
      "contracts/implementations/BaseImplementation.sol": {
        "BaseImplementation": {
          "abi": [
            {
              "inputs": [],
              "name": "NAMESPACE",
              "outputs": [
                {
                  "internalType": "bytes32",
                  "name": "",
                  "type": "bytes32"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "registry",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {
              "NAMESPACE()": "44ba1fca",
              "registry()": "7b103999"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.3+commit.8d00100c\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"NAMESPACE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"registry\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"This implementation contract comes with an immutable reference to an implementations registry where it should be registered as well (checked during initialization). It allows requesting new instances of other registered implementations to as another safety check to make sure valid instances are referenced in case it's needed.\",\"kind\":\"dev\",\"methods\":{\"NAMESPACE()\":{\"details\":\"Tells the namespace under which the implementation is registered in the Mimic Registry\"},\"constructor\":{\"details\":\"Creates a new BaseImplementation\",\"params\":{\"_registry\":\"Address of the Mimic Registry where dependencies will be validated against\"}}},\"stateVariables\":{\"registry\":{\"details\":\"Tells the address of the Mimic Registry\"}},\"title\":\"BaseImplementation\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/implementations/BaseImplementation.sol\":\"BaseImplementation\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":10000},\"remappings\":[]},\"sources\":{\"@mimic-fi/v2-helpers/contracts/auth/IAuthorizer.sol\":{\"keccak256\":\"0x7e5d1c440a02d16c3d62d8ca982749b4cf044ba14e0a40c4f2fe23257a5304d2\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://bdad507d0bdc80eb1ca9fc01d4ef4ff5e0258b631305033b5945aad85fa5068a\",\"dweb:/ipfs/QmaRdsSorrzkxYpeTNMrZvH5RbbM9JYPQ9HyNAcQGmXNAe\"]},\"@openzeppelin/contracts/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x2a21b14ff90012878752f230d3ffd5c3405e5938d06c97a7d89c0a64561d0d66\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3313a8f9bb1f9476857c9050067b31982bf2140b83d84f3bc0cec1f62bbe947f\",\"dweb:/ipfs/Qma17Pk8NRe7aB4UD3jjVxk7nSFaov3eQyv86hcyqkwJRV\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xd6153ce99bcdcce22b124f755e72553295be6abcd63804cfdffceb188b8bef10\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://35c47bece3c03caaa07fab37dd2bb3413bfbca20db7bd9895024390e0a469487\",\"dweb:/ipfs/QmPGWT2x3QHcKxqe6gRmAkdakhbaRgx3DLzcakHz5M4eXG\"]},\"contracts/implementations/BaseImplementation.sol\":{\"keccak256\":\"0x2cb9bedf44e1c7dc11d9b4024df8910152b7d4902336aae6b7629d3f78db12ee\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://171c638ab1f4d887923c08a819d99b9acf635b9702099220e7881dda789597d7\",\"dweb:/ipfs/QmQ1aw3hyeScFKjazTYZDYBS2Smqib5fXRgfwiibikac8P\"]},\"contracts/implementations/IImplementation.sol\":{\"keccak256\":\"0x621ffadea8fdc214f95fa95ff480ebc7f5f51d9678544883def90b59a3851f78\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://9933e44069dee9bf8410f405d734b1320e2b26f11108e723576f9df6ff410b59\",\"dweb:/ipfs/QmfEmrt9bRhjN86BJRST7ZSjkDjegJgd9JtLheizUNzDwN\"]},\"contracts/registry/IRegistry.sol\":{\"keccak256\":\"0xa7d49ecd7b34ed1fdb3cd114432e037d88cf097ceadec01fb5e3d7895d617a65\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://352176031f1aa60f58daf223f0feaeb4fc892107d7a94deec4f25c1cfe7d934b\",\"dweb:/ipfs/QmVnujTPV3v76xU4QpMysSriUEfzPkLci7zaxfLnY27zRw\"]}},\"version\":1}"
        }
      },
      "contracts/implementations/IImplementation.sol": {
        "IImplementation": {
          "abi": [
            {
              "inputs": [],
              "name": "NAMESPACE",
              "outputs": [
                {
                  "internalType": "bytes32",
                  "name": "",
                  "type": "bytes32"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "registry",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {
              "NAMESPACE()": "44ba1fca",
              "registry()": "7b103999"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.3+commit.8d00100c\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"NAMESPACE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"registry\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation interface that must be followed for implementations to be registered in the Mimic Registry\",\"kind\":\"dev\",\"methods\":{\"NAMESPACE()\":{\"details\":\"Tells the namespace under which the implementation is registered in the Mimic Registry\"},\"registry()\":{\"details\":\"Tells the address of the Mimic Registry\"}},\"title\":\"IImplementation\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/implementations/IImplementation.sol\":\"IImplementation\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":10000},\"remappings\":[]},\"sources\":{\"contracts/implementations/IImplementation.sol\":{\"keccak256\":\"0x621ffadea8fdc214f95fa95ff480ebc7f5f51d9678544883def90b59a3851f78\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://9933e44069dee9bf8410f405d734b1320e2b26f11108e723576f9df6ff410b59\",\"dweb:/ipfs/QmfEmrt9bRhjN86BJRST7ZSjkDjegJgd9JtLheizUNzDwN\"]}},\"version\":1}"
        }
      },
      "contracts/implementations/InitializableAuthorizedImplementation.sol": {
        "InitializableAuthorizedImplementation": {
          "abi": [
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "who",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "bytes4",
                  "name": "what",
                  "type": "bytes4"
                }
              ],
              "name": "Authorized",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": false,
                  "internalType": "uint8",
                  "name": "version",
                  "type": "uint8"
                }
              ],
              "name": "Initialized",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "who",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "bytes4",
                  "name": "what",
                  "type": "bytes4"
                }
              ],
              "name": "Unauthorized",
              "type": "event"
            },
            {
              "inputs": [],
              "name": "ANY_ADDRESS",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "NAMESPACE",
              "outputs": [
                {
                  "internalType": "bytes32",
                  "name": "",
                  "type": "bytes32"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "who",
                  "type": "address"
                },
                {
                  "internalType": "bytes4",
                  "name": "what",
                  "type": "bytes4"
                }
              ],
              "name": "authorize",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "who",
                  "type": "address"
                },
                {
                  "internalType": "bytes4",
                  "name": "what",
                  "type": "bytes4"
                }
              ],
              "name": "isAuthorized",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "registry",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "who",
                  "type": "address"
                },
                {
                  "internalType": "bytes4",
                  "name": "what",
                  "type": "bytes4"
                }
              ],
              "name": "unauthorize",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {
              "ANY_ADDRESS()": "3f81a192",
              "NAMESPACE()": "44ba1fca",
              "authorize(address,bytes4)": "933f0f3c",
              "isAuthorized(address,bytes4)": "d9972b96",
              "registry()": "7b103999",
              "unauthorize(address,bytes4)": "6646a436"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.3+commit.8d00100c\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"who\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes4\",\"name\":\"what\",\"type\":\"bytes4\"}],\"name\":\"Authorized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"who\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes4\",\"name\":\"what\",\"type\":\"bytes4\"}],\"name\":\"Unauthorized\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"ANY_ADDRESS\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"NAMESPACE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"who\",\"type\":\"address\"},{\"internalType\":\"bytes4\",\"name\":\"what\",\"type\":\"bytes4\"}],\"name\":\"authorize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"who\",\"type\":\"address\"},{\"internalType\":\"bytes4\",\"name\":\"what\",\"type\":\"bytes4\"}],\"name\":\"isAuthorized\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"registry\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"who\",\"type\":\"address\"},{\"internalType\":\"bytes4\",\"name\":\"what\",\"type\":\"bytes4\"}],\"name\":\"unauthorize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"InitializableImplementation using the Authorizer mixin. Initializable implementations that want to use the Authorizer permissions mechanism should inherit from this contract instead.\",\"kind\":\"dev\",\"methods\":{\"NAMESPACE()\":{\"details\":\"Tells the namespace under which the implementation is registered in the Mimic Registry\"},\"authorize(address,bytes4)\":{\"details\":\"Authorizes someone to call a function. Sender must be authorize to do so.\",\"params\":{\"what\":\"Function selector to be granted\",\"who\":\"Address to be authorized\"}},\"constructor\":{\"details\":\"Creates a new InitializableAuthorizedImplementation\",\"params\":{\"registry\":\"Address of the Mimic Registry\"}},\"isAuthorized(address,bytes4)\":{\"details\":\"Tells whether someone is allowed to call a function or not. It returns true if it's allowed to anyone.\",\"params\":{\"what\":\"Function selector asking permission for\",\"who\":\"Address asking permission for\"}},\"unauthorize(address,bytes4)\":{\"details\":\"Unauthorizes someone to call a function. Sender must be authorize to do so.\",\"params\":{\"what\":\"Function selector to be revoked\",\"who\":\"Address to be unauthorized\"}}},\"title\":\"InitializableAuthorizedImplementation\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/implementations/InitializableAuthorizedImplementation.sol\":\"InitializableAuthorizedImplementation\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":10000},\"remappings\":[]},\"sources\":{\"@mimic-fi/v2-helpers/contracts/auth/Authorizer.sol\":{\"keccak256\":\"0x6c9de187060f53d7a3dc095d061fca507222259af53d8c12301119bf05448b5b\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://d925a2acb78a8539e4ea32e2d4c50250869260d683f3cb591610112140751e98\",\"dweb:/ipfs/QmdVC9L1PNwMSphiqdJpt99ND4kCumEAaJNU8BJLQqcZ8q\"]},\"@mimic-fi/v2-helpers/contracts/auth/IAuthorizer.sol\":{\"keccak256\":\"0x7e5d1c440a02d16c3d62d8ca982749b4cf044ba14e0a40c4f2fe23257a5304d2\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://bdad507d0bdc80eb1ca9fc01d4ef4ff5e0258b631305033b5945aad85fa5068a\",\"dweb:/ipfs/QmaRdsSorrzkxYpeTNMrZvH5RbbM9JYPQ9HyNAcQGmXNAe\"]},\"@openzeppelin/contracts/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x2a21b14ff90012878752f230d3ffd5c3405e5938d06c97a7d89c0a64561d0d66\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3313a8f9bb1f9476857c9050067b31982bf2140b83d84f3bc0cec1f62bbe947f\",\"dweb:/ipfs/Qma17Pk8NRe7aB4UD3jjVxk7nSFaov3eQyv86hcyqkwJRV\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xd6153ce99bcdcce22b124f755e72553295be6abcd63804cfdffceb188b8bef10\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://35c47bece3c03caaa07fab37dd2bb3413bfbca20db7bd9895024390e0a469487\",\"dweb:/ipfs/QmPGWT2x3QHcKxqe6gRmAkdakhbaRgx3DLzcakHz5M4eXG\"]},\"contracts/implementations/BaseImplementation.sol\":{\"keccak256\":\"0x2cb9bedf44e1c7dc11d9b4024df8910152b7d4902336aae6b7629d3f78db12ee\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://171c638ab1f4d887923c08a819d99b9acf635b9702099220e7881dda789597d7\",\"dweb:/ipfs/QmQ1aw3hyeScFKjazTYZDYBS2Smqib5fXRgfwiibikac8P\"]},\"contracts/implementations/IImplementation.sol\":{\"keccak256\":\"0x621ffadea8fdc214f95fa95ff480ebc7f5f51d9678544883def90b59a3851f78\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://9933e44069dee9bf8410f405d734b1320e2b26f11108e723576f9df6ff410b59\",\"dweb:/ipfs/QmfEmrt9bRhjN86BJRST7ZSjkDjegJgd9JtLheizUNzDwN\"]},\"contracts/implementations/InitializableAuthorizedImplementation.sol\":{\"keccak256\":\"0x22a6a18008b214fd56428b1b367adeb4476d1f1aaaeb3edf9b7b9f12b2997379\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://4e0211defd32a50147b89c73f688ec4f80c89e762032340b1505f421986b7c50\",\"dweb:/ipfs/QmYhLrhKfTG8U3hRbVbnNtuFiqRxyjgweWgEQGYra8UyzD\"]},\"contracts/implementations/InitializableImplementation.sol\":{\"keccak256\":\"0x5f5e24745c58ed73a10fa8988ecd8094876950cb6dfab4081cebf12ae76eb25f\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://5c057836fd2047c240fcb92bbfaac9ffb690bb5874a46d8050238c28b04ebca6\",\"dweb:/ipfs/QmdKrYeyrUrgens8wofTYNBSycsRrNsaCdUzKysTeyCELM\"]},\"contracts/registry/IRegistry.sol\":{\"keccak256\":\"0xa7d49ecd7b34ed1fdb3cd114432e037d88cf097ceadec01fb5e3d7895d617a65\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://352176031f1aa60f58daf223f0feaeb4fc892107d7a94deec4f25c1cfe7d934b\",\"dweb:/ipfs/QmVnujTPV3v76xU4QpMysSriUEfzPkLci7zaxfLnY27zRw\"]}},\"version\":1}"
        }
      },
      "contracts/implementations/InitializableImplementation.sol": {
        "InitializableImplementation": {
          "abi": [
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": false,
                  "internalType": "uint8",
                  "name": "version",
                  "type": "uint8"
                }
              ],
              "name": "Initialized",
              "type": "event"
            },
            {
              "inputs": [],
              "name": "NAMESPACE",
              "outputs": [
                {
                  "internalType": "bytes32",
                  "name": "",
                  "type": "bytes32"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "registry",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {
              "NAMESPACE()": "44ba1fca",
              "registry()": "7b103999"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.3+commit.8d00100c\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"NAMESPACE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"registry\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation contract to be used through proxies. Inheriting contracts are meant to be initialized through initialization functions instead of constructor functions. It allows re-using the same logic contract while making deployments cheaper.\",\"kind\":\"dev\",\"methods\":{\"NAMESPACE()\":{\"details\":\"Tells the namespace under which the implementation is registered in the Mimic Registry\"},\"constructor\":{\"details\":\"Creates a new BaseImplementation. Note that initializers are disabled at creation time.\"}},\"title\":\"InitializableImplementation\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/implementations/InitializableImplementation.sol\":\"InitializableImplementation\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":10000},\"remappings\":[]},\"sources\":{\"@mimic-fi/v2-helpers/contracts/auth/IAuthorizer.sol\":{\"keccak256\":\"0x7e5d1c440a02d16c3d62d8ca982749b4cf044ba14e0a40c4f2fe23257a5304d2\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://bdad507d0bdc80eb1ca9fc01d4ef4ff5e0258b631305033b5945aad85fa5068a\",\"dweb:/ipfs/QmaRdsSorrzkxYpeTNMrZvH5RbbM9JYPQ9HyNAcQGmXNAe\"]},\"@openzeppelin/contracts/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x2a21b14ff90012878752f230d3ffd5c3405e5938d06c97a7d89c0a64561d0d66\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3313a8f9bb1f9476857c9050067b31982bf2140b83d84f3bc0cec1f62bbe947f\",\"dweb:/ipfs/Qma17Pk8NRe7aB4UD3jjVxk7nSFaov3eQyv86hcyqkwJRV\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xd6153ce99bcdcce22b124f755e72553295be6abcd63804cfdffceb188b8bef10\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://35c47bece3c03caaa07fab37dd2bb3413bfbca20db7bd9895024390e0a469487\",\"dweb:/ipfs/QmPGWT2x3QHcKxqe6gRmAkdakhbaRgx3DLzcakHz5M4eXG\"]},\"contracts/implementations/BaseImplementation.sol\":{\"keccak256\":\"0x2cb9bedf44e1c7dc11d9b4024df8910152b7d4902336aae6b7629d3f78db12ee\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://171c638ab1f4d887923c08a819d99b9acf635b9702099220e7881dda789597d7\",\"dweb:/ipfs/QmQ1aw3hyeScFKjazTYZDYBS2Smqib5fXRgfwiibikac8P\"]},\"contracts/implementations/IImplementation.sol\":{\"keccak256\":\"0x621ffadea8fdc214f95fa95ff480ebc7f5f51d9678544883def90b59a3851f78\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://9933e44069dee9bf8410f405d734b1320e2b26f11108e723576f9df6ff410b59\",\"dweb:/ipfs/QmfEmrt9bRhjN86BJRST7ZSjkDjegJgd9JtLheizUNzDwN\"]},\"contracts/implementations/InitializableImplementation.sol\":{\"keccak256\":\"0x5f5e24745c58ed73a10fa8988ecd8094876950cb6dfab4081cebf12ae76eb25f\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://5c057836fd2047c240fcb92bbfaac9ffb690bb5874a46d8050238c28b04ebca6\",\"dweb:/ipfs/QmdKrYeyrUrgens8wofTYNBSycsRrNsaCdUzKysTeyCELM\"]},\"contracts/registry/IRegistry.sol\":{\"keccak256\":\"0xa7d49ecd7b34ed1fdb3cd114432e037d88cf097ceadec01fb5e3d7895d617a65\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://352176031f1aa60f58daf223f0feaeb4fc892107d7a94deec4f25c1cfe7d934b\",\"dweb:/ipfs/QmVnujTPV3v76xU4QpMysSriUEfzPkLci7zaxfLnY27zRw\"]}},\"version\":1}"
        }
      },
      "contracts/registry/IRegistry.sol": {
        "IRegistry": {
          "abi": [
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "who",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "bytes4",
                  "name": "what",
                  "type": "bytes4"
                }
              ],
              "name": "Authorized",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "bytes32",
                  "name": "namespace",
                  "type": "bytes32"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "implementation",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "address",
                  "name": "instance",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "bytes",
                  "name": "initResult",
                  "type": "bytes"
                }
              ],
              "name": "Cloned",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "bytes32",
                  "name": "namespace",
                  "type": "bytes32"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "implementation",
                  "type": "address"
                }
              ],
              "name": "Deprecated",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "bytes32",
                  "name": "namespace",
                  "type": "bytes32"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "implementation",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "bool",
                  "name": "stateless",
                  "type": "bool"
                }
              ],
              "name": "Registered",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "who",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "bytes4",
                  "name": "what",
                  "type": "bytes4"
                }
              ],
              "name": "Unauthorized",
              "type": "event"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "who",
                  "type": "address"
                },
                {
                  "internalType": "bytes4",
                  "name": "what",
                  "type": "bytes4"
                }
              ],
              "name": "authorize",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "implementation",
                  "type": "address"
                },
                {
                  "internalType": "bytes",
                  "name": "initializeData",
                  "type": "bytes"
                }
              ],
              "name": "clone",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "implementation",
                  "type": "address"
                }
              ],
              "name": "deprecate",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "implementation",
                  "type": "address"
                }
              ],
              "name": "implementationData",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "stateless",
                  "type": "bool"
                },
                {
                  "internalType": "bool",
                  "name": "deprecated",
                  "type": "bool"
                },
                {
                  "internalType": "bytes32",
                  "name": "namespace",
                  "type": "bytes32"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "instance",
                  "type": "address"
                }
              ],
              "name": "implementationOf",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "bytes32",
                  "name": "namespace",
                  "type": "bytes32"
                },
                {
                  "internalType": "address",
                  "name": "implementation",
                  "type": "address"
                }
              ],
              "name": "isActive",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "who",
                  "type": "address"
                },
                {
                  "internalType": "bytes4",
                  "name": "what",
                  "type": "bytes4"
                }
              ],
              "name": "isAuthorized",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "bytes32",
                  "name": "namespace",
                  "type": "bytes32"
                },
                {
                  "internalType": "address",
                  "name": "implementation",
                  "type": "address"
                },
                {
                  "internalType": "bool",
                  "name": "stateless",
                  "type": "bool"
                }
              ],
              "name": "register",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "who",
                  "type": "address"
                },
                {
                  "internalType": "bytes4",
                  "name": "what",
                  "type": "bytes4"
                }
              ],
              "name": "unauthorize",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {
              "authorize(address,bytes4)": "933f0f3c",
              "clone(address,bytes)": "0fbe133c",
              "deprecate(address)": "0753c30c",
              "implementationData(address)": "9235dcf8",
              "implementationOf(address)": "8b4872b8",
              "isActive(bytes32,address)": "ca0f8f3b",
              "isAuthorized(address,bytes4)": "d9972b96",
              "register(bytes32,address,bool)": "678449d4",
              "unauthorize(address,bytes4)": "6646a436"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.3+commit.8d00100c\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"who\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes4\",\"name\":\"what\",\"type\":\"bytes4\"}],\"name\":\"Authorized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"namespace\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"instance\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"initResult\",\"type\":\"bytes\"}],\"name\":\"Cloned\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"namespace\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"Deprecated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"namespace\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"stateless\",\"type\":\"bool\"}],\"name\":\"Registered\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"who\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes4\",\"name\":\"what\",\"type\":\"bytes4\"}],\"name\":\"Unauthorized\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"who\",\"type\":\"address\"},{\"internalType\":\"bytes4\",\"name\":\"what\",\"type\":\"bytes4\"}],\"name\":\"authorize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"initializeData\",\"type\":\"bytes\"}],\"name\":\"clone\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"deprecate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"implementationData\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"stateless\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"deprecated\",\"type\":\"bool\"},{\"internalType\":\"bytes32\",\"name\":\"namespace\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"instance\",\"type\":\"address\"}],\"name\":\"implementationOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"namespace\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"isActive\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"who\",\"type\":\"address\"},{\"internalType\":\"bytes4\",\"name\":\"what\",\"type\":\"bytes4\"}],\"name\":\"isAuthorized\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"namespace\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"stateless\",\"type\":\"bool\"}],\"name\":\"register\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"who\",\"type\":\"address\"},{\"internalType\":\"bytes4\",\"name\":\"what\",\"type\":\"bytes4\"}],\"name\":\"unauthorize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Registry interface, it must follow the IAuthorizer interface.\",\"events\":{\"Cloned(bytes32,address,address,bytes)\":{\"details\":\"Emitted every time an implementation is cloned\"},\"Deprecated(bytes32,address)\":{\"details\":\"Emitted every time an implementation is deprecated\"},\"Registered(bytes32,address,bool)\":{\"details\":\"Emitted every time a new implementation is registered\"}},\"kind\":\"dev\",\"methods\":{\"authorize(address,bytes4)\":{\"details\":\"Authorizes someone to call a function. Sender must be authorize to do so.\",\"params\":{\"what\":\"Function selector to be granted\",\"who\":\"Address to be authorized\"}},\"clone(address,bytes)\":{\"details\":\"Clones a registered implementation\",\"params\":{\"implementation\":\"Address of the implementation to be cloned\",\"initializeData\":\"Arbitrary data to be sent after deployment\"},\"returns\":{\"_0\":\"instance Address of the new instance created\"}},\"deprecate(address)\":{\"details\":\"Deprecates a registered implementation\",\"params\":{\"implementation\":\"Address of the implementation to be deprecated\"}},\"implementationData(address)\":{\"details\":\"Tells the data of an implementation:\",\"params\":{\"implementation\":\"Address of the implementation to request it's data\"}},\"implementationOf(address)\":{\"details\":\"Tells the implementation associated to a contract instance\",\"params\":{\"instance\":\"Address of the instance to request it's implementation\"}},\"isActive(bytes32,address)\":{\"details\":\"Tells if a specific implementation is registered under a certain namespace and it's not deprecated\",\"params\":{\"implementation\":\"Address of the implementation to be checked\",\"namespace\":\"Namespace asking for\"}},\"isAuthorized(address,bytes4)\":{\"details\":\"Tells whether someone is allowed to call a function or not. It returns true if it's allowed to anyone.\",\"params\":{\"what\":\"Function selector asking permission for\",\"who\":\"Address asking permission for\"}},\"register(bytes32,address,bool)\":{\"details\":\"Registers a new implementation for a given namespace\",\"params\":{\"implementation\":\"Address of the implementation to be registered\",\"namespace\":\"Namespace to be used for the implementation\",\"stateless\":\"Whether the implementation is stateless or not\"}},\"unauthorize(address,bytes4)\":{\"details\":\"Unauthorizes someone to call a function. Sender must be authorize to do so.\",\"params\":{\"what\":\"Function selector to be revoked\",\"who\":\"Address to be unauthorized\"}}},\"title\":\"IRegistry\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/registry/IRegistry.sol\":\"IRegistry\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":10000},\"remappings\":[]},\"sources\":{\"@mimic-fi/v2-helpers/contracts/auth/IAuthorizer.sol\":{\"keccak256\":\"0x7e5d1c440a02d16c3d62d8ca982749b4cf044ba14e0a40c4f2fe23257a5304d2\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://bdad507d0bdc80eb1ca9fc01d4ef4ff5e0258b631305033b5945aad85fa5068a\",\"dweb:/ipfs/QmaRdsSorrzkxYpeTNMrZvH5RbbM9JYPQ9HyNAcQGmXNAe\"]},\"contracts/registry/IRegistry.sol\":{\"keccak256\":\"0xa7d49ecd7b34ed1fdb3cd114432e037d88cf097ceadec01fb5e3d7895d617a65\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://352176031f1aa60f58daf223f0feaeb4fc892107d7a94deec4f25c1cfe7d934b\",\"dweb:/ipfs/QmVnujTPV3v76xU4QpMysSriUEfzPkLci7zaxfLnY27zRw\"]}},\"version\":1}"
        }
      },
      "contracts/registry/Registry.sol": {
        "Registry": {
          "abi": [
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "admin",
                  "type": "address"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "constructor"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "who",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "bytes4",
                  "name": "what",
                  "type": "bytes4"
                }
              ],
              "name": "Authorized",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "bytes32",
                  "name": "namespace",
                  "type": "bytes32"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "implementation",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "address",
                  "name": "instance",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "bytes",
                  "name": "initResult",
                  "type": "bytes"
                }
              ],
              "name": "Cloned",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "bytes32",
                  "name": "namespace",
                  "type": "bytes32"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "implementation",
                  "type": "address"
                }
              ],
              "name": "Deprecated",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "bytes32",
                  "name": "namespace",
                  "type": "bytes32"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "implementation",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "bool",
                  "name": "stateless",
                  "type": "bool"
                }
              ],
              "name": "Registered",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "who",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "bytes4",
                  "name": "what",
                  "type": "bytes4"
                }
              ],
              "name": "Unauthorized",
              "type": "event"
            },
            {
              "inputs": [],
              "name": "ANY_ADDRESS",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "who",
                  "type": "address"
                },
                {
                  "internalType": "bytes4",
                  "name": "what",
                  "type": "bytes4"
                }
              ],
              "name": "authorize",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "implementation",
                  "type": "address"
                },
                {
                  "internalType": "bytes",
                  "name": "initializeData",
                  "type": "bytes"
                }
              ],
              "name": "clone",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "instance",
                  "type": "address"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "implementation",
                  "type": "address"
                }
              ],
              "name": "deprecate",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "name": "implementationData",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "stateless",
                  "type": "bool"
                },
                {
                  "internalType": "bool",
                  "name": "deprecated",
                  "type": "bool"
                },
                {
                  "internalType": "bytes32",
                  "name": "namespace",
                  "type": "bytes32"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "name": "implementationOf",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "bytes32",
                  "name": "namespace",
                  "type": "bytes32"
                },
                {
                  "internalType": "address",
                  "name": "implementation",
                  "type": "address"
                }
              ],
              "name": "isActive",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "who",
                  "type": "address"
                },
                {
                  "internalType": "bytes4",
                  "name": "what",
                  "type": "bytes4"
                }
              ],
              "name": "isAuthorized",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "bytes32",
                  "name": "namespace",
                  "type": "bytes32"
                },
                {
                  "internalType": "address",
                  "name": "implementation",
                  "type": "address"
                },
                {
                  "internalType": "bool",
                  "name": "stateless",
                  "type": "bool"
                }
              ],
              "name": "register",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "who",
                  "type": "address"
                },
                {
                  "internalType": "bytes4",
                  "name": "what",
                  "type": "bytes4"
                }
              ],
              "name": "unauthorize",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "generatedSources": [
                {
                  "ast": {
                    "nodeType": "YulBlock",
                    "src": "0:533:15",
                    "statements": [
                      {
                        "nodeType": "YulBlock",
                        "src": "6:3:15",
                        "statements": []
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "95:229:15",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "141:26:15",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "name": "value0",
                                          "nodeType": "YulIdentifier",
                                          "src": "150:6:15"
                                        },
                                        {
                                          "name": "value0",
                                          "nodeType": "YulIdentifier",
                                          "src": "158:6:15"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "143:6:15"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "143:22:15"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "143:22:15"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "116:7:15"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "125:9:15"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "112:3:15"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "112:23:15"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "137:2:15",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "slt",
                                  "nodeType": "YulIdentifier",
                                  "src": "108:3:15"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "108:32:15"
                              },
                              "nodeType": "YulIf",
                              "src": "105:2:15"
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "176:29:15",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "195:9:15"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nodeType": "YulIdentifier",
                                  "src": "189:5:15"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "189:16:15"
                              },
                              "variables": [
                                {
                                  "name": "value",
                                  "nodeType": "YulTypedName",
                                  "src": "180:5:15",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "268:26:15",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "name": "value0",
                                          "nodeType": "YulIdentifier",
                                          "src": "277:6:15"
                                        },
                                        {
                                          "name": "value0",
                                          "nodeType": "YulIdentifier",
                                          "src": "285:6:15"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "270:6:15"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "270:22:15"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "270:22:15"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "227:5:15"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "name": "value",
                                            "nodeType": "YulIdentifier",
                                            "src": "238:5:15"
                                          },
                                          {
                                            "arguments": [
                                              {
                                                "arguments": [
                                                  {
                                                    "kind": "number",
                                                    "nodeType": "YulLiteral",
                                                    "src": "253:3:15",
                                                    "type": "",
                                                    "value": "160"
                                                  },
                                                  {
                                                    "kind": "number",
                                                    "nodeType": "YulLiteral",
                                                    "src": "258:1:15",
                                                    "type": "",
                                                    "value": "1"
                                                  }
                                                ],
                                                "functionName": {
                                                  "name": "shl",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "249:3:15"
                                                },
                                                "nodeType": "YulFunctionCall",
                                                "src": "249:11:15"
                                              },
                                              {
                                                "kind": "number",
                                                "nodeType": "YulLiteral",
                                                "src": "262:1:15",
                                                "type": "",
                                                "value": "1"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "sub",
                                              "nodeType": "YulIdentifier",
                                              "src": "245:3:15"
                                            },
                                            "nodeType": "YulFunctionCall",
                                            "src": "245:19:15"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "and",
                                          "nodeType": "YulIdentifier",
                                          "src": "234:3:15"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "234:31:15"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "eq",
                                      "nodeType": "YulIdentifier",
                                      "src": "224:2:15"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "224:42:15"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "217:6:15"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "217:50:15"
                              },
                              "nodeType": "YulIf",
                              "src": "214:2:15"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "303:15:15",
                              "value": {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "313:5:15"
                              },
                              "variableNames": [
                                {
                                  "name": "value0",
                                  "nodeType": "YulIdentifier",
                                  "src": "303:6:15"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_decode_tuple_t_address_fromMemory",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "61:9:15",
                            "type": ""
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulTypedName",
                            "src": "72:7:15",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "84:6:15",
                            "type": ""
                          }
                        ],
                        "src": "14:310:15"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "428:103:15",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "438:26:15",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "450:9:15"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "461:2:15",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "446:3:15"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "446:18:15"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "438:4:15"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "480:9:15"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "value0",
                                        "nodeType": "YulIdentifier",
                                        "src": "495:6:15"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "507:3:15",
                                            "type": "",
                                            "value": "224"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "512:10:15",
                                            "type": "",
                                            "value": "0xffffffff"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "shl",
                                          "nodeType": "YulIdentifier",
                                          "src": "503:3:15"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "503:20:15"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "and",
                                      "nodeType": "YulIdentifier",
                                      "src": "491:3:15"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "491:33:15"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "473:6:15"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "473:52:15"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "473:52:15"
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_bytes4__to_t_bytes4__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "397:9:15",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "408:6:15",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "419:4:15",
                            "type": ""
                          }
                        ],
                        "src": "329:202:15"
                      }
                    ]
                  },
                  "contents": "{\n    { }\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        let value := mload(headStart)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(value0, value0) }\n        value0 := value\n    }\n    function abi_encode_tuple_t_bytes4__to_t_bytes4__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, shl(224, 0xffffffff)))\n    }\n}",
                  "id": 15,
                  "language": "Yul",
                  "name": "#utility.yul"
                }
              ],
              "linkReferences": {},
              "object": "608060405234801561001057600080fd5b506040516200128438038062001284833981016040819052610031916100e7565b610042816319e1127560e21b61007b565b610053816301d4f0c360e21b61007b565b610064816324cfc3cf60e21b61007b565b61007581633323521b60e11b61007b565b50610115565b6001600160a01b0382166000818152602081815260408083206001600160e01b0319861680855290835292819020805460ff19166001179055519182527f7f06c1c34ad47198873da9dcde2e40904035d41b23da3a9132df674a75022df7910160405180910390a25050565b6000602082840312156100f8578081fd5b81516001600160a01b038116811461010e578182fd5b9392505050565b61115f80620001256000396000f3fe608060405234801561001057600080fd5b50600436106100be5760003560e01c80638b4872b811610076578063933f0f3c1161005b578063933f0f3c146101dd578063ca0f8f3b146101f0578063d9972b9614610213576100be565b80638b4872b8146101565780639235dcf81461018c576100be565b80633f81a192116100a75780633f81a192146101155780636646a43614610130578063678449d414610143576100be565b80630753c30c146100c35780630fbe133c146100d8575b600080fd5b6100d66100d1366004610e65565b610226565b005b6100eb6100e6366004610ed9565b6103fe565b60405173ffffffffffffffffffffffffffffffffffffffff90911681526020015b60405180910390f35b6100eb73ffffffffffffffffffffffffffffffffffffffff81565b6100d661013e366004610e7f565b610663565b6100d6610151366004610fdf565b61069f565b6100eb610164366004610e65565b60016020526000908152604090205473ffffffffffffffffffffffffffffffffffffffff1681565b6101c061019a366004610e65565b6002602052600090815260409020805460019091015460ff808316926101009004169083565b60408051931515845291151560208401529082015260600161010c565b6100d66101eb366004610e7f565b6108ef565b6102036101fe366004610fb4565b610927565b604051901515815260200161010c565b610203610221366004610e7f565b61096e565b610254336000357fffffffff0000000000000000000000000000000000000000000000000000000016610a24565b73ffffffffffffffffffffffffffffffffffffffff81166102bc5760405162461bcd60e51b815260206004820152601b60248201527f494d504c454d454e544154494f4e5f414444524553535f5a45524f000000000060448201526064015b60405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff8116600090815260026020526040902060018101546103325760405162461bcd60e51b815260206004820152601b60248201527f554e524547495354455245445f494d504c454d454e544154494f4e000000000060448201526064016102b3565b8054610100900460ff16156103895760405162461bcd60e51b815260206004820152601960248201527f444550524543415445445f494d504c454d454e544154494f4e0000000000000060448201526064016102b3565b80547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff16610100178155600181015460405173ffffffffffffffffffffffffffffffffffffffff841691907f9dedfb457c94655f88c417e108167137f3f2458254592c596f04441cb4c351fe90600090a35050565b600073ffffffffffffffffffffffffffffffffffffffff83166104635760405162461bcd60e51b815260206004820152601b60248201527f494d504c454d454e544154494f4e5f414444524553535f5a45524f000000000060448201526064016102b3565b73ffffffffffffffffffffffffffffffffffffffff8316600090815260026020526040902060018101546104d95760405162461bcd60e51b815260206004820152601b60248201527f554e524547495354455245445f494d504c454d454e544154494f4e000000000060448201526064016102b3565b8054610100900460ff16156105305760405162461bcd60e51b815260206004820152601960248201527f444550524543415445445f494d504c454d454e544154494f4e0000000000000060448201526064016102b3565b61053984610a7a565b73ffffffffffffffffffffffffffffffffffffffff818116600090815260016020526040812080547fffffffffffffffffffffffff00000000000000000000000000000000000000001692881692909217909155845191935090156105f45760408051808201909152601181527f434c4f4e455f494e49545f4641494c454400000000000000000000000000000060208201526105ef9073ffffffffffffffffffffffffffffffffffffffff8516908690610b42565b610604565b6040805160008152602081019091525b90508473ffffffffffffffffffffffffffffffffffffffff1682600101547f8316db2b1e4fe4451f1f3fdad0e106a648a807d121a880297b8a0ddb3231bcd48584604051610653929190611088565b60405180910390a3505092915050565b610691336000357fffffffff0000000000000000000000000000000000000000000000000000000016610a24565b61069b8282610b51565b5050565b6106cd336000357fffffffff0000000000000000000000000000000000000000000000000000000016610a24565b8261071a5760405162461bcd60e51b815260206004820152601160248201527f494e56414c49445f4e414d45535041434500000000000000000000000000000060448201526064016102b3565b73ffffffffffffffffffffffffffffffffffffffff821661077d5760405162461bcd60e51b815260206004820152601660248201527f494e56414c49445f494d504c454d454e544154494f4e0000000000000000000060448201526064016102b3565b73ffffffffffffffffffffffffffffffffffffffff821660009081526002602052604090206001810154156107f45760405162461bcd60e51b815260206004820152601960248201527f524547495354455245445f494d504c454d454e544154494f4e0000000000000060448201526064016102b3565b73ffffffffffffffffffffffffffffffffffffffff83811660009081526001602052604090205416156108695760405162461bcd60e51b815260206004820152601860248201527f43414e4e4f545f52454749535445525f494e5354414e4345000000000000000060448201526064016102b3565b80547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00001682151590811782556001820185905560405190815273ffffffffffffffffffffffffffffffffffffffff84169085907f9757e66b5a012762865eeeeaa7190b148500cbc2631d0a90dde0cc7946a92bc09060200160405180910390a350505050565b61091d336000357fffffffff0000000000000000000000000000000000000000000000000000000016610a24565b61069b8282610bfe565b73ffffffffffffffffffffffffffffffffffffffff811660009081526002602052604081208054610100900460ff161580156109665750838160010154145b949350505050565b7fffffffff00000000000000000000000000000000000000000000000000000000811660009081527f50c7a3d1a23c7ff4a61d37c3f2c4aeb36cf60b43ee893723db201d3eb941cbad602052604081205460ff1680610a1d575073ffffffffffffffffffffffffffffffffffffffff83166000908152602081815260408083207fffffffff000000000000000000000000000000000000000000000000000000008616845290915290205460ff165b9392505050565b610a2e828261096e565b61069b5760405162461bcd60e51b815260206004820152601760248201527f415554485f53454e4445525f4e4f545f414c4c4f57454400000000000000000060448201526064016102b3565b60006040517f3d602d80600a3d3981f3363d3d373d3d3d363d7300000000000000000000000081528260601b60148201527f5af43d82803e903d91602b57fd5bf3000000000000000000000000000000000060288201526037816000f091505073ffffffffffffffffffffffffffffffffffffffff8116610b3d5760405162461bcd60e51b815260206004820152601660248201527f455243313136373a20637265617465206661696c65640000000000000000000060448201526064016102b3565b919050565b60606109668484600085610ca6565b73ffffffffffffffffffffffffffffffffffffffff82166000818152602081815260408083207fffffffff0000000000000000000000000000000000000000000000000000000086168085529083529281902080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00169055519182527fa2e97b9eea8d1168700e334304edd057dff89c0384ca6f920c73cc3e48c8e52391015b60405180910390a25050565b73ffffffffffffffffffffffffffffffffffffffff82166000818152602081815260408083207fffffffff0000000000000000000000000000000000000000000000000000000086168085529083529281902080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00166001179055519182527f7f06c1c34ad47198873da9dcde2e40904035d41b23da3a9132df674a75022df79101610bf2565b606082471015610d1e5760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f60448201527f722063616c6c000000000000000000000000000000000000000000000000000060648201526084016102b3565b73ffffffffffffffffffffffffffffffffffffffff85163b610d825760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e747261637400000060448201526064016102b3565b6000808673ffffffffffffffffffffffffffffffffffffffff168587604051610dab919061106c565b60006040518083038185875af1925050503d8060008114610de8576040519150601f19603f3d011682016040523d82523d6000602084013e610ded565b606091505b5091509150610dfd828286610e08565b979650505050505050565b60608315610e17575081610a1d565b825115610e275782518084602001fd5b8160405162461bcd60e51b81526004016102b391906110b7565b803573ffffffffffffffffffffffffffffffffffffffff81168114610b3d57600080fd5b600060208284031215610e76578081fd5b610a1d82610e41565b60008060408385031215610e91578081fd5b610e9a83610e41565b915060208301357fffffffff0000000000000000000000000000000000000000000000000000000081168114610ece578182fd5b809150509250929050565b60008060408385031215610eeb578182fd5b610ef483610e41565b9150602083013567ffffffffffffffff80821115610f10578283fd5b818501915085601f830112610f23578283fd5b813581811115610f3557610f356110fa565b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0908116603f01168101908382118183101715610f7b57610f7b6110fa565b81604052828152886020848701011115610f93578586fd5b82602086016020830137856020848301015280955050505050509250929050565b60008060408385031215610fc6578182fd5b82359150610fd660208401610e41565b90509250929050565b600080600060608486031215610ff3578081fd5b8335925061100360208501610e41565b915060408401358015158114611017578182fd5b809150509250925092565b6000815180845261103a8160208601602086016110ca565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169290920160200192915050565b6000825161107e8184602087016110ca565b9190910192915050565b600073ffffffffffffffffffffffffffffffffffffffff84168252604060208301526109666040830184611022565b600060208252610a1d6020830184611022565b60005b838110156110e55781810151838201526020016110cd565b838111156110f4576000848401525b50505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fdfea26469706673582212204b6534a5c5a8f2e6e838a9eb256772e8b5b47280a73edf4c4c4f501d79ba0d0564736f6c63430008030033",
              "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x1284 CODESIZE SUB DUP1 PUSH3 0x1284 DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH2 0x31 SWAP2 PUSH2 0xE7 JUMP JUMPDEST PUSH2 0x42 DUP2 PUSH4 0x19E11275 PUSH1 0xE2 SHL PUSH2 0x7B JUMP JUMPDEST PUSH2 0x53 DUP2 PUSH4 0x1D4F0C3 PUSH1 0xE2 SHL PUSH2 0x7B JUMP JUMPDEST PUSH2 0x64 DUP2 PUSH4 0x24CFC3CF PUSH1 0xE2 SHL PUSH2 0x7B JUMP JUMPDEST PUSH2 0x75 DUP2 PUSH4 0x3323521B PUSH1 0xE1 SHL PUSH2 0x7B JUMP JUMPDEST POP PUSH2 0x115 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP7 AND DUP1 DUP6 MSTORE SWAP1 DUP4 MSTORE SWAP3 DUP2 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE MLOAD SWAP2 DUP3 MSTORE PUSH32 0x7F06C1C34AD47198873DA9DCDE2E40904035D41B23DA3A9132DF674A75022DF7 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xF8 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x10E JUMPI DUP2 DUP3 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x115F DUP1 PUSH3 0x125 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xBE JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8B4872B8 GT PUSH2 0x76 JUMPI DUP1 PUSH4 0x933F0F3C GT PUSH2 0x5B JUMPI DUP1 PUSH4 0x933F0F3C EQ PUSH2 0x1DD JUMPI DUP1 PUSH4 0xCA0F8F3B EQ PUSH2 0x1F0 JUMPI DUP1 PUSH4 0xD9972B96 EQ PUSH2 0x213 JUMPI PUSH2 0xBE JUMP JUMPDEST DUP1 PUSH4 0x8B4872B8 EQ PUSH2 0x156 JUMPI DUP1 PUSH4 0x9235DCF8 EQ PUSH2 0x18C JUMPI PUSH2 0xBE JUMP JUMPDEST DUP1 PUSH4 0x3F81A192 GT PUSH2 0xA7 JUMPI DUP1 PUSH4 0x3F81A192 EQ PUSH2 0x115 JUMPI DUP1 PUSH4 0x6646A436 EQ PUSH2 0x130 JUMPI DUP1 PUSH4 0x678449D4 EQ PUSH2 0x143 JUMPI PUSH2 0xBE JUMP JUMPDEST DUP1 PUSH4 0x753C30C EQ PUSH2 0xC3 JUMPI DUP1 PUSH4 0xFBE133C EQ PUSH2 0xD8 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xD6 PUSH2 0xD1 CALLDATASIZE PUSH1 0x4 PUSH2 0xE65 JUMP JUMPDEST PUSH2 0x226 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xEB PUSH2 0xE6 CALLDATASIZE PUSH1 0x4 PUSH2 0xED9 JUMP JUMPDEST PUSH2 0x3FE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xEB PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 JUMP JUMPDEST PUSH2 0xD6 PUSH2 0x13E CALLDATASIZE PUSH1 0x4 PUSH2 0xE7F JUMP JUMPDEST PUSH2 0x663 JUMP JUMPDEST PUSH2 0xD6 PUSH2 0x151 CALLDATASIZE PUSH1 0x4 PUSH2 0xFDF JUMP JUMPDEST PUSH2 0x69F JUMP JUMPDEST PUSH2 0xEB PUSH2 0x164 CALLDATASIZE PUSH1 0x4 PUSH2 0xE65 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH2 0x1C0 PUSH2 0x19A CALLDATASIZE PUSH1 0x4 PUSH2 0xE65 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 SWAP1 SWAP2 ADD SLOAD PUSH1 0xFF DUP1 DUP4 AND SWAP3 PUSH2 0x100 SWAP1 DIV AND SWAP1 DUP4 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP4 ISZERO ISZERO DUP5 MSTORE SWAP2 ISZERO ISZERO PUSH1 0x20 DUP5 ADD MSTORE SWAP1 DUP3 ADD MSTORE PUSH1 0x60 ADD PUSH2 0x10C JUMP JUMPDEST PUSH2 0xD6 PUSH2 0x1EB CALLDATASIZE PUSH1 0x4 PUSH2 0xE7F JUMP JUMPDEST PUSH2 0x8EF JUMP JUMPDEST PUSH2 0x203 PUSH2 0x1FE CALLDATASIZE PUSH1 0x4 PUSH2 0xFB4 JUMP JUMPDEST PUSH2 0x927 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x10C JUMP JUMPDEST PUSH2 0x203 PUSH2 0x221 CALLDATASIZE PUSH1 0x4 PUSH2 0xE7F JUMP JUMPDEST PUSH2 0x96E JUMP JUMPDEST PUSH2 0x254 CALLER PUSH1 0x0 CALLDATALOAD PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 AND PUSH2 0xA24 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND PUSH2 0x2BC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x494D504C454D454E544154494F4E5F414444524553535F5A45524F0000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 DUP2 ADD SLOAD PUSH2 0x332 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x554E524547495354455245445F494D504C454D454E544154494F4E0000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x2B3 JUMP JUMPDEST DUP1 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x389 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x444550524543415445445F494D504C454D454E544154494F4E00000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x2B3 JUMP JUMPDEST DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00FF AND PUSH2 0x100 OR DUP2 SSTORE PUSH1 0x1 DUP2 ADD SLOAD PUSH1 0x40 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 AND SWAP2 SWAP1 PUSH32 0x9DEDFB457C94655F88C417E108167137F3F2458254592C596F04441CB4C351FE SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 AND PUSH2 0x463 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x494D504C454D454E544154494F4E5F414444524553535F5A45524F0000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x2B3 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 DUP2 ADD SLOAD PUSH2 0x4D9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x554E524547495354455245445F494D504C454D454E544154494F4E0000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x2B3 JUMP JUMPDEST DUP1 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x530 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x444550524543415445445F494D504C454D454E544154494F4E00000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x2B3 JUMP JUMPDEST PUSH2 0x539 DUP5 PUSH2 0xA7A JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 AND SWAP3 DUP9 AND SWAP3 SWAP1 SWAP3 OR SWAP1 SWAP2 SSTORE DUP5 MLOAD SWAP2 SWAP4 POP SWAP1 ISZERO PUSH2 0x5F4 JUMPI PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x11 DUP2 MSTORE PUSH32 0x434C4F4E455F494E49545F4641494C4544000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE PUSH2 0x5EF SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP6 AND SWAP1 DUP7 SWAP1 PUSH2 0xB42 JUMP JUMPDEST PUSH2 0x604 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP1 SWAP2 MSTORE JUMPDEST SWAP1 POP DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH1 0x1 ADD SLOAD PUSH32 0x8316DB2B1E4FE4451F1F3FDAD0E106A648A807D121A880297B8A0DDB3231BCD4 DUP6 DUP5 PUSH1 0x40 MLOAD PUSH2 0x653 SWAP3 SWAP2 SWAP1 PUSH2 0x1088 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x691 CALLER PUSH1 0x0 CALLDATALOAD PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 AND PUSH2 0xA24 JUMP JUMPDEST PUSH2 0x69B DUP3 DUP3 PUSH2 0xB51 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x6CD CALLER PUSH1 0x0 CALLDATALOAD PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 AND PUSH2 0xA24 JUMP JUMPDEST DUP3 PUSH2 0x71A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x494E56414C49445F4E414D455350414345000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x2B3 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND PUSH2 0x77D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x494E56414C49445F494D504C454D454E544154494F4E00000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x2B3 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 DUP2 ADD SLOAD ISZERO PUSH2 0x7F4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x524547495354455245445F494D504C454D454E544154494F4E00000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x2B3 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD AND ISZERO PUSH2 0x869 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x43414E4E4F545F52454749535445525F494E5354414E43450000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x2B3 JUMP JUMPDEST DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF0000 AND DUP3 ISZERO ISZERO SWAP1 DUP2 OR DUP3 SSTORE PUSH1 0x1 DUP3 ADD DUP6 SWAP1 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 AND SWAP1 DUP6 SWAP1 PUSH32 0x9757E66B5A012762865EEEEAA7190B148500CBC2631D0A90DDE0CC7946A92BC0 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP JUMP JUMPDEST PUSH2 0x91D CALLER PUSH1 0x0 CALLDATALOAD PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 AND PUSH2 0xA24 JUMP JUMPDEST PUSH2 0x69B DUP3 DUP3 PUSH2 0xBFE JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND ISZERO DUP1 ISZERO PUSH2 0x966 JUMPI POP DUP4 DUP2 PUSH1 0x1 ADD SLOAD EQ JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH32 0x50C7A3D1A23C7FF4A61D37C3F2C4AEB36CF60B43EE893723DB201D3EB941CBAD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0xFF AND DUP1 PUSH2 0xA1D JUMPI POP PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP7 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0xA2E DUP3 DUP3 PUSH2 0x96E JUMP JUMPDEST PUSH2 0x69B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x415554485F53454E4445525F4E4F545F414C4C4F574544000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x2B3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x3D602D80600A3D3981F3363D3D373D3D3D363D73000000000000000000000000 DUP2 MSTORE DUP3 PUSH1 0x60 SHL PUSH1 0x14 DUP3 ADD MSTORE PUSH32 0x5AF43D82803E903D91602B57FD5BF30000000000000000000000000000000000 PUSH1 0x28 DUP3 ADD MSTORE PUSH1 0x37 DUP2 PUSH1 0x0 CREATE SWAP2 POP POP PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND PUSH2 0xB3D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313136373A20637265617465206661696C656400000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x2B3 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x966 DUP5 DUP5 PUSH1 0x0 DUP6 PUSH2 0xCA6 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP7 AND DUP1 DUP6 MSTORE SWAP1 DUP4 MSTORE SWAP3 DUP2 SWAP1 KECCAK256 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00 AND SWAP1 SSTORE MLOAD SWAP2 DUP3 MSTORE PUSH32 0xA2E97B9EEA8D1168700E334304EDD057DFF89C0384CA6F920C73CC3E48C8E523 SWAP2 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP7 AND DUP1 DUP6 MSTORE SWAP1 DUP4 MSTORE SWAP3 DUP2 SWAP1 KECCAK256 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00 AND PUSH1 0x1 OR SWAP1 SSTORE MLOAD SWAP2 DUP3 MSTORE PUSH32 0x7F06C1C34AD47198873DA9DCDE2E40904035D41B23DA3A9132DF674A75022DF7 SWAP2 ADD PUSH2 0xBF2 JUMP JUMPDEST PUSH1 0x60 DUP3 SELFBALANCE LT ISZERO PUSH2 0xD1E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A20696E73756666696369656E742062616C616E636520666F PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x722063616C6C0000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x2B3 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP6 AND EXTCODESIZE PUSH2 0xD82 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x2B3 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 DUP8 PUSH1 0x40 MLOAD PUSH2 0xDAB SWAP2 SWAP1 PUSH2 0x106C JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0xDE8 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0xDED JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0xDFD DUP3 DUP3 DUP7 PUSH2 0xE08 JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP4 ISZERO PUSH2 0xE17 JUMPI POP DUP2 PUSH2 0xA1D JUMP JUMPDEST DUP3 MLOAD ISZERO PUSH2 0xE27 JUMPI DUP3 MLOAD DUP1 DUP5 PUSH1 0x20 ADD REVERT JUMPDEST DUP2 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2B3 SWAP2 SWAP1 PUSH2 0x10B7 JUMP JUMPDEST DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND DUP2 EQ PUSH2 0xB3D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xE76 JUMPI DUP1 DUP2 REVERT JUMPDEST PUSH2 0xA1D DUP3 PUSH2 0xE41 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xE91 JUMPI DUP1 DUP2 REVERT JUMPDEST PUSH2 0xE9A DUP4 PUSH2 0xE41 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP2 AND DUP2 EQ PUSH2 0xECE JUMPI DUP2 DUP3 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xEEB JUMPI DUP2 DUP3 REVERT JUMPDEST PUSH2 0xEF4 DUP4 PUSH2 0xE41 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0xF10 JUMPI DUP3 DUP4 REVERT JUMPDEST DUP2 DUP6 ADD SWAP2 POP DUP6 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xF23 JUMPI DUP3 DUP4 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0xF35 JUMPI PUSH2 0xF35 PUSH2 0x10FA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP4 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0xF7B JUMPI PUSH2 0xF7B PUSH2 0x10FA JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP3 DUP2 MSTORE DUP9 PUSH1 0x20 DUP5 DUP8 ADD ADD GT ISZERO PUSH2 0xF93 JUMPI DUP6 DUP7 REVERT JUMPDEST DUP3 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY DUP6 PUSH1 0x20 DUP5 DUP4 ADD ADD MSTORE DUP1 SWAP6 POP POP POP POP POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xFC6 JUMPI DUP2 DUP3 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH2 0xFD6 PUSH1 0x20 DUP5 ADD PUSH2 0xE41 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xFF3 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP4 CALLDATALOAD SWAP3 POP PUSH2 0x1003 PUSH1 0x20 DUP6 ADD PUSH2 0xE41 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x1017 JUMPI DUP2 DUP3 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH2 0x103A DUP2 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP7 ADD PUSH2 0x10CA JUMP JUMPDEST PUSH1 0x1F ADD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD PUSH2 0x107E DUP2 DUP5 PUSH1 0x20 DUP8 ADD PUSH2 0x10CA JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 AND DUP3 MSTORE PUSH1 0x40 PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x966 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1022 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 MSTORE PUSH2 0xA1D PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1022 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x10E5 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x10CD JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x10F4 JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x4B PUSH6 0x34A5C5A8F2E6 0xE8 CODESIZE 0xA9 0xEB 0x25 PUSH8 0x72E8B5B47280A73E 0xDF 0x4C 0x4C 0x4F POP SAR PUSH26 0xBA0D0564736F6C63430008030033000000000000000000000000 ",
              "sourceMap": "1414:4195:11:-:0;;;2048:263;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2085:45;2096:5;-1:-1:-1;;;2085:10:11;:45::i;:::-;2140:46;2151:5;-1:-1:-1;;;2140:10:11;:46::i;:::-;2196:48;2207:5;-1:-1:-1;;;2196:10:11;:48::i;:::-;2254:50;2265:5;-1:-1:-1;;;2254:10:11;:50::i;:::-;2048:263;1414:4195;;3276:136:0;-1:-1:-1;;;;;3341:15:0;;:10;:15;;;;;;;;;;;-1:-1:-1;;;;;;3341:21:0;;;;;;;;;;;;:28;;-1:-1:-1;;3341:28:0;3365:4;3341:28;;;3384:21;473:52:15;;;3384:21:0;;446:18:15;3384:21:0;;;;;;;3276:136;;:::o;14:310:15:-;;137:2;125:9;116:7;112:23;108:32;105:2;;;158:6;150;143:22;105:2;189:16;;-1:-1:-1;;;;;234:31:15;;224:42;;214:2;;285:6;277;270:22;214:2;313:5;95:229;-1:-1:-1;;;95:229:15:o;428:103::-;1414:4195:11;;;;;;"
            },
            "deployedBytecode": {
              "generatedSources": [
                {
                  "ast": {
                    "nodeType": "YulBlock",
                    "src": "0:9233:15",
                    "statements": [
                      {
                        "nodeType": "YulBlock",
                        "src": "6:3:15",
                        "statements": []
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "63:147:15",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "73:29:15",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "offset",
                                    "nodeType": "YulIdentifier",
                                    "src": "95:6:15"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldataload",
                                  "nodeType": "YulIdentifier",
                                  "src": "82:12:15"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "82:20:15"
                              },
                              "variableNames": [
                                {
                                  "name": "value",
                                  "nodeType": "YulIdentifier",
                                  "src": "73:5:15"
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "188:16:15",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "197:1:15",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "200:1:15",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "190:6:15"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "190:12:15"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "190:12:15"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "124:5:15"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "name": "value",
                                            "nodeType": "YulIdentifier",
                                            "src": "135:5:15"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "142:42:15",
                                            "type": "",
                                            "value": "0xffffffffffffffffffffffffffffffffffffffff"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "and",
                                          "nodeType": "YulIdentifier",
                                          "src": "131:3:15"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "131:54:15"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "eq",
                                      "nodeType": "YulIdentifier",
                                      "src": "121:2:15"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "121:65:15"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "114:6:15"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "114:73:15"
                              },
                              "nodeType": "YulIf",
                              "src": "111:2:15"
                            }
                          ]
                        },
                        "name": "abi_decode_address",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "offset",
                            "nodeType": "YulTypedName",
                            "src": "42:6:15",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "53:5:15",
                            "type": ""
                          }
                        ],
                        "src": "14:196:15"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "285:126:15",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "331:26:15",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "name": "value0",
                                          "nodeType": "YulIdentifier",
                                          "src": "340:6:15"
                                        },
                                        {
                                          "name": "value0",
                                          "nodeType": "YulIdentifier",
                                          "src": "348:6:15"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "333:6:15"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "333:22:15"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "333:22:15"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "306:7:15"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "315:9:15"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "302:3:15"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "302:23:15"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "327:2:15",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "slt",
                                  "nodeType": "YulIdentifier",
                                  "src": "298:3:15"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "298:32:15"
                              },
                              "nodeType": "YulIf",
                              "src": "295:2:15"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "366:39:15",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "395:9:15"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_decode_address",
                                  "nodeType": "YulIdentifier",
                                  "src": "376:18:15"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "376:29:15"
                              },
                              "variableNames": [
                                {
                                  "name": "value0",
                                  "nodeType": "YulIdentifier",
                                  "src": "366:6:15"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_decode_tuple_t_address",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "251:9:15",
                            "type": ""
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulTypedName",
                            "src": "262:7:15",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "274:6:15",
                            "type": ""
                          }
                        ],
                        "src": "215:196:15"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "502:340:15",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "548:26:15",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "name": "value1",
                                          "nodeType": "YulIdentifier",
                                          "src": "557:6:15"
                                        },
                                        {
                                          "name": "value1",
                                          "nodeType": "YulIdentifier",
                                          "src": "565:6:15"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "550:6:15"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "550:22:15"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "550:22:15"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "523:7:15"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "532:9:15"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "519:3:15"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "519:23:15"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "544:2:15",
                                    "type": "",
                                    "value": "64"
                                  }
                                ],
                                "functionName": {
                                  "name": "slt",
                                  "nodeType": "YulIdentifier",
                                  "src": "515:3:15"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "515:32:15"
                              },
                              "nodeType": "YulIf",
                              "src": "512:2:15"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "583:39:15",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "612:9:15"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_decode_address",
                                  "nodeType": "YulIdentifier",
                                  "src": "593:18:15"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "593:29:15"
                              },
                              "variableNames": [
                                {
                                  "name": "value0",
                                  "nodeType": "YulIdentifier",
                                  "src": "583:6:15"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "631:45:15",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "661:9:15"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "672:2:15",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "657:3:15"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "657:18:15"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldataload",
                                  "nodeType": "YulIdentifier",
                                  "src": "644:12:15"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "644:32:15"
                              },
                              "variables": [
                                {
                                  "name": "value",
                                  "nodeType": "YulTypedName",
                                  "src": "635:5:15",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "786:26:15",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "name": "value1",
                                          "nodeType": "YulIdentifier",
                                          "src": "795:6:15"
                                        },
                                        {
                                          "name": "value1",
                                          "nodeType": "YulIdentifier",
                                          "src": "803:6:15"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "788:6:15"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "788:22:15"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "788:22:15"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "698:5:15"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "name": "value",
                                            "nodeType": "YulIdentifier",
                                            "src": "709:5:15"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "716:66:15",
                                            "type": "",
                                            "value": "0xffffffff00000000000000000000000000000000000000000000000000000000"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "and",
                                          "nodeType": "YulIdentifier",
                                          "src": "705:3:15"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "705:78:15"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "eq",
                                      "nodeType": "YulIdentifier",
                                      "src": "695:2:15"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "695:89:15"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "688:6:15"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "688:97:15"
                              },
                              "nodeType": "YulIf",
                              "src": "685:2:15"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "821:15:15",
                              "value": {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "831:5:15"
                              },
                              "variableNames": [
                                {
                                  "name": "value1",
                                  "nodeType": "YulIdentifier",
                                  "src": "821:6:15"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_decode_tuple_t_addresst_bytes4",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "460:9:15",
                            "type": ""
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulTypedName",
                            "src": "471:7:15",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "483:6:15",
                            "type": ""
                          },
                          {
                            "name": "value1",
                            "nodeType": "YulTypedName",
                            "src": "491:6:15",
                            "type": ""
                          }
                        ],
                        "src": "416:426:15"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "943:1003:15",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "989:26:15",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "name": "value0",
                                          "nodeType": "YulIdentifier",
                                          "src": "998:6:15"
                                        },
                                        {
                                          "name": "value0",
                                          "nodeType": "YulIdentifier",
                                          "src": "1006:6:15"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "991:6:15"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "991:22:15"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "991:22:15"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "964:7:15"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "973:9:15"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "960:3:15"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "960:23:15"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "985:2:15",
                                    "type": "",
                                    "value": "64"
                                  }
                                ],
                                "functionName": {
                                  "name": "slt",
                                  "nodeType": "YulIdentifier",
                                  "src": "956:3:15"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "956:32:15"
                              },
                              "nodeType": "YulIf",
                              "src": "953:2:15"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "1024:39:15",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "1053:9:15"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_decode_address",
                                  "nodeType": "YulIdentifier",
                                  "src": "1034:18:15"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1034:29:15"
                              },
                              "variableNames": [
                                {
                                  "name": "value0",
                                  "nodeType": "YulIdentifier",
                                  "src": "1024:6:15"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "1072:46:15",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "1103:9:15"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "1114:2:15",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "1099:3:15"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1099:18:15"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldataload",
                                  "nodeType": "YulIdentifier",
                                  "src": "1086:12:15"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1086:32:15"
                              },
                              "variables": [
                                {
                                  "name": "offset",
                                  "nodeType": "YulTypedName",
                                  "src": "1076:6:15",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "1127:28:15",
                              "value": {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "1137:18:15",
                                "type": "",
                                "value": "0xffffffffffffffff"
                              },
                              "variables": [
                                {
                                  "name": "_1",
                                  "nodeType": "YulTypedName",
                                  "src": "1131:2:15",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "1182:26:15",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "name": "value1",
                                          "nodeType": "YulIdentifier",
                                          "src": "1191:6:15"
                                        },
                                        {
                                          "name": "value1",
                                          "nodeType": "YulIdentifier",
                                          "src": "1199:6:15"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "1184:6:15"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "1184:22:15"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "1184:22:15"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "offset",
                                    "nodeType": "YulIdentifier",
                                    "src": "1170:6:15"
                                  },
                                  {
                                    "name": "_1",
                                    "nodeType": "YulIdentifier",
                                    "src": "1178:2:15"
                                  }
                                ],
                                "functionName": {
                                  "name": "gt",
                                  "nodeType": "YulIdentifier",
                                  "src": "1167:2:15"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1167:14:15"
                              },
                              "nodeType": "YulIf",
                              "src": "1164:2:15"
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "1217:32:15",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "1231:9:15"
                                  },
                                  {
                                    "name": "offset",
                                    "nodeType": "YulIdentifier",
                                    "src": "1242:6:15"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "1227:3:15"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1227:22:15"
                              },
                              "variables": [
                                {
                                  "name": "_2",
                                  "nodeType": "YulTypedName",
                                  "src": "1221:2:15",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "1297:26:15",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "name": "value1",
                                          "nodeType": "YulIdentifier",
                                          "src": "1306:6:15"
                                        },
                                        {
                                          "name": "value1",
                                          "nodeType": "YulIdentifier",
                                          "src": "1314:6:15"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "1299:6:15"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "1299:22:15"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "1299:22:15"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "_2",
                                            "nodeType": "YulIdentifier",
                                            "src": "1276:2:15"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "1280:4:15",
                                            "type": "",
                                            "value": "0x1f"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "1272:3:15"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "1272:13:15"
                                      },
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "1287:7:15"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "slt",
                                      "nodeType": "YulIdentifier",
                                      "src": "1268:3:15"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1268:27:15"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "1261:6:15"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1261:35:15"
                              },
                              "nodeType": "YulIf",
                              "src": "1258:2:15"
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "1332:26:15",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "_2",
                                    "nodeType": "YulIdentifier",
                                    "src": "1355:2:15"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldataload",
                                  "nodeType": "YulIdentifier",
                                  "src": "1342:12:15"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1342:16:15"
                              },
                              "variables": [
                                {
                                  "name": "_3",
                                  "nodeType": "YulTypedName",
                                  "src": "1336:2:15",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "1381:22:15",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [],
                                      "functionName": {
                                        "name": "panic_error_0x41",
                                        "nodeType": "YulIdentifier",
                                        "src": "1383:16:15"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "1383:18:15"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "1383:18:15"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "_3",
                                    "nodeType": "YulIdentifier",
                                    "src": "1373:2:15"
                                  },
                                  {
                                    "name": "_1",
                                    "nodeType": "YulIdentifier",
                                    "src": "1377:2:15"
                                  }
                                ],
                                "functionName": {
                                  "name": "gt",
                                  "nodeType": "YulIdentifier",
                                  "src": "1370:2:15"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1370:10:15"
                              },
                              "nodeType": "YulIf",
                              "src": "1367:2:15"
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "1412:76:15",
                              "value": {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "1422:66:15",
                                "type": "",
                                "value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0"
                              },
                              "variables": [
                                {
                                  "name": "_4",
                                  "nodeType": "YulTypedName",
                                  "src": "1416:2:15",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "1497:23:15",
                              "value": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1517:2:15",
                                    "type": "",
                                    "value": "64"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nodeType": "YulIdentifier",
                                  "src": "1511:5:15"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1511:9:15"
                              },
                              "variables": [
                                {
                                  "name": "memPtr",
                                  "nodeType": "YulTypedName",
                                  "src": "1501:6:15",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "1529:71:15",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "memPtr",
                                    "nodeType": "YulIdentifier",
                                    "src": "1551:6:15"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "arguments": [
                                              {
                                                "arguments": [
                                                  {
                                                    "name": "_3",
                                                    "nodeType": "YulIdentifier",
                                                    "src": "1575:2:15"
                                                  },
                                                  {
                                                    "kind": "number",
                                                    "nodeType": "YulLiteral",
                                                    "src": "1579:4:15",
                                                    "type": "",
                                                    "value": "0x1f"
                                                  }
                                                ],
                                                "functionName": {
                                                  "name": "add",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "1571:3:15"
                                                },
                                                "nodeType": "YulFunctionCall",
                                                "src": "1571:13:15"
                                              },
                                              {
                                                "name": "_4",
                                                "nodeType": "YulIdentifier",
                                                "src": "1586:2:15"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "and",
                                              "nodeType": "YulIdentifier",
                                              "src": "1567:3:15"
                                            },
                                            "nodeType": "YulFunctionCall",
                                            "src": "1567:22:15"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "1591:2:15",
                                            "type": "",
                                            "value": "63"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "1563:3:15"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "1563:31:15"
                                      },
                                      {
                                        "name": "_4",
                                        "nodeType": "YulIdentifier",
                                        "src": "1596:2:15"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "and",
                                      "nodeType": "YulIdentifier",
                                      "src": "1559:3:15"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1559:40:15"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "1547:3:15"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1547:53:15"
                              },
                              "variables": [
                                {
                                  "name": "newFreePtr",
                                  "nodeType": "YulTypedName",
                                  "src": "1533:10:15",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "1659:22:15",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [],
                                      "functionName": {
                                        "name": "panic_error_0x41",
                                        "nodeType": "YulIdentifier",
                                        "src": "1661:16:15"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "1661:18:15"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "1661:18:15"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "newFreePtr",
                                        "nodeType": "YulIdentifier",
                                        "src": "1618:10:15"
                                      },
                                      {
                                        "name": "_1",
                                        "nodeType": "YulIdentifier",
                                        "src": "1630:2:15"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "gt",
                                      "nodeType": "YulIdentifier",
                                      "src": "1615:2:15"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1615:18:15"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "newFreePtr",
                                        "nodeType": "YulIdentifier",
                                        "src": "1638:10:15"
                                      },
                                      {
                                        "name": "memPtr",
                                        "nodeType": "YulIdentifier",
                                        "src": "1650:6:15"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "lt",
                                      "nodeType": "YulIdentifier",
                                      "src": "1635:2:15"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1635:22:15"
                                  }
                                ],
                                "functionName": {
                                  "name": "or",
                                  "nodeType": "YulIdentifier",
                                  "src": "1612:2:15"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1612:46:15"
                              },
                              "nodeType": "YulIf",
                              "src": "1609:2:15"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1697:2:15",
                                    "type": "",
                                    "value": "64"
                                  },
                                  {
                                    "name": "newFreePtr",
                                    "nodeType": "YulIdentifier",
                                    "src": "1701:10:15"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "1690:6:15"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1690:22:15"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "1690:22:15"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "memPtr",
                                    "nodeType": "YulIdentifier",
                                    "src": "1728:6:15"
                                  },
                                  {
                                    "name": "_3",
                                    "nodeType": "YulIdentifier",
                                    "src": "1736:2:15"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "1721:6:15"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1721:18:15"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "1721:18:15"
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "1785:26:15",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "name": "value1",
                                          "nodeType": "YulIdentifier",
                                          "src": "1794:6:15"
                                        },
                                        {
                                          "name": "value1",
                                          "nodeType": "YulIdentifier",
                                          "src": "1802:6:15"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "1787:6:15"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "1787:22:15"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "1787:22:15"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "_2",
                                            "nodeType": "YulIdentifier",
                                            "src": "1762:2:15"
                                          },
                                          {
                                            "name": "_3",
                                            "nodeType": "YulIdentifier",
                                            "src": "1766:2:15"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "1758:3:15"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "1758:11:15"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "1771:2:15",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "1754:3:15"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1754:20:15"
                                  },
                                  {
                                    "name": "dataEnd",
                                    "nodeType": "YulIdentifier",
                                    "src": "1776:7:15"
                                  }
                                ],
                                "functionName": {
                                  "name": "gt",
                                  "nodeType": "YulIdentifier",
                                  "src": "1751:2:15"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1751:33:15"
                              },
                              "nodeType": "YulIf",
                              "src": "1748:2:15"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "memPtr",
                                        "nodeType": "YulIdentifier",
                                        "src": "1837:6:15"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "1845:2:15",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "1833:3:15"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1833:15:15"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "_2",
                                        "nodeType": "YulIdentifier",
                                        "src": "1854:2:15"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "1858:2:15",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "1850:3:15"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1850:11:15"
                                  },
                                  {
                                    "name": "_3",
                                    "nodeType": "YulIdentifier",
                                    "src": "1863:2:15"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldatacopy",
                                  "nodeType": "YulIdentifier",
                                  "src": "1820:12:15"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1820:46:15"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "1820:46:15"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "memPtr",
                                            "nodeType": "YulIdentifier",
                                            "src": "1890:6:15"
                                          },
                                          {
                                            "name": "_3",
                                            "nodeType": "YulIdentifier",
                                            "src": "1898:2:15"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "1886:3:15"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "1886:15:15"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "1903:2:15",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "1882:3:15"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1882:24:15"
                                  },
                                  {
                                    "name": "value1",
                                    "nodeType": "YulIdentifier",
                                    "src": "1908:6:15"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "1875:6:15"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1875:40:15"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "1875:40:15"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "1924:16:15",
                              "value": {
                                "name": "memPtr",
                                "nodeType": "YulIdentifier",
                                "src": "1934:6:15"
                              },
                              "variableNames": [
                                {
                                  "name": "value1",
                                  "nodeType": "YulIdentifier",
                                  "src": "1924:6:15"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_decode_tuple_t_addresst_bytes_memory_ptr",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "901:9:15",
                            "type": ""
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulTypedName",
                            "src": "912:7:15",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "924:6:15",
                            "type": ""
                          },
                          {
                            "name": "value1",
                            "nodeType": "YulTypedName",
                            "src": "932:6:15",
                            "type": ""
                          }
                        ],
                        "src": "847:1099:15"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "2038:177:15",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "2084:26:15",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "name": "value0",
                                          "nodeType": "YulIdentifier",
                                          "src": "2093:6:15"
                                        },
                                        {
                                          "name": "value0",
                                          "nodeType": "YulIdentifier",
                                          "src": "2101:6:15"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "2086:6:15"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "2086:22:15"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "2086:22:15"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "2059:7:15"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "2068:9:15"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "2055:3:15"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "2055:23:15"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2080:2:15",
                                    "type": "",
                                    "value": "64"
                                  }
                                ],
                                "functionName": {
                                  "name": "slt",
                                  "nodeType": "YulIdentifier",
                                  "src": "2051:3:15"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2051:32:15"
                              },
                              "nodeType": "YulIf",
                              "src": "2048:2:15"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "2119:33:15",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "2142:9:15"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldataload",
                                  "nodeType": "YulIdentifier",
                                  "src": "2129:12:15"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2129:23:15"
                              },
                              "variableNames": [
                                {
                                  "name": "value0",
                                  "nodeType": "YulIdentifier",
                                  "src": "2119:6:15"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "2161:48:15",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "2194:9:15"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "2205:2:15",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "2190:3:15"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "2190:18:15"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_decode_address",
                                  "nodeType": "YulIdentifier",
                                  "src": "2171:18:15"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2171:38:15"
                              },
                              "variableNames": [
                                {
                                  "name": "value1",
                                  "nodeType": "YulIdentifier",
                                  "src": "2161:6:15"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_decode_tuple_t_bytes32t_address",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "1996:9:15",
                            "type": ""
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulTypedName",
                            "src": "2007:7:15",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "2019:6:15",
                            "type": ""
                          },
                          {
                            "name": "value1",
                            "nodeType": "YulTypedName",
                            "src": "2027:6:15",
                            "type": ""
                          }
                        ],
                        "src": "1951:264:15"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "2321:334:15",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "2367:26:15",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "name": "value2",
                                          "nodeType": "YulIdentifier",
                                          "src": "2376:6:15"
                                        },
                                        {
                                          "name": "value2",
                                          "nodeType": "YulIdentifier",
                                          "src": "2384:6:15"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "2369:6:15"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "2369:22:15"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "2369:22:15"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "2342:7:15"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "2351:9:15"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "2338:3:15"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "2338:23:15"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2363:2:15",
                                    "type": "",
                                    "value": "96"
                                  }
                                ],
                                "functionName": {
                                  "name": "slt",
                                  "nodeType": "YulIdentifier",
                                  "src": "2334:3:15"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2334:32:15"
                              },
                              "nodeType": "YulIf",
                              "src": "2331:2:15"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "2402:33:15",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "2425:9:15"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldataload",
                                  "nodeType": "YulIdentifier",
                                  "src": "2412:12:15"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2412:23:15"
                              },
                              "variableNames": [
                                {
                                  "name": "value0",
                                  "nodeType": "YulIdentifier",
                                  "src": "2402:6:15"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "2444:48:15",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "2477:9:15"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "2488:2:15",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "2473:3:15"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "2473:18:15"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_decode_address",
                                  "nodeType": "YulIdentifier",
                                  "src": "2454:18:15"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2454:38:15"
                              },
                              "variableNames": [
                                {
                                  "name": "value1",
                                  "nodeType": "YulIdentifier",
                                  "src": "2444:6:15"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "2501:45:15",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "2531:9:15"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "2542:2:15",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "2527:3:15"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "2527:18:15"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldataload",
                                  "nodeType": "YulIdentifier",
                                  "src": "2514:12:15"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2514:32:15"
                              },
                              "variables": [
                                {
                                  "name": "value",
                                  "nodeType": "YulTypedName",
                                  "src": "2505:5:15",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "2599:26:15",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "name": "value2",
                                          "nodeType": "YulIdentifier",
                                          "src": "2608:6:15"
                                        },
                                        {
                                          "name": "value2",
                                          "nodeType": "YulIdentifier",
                                          "src": "2616:6:15"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "2601:6:15"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "2601:22:15"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "2601:22:15"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "2568:5:15"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "arguments": [
                                              {
                                                "name": "value",
                                                "nodeType": "YulIdentifier",
                                                "src": "2589:5:15"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "iszero",
                                              "nodeType": "YulIdentifier",
                                              "src": "2582:6:15"
                                            },
                                            "nodeType": "YulFunctionCall",
                                            "src": "2582:13:15"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "iszero",
                                          "nodeType": "YulIdentifier",
                                          "src": "2575:6:15"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "2575:21:15"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "eq",
                                      "nodeType": "YulIdentifier",
                                      "src": "2565:2:15"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "2565:32:15"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "2558:6:15"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2558:40:15"
                              },
                              "nodeType": "YulIf",
                              "src": "2555:2:15"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "2634:15:15",
                              "value": {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "2644:5:15"
                              },
                              "variableNames": [
                                {
                                  "name": "value2",
                                  "nodeType": "YulIdentifier",
                                  "src": "2634:6:15"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_decode_tuple_t_bytes32t_addresst_bool",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "2271:9:15",
                            "type": ""
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulTypedName",
                            "src": "2282:7:15",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "2294:6:15",
                            "type": ""
                          },
                          {
                            "name": "value1",
                            "nodeType": "YulTypedName",
                            "src": "2302:6:15",
                            "type": ""
                          },
                          {
                            "name": "value2",
                            "nodeType": "YulTypedName",
                            "src": "2310:6:15",
                            "type": ""
                          }
                        ],
                        "src": "2220:435:15"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "2709:267:15",
                          "statements": [
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "2719:26:15",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "2739:5:15"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nodeType": "YulIdentifier",
                                  "src": "2733:5:15"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2733:12:15"
                              },
                              "variables": [
                                {
                                  "name": "length",
                                  "nodeType": "YulTypedName",
                                  "src": "2723:6:15",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "2761:3:15"
                                  },
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "2766:6:15"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "2754:6:15"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2754:19:15"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "2754:19:15"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "2808:5:15"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "2815:4:15",
                                        "type": "",
                                        "value": "0x20"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "2804:3:15"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "2804:16:15"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "pos",
                                        "nodeType": "YulIdentifier",
                                        "src": "2826:3:15"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "2831:4:15",
                                        "type": "",
                                        "value": "0x20"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "2822:3:15"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "2822:14:15"
                                  },
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "2838:6:15"
                                  }
                                ],
                                "functionName": {
                                  "name": "copy_memory_to_memory",
                                  "nodeType": "YulIdentifier",
                                  "src": "2782:21:15"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2782:63:15"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "2782:63:15"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "2854:116:15",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "pos",
                                        "nodeType": "YulIdentifier",
                                        "src": "2869:3:15"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "arguments": [
                                              {
                                                "name": "length",
                                                "nodeType": "YulIdentifier",
                                                "src": "2882:6:15"
                                              },
                                              {
                                                "kind": "number",
                                                "nodeType": "YulLiteral",
                                                "src": "2890:2:15",
                                                "type": "",
                                                "value": "31"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "add",
                                              "nodeType": "YulIdentifier",
                                              "src": "2878:3:15"
                                            },
                                            "nodeType": "YulFunctionCall",
                                            "src": "2878:15:15"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "2895:66:15",
                                            "type": "",
                                            "value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "and",
                                          "nodeType": "YulIdentifier",
                                          "src": "2874:3:15"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "2874:88:15"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "2865:3:15"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "2865:98:15"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2965:4:15",
                                    "type": "",
                                    "value": "0x20"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "2861:3:15"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2861:109:15"
                              },
                              "variableNames": [
                                {
                                  "name": "end",
                                  "nodeType": "YulIdentifier",
                                  "src": "2854:3:15"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_bytes",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "2686:5:15",
                            "type": ""
                          },
                          {
                            "name": "pos",
                            "nodeType": "YulTypedName",
                            "src": "2693:3:15",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "end",
                            "nodeType": "YulTypedName",
                            "src": "2701:3:15",
                            "type": ""
                          }
                        ],
                        "src": "2660:316:15"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "3118:137:15",
                          "statements": [
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "3128:27:15",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value0",
                                    "nodeType": "YulIdentifier",
                                    "src": "3148:6:15"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nodeType": "YulIdentifier",
                                  "src": "3142:5:15"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3142:13:15"
                              },
                              "variables": [
                                {
                                  "name": "length",
                                  "nodeType": "YulTypedName",
                                  "src": "3132:6:15",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "value0",
                                        "nodeType": "YulIdentifier",
                                        "src": "3190:6:15"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "3198:4:15",
                                        "type": "",
                                        "value": "0x20"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "3186:3:15"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "3186:17:15"
                                  },
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "3205:3:15"
                                  },
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "3210:6:15"
                                  }
                                ],
                                "functionName": {
                                  "name": "copy_memory_to_memory",
                                  "nodeType": "YulIdentifier",
                                  "src": "3164:21:15"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3164:53:15"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "3164:53:15"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "3226:23:15",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "3237:3:15"
                                  },
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "3242:6:15"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "3233:3:15"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3233:16:15"
                              },
                              "variableNames": [
                                {
                                  "name": "end",
                                  "nodeType": "YulIdentifier",
                                  "src": "3226:3:15"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "pos",
                            "nodeType": "YulTypedName",
                            "src": "3094:3:15",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "3099:6:15",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "end",
                            "nodeType": "YulTypedName",
                            "src": "3110:3:15",
                            "type": ""
                          }
                        ],
                        "src": "2981:274:15"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "3361:125:15",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "3371:26:15",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "3383:9:15"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "3394:2:15",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "3379:3:15"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3379:18:15"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "3371:4:15"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "3413:9:15"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "value0",
                                        "nodeType": "YulIdentifier",
                                        "src": "3428:6:15"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "3436:42:15",
                                        "type": "",
                                        "value": "0xffffffffffffffffffffffffffffffffffffffff"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "and",
                                      "nodeType": "YulIdentifier",
                                      "src": "3424:3:15"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "3424:55:15"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "3406:6:15"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3406:74:15"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "3406:74:15"
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "3330:9:15",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "3341:6:15",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "3352:4:15",
                            "type": ""
                          }
                        ],
                        "src": "3260:226:15"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "3638:190:15",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "3655:9:15"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "value0",
                                        "nodeType": "YulIdentifier",
                                        "src": "3670:6:15"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "3678:42:15",
                                        "type": "",
                                        "value": "0xffffffffffffffffffffffffffffffffffffffff"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "and",
                                      "nodeType": "YulIdentifier",
                                      "src": "3666:3:15"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "3666:55:15"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "3648:6:15"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3648:74:15"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "3648:74:15"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "3742:9:15"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "3753:2:15",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "3738:3:15"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "3738:18:15"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "3758:2:15",
                                    "type": "",
                                    "value": "64"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "3731:6:15"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3731:30:15"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "3731:30:15"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "3770:52:15",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value1",
                                    "nodeType": "YulIdentifier",
                                    "src": "3795:6:15"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "3807:9:15"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "3818:2:15",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "3803:3:15"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "3803:18:15"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_bytes",
                                  "nodeType": "YulIdentifier",
                                  "src": "3778:16:15"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3778:44:15"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "3770:4:15"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_address_t_bytes_memory_ptr__to_t_address_t_bytes_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "3599:9:15",
                            "type": ""
                          },
                          {
                            "name": "value1",
                            "nodeType": "YulTypedName",
                            "src": "3610:6:15",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "3618:6:15",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "3629:4:15",
                            "type": ""
                          }
                        ],
                        "src": "3491:337:15"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "3928:92:15",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "3938:26:15",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "3950:9:15"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "3961:2:15",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "3946:3:15"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3946:18:15"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "3938:4:15"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "3980:9:15"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "value0",
                                            "nodeType": "YulIdentifier",
                                            "src": "4005:6:15"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "iszero",
                                          "nodeType": "YulIdentifier",
                                          "src": "3998:6:15"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "3998:14:15"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "iszero",
                                      "nodeType": "YulIdentifier",
                                      "src": "3991:6:15"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "3991:22:15"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "3973:6:15"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3973:41:15"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "3973:41:15"
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "3897:9:15",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "3908:6:15",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "3919:4:15",
                            "type": ""
                          }
                        ],
                        "src": "3833:187:15"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "4170:194:15",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "4180:26:15",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "4192:9:15"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "4203:2:15",
                                    "type": "",
                                    "value": "96"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "4188:3:15"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4188:18:15"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "4180:4:15"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "4222:9:15"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "value0",
                                            "nodeType": "YulIdentifier",
                                            "src": "4247:6:15"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "iszero",
                                          "nodeType": "YulIdentifier",
                                          "src": "4240:6:15"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "4240:14:15"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "iszero",
                                      "nodeType": "YulIdentifier",
                                      "src": "4233:6:15"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "4233:22:15"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "4215:6:15"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4215:41:15"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "4215:41:15"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "4276:9:15"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "4287:2:15",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "4272:3:15"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "4272:18:15"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "value1",
                                            "nodeType": "YulIdentifier",
                                            "src": "4306:6:15"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "iszero",
                                          "nodeType": "YulIdentifier",
                                          "src": "4299:6:15"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "4299:14:15"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "iszero",
                                      "nodeType": "YulIdentifier",
                                      "src": "4292:6:15"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "4292:22:15"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "4265:6:15"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4265:50:15"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "4265:50:15"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "4335:9:15"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "4346:2:15",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "4331:3:15"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "4331:18:15"
                                  },
                                  {
                                    "name": "value2",
                                    "nodeType": "YulIdentifier",
                                    "src": "4351:6:15"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "4324:6:15"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4324:34:15"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "4324:34:15"
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_bool_t_bool_t_bytes32__to_t_bool_t_bool_t_bytes32__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "4123:9:15",
                            "type": ""
                          },
                          {
                            "name": "value2",
                            "nodeType": "YulTypedName",
                            "src": "4134:6:15",
                            "type": ""
                          },
                          {
                            "name": "value1",
                            "nodeType": "YulTypedName",
                            "src": "4142:6:15",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "4150:6:15",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "4161:4:15",
                            "type": ""
                          }
                        ],
                        "src": "4025:339:15"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "4468:149:15",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "4478:26:15",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "4490:9:15"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "4501:2:15",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "4486:3:15"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4486:18:15"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "4478:4:15"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "4520:9:15"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "value0",
                                        "nodeType": "YulIdentifier",
                                        "src": "4535:6:15"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "4543:66:15",
                                        "type": "",
                                        "value": "0xffffffff00000000000000000000000000000000000000000000000000000000"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "and",
                                      "nodeType": "YulIdentifier",
                                      "src": "4531:3:15"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "4531:79:15"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "4513:6:15"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4513:98:15"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "4513:98:15"
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_bytes4__to_t_bytes4__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "4437:9:15",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "4448:6:15",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "4459:4:15",
                            "type": ""
                          }
                        ],
                        "src": "4369:248:15"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "4743:98:15",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "4760:9:15"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "4771:2:15",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "4753:6:15"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4753:21:15"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "4753:21:15"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "4783:52:15",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value0",
                                    "nodeType": "YulIdentifier",
                                    "src": "4808:6:15"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "4820:9:15"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "4831:2:15",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "4816:3:15"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "4816:18:15"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_bytes",
                                  "nodeType": "YulIdentifier",
                                  "src": "4791:16:15"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4791:44:15"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "4783:4:15"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "4712:9:15",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "4723:6:15",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "4734:4:15",
                            "type": ""
                          }
                        ],
                        "src": "4622:219:15"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "5020:175:15",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "5037:9:15"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "5048:2:15",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "5030:6:15"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5030:21:15"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "5030:21:15"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "5071:9:15"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "5082:2:15",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "5067:3:15"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "5067:18:15"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "5087:2:15",
                                    "type": "",
                                    "value": "25"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "5060:6:15"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5060:30:15"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "5060:30:15"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "5110:9:15"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "5121:2:15",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "5106:3:15"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "5106:18:15"
                                  },
                                  {
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "5126:27:15",
                                    "type": "",
                                    "value": "REGISTERED_IMPLEMENTATION"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "5099:6:15"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5099:55:15"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "5099:55:15"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "5163:26:15",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "5175:9:15"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "5186:2:15",
                                    "type": "",
                                    "value": "96"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "5171:3:15"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5171:18:15"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "5163:4:15"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_stringliteral_0ca54846c3bb548883687dca8e12101dfb883d90d88b9fe5238eae9147ced712__to_t_string_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "4997:9:15",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "5011:4:15",
                            "type": ""
                          }
                        ],
                        "src": "4846:349:15"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "5374:175:15",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "5391:9:15"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "5402:2:15",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "5384:6:15"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5384:21:15"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "5384:21:15"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "5425:9:15"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "5436:2:15",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "5421:3:15"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "5421:18:15"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "5441:2:15",
                                    "type": "",
                                    "value": "25"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "5414:6:15"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5414:30:15"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "5414:30:15"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "5464:9:15"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "5475:2:15",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "5460:3:15"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "5460:18:15"
                                  },
                                  {
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "5480:27:15",
                                    "type": "",
                                    "value": "DEPRECATED_IMPLEMENTATION"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "5453:6:15"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5453:55:15"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "5453:55:15"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "5517:26:15",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "5529:9:15"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "5540:2:15",
                                    "type": "",
                                    "value": "96"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "5525:3:15"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5525:18:15"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "5517:4:15"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_stringliteral_3367adfa843ca35e9cc5c6cd8a969de35e1046ce305281944f16be39673c71e7__to_t_string_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "5351:9:15",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "5365:4:15",
                            "type": ""
                          }
                        ],
                        "src": "5200:349:15"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "5728:177:15",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "5745:9:15"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "5756:2:15",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "5738:6:15"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5738:21:15"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "5738:21:15"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "5779:9:15"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "5790:2:15",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "5775:3:15"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "5775:18:15"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "5795:2:15",
                                    "type": "",
                                    "value": "27"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "5768:6:15"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5768:30:15"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "5768:30:15"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "5818:9:15"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "5829:2:15",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "5814:3:15"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "5814:18:15"
                                  },
                                  {
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "5834:29:15",
                                    "type": "",
                                    "value": "IMPLEMENTATION_ADDRESS_ZERO"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "5807:6:15"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5807:57:15"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "5807:57:15"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "5873:26:15",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "5885:9:15"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "5896:2:15",
                                    "type": "",
                                    "value": "96"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "5881:3:15"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5881:18:15"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "5873:4:15"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_stringliteral_55d47d3de142046027656b5b30de14d253112231a3b04e1e9201a26ec7a1a3ef__to_t_string_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "5705:9:15",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "5719:4:15",
                            "type": ""
                          }
                        ],
                        "src": "5554:351:15"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "6084:228:15",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "6101:9:15"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "6112:2:15",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "6094:6:15"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "6094:21:15"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "6094:21:15"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "6135:9:15"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "6146:2:15",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "6131:3:15"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "6131:18:15"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "6151:2:15",
                                    "type": "",
                                    "value": "38"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "6124:6:15"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "6124:30:15"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "6124:30:15"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "6174:9:15"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "6185:2:15",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "6170:3:15"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "6170:18:15"
                                  },
                                  {
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "6190:34:15",
                                    "type": "",
                                    "value": "Address: insufficient balance fo"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "6163:6:15"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "6163:62:15"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "6163:62:15"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "6245:9:15"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "6256:2:15",
                                        "type": "",
                                        "value": "96"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "6241:3:15"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "6241:18:15"
                                  },
                                  {
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "6261:8:15",
                                    "type": "",
                                    "value": "r call"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "6234:6:15"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "6234:36:15"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "6234:36:15"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "6279:27:15",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "6291:9:15"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "6302:3:15",
                                    "type": "",
                                    "value": "128"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "6287:3:15"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "6287:19:15"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "6279:4:15"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c__to_t_string_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "6061:9:15",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "6075:4:15",
                            "type": ""
                          }
                        ],
                        "src": "5910:402:15"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "6491:172:15",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "6508:9:15"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "6519:2:15",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "6501:6:15"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "6501:21:15"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "6501:21:15"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "6542:9:15"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "6553:2:15",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "6538:3:15"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "6538:18:15"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "6558:2:15",
                                    "type": "",
                                    "value": "22"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "6531:6:15"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "6531:30:15"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "6531:30:15"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "6581:9:15"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "6592:2:15",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "6577:3:15"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "6577:18:15"
                                  },
                                  {
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "6597:24:15",
                                    "type": "",
                                    "value": "ERC1167: create failed"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "6570:6:15"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "6570:52:15"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "6570:52:15"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "6631:26:15",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "6643:9:15"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "6654:2:15",
                                    "type": "",
                                    "value": "96"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "6639:3:15"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "6639:18:15"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "6631:4:15"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_stringliteral_68ca40b61460257f14e69f48b1a4dbc812e9afc6932f127ef8084544457b3335__to_t_string_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "6468:9:15",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "6482:4:15",
                            "type": ""
                          }
                        ],
                        "src": "6317:346:15"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "6842:177:15",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "6859:9:15"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "6870:2:15",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "6852:6:15"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "6852:21:15"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "6852:21:15"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "6893:9:15"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "6904:2:15",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "6889:3:15"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "6889:18:15"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "6909:2:15",
                                    "type": "",
                                    "value": "27"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "6882:6:15"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "6882:30:15"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "6882:30:15"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "6932:9:15"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "6943:2:15",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "6928:3:15"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "6928:18:15"
                                  },
                                  {
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "6948:29:15",
                                    "type": "",
                                    "value": "UNREGISTERED_IMPLEMENTATION"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "6921:6:15"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "6921:57:15"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "6921:57:15"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "6987:26:15",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "6999:9:15"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "7010:2:15",
                                    "type": "",
                                    "value": "96"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "6995:3:15"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "6995:18:15"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "6987:4:15"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_stringliteral_77283051cd0b6a39c2f3e7ec3fdf74b0a7c03b314f2c2c9d9a01468dd48f844b__to_t_string_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "6819:9:15",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "6833:4:15",
                            "type": ""
                          }
                        ],
                        "src": "6668:351:15"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "7198:174:15",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "7215:9:15"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "7226:2:15",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "7208:6:15"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "7208:21:15"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "7208:21:15"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "7249:9:15"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "7260:2:15",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "7245:3:15"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "7245:18:15"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "7265:2:15",
                                    "type": "",
                                    "value": "24"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "7238:6:15"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "7238:30:15"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "7238:30:15"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "7288:9:15"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "7299:2:15",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "7284:3:15"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "7284:18:15"
                                  },
                                  {
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "7304:26:15",
                                    "type": "",
                                    "value": "CANNOT_REGISTER_INSTANCE"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "7277:6:15"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "7277:54:15"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "7277:54:15"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "7340:26:15",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "7352:9:15"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "7363:2:15",
                                    "type": "",
                                    "value": "96"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "7348:3:15"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "7348:18:15"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "7340:4:15"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_stringliteral_984199bd9bbf325bed3d7c596c131b36732101e0d3151c139c4d2657c9618b8e__to_t_string_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "7175:9:15",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "7189:4:15",
                            "type": ""
                          }
                        ],
                        "src": "7024:348:15"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "7551:179:15",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "7568:9:15"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "7579:2:15",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "7561:6:15"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "7561:21:15"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "7561:21:15"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "7602:9:15"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "7613:2:15",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "7598:3:15"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "7598:18:15"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "7618:2:15",
                                    "type": "",
                                    "value": "29"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "7591:6:15"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "7591:30:15"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "7591:30:15"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "7641:9:15"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "7652:2:15",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "7637:3:15"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "7637:18:15"
                                  },
                                  {
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "7657:31:15",
                                    "type": "",
                                    "value": "Address: call to non-contract"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "7630:6:15"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "7630:59:15"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "7630:59:15"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "7698:26:15",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "7710:9:15"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "7721:2:15",
                                    "type": "",
                                    "value": "96"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "7706:3:15"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "7706:18:15"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "7698:4:15"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad__to_t_string_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "7528:9:15",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "7542:4:15",
                            "type": ""
                          }
                        ],
                        "src": "7377:353:15"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "7909:173:15",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "7926:9:15"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "7937:2:15",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "7919:6:15"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "7919:21:15"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "7919:21:15"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "7960:9:15"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "7971:2:15",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "7956:3:15"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "7956:18:15"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "7976:2:15",
                                    "type": "",
                                    "value": "23"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "7949:6:15"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "7949:30:15"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "7949:30:15"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "7999:9:15"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "8010:2:15",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "7995:3:15"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "7995:18:15"
                                  },
                                  {
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "8015:25:15",
                                    "type": "",
                                    "value": "AUTH_SENDER_NOT_ALLOWED"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "7988:6:15"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "7988:53:15"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "7988:53:15"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "8050:26:15",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "8062:9:15"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "8073:2:15",
                                    "type": "",
                                    "value": "96"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "8058:3:15"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "8058:18:15"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "8050:4:15"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_stringliteral_cca20d5e6b0a009174175165fdf5a759ef555d3516bd42d178ac016ae5f041d7__to_t_string_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "7886:9:15",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "7900:4:15",
                            "type": ""
                          }
                        ],
                        "src": "7735:347:15"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "8261:172:15",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "8278:9:15"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "8289:2:15",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "8271:6:15"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "8271:21:15"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "8271:21:15"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "8312:9:15"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "8323:2:15",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "8308:3:15"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "8308:18:15"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "8328:2:15",
                                    "type": "",
                                    "value": "22"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "8301:6:15"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "8301:30:15"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "8301:30:15"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "8351:9:15"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "8362:2:15",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "8347:3:15"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "8347:18:15"
                                  },
                                  {
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "8367:24:15",
                                    "type": "",
                                    "value": "INVALID_IMPLEMENTATION"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "8340:6:15"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "8340:52:15"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "8340:52:15"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "8401:26:15",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "8413:9:15"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "8424:2:15",
                                    "type": "",
                                    "value": "96"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "8409:3:15"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "8409:18:15"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "8401:4:15"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_stringliteral_d018dd82e2a195c7ea949ecda8e19f3e54fbb728e79acd6a3a3b5470d19082c6__to_t_string_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "8238:9:15",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "8252:4:15",
                            "type": ""
                          }
                        ],
                        "src": "8087:346:15"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "8612:167:15",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "8629:9:15"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "8640:2:15",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "8622:6:15"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "8622:21:15"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "8622:21:15"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "8663:9:15"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "8674:2:15",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "8659:3:15"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "8659:18:15"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "8679:2:15",
                                    "type": "",
                                    "value": "17"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "8652:6:15"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "8652:30:15"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "8652:30:15"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "8702:9:15"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "8713:2:15",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "8698:3:15"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "8698:18:15"
                                  },
                                  {
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "8718:19:15",
                                    "type": "",
                                    "value": "INVALID_NAMESPACE"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "8691:6:15"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "8691:47:15"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "8691:47:15"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "8747:26:15",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "8759:9:15"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "8770:2:15",
                                    "type": "",
                                    "value": "96"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "8755:3:15"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "8755:18:15"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "8747:4:15"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_stringliteral_f8d0b8ec94df87420bce918295fc6fb6ab479bdb3b78376fc9f2ae8c511a4a6c__to_t_string_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "8589:9:15",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "8603:4:15",
                            "type": ""
                          }
                        ],
                        "src": "8438:341:15"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "8837:205:15",
                          "statements": [
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "8847:10:15",
                              "value": {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "8856:1:15",
                                "type": "",
                                "value": "0"
                              },
                              "variables": [
                                {
                                  "name": "i",
                                  "nodeType": "YulTypedName",
                                  "src": "8851:1:15",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "8916:63:15",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "arguments": [
                                            {
                                              "name": "dst",
                                              "nodeType": "YulIdentifier",
                                              "src": "8941:3:15"
                                            },
                                            {
                                              "name": "i",
                                              "nodeType": "YulIdentifier",
                                              "src": "8946:1:15"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "add",
                                            "nodeType": "YulIdentifier",
                                            "src": "8937:3:15"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "8937:11:15"
                                        },
                                        {
                                          "arguments": [
                                            {
                                              "arguments": [
                                                {
                                                  "name": "src",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "8960:3:15"
                                                },
                                                {
                                                  "name": "i",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "8965:1:15"
                                                }
                                              ],
                                              "functionName": {
                                                "name": "add",
                                                "nodeType": "YulIdentifier",
                                                "src": "8956:3:15"
                                              },
                                              "nodeType": "YulFunctionCall",
                                              "src": "8956:11:15"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "mload",
                                            "nodeType": "YulIdentifier",
                                            "src": "8950:5:15"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "8950:18:15"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "mstore",
                                        "nodeType": "YulIdentifier",
                                        "src": "8930:6:15"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "8930:39:15"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "8930:39:15"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "i",
                                    "nodeType": "YulIdentifier",
                                    "src": "8877:1:15"
                                  },
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "8880:6:15"
                                  }
                                ],
                                "functionName": {
                                  "name": "lt",
                                  "nodeType": "YulIdentifier",
                                  "src": "8874:2:15"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "8874:13:15"
                              },
                              "nodeType": "YulForLoop",
                              "post": {
                                "nodeType": "YulBlock",
                                "src": "8888:19:15",
                                "statements": [
                                  {
                                    "nodeType": "YulAssignment",
                                    "src": "8890:15:15",
                                    "value": {
                                      "arguments": [
                                        {
                                          "name": "i",
                                          "nodeType": "YulIdentifier",
                                          "src": "8899:1:15"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "8902:2:15",
                                          "type": "",
                                          "value": "32"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "add",
                                        "nodeType": "YulIdentifier",
                                        "src": "8895:3:15"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "8895:10:15"
                                    },
                                    "variableNames": [
                                      {
                                        "name": "i",
                                        "nodeType": "YulIdentifier",
                                        "src": "8890:1:15"
                                      }
                                    ]
                                  }
                                ]
                              },
                              "pre": {
                                "nodeType": "YulBlock",
                                "src": "8870:3:15",
                                "statements": []
                              },
                              "src": "8866:113:15"
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "9005:31:15",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "arguments": [
                                            {
                                              "name": "dst",
                                              "nodeType": "YulIdentifier",
                                              "src": "9018:3:15"
                                            },
                                            {
                                              "name": "length",
                                              "nodeType": "YulIdentifier",
                                              "src": "9023:6:15"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "add",
                                            "nodeType": "YulIdentifier",
                                            "src": "9014:3:15"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "9014:16:15"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "9032:1:15",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "mstore",
                                        "nodeType": "YulIdentifier",
                                        "src": "9007:6:15"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "9007:27:15"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "9007:27:15"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "i",
                                    "nodeType": "YulIdentifier",
                                    "src": "8994:1:15"
                                  },
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "8997:6:15"
                                  }
                                ],
                                "functionName": {
                                  "name": "gt",
                                  "nodeType": "YulIdentifier",
                                  "src": "8991:2:15"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "8991:13:15"
                              },
                              "nodeType": "YulIf",
                              "src": "8988:2:15"
                            }
                          ]
                        },
                        "name": "copy_memory_to_memory",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "src",
                            "nodeType": "YulTypedName",
                            "src": "8815:3:15",
                            "type": ""
                          },
                          {
                            "name": "dst",
                            "nodeType": "YulTypedName",
                            "src": "8820:3:15",
                            "type": ""
                          },
                          {
                            "name": "length",
                            "nodeType": "YulTypedName",
                            "src": "8825:6:15",
                            "type": ""
                          }
                        ],
                        "src": "8784:258:15"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "9079:152:15",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "9096:1:15",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "9099:77:15",
                                    "type": "",
                                    "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "9089:6:15"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "9089:88:15"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "9089:88:15"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "9193:1:15",
                                    "type": "",
                                    "value": "4"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "9196:4:15",
                                    "type": "",
                                    "value": "0x41"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "9186:6:15"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "9186:15:15"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "9186:15:15"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "9217:1:15",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "9220:4:15",
                                    "type": "",
                                    "value": "0x24"
                                  }
                                ],
                                "functionName": {
                                  "name": "revert",
                                  "nodeType": "YulIdentifier",
                                  "src": "9210:6:15"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "9210:15:15"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "9210:15:15"
                            }
                          ]
                        },
                        "name": "panic_error_0x41",
                        "nodeType": "YulFunctionDefinition",
                        "src": "9047:184:15"
                      }
                    ]
                  },
                  "contents": "{\n    { }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, 0xffffffffffffffffffffffffffffffffffffffff))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_decode_tuple_t_addresst_bytes4(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(value1, value1) }\n        value0 := abi_decode_address(headStart)\n        let value := calldataload(add(headStart, 32))\n        if iszero(eq(value, and(value, 0xffffffff00000000000000000000000000000000000000000000000000000000))) { revert(value1, value1) }\n        value1 := value\n    }\n    function abi_decode_tuple_t_addresst_bytes_memory_ptr(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(value0, value0) }\n        value0 := abi_decode_address(headStart)\n        let offset := calldataload(add(headStart, 32))\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(value1, value1) }\n        let _2 := add(headStart, offset)\n        if iszero(slt(add(_2, 0x1f), dataEnd)) { revert(value1, value1) }\n        let _3 := calldataload(_2)\n        if gt(_3, _1) { panic_error_0x41() }\n        let _4 := 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(and(add(_3, 0x1f), _4), 63), _4))\n        if or(gt(newFreePtr, _1), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        mstore(memPtr, _3)\n        if gt(add(add(_2, _3), 32), dataEnd) { revert(value1, value1) }\n        calldatacopy(add(memPtr, 32), add(_2, 32), _3)\n        mstore(add(add(memPtr, _3), 32), value1)\n        value1 := memPtr\n    }\n    function abi_decode_tuple_t_bytes32t_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(value0, value0) }\n        value0 := calldataload(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_bytes32t_addresst_bool(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(value2, value2) }\n        value0 := calldataload(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        let value := calldataload(add(headStart, 64))\n        if iszero(eq(value, iszero(iszero(value)))) { revert(value2, value2) }\n        value2 := value\n    }\n    function abi_encode_bytes(value, pos) -> end\n    {\n        let length := mload(value)\n        mstore(pos, length)\n        copy_memory_to_memory(add(value, 0x20), add(pos, 0x20), length)\n        end := add(add(pos, and(add(length, 31), 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0)), 0x20)\n    }\n    function abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value0) -> end\n    {\n        let length := mload(value0)\n        copy_memory_to_memory(add(value0, 0x20), pos, length)\n        end := add(pos, length)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n    }\n    function abi_encode_tuple_t_address_t_bytes_memory_ptr__to_t_address_t_bytes_memory_ptr__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n        mstore(add(headStart, 32), 64)\n        tail := abi_encode_bytes(value1, add(headStart, 64))\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_bool_t_bool_t_bytes32__to_t_bool_t_bool_t_bytes32__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        mstore(headStart, iszero(iszero(value0)))\n        mstore(add(headStart, 32), iszero(iszero(value1)))\n        mstore(add(headStart, 64), value2)\n    }\n    function abi_encode_tuple_t_bytes4__to_t_bytes4__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffffffff00000000000000000000000000000000000000000000000000000000))\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        tail := abi_encode_bytes(value0, add(headStart, 32))\n    }\n    function abi_encode_tuple_t_stringliteral_0ca54846c3bb548883687dca8e12101dfb883d90d88b9fe5238eae9147ced712__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 25)\n        mstore(add(headStart, 64), \"REGISTERED_IMPLEMENTATION\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_3367adfa843ca35e9cc5c6cd8a969de35e1046ce305281944f16be39673c71e7__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 25)\n        mstore(add(headStart, 64), \"DEPRECATED_IMPLEMENTATION\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_55d47d3de142046027656b5b30de14d253112231a3b04e1e9201a26ec7a1a3ef__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 27)\n        mstore(add(headStart, 64), \"IMPLEMENTATION_ADDRESS_ZERO\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Address: insufficient balance fo\")\n        mstore(add(headStart, 96), \"r call\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_68ca40b61460257f14e69f48b1a4dbc812e9afc6932f127ef8084544457b3335__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 22)\n        mstore(add(headStart, 64), \"ERC1167: create failed\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_77283051cd0b6a39c2f3e7ec3fdf74b0a7c03b314f2c2c9d9a01468dd48f844b__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 27)\n        mstore(add(headStart, 64), \"UNREGISTERED_IMPLEMENTATION\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_984199bd9bbf325bed3d7c596c131b36732101e0d3151c139c4d2657c9618b8e__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 24)\n        mstore(add(headStart, 64), \"CANNOT_REGISTER_INSTANCE\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 29)\n        mstore(add(headStart, 64), \"Address: call to non-contract\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_cca20d5e6b0a009174175165fdf5a759ef555d3516bd42d178ac016ae5f041d7__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 23)\n        mstore(add(headStart, 64), \"AUTH_SENDER_NOT_ALLOWED\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_d018dd82e2a195c7ea949ecda8e19f3e54fbb728e79acd6a3a3b5470d19082c6__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 22)\n        mstore(add(headStart, 64), \"INVALID_IMPLEMENTATION\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_f8d0b8ec94df87420bce918295fc6fb6ab479bdb3b78376fc9f2ae8c511a4a6c__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 17)\n        mstore(add(headStart, 64), \"INVALID_NAMESPACE\")\n        tail := add(headStart, 96)\n    }\n    function copy_memory_to_memory(src, dst, length)\n    {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length) { mstore(add(dst, length), 0) }\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n}",
                  "id": 15,
                  "language": "Yul",
                  "name": "#utility.yul"
                }
              ],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "608060405234801561001057600080fd5b50600436106100be5760003560e01c80638b4872b811610076578063933f0f3c1161005b578063933f0f3c146101dd578063ca0f8f3b146101f0578063d9972b9614610213576100be565b80638b4872b8146101565780639235dcf81461018c576100be565b80633f81a192116100a75780633f81a192146101155780636646a43614610130578063678449d414610143576100be565b80630753c30c146100c35780630fbe133c146100d8575b600080fd5b6100d66100d1366004610e65565b610226565b005b6100eb6100e6366004610ed9565b6103fe565b60405173ffffffffffffffffffffffffffffffffffffffff90911681526020015b60405180910390f35b6100eb73ffffffffffffffffffffffffffffffffffffffff81565b6100d661013e366004610e7f565b610663565b6100d6610151366004610fdf565b61069f565b6100eb610164366004610e65565b60016020526000908152604090205473ffffffffffffffffffffffffffffffffffffffff1681565b6101c061019a366004610e65565b6002602052600090815260409020805460019091015460ff808316926101009004169083565b60408051931515845291151560208401529082015260600161010c565b6100d66101eb366004610e7f565b6108ef565b6102036101fe366004610fb4565b610927565b604051901515815260200161010c565b610203610221366004610e7f565b61096e565b610254336000357fffffffff0000000000000000000000000000000000000000000000000000000016610a24565b73ffffffffffffffffffffffffffffffffffffffff81166102bc5760405162461bcd60e51b815260206004820152601b60248201527f494d504c454d454e544154494f4e5f414444524553535f5a45524f000000000060448201526064015b60405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff8116600090815260026020526040902060018101546103325760405162461bcd60e51b815260206004820152601b60248201527f554e524547495354455245445f494d504c454d454e544154494f4e000000000060448201526064016102b3565b8054610100900460ff16156103895760405162461bcd60e51b815260206004820152601960248201527f444550524543415445445f494d504c454d454e544154494f4e0000000000000060448201526064016102b3565b80547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff16610100178155600181015460405173ffffffffffffffffffffffffffffffffffffffff841691907f9dedfb457c94655f88c417e108167137f3f2458254592c596f04441cb4c351fe90600090a35050565b600073ffffffffffffffffffffffffffffffffffffffff83166104635760405162461bcd60e51b815260206004820152601b60248201527f494d504c454d454e544154494f4e5f414444524553535f5a45524f000000000060448201526064016102b3565b73ffffffffffffffffffffffffffffffffffffffff8316600090815260026020526040902060018101546104d95760405162461bcd60e51b815260206004820152601b60248201527f554e524547495354455245445f494d504c454d454e544154494f4e000000000060448201526064016102b3565b8054610100900460ff16156105305760405162461bcd60e51b815260206004820152601960248201527f444550524543415445445f494d504c454d454e544154494f4e0000000000000060448201526064016102b3565b61053984610a7a565b73ffffffffffffffffffffffffffffffffffffffff818116600090815260016020526040812080547fffffffffffffffffffffffff00000000000000000000000000000000000000001692881692909217909155845191935090156105f45760408051808201909152601181527f434c4f4e455f494e49545f4641494c454400000000000000000000000000000060208201526105ef9073ffffffffffffffffffffffffffffffffffffffff8516908690610b42565b610604565b6040805160008152602081019091525b90508473ffffffffffffffffffffffffffffffffffffffff1682600101547f8316db2b1e4fe4451f1f3fdad0e106a648a807d121a880297b8a0ddb3231bcd48584604051610653929190611088565b60405180910390a3505092915050565b610691336000357fffffffff0000000000000000000000000000000000000000000000000000000016610a24565b61069b8282610b51565b5050565b6106cd336000357fffffffff0000000000000000000000000000000000000000000000000000000016610a24565b8261071a5760405162461bcd60e51b815260206004820152601160248201527f494e56414c49445f4e414d45535041434500000000000000000000000000000060448201526064016102b3565b73ffffffffffffffffffffffffffffffffffffffff821661077d5760405162461bcd60e51b815260206004820152601660248201527f494e56414c49445f494d504c454d454e544154494f4e0000000000000000000060448201526064016102b3565b73ffffffffffffffffffffffffffffffffffffffff821660009081526002602052604090206001810154156107f45760405162461bcd60e51b815260206004820152601960248201527f524547495354455245445f494d504c454d454e544154494f4e0000000000000060448201526064016102b3565b73ffffffffffffffffffffffffffffffffffffffff83811660009081526001602052604090205416156108695760405162461bcd60e51b815260206004820152601860248201527f43414e4e4f545f52454749535445525f494e5354414e4345000000000000000060448201526064016102b3565b80547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00001682151590811782556001820185905560405190815273ffffffffffffffffffffffffffffffffffffffff84169085907f9757e66b5a012762865eeeeaa7190b148500cbc2631d0a90dde0cc7946a92bc09060200160405180910390a350505050565b61091d336000357fffffffff0000000000000000000000000000000000000000000000000000000016610a24565b61069b8282610bfe565b73ffffffffffffffffffffffffffffffffffffffff811660009081526002602052604081208054610100900460ff161580156109665750838160010154145b949350505050565b7fffffffff00000000000000000000000000000000000000000000000000000000811660009081527f50c7a3d1a23c7ff4a61d37c3f2c4aeb36cf60b43ee893723db201d3eb941cbad602052604081205460ff1680610a1d575073ffffffffffffffffffffffffffffffffffffffff83166000908152602081815260408083207fffffffff000000000000000000000000000000000000000000000000000000008616845290915290205460ff165b9392505050565b610a2e828261096e565b61069b5760405162461bcd60e51b815260206004820152601760248201527f415554485f53454e4445525f4e4f545f414c4c4f57454400000000000000000060448201526064016102b3565b60006040517f3d602d80600a3d3981f3363d3d373d3d3d363d7300000000000000000000000081528260601b60148201527f5af43d82803e903d91602b57fd5bf3000000000000000000000000000000000060288201526037816000f091505073ffffffffffffffffffffffffffffffffffffffff8116610b3d5760405162461bcd60e51b815260206004820152601660248201527f455243313136373a20637265617465206661696c65640000000000000000000060448201526064016102b3565b919050565b60606109668484600085610ca6565b73ffffffffffffffffffffffffffffffffffffffff82166000818152602081815260408083207fffffffff0000000000000000000000000000000000000000000000000000000086168085529083529281902080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00169055519182527fa2e97b9eea8d1168700e334304edd057dff89c0384ca6f920c73cc3e48c8e52391015b60405180910390a25050565b73ffffffffffffffffffffffffffffffffffffffff82166000818152602081815260408083207fffffffff0000000000000000000000000000000000000000000000000000000086168085529083529281902080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00166001179055519182527f7f06c1c34ad47198873da9dcde2e40904035d41b23da3a9132df674a75022df79101610bf2565b606082471015610d1e5760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f60448201527f722063616c6c000000000000000000000000000000000000000000000000000060648201526084016102b3565b73ffffffffffffffffffffffffffffffffffffffff85163b610d825760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e747261637400000060448201526064016102b3565b6000808673ffffffffffffffffffffffffffffffffffffffff168587604051610dab919061106c565b60006040518083038185875af1925050503d8060008114610de8576040519150601f19603f3d011682016040523d82523d6000602084013e610ded565b606091505b5091509150610dfd828286610e08565b979650505050505050565b60608315610e17575081610a1d565b825115610e275782518084602001fd5b8160405162461bcd60e51b81526004016102b391906110b7565b803573ffffffffffffffffffffffffffffffffffffffff81168114610b3d57600080fd5b600060208284031215610e76578081fd5b610a1d82610e41565b60008060408385031215610e91578081fd5b610e9a83610e41565b915060208301357fffffffff0000000000000000000000000000000000000000000000000000000081168114610ece578182fd5b809150509250929050565b60008060408385031215610eeb578182fd5b610ef483610e41565b9150602083013567ffffffffffffffff80821115610f10578283fd5b818501915085601f830112610f23578283fd5b813581811115610f3557610f356110fa565b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0908116603f01168101908382118183101715610f7b57610f7b6110fa565b81604052828152886020848701011115610f93578586fd5b82602086016020830137856020848301015280955050505050509250929050565b60008060408385031215610fc6578182fd5b82359150610fd660208401610e41565b90509250929050565b600080600060608486031215610ff3578081fd5b8335925061100360208501610e41565b915060408401358015158114611017578182fd5b809150509250925092565b6000815180845261103a8160208601602086016110ca565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169290920160200192915050565b6000825161107e8184602087016110ca565b9190910192915050565b600073ffffffffffffffffffffffffffffffffffffffff84168252604060208301526109666040830184611022565b600060208252610a1d6020830184611022565b60005b838110156110e55781810151838201526020016110cd565b838111156110f4576000848401525b50505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fdfea26469706673582212204b6534a5c5a8f2e6e838a9eb256772e8b5b47280a73edf4c4c4f501d79ba0d0564736f6c63430008030033",
              "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xBE JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8B4872B8 GT PUSH2 0x76 JUMPI DUP1 PUSH4 0x933F0F3C GT PUSH2 0x5B JUMPI DUP1 PUSH4 0x933F0F3C EQ PUSH2 0x1DD JUMPI DUP1 PUSH4 0xCA0F8F3B EQ PUSH2 0x1F0 JUMPI DUP1 PUSH4 0xD9972B96 EQ PUSH2 0x213 JUMPI PUSH2 0xBE JUMP JUMPDEST DUP1 PUSH4 0x8B4872B8 EQ PUSH2 0x156 JUMPI DUP1 PUSH4 0x9235DCF8 EQ PUSH2 0x18C JUMPI PUSH2 0xBE JUMP JUMPDEST DUP1 PUSH4 0x3F81A192 GT PUSH2 0xA7 JUMPI DUP1 PUSH4 0x3F81A192 EQ PUSH2 0x115 JUMPI DUP1 PUSH4 0x6646A436 EQ PUSH2 0x130 JUMPI DUP1 PUSH4 0x678449D4 EQ PUSH2 0x143 JUMPI PUSH2 0xBE JUMP JUMPDEST DUP1 PUSH4 0x753C30C EQ PUSH2 0xC3 JUMPI DUP1 PUSH4 0xFBE133C EQ PUSH2 0xD8 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xD6 PUSH2 0xD1 CALLDATASIZE PUSH1 0x4 PUSH2 0xE65 JUMP JUMPDEST PUSH2 0x226 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xEB PUSH2 0xE6 CALLDATASIZE PUSH1 0x4 PUSH2 0xED9 JUMP JUMPDEST PUSH2 0x3FE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xEB PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 JUMP JUMPDEST PUSH2 0xD6 PUSH2 0x13E CALLDATASIZE PUSH1 0x4 PUSH2 0xE7F JUMP JUMPDEST PUSH2 0x663 JUMP JUMPDEST PUSH2 0xD6 PUSH2 0x151 CALLDATASIZE PUSH1 0x4 PUSH2 0xFDF JUMP JUMPDEST PUSH2 0x69F JUMP JUMPDEST PUSH2 0xEB PUSH2 0x164 CALLDATASIZE PUSH1 0x4 PUSH2 0xE65 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH2 0x1C0 PUSH2 0x19A CALLDATASIZE PUSH1 0x4 PUSH2 0xE65 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 SWAP1 SWAP2 ADD SLOAD PUSH1 0xFF DUP1 DUP4 AND SWAP3 PUSH2 0x100 SWAP1 DIV AND SWAP1 DUP4 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP4 ISZERO ISZERO DUP5 MSTORE SWAP2 ISZERO ISZERO PUSH1 0x20 DUP5 ADD MSTORE SWAP1 DUP3 ADD MSTORE PUSH1 0x60 ADD PUSH2 0x10C JUMP JUMPDEST PUSH2 0xD6 PUSH2 0x1EB CALLDATASIZE PUSH1 0x4 PUSH2 0xE7F JUMP JUMPDEST PUSH2 0x8EF JUMP JUMPDEST PUSH2 0x203 PUSH2 0x1FE CALLDATASIZE PUSH1 0x4 PUSH2 0xFB4 JUMP JUMPDEST PUSH2 0x927 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x10C JUMP JUMPDEST PUSH2 0x203 PUSH2 0x221 CALLDATASIZE PUSH1 0x4 PUSH2 0xE7F JUMP JUMPDEST PUSH2 0x96E JUMP JUMPDEST PUSH2 0x254 CALLER PUSH1 0x0 CALLDATALOAD PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 AND PUSH2 0xA24 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND PUSH2 0x2BC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x494D504C454D454E544154494F4E5F414444524553535F5A45524F0000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 DUP2 ADD SLOAD PUSH2 0x332 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x554E524547495354455245445F494D504C454D454E544154494F4E0000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x2B3 JUMP JUMPDEST DUP1 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x389 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x444550524543415445445F494D504C454D454E544154494F4E00000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x2B3 JUMP JUMPDEST DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00FF AND PUSH2 0x100 OR DUP2 SSTORE PUSH1 0x1 DUP2 ADD SLOAD PUSH1 0x40 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 AND SWAP2 SWAP1 PUSH32 0x9DEDFB457C94655F88C417E108167137F3F2458254592C596F04441CB4C351FE SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 AND PUSH2 0x463 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x494D504C454D454E544154494F4E5F414444524553535F5A45524F0000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x2B3 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 DUP2 ADD SLOAD PUSH2 0x4D9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x554E524547495354455245445F494D504C454D454E544154494F4E0000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x2B3 JUMP JUMPDEST DUP1 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x530 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x444550524543415445445F494D504C454D454E544154494F4E00000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x2B3 JUMP JUMPDEST PUSH2 0x539 DUP5 PUSH2 0xA7A JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 AND SWAP3 DUP9 AND SWAP3 SWAP1 SWAP3 OR SWAP1 SWAP2 SSTORE DUP5 MLOAD SWAP2 SWAP4 POP SWAP1 ISZERO PUSH2 0x5F4 JUMPI PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x11 DUP2 MSTORE PUSH32 0x434C4F4E455F494E49545F4641494C4544000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE PUSH2 0x5EF SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP6 AND SWAP1 DUP7 SWAP1 PUSH2 0xB42 JUMP JUMPDEST PUSH2 0x604 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP1 SWAP2 MSTORE JUMPDEST SWAP1 POP DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH1 0x1 ADD SLOAD PUSH32 0x8316DB2B1E4FE4451F1F3FDAD0E106A648A807D121A880297B8A0DDB3231BCD4 DUP6 DUP5 PUSH1 0x40 MLOAD PUSH2 0x653 SWAP3 SWAP2 SWAP1 PUSH2 0x1088 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x691 CALLER PUSH1 0x0 CALLDATALOAD PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 AND PUSH2 0xA24 JUMP JUMPDEST PUSH2 0x69B DUP3 DUP3 PUSH2 0xB51 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x6CD CALLER PUSH1 0x0 CALLDATALOAD PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 AND PUSH2 0xA24 JUMP JUMPDEST DUP3 PUSH2 0x71A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x494E56414C49445F4E414D455350414345000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x2B3 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND PUSH2 0x77D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x494E56414C49445F494D504C454D454E544154494F4E00000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x2B3 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 DUP2 ADD SLOAD ISZERO PUSH2 0x7F4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x524547495354455245445F494D504C454D454E544154494F4E00000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x2B3 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD AND ISZERO PUSH2 0x869 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x43414E4E4F545F52454749535445525F494E5354414E43450000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x2B3 JUMP JUMPDEST DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF0000 AND DUP3 ISZERO ISZERO SWAP1 DUP2 OR DUP3 SSTORE PUSH1 0x1 DUP3 ADD DUP6 SWAP1 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 AND SWAP1 DUP6 SWAP1 PUSH32 0x9757E66B5A012762865EEEEAA7190B148500CBC2631D0A90DDE0CC7946A92BC0 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP JUMP JUMPDEST PUSH2 0x91D CALLER PUSH1 0x0 CALLDATALOAD PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 AND PUSH2 0xA24 JUMP JUMPDEST PUSH2 0x69B DUP3 DUP3 PUSH2 0xBFE JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND ISZERO DUP1 ISZERO PUSH2 0x966 JUMPI POP DUP4 DUP2 PUSH1 0x1 ADD SLOAD EQ JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH32 0x50C7A3D1A23C7FF4A61D37C3F2C4AEB36CF60B43EE893723DB201D3EB941CBAD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0xFF AND DUP1 PUSH2 0xA1D JUMPI POP PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP7 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0xA2E DUP3 DUP3 PUSH2 0x96E JUMP JUMPDEST PUSH2 0x69B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x415554485F53454E4445525F4E4F545F414C4C4F574544000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x2B3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x3D602D80600A3D3981F3363D3D373D3D3D363D73000000000000000000000000 DUP2 MSTORE DUP3 PUSH1 0x60 SHL PUSH1 0x14 DUP3 ADD MSTORE PUSH32 0x5AF43D82803E903D91602B57FD5BF30000000000000000000000000000000000 PUSH1 0x28 DUP3 ADD MSTORE PUSH1 0x37 DUP2 PUSH1 0x0 CREATE SWAP2 POP POP PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND PUSH2 0xB3D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313136373A20637265617465206661696C656400000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x2B3 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x966 DUP5 DUP5 PUSH1 0x0 DUP6 PUSH2 0xCA6 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP7 AND DUP1 DUP6 MSTORE SWAP1 DUP4 MSTORE SWAP3 DUP2 SWAP1 KECCAK256 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00 AND SWAP1 SSTORE MLOAD SWAP2 DUP3 MSTORE PUSH32 0xA2E97B9EEA8D1168700E334304EDD057DFF89C0384CA6F920C73CC3E48C8E523 SWAP2 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP7 AND DUP1 DUP6 MSTORE SWAP1 DUP4 MSTORE SWAP3 DUP2 SWAP1 KECCAK256 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00 AND PUSH1 0x1 OR SWAP1 SSTORE MLOAD SWAP2 DUP3 MSTORE PUSH32 0x7F06C1C34AD47198873DA9DCDE2E40904035D41B23DA3A9132DF674A75022DF7 SWAP2 ADD PUSH2 0xBF2 JUMP JUMPDEST PUSH1 0x60 DUP3 SELFBALANCE LT ISZERO PUSH2 0xD1E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A20696E73756666696369656E742062616C616E636520666F PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x722063616C6C0000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x2B3 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP6 AND EXTCODESIZE PUSH2 0xD82 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x2B3 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 DUP8 PUSH1 0x40 MLOAD PUSH2 0xDAB SWAP2 SWAP1 PUSH2 0x106C JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0xDE8 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0xDED JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0xDFD DUP3 DUP3 DUP7 PUSH2 0xE08 JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP4 ISZERO PUSH2 0xE17 JUMPI POP DUP2 PUSH2 0xA1D JUMP JUMPDEST DUP3 MLOAD ISZERO PUSH2 0xE27 JUMPI DUP3 MLOAD DUP1 DUP5 PUSH1 0x20 ADD REVERT JUMPDEST DUP2 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2B3 SWAP2 SWAP1 PUSH2 0x10B7 JUMP JUMPDEST DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND DUP2 EQ PUSH2 0xB3D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xE76 JUMPI DUP1 DUP2 REVERT JUMPDEST PUSH2 0xA1D DUP3 PUSH2 0xE41 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xE91 JUMPI DUP1 DUP2 REVERT JUMPDEST PUSH2 0xE9A DUP4 PUSH2 0xE41 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP2 AND DUP2 EQ PUSH2 0xECE JUMPI DUP2 DUP3 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xEEB JUMPI DUP2 DUP3 REVERT JUMPDEST PUSH2 0xEF4 DUP4 PUSH2 0xE41 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0xF10 JUMPI DUP3 DUP4 REVERT JUMPDEST DUP2 DUP6 ADD SWAP2 POP DUP6 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xF23 JUMPI DUP3 DUP4 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0xF35 JUMPI PUSH2 0xF35 PUSH2 0x10FA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP4 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0xF7B JUMPI PUSH2 0xF7B PUSH2 0x10FA JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP3 DUP2 MSTORE DUP9 PUSH1 0x20 DUP5 DUP8 ADD ADD GT ISZERO PUSH2 0xF93 JUMPI DUP6 DUP7 REVERT JUMPDEST DUP3 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY DUP6 PUSH1 0x20 DUP5 DUP4 ADD ADD MSTORE DUP1 SWAP6 POP POP POP POP POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xFC6 JUMPI DUP2 DUP3 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH2 0xFD6 PUSH1 0x20 DUP5 ADD PUSH2 0xE41 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xFF3 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP4 CALLDATALOAD SWAP3 POP PUSH2 0x1003 PUSH1 0x20 DUP6 ADD PUSH2 0xE41 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x1017 JUMPI DUP2 DUP3 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH2 0x103A DUP2 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP7 ADD PUSH2 0x10CA JUMP JUMPDEST PUSH1 0x1F ADD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD PUSH2 0x107E DUP2 DUP5 PUSH1 0x20 DUP8 ADD PUSH2 0x10CA JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 AND DUP3 MSTORE PUSH1 0x40 PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x966 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1022 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 MSTORE PUSH2 0xA1D PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1022 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x10E5 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x10CD JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x10F4 JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x4B PUSH6 0x34A5C5A8F2E6 0xE8 CODESIZE 0xA9 0xEB 0x25 PUSH8 0x72E8B5B47280A73E 0xDF 0x4C 0x4C 0x4F POP SAR PUSH26 0xBA0D0564736F6C63430008030033000000000000000000000000 ",
              "sourceMap": "1414:4195:11:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4020:462;;;;;;:::i;:::-;;:::i;:::-;;4846:761;;;;;;:::i;:::-;;:::i;:::-;;;3436:42:15;3424:55;;;3406:74;;3394:2;3379:18;4846:761:11;;;;;;;;1209:89:0;;1255:42;1209:89;;2556:110;;;;;;:::i;:::-;;:::i;3140:660:11:-;;;;;;:::i;:::-;;:::i;1680:61::-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;1798:74;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4240:14:15;;4233:22;4215:41;;4299:14;;4292:22;4287:2;4272:18;;4265:50;4331:18;;;4324:34;4203:2;4188:18;1798:74:11;4170:194:15;2244:106:0;;;;;;:::i;:::-;;:::i;2562:248:11:-;;;;;;:::i;:::-;;:::i;:::-;;;3998:14:15;;3991:22;3973:41;;3961:2;3946:18;2562:248:11;3928:92:15;1880:162:0;;;;;;:::i;:::-;;:::i;4020:462:11:-;1584:34:0;1598:10;1610:7;;;;1584:13;:34::i;:::-;4104:28:11::1;::::0;::::1;4096:68;;;::::0;-1:-1:-1;;;4096:68:11;;5756:2:15;4096:68:11::1;::::0;::::1;5738:21:15::0;5795:2;5775:18;;;5768:30;5834:29;5814:18;;;5807:57;5881:18;;4096:68:11::1;;;;;;;;;4209:34;::::0;::::1;4175:31;4209:34:::0;;;:18:::1;:34;::::0;;;;4261:14:::1;::::0;::::1;::::0;4253:68:::1;;;::::0;-1:-1:-1;;;4253:68:11;;6870:2:15;4253:68:11::1;::::0;::::1;6852:21:15::0;6909:2;6889:18;;;6882:30;6948:29;6928:18;;;6921:57;6995:18;;4253:68:11::1;6842:177:15::0;4253:68:11::1;4340:15:::0;;::::1;::::0;::::1;;;4339:16;4331:54;;;::::0;-1:-1:-1;;;4331:54:11;;5402:2:15;4331:54:11::1;::::0;::::1;5384:21:15::0;5441:2;5421:18;;;5414:30;5480:27;5460:18;;;5453:55;5525:18;;4331:54:11::1;5374:175:15::0;4331:54:11::1;4396:22:::0;;;::::1;;;::::0;;4414:4:::1;4444:14:::0;::::1;::::0;4433:42:::1;::::0;::::1;::::0;::::1;::::0;4444:14;4433:42:::1;::::0;4396:15:::1;::::0;4433:42:::1;1628:1:0;4020:462:11::0;:::o;4846:761::-;4941:16;4977:28;;;4969:68;;;;-1:-1:-1;;;4969:68:11;;5756:2:15;4969:68:11;;;5738:21:15;5795:2;5775:18;;;5768:30;5834:29;5814:18;;;5807:57;5881:18;;4969:68:11;5728:177:15;4969:68:11;5082:34;;;5048:31;5082:34;;;:18;:34;;;;;5134:14;;;;5126:68;;;;-1:-1:-1;;;5126:68:11;;6870:2:15;5126:68:11;;;6852:21:15;6909:2;6889:18;;;6882:30;6948:29;6928:18;;;6921:57;6995:18;;5126:68:11;6842:177:15;5126:68:11;5213:15;;;;;;;5212:16;5204:54;;;;-1:-1:-1;;;5204:54:11;;5402:2:15;5204:54:11;;;5384:21:15;5441:2;5421:18;;;5414:30;5480:27;5460:18;;;5453:55;5525:18;;5204:54:11;5374:175:15;5204:54:11;5280:37;5301:14;5280:12;:37::i;:::-;5327:26;;;;;;;;:16;:26;;;;;:43;;;;;;;;;;;;;;5402:21;;5327:26;;-1:-1:-1;5327:26:11;5402;:126;;5470:58;;;;;;;;;;;;;;;;;;;:21;;;;5492:14;;5470:21;:58::i;:::-;5402:126;;;5443:12;;;5453:1;5443:12;;;;;;;;5402:126;5380:148;;5567:14;5544:56;;5551:4;:14;;;5544:56;5583:8;5593:6;5544:56;;;;;;;:::i;:::-;;;;;;;;4846:761;;;;;;:::o;2556:110:0:-;1584:34;1598:10;1610:7;;;;1584:13;:34::i;:::-;2636:23:::1;2649:3;2654:4;2636:12;:23::i;:::-;2556:110:::0;;:::o;3140:660:11:-;1584:34:0;1598:10;1610:7;;;;1584:13;:34::i;:::-;3258:23:11;3250:53:::1;;;::::0;-1:-1:-1;;;3250:53:11;;8640:2:15;3250:53:11::1;::::0;::::1;8622:21:15::0;8679:2;8659:18;;;8652:30;8718:19;8698:18;;;8691:47;8755:18;;3250:53:11::1;8612:167:15::0;3250:53:11::1;3321:28;::::0;::::1;3313:63;;;::::0;-1:-1:-1;;;3313:63:11;;8289:2:15;3313:63:11::1;::::0;::::1;8271:21:15::0;8328:2;8308:18;;;8301:30;8367:24;8347:18;;;8340:52;8409:18;;3313:63:11::1;8261:172:15::0;3313:63:11::1;3421:34;::::0;::::1;3387:31;3421:34:::0;;;:18:::1;:34;::::0;;;;3473:14:::1;::::0;::::1;::::0;:28;3465:66:::1;;;::::0;-1:-1:-1;;;3465:66:11;;5048:2:15;3465:66:11::1;::::0;::::1;5030:21:15::0;5087:2;5067:18;;;5060:30;5126:27;5106:18;;;5099:55;5171:18;;3465:66:11::1;5020:175:15::0;3465:66:11::1;3549:46;:32:::0;;::::1;3593:1;3549:32:::0;;;:16:::1;:32;::::0;;;;;::::1;:46:::0;3541:83:::1;;;::::0;-1:-1:-1;;;3541:83:11;;7226:2:15;3541:83:11::1;::::0;::::1;7208:21:15::0;7265:2;7245:18;;;7238:30;7304:26;7284:18;;;7277:54;7348:18;;3541:83:11::1;7198:174:15::0;3541:83:11::1;3635:23:::0;;3668:26;;;::::1;;::::0;;::::1;::::0;;-1:-1:-1;3704:14:11;::::1;:26:::0;;;3745:48:::1;::::0;3973:41:15;;;3745:48:11::1;::::0;::::1;::::0;3704:26;;3745:48:::1;::::0;3961:2:15;3946:18;3745:48:11::1;;;;;;;1628:1:0;3140:660:11::0;;;:::o;2244:106:0:-;1584:34;1598:10;1610:7;;;;1584:13;:34::i;:::-;2322:21:::1;2333:3;2338:4;2322:10;:21::i;2562:248:11:-:0;2705:34;;;2655:4;2705:34;;;:18;:34;;;;;2757:15;;;;;;;2756:16;:47;;;;;2794:9;2776:4;:14;;;:27;2756:47;2749:54;2562:248;-1:-1:-1;;;;2562:248:11:o;1880:162:0:-;1981:29;;;1958:4;1981:29;;;:23;;:29;:23;:29;;;;;;:54;;-1:-1:-1;2014:15:0;;;:10;:15;;;;;;;;;;;:21;;;;;;;;;;;;;1981:54;1974:61;1880:162;-1:-1:-1;;;1880:162:0:o;2951:139::-;3032:23;3045:3;3050:4;3032:12;:23::i;:::-;3024:59;;;;-1:-1:-1;;;3024:59:0;;7937:2:15;3024:59:0;;;7919:21:15;7976:2;7956:18;;;7949:30;8015:25;7995:18;;;7988:53;8058:18;;3024:59:0;7909:173:15;973:558:2;1030:16;1141:4;1135:11;1171:66;1166:3;1159:79;1284:14;1278:4;1274:25;1267:4;1262:3;1258:14;1251:49;1336:66;1329:4;1324:3;1320:14;1313:90;1443:4;1438:3;1435:1;1428:20;1416:32;-1:-1:-1;;1475:22:2;;;1467:57;;;;-1:-1:-1;;;1467:57:2;;6519:2:15;1467:57:2;;;6501:21:15;6558:2;6538:18;;;6531:30;6597:24;6577:18;;;6570:52;6639:18;;1467:57:2;6491:172:15;1467:57:2;973:558;;;:::o;3861:223:4:-;3994:12;4025:52;4047:6;4055:4;4061:1;4064:12;4025:21;:52::i;3602:141:0:-;3669:15;;;3693:5;3669:15;;;;;;;;;;;:21;;;;;;;;;;;;;:29;;;;;;3713:23;4513:98:15;;;3713:23:0;;4486:18:15;3713:23:0;;;;;;;;3602:141;;:::o;3276:136::-;3341:15;;;:10;:15;;;;;;;;;;;:21;;;;;;;;;;;;;:28;;;;3365:4;3341:28;;;3384:21;4513:98:15;;;3384:21:0;;4486:18:15;3384:21:0;4468:149:15;4948:499:4;5113:12;5170:5;5145:21;:30;;5137:81;;;;-1:-1:-1;;;5137:81:4;;6112:2:15;5137:81:4;;;6094:21:15;6151:2;6131:18;;;6124:30;6190:34;6170:18;;;6163:62;6261:8;6241:18;;;6234:36;6287:19;;5137:81:4;6084:228:15;5137:81:4;1465:19;;;;5228:60;;;;-1:-1:-1;;;5228:60:4;;7579:2:15;5228:60:4;;;7561:21:15;7618:2;7598:18;;;7591:30;7657:31;7637:18;;;7630:59;7706:18;;5228:60:4;7551:179:15;5228:60:4;5300:12;5314:23;5341:6;:11;;5360:5;5367:4;5341:31;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5299:73;;;;5389:51;5406:7;5415:10;5427:12;5389:16;:51::i;:::-;5382:58;4948:499;-1:-1:-1;;;;;;;4948:499:4:o;7561:742::-;7707:12;7735:7;7731:566;;;-1:-1:-1;7765:10:4;7758:17;;7731:566;7876:17;;:21;7872:415;;8120:10;8114:17;8180:15;8167:10;8163:2;8159:19;8152:44;8069:145;8259:12;8252:20;;-1:-1:-1;;;8252:20:4;;;;;;;;:::i;14:196:15:-;82:20;;142:42;131:54;;121:65;;111:2;;200:1;197;190:12;215:196;;327:2;315:9;306:7;302:23;298:32;295:2;;;348:6;340;333:22;295:2;376:29;395:9;376:29;:::i;416:426::-;;;544:2;532:9;523:7;519:23;515:32;512:2;;;565:6;557;550:22;512:2;593:29;612:9;593:29;:::i;:::-;583:39;;672:2;661:9;657:18;644:32;716:66;709:5;705:78;698:5;695:89;685:2;;803:6;795;788:22;685:2;831:5;821:15;;;502:340;;;;;:::o;847:1099::-;;;985:2;973:9;964:7;960:23;956:32;953:2;;;1006:6;998;991:22;953:2;1034:29;1053:9;1034:29;:::i;:::-;1024:39;;1114:2;1103:9;1099:18;1086:32;1137:18;1178:2;1170:6;1167:14;1164:2;;;1199:6;1191;1184:22;1164:2;1242:6;1231:9;1227:22;1217:32;;1287:7;1280:4;1276:2;1272:13;1268:27;1258:2;;1314:6;1306;1299:22;1258:2;1355;1342:16;1377:2;1373;1370:10;1367:2;;;1383:18;;:::i;:::-;1517:2;1511:9;1579:4;1571:13;;1422:66;1567:22;;;1591:2;1563:31;1559:40;1547:53;;;1615:18;;;1635:22;;;1612:46;1609:2;;;1661:18;;:::i;:::-;1701:10;1697:2;1690:22;1736:2;1728:6;1721:18;1776:7;1771:2;1766;1762;1758:11;1754:20;1751:33;1748:2;;;1802:6;1794;1787:22;1748:2;1863;1858;1854;1850:11;1845:2;1837:6;1833:15;1820:46;1908:6;1903:2;1898;1890:6;1886:15;1882:24;1875:40;1934:6;1924:16;;;;;;;943:1003;;;;;:::o;1951:264::-;;;2080:2;2068:9;2059:7;2055:23;2051:32;2048:2;;;2101:6;2093;2086:22;2048:2;2142:9;2129:23;2119:33;;2171:38;2205:2;2194:9;2190:18;2171:38;:::i;:::-;2161:48;;2038:177;;;;;:::o;2220:435::-;;;;2363:2;2351:9;2342:7;2338:23;2334:32;2331:2;;;2384:6;2376;2369:22;2331:2;2425:9;2412:23;2402:33;;2454:38;2488:2;2477:9;2473:18;2454:38;:::i;:::-;2444:48;;2542:2;2531:9;2527:18;2514:32;2589:5;2582:13;2575:21;2568:5;2565:32;2555:2;;2616:6;2608;2601:22;2555:2;2644:5;2634:15;;;2321:334;;;;;:::o;2660:316::-;;2739:5;2733:12;2766:6;2761:3;2754:19;2782:63;2838:6;2831:4;2826:3;2822:14;2815:4;2808:5;2804:16;2782:63;:::i;:::-;2890:2;2878:15;2895:66;2874:88;2865:98;;;;2965:4;2861:109;;2709:267;-1:-1:-1;;2709:267:15:o;2981:274::-;;3148:6;3142:13;3164:53;3210:6;3205:3;3198:4;3190:6;3186:17;3164:53;:::i;:::-;3233:16;;;;;3118:137;-1:-1:-1;;3118:137:15:o;3491:337::-;;3678:42;3670:6;3666:55;3655:9;3648:74;3758:2;3753;3742:9;3738:18;3731:30;3778:44;3818:2;3807:9;3803:18;3795:6;3778:44;:::i;4622:219::-;;4771:2;4760:9;4753:21;4791:44;4831:2;4820:9;4816:18;4808:6;4791:44;:::i;8784:258::-;8856:1;8866:113;8880:6;8877:1;8874:13;8866:113;;;8956:11;;;8950:18;8937:11;;;8930:39;8902:2;8895:10;8866:113;;;8997:6;8994:1;8991:13;8988:2;;;9032:1;9023:6;9018:3;9014:16;9007:27;8988:2;;8837:205;;;:::o;9047:184::-;9099:77;9096:1;9089:88;9196:4;9193:1;9186:15;9220:4;9217:1;9210:15"
            },
            "methodIdentifiers": {
              "ANY_ADDRESS()": "3f81a192",
              "authorize(address,bytes4)": "933f0f3c",
              "clone(address,bytes)": "0fbe133c",
              "deprecate(address)": "0753c30c",
              "implementationData(address)": "9235dcf8",
              "implementationOf(address)": "8b4872b8",
              "isActive(bytes32,address)": "ca0f8f3b",
              "isAuthorized(address,bytes4)": "d9972b96",
              "register(bytes32,address,bool)": "678449d4",
              "unauthorize(address,bytes4)": "6646a436"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.3+commit.8d00100c\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"admin\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"who\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes4\",\"name\":\"what\",\"type\":\"bytes4\"}],\"name\":\"Authorized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"namespace\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"instance\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"initResult\",\"type\":\"bytes\"}],\"name\":\"Cloned\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"namespace\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"Deprecated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"namespace\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"stateless\",\"type\":\"bool\"}],\"name\":\"Registered\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"who\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes4\",\"name\":\"what\",\"type\":\"bytes4\"}],\"name\":\"Unauthorized\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"ANY_ADDRESS\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"who\",\"type\":\"address\"},{\"internalType\":\"bytes4\",\"name\":\"what\",\"type\":\"bytes4\"}],\"name\":\"authorize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"initializeData\",\"type\":\"bytes\"}],\"name\":\"clone\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"instance\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"deprecate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"implementationData\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"stateless\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"deprecated\",\"type\":\"bool\"},{\"internalType\":\"bytes32\",\"name\":\"namespace\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"implementationOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"namespace\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"isActive\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"who\",\"type\":\"address\"},{\"internalType\":\"bytes4\",\"name\":\"what\",\"type\":\"bytes4\"}],\"name\":\"isAuthorized\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"namespace\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"stateless\",\"type\":\"bool\"}],\"name\":\"register\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"who\",\"type\":\"address\"},{\"internalType\":\"bytes4\",\"name\":\"what\",\"type\":\"bytes4\"}],\"name\":\"unauthorize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Registry of contracts that acts as a curated list of implementations and instances to be trusted by the Mimic protocol. Here consumers can find either implementation contracts (to be cloned through proxies) and contract instances (from cloned implementations). The registry follows the Authorizer mixin and only authorized parties are allowed to register implementations. Instances are automatically registered when a new clone is requested to the registry.\",\"kind\":\"dev\",\"methods\":{\"authorize(address,bytes4)\":{\"details\":\"Authorizes someone to call a function. Sender must be authorize to do so.\",\"params\":{\"what\":\"Function selector to be granted\",\"who\":\"Address to be authorized\"}},\"clone(address,bytes)\":{\"details\":\"Clones a registered implementation\",\"params\":{\"implementation\":\"Address of the implementation to be cloned. It must be registered and not deprecated.\",\"initializeData\":\"Arbitrary data to be sent after deployment. It can be used to initialize the new instance.\"},\"returns\":{\"instance\":\"Address of the new instance created\"}},\"constructor\":{\"details\":\"Initializes the Registry contract\",\"params\":{\"admin\":\"Address to be granted with register, deprecate, authorize, and unauthorize permissions\"}},\"deprecate(address)\":{\"details\":\"Deprecates a registered implementation. Sender must be authorized.\",\"params\":{\"implementation\":\"Address of the implementation to be deprecated. It must be registered and not deprecated.\"}},\"isActive(bytes32,address)\":{\"details\":\"Tells if a specific implementation is registered under a certain namespace and it's not deprecated\",\"params\":{\"implementation\":\"Address of the implementation to be checked\",\"namespace\":\"Namespace asking for\"}},\"isAuthorized(address,bytes4)\":{\"details\":\"Tells whether someone is allowed to call a function or not. It returns true if it's allowed to anyone.\",\"params\":{\"what\":\"Function selector asking permission for\",\"who\":\"Address asking permission for\"}},\"register(bytes32,address,bool)\":{\"details\":\"Registers a new implementation for a given namespace. Sender must be authorized.\",\"params\":{\"implementation\":\"Address of the implementation to be registered\",\"namespace\":\"Namespace to be used for the implementation\",\"stateless\":\"Whether the implementation is stateless or not\"}},\"unauthorize(address,bytes4)\":{\"details\":\"Unauthorizes someone to call a function. Sender must be authorize to do so.\",\"params\":{\"what\":\"Function selector to be revoked\",\"who\":\"Address to be unauthorized\"}}},\"stateVariables\":{\"implementationData\":{\"details\":\"Tells the data of an implementation:\",\"params\":{\"implementation\":\"Address of the implementation to request it's data\"}},\"implementationOf\":{\"details\":\"Tells the implementation associated to a contract instance\",\"params\":{\"instance\":\"Address of the instance to request it's implementation\"}}},\"title\":\"Registry\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/registry/Registry.sol\":\"Registry\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":10000},\"remappings\":[]},\"sources\":{\"@mimic-fi/v2-helpers/contracts/auth/Authorizer.sol\":{\"keccak256\":\"0x6c9de187060f53d7a3dc095d061fca507222259af53d8c12301119bf05448b5b\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://d925a2acb78a8539e4ea32e2d4c50250869260d683f3cb591610112140751e98\",\"dweb:/ipfs/QmdVC9L1PNwMSphiqdJpt99ND4kCumEAaJNU8BJLQqcZ8q\"]},\"@mimic-fi/v2-helpers/contracts/auth/IAuthorizer.sol\":{\"keccak256\":\"0x7e5d1c440a02d16c3d62d8ca982749b4cf044ba14e0a40c4f2fe23257a5304d2\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://bdad507d0bdc80eb1ca9fc01d4ef4ff5e0258b631305033b5945aad85fa5068a\",\"dweb:/ipfs/QmaRdsSorrzkxYpeTNMrZvH5RbbM9JYPQ9HyNAcQGmXNAe\"]},\"@openzeppelin/contracts/proxy/Clones.sol\":{\"keccak256\":\"0xae614c6b103b743c62e9544632f7ef4fc8950de4e9c783d2e765a3b86701dda3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1840012075b9b05caa02da1b16d2d2662b2c383feb3169c8159fd8deb4840f5c\",\"dweb:/ipfs/QmPj63a7JH3aAqVj1wvkuGEdth7s9f33vK26A5aE9k23S4\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xd6153ce99bcdcce22b124f755e72553295be6abcd63804cfdffceb188b8bef10\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://35c47bece3c03caaa07fab37dd2bb3413bfbca20db7bd9895024390e0a469487\",\"dweb:/ipfs/QmPGWT2x3QHcKxqe6gRmAkdakhbaRgx3DLzcakHz5M4eXG\"]},\"contracts/registry/IRegistry.sol\":{\"keccak256\":\"0xa7d49ecd7b34ed1fdb3cd114432e037d88cf097ceadec01fb5e3d7895d617a65\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://352176031f1aa60f58daf223f0feaeb4fc892107d7a94deec4f25c1cfe7d934b\",\"dweb:/ipfs/QmVnujTPV3v76xU4QpMysSriUEfzPkLci7zaxfLnY27zRw\"]},\"contracts/registry/Registry.sol\":{\"keccak256\":\"0x3efe79f4c6a4ddedc38a60633c0cc0499aef9cbca6044aba7846b71b56081c53\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://fe0d93d938dee53d860479d3b48f8ff7408c9adda955c4afbf88338d48aba722\",\"dweb:/ipfs/QmZcNZYvzwBotFJsZvWzDjV1gt6aE5JENZKnPAXj4T8d4A\"]}},\"version\":1}"
        }
      },
      "contracts/test/BaseImplementationMock.sol": {
        "BaseImplementationMock": {
          "abi": [
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "registry",
                  "type": "address"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "constructor"
            },
            {
              "inputs": [],
              "name": "NAMESPACE",
              "outputs": [
                {
                  "internalType": "bytes32",
                  "name": "",
                  "type": "bytes32"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "registry",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "dependency",
                  "type": "address"
                }
              ],
              "name": "validateStatefulDependency",
              "outputs": [],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "dependency",
                  "type": "address"
                }
              ],
              "name": "validateStatelessDependency",
              "outputs": [],
              "stateMutability": "view",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "generatedSources": [
                {
                  "ast": {
                    "nodeType": "YulBlock",
                    "src": "0:326:15",
                    "statements": [
                      {
                        "nodeType": "YulBlock",
                        "src": "6:3:15",
                        "statements": []
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "95:229:15",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "141:26:15",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "name": "value0",
                                          "nodeType": "YulIdentifier",
                                          "src": "150:6:15"
                                        },
                                        {
                                          "name": "value0",
                                          "nodeType": "YulIdentifier",
                                          "src": "158:6:15"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "143:6:15"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "143:22:15"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "143:22:15"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "116:7:15"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "125:9:15"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "112:3:15"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "112:23:15"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "137:2:15",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "slt",
                                  "nodeType": "YulIdentifier",
                                  "src": "108:3:15"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "108:32:15"
                              },
                              "nodeType": "YulIf",
                              "src": "105:2:15"
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "176:29:15",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "195:9:15"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nodeType": "YulIdentifier",
                                  "src": "189:5:15"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "189:16:15"
                              },
                              "variables": [
                                {
                                  "name": "value",
                                  "nodeType": "YulTypedName",
                                  "src": "180:5:15",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "268:26:15",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "name": "value0",
                                          "nodeType": "YulIdentifier",
                                          "src": "277:6:15"
                                        },
                                        {
                                          "name": "value0",
                                          "nodeType": "YulIdentifier",
                                          "src": "285:6:15"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "270:6:15"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "270:22:15"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "270:22:15"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "227:5:15"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "name": "value",
                                            "nodeType": "YulIdentifier",
                                            "src": "238:5:15"
                                          },
                                          {
                                            "arguments": [
                                              {
                                                "arguments": [
                                                  {
                                                    "kind": "number",
                                                    "nodeType": "YulLiteral",
                                                    "src": "253:3:15",
                                                    "type": "",
                                                    "value": "160"
                                                  },
                                                  {
                                                    "kind": "number",
                                                    "nodeType": "YulLiteral",
                                                    "src": "258:1:15",
                                                    "type": "",
                                                    "value": "1"
                                                  }
                                                ],
                                                "functionName": {
                                                  "name": "shl",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "249:3:15"
                                                },
                                                "nodeType": "YulFunctionCall",
                                                "src": "249:11:15"
                                              },
                                              {
                                                "kind": "number",
                                                "nodeType": "YulLiteral",
                                                "src": "262:1:15",
                                                "type": "",
                                                "value": "1"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "sub",
                                              "nodeType": "YulIdentifier",
                                              "src": "245:3:15"
                                            },
                                            "nodeType": "YulFunctionCall",
                                            "src": "245:19:15"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "and",
                                          "nodeType": "YulIdentifier",
                                          "src": "234:3:15"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "234:31:15"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "eq",
                                      "nodeType": "YulIdentifier",
                                      "src": "224:2:15"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "224:42:15"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "217:6:15"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "217:50:15"
                              },
                              "nodeType": "YulIf",
                              "src": "214:2:15"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "303:15:15",
                              "value": {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "313:5:15"
                              },
                              "variableNames": [
                                {
                                  "name": "value0",
                                  "nodeType": "YulIdentifier",
                                  "src": "303:6:15"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_decode_tuple_t_address_fromMemory",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "61:9:15",
                            "type": ""
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulTypedName",
                            "src": "72:7:15",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "84:6:15",
                            "type": ""
                          }
                        ],
                        "src": "14:310:15"
                      }
                    ]
                  },
                  "contents": "{\n    { }\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        let value := mload(headStart)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(value0, value0) }\n        value0 := value\n    }\n}",
                  "id": 15,
                  "language": "Yul",
                  "name": "#utility.yul"
                }
              ],
              "linkReferences": {},
              "object": "60a060405234801561001057600080fd5b5060405161060e38038061060e83398101604081905261002f91610044565b60601b6001600160601b031916608052610072565b600060208284031215610055578081fd5b81516001600160a01b038116811461006b578182fd5b9392505050565b60805160601c61057161009d6000396000818160a501528181610242015261033201526105716000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c806344ba1fca146100515780635d1b5f121461008b5780637b103999146100a0578063b1d51210146100ec575b600080fd5b6100787f7d86b200cd6cf95bd41bf9d1083923efc2908df0a6016584cdbfa288a8c00c4881565b6040519081526020015b60405180910390f35b61009e61009936600461049f565b6100ff565b005b6100c77f000000000000000000000000000000000000000000000000000000000000000081565b60405173ffffffffffffffffffffffffffffffffffffffff9091168152602001610082565b61009e6100fa36600461049f565b61010b565b61010881610114565b50565b61010881610188565b61011d816101f8565b610108576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601860248201527f444550454e44454e43595f4e4f545f53544154454c455353000000000000000060448201526064015b60405180910390fd5b610191816101f8565b15610108576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601760248201527f444550454e44454e43595f4e4f545f535441544546554c000000000000000000604482015260640161017f565b6040517f8b4872b800000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff828116600483015260009182917f00000000000000000000000000000000000000000000000000000000000000001690638b4872b89060240160206040518083038186803b15801561028457600080fd5b505afa158015610298573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102bc91906104c2565b9050600073ffffffffffffffffffffffffffffffffffffffff82166102e157836102e3565b815b6040517f9235dcf800000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff8083166004830152919250600091829182917f00000000000000000000000000000000000000000000000000000000000000001690639235dcf89060240160606040518083038186803b15801561037457600080fd5b505afa158015610388573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103ac91906104de565b919450925090508061041a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601960248201527f444550454e44454e43595f4e4f545f5245474953544552454400000000000000604482015260640161017f565b8115610482576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601560248201527f444550454e44454e43595f444550524543415445440000000000000000000000604482015260640161017f565b509093505050505b919050565b8051801515811461048a57600080fd5b6000602082840312156104b0578081fd5b81356104bb81610519565b9392505050565b6000602082840312156104d3578081fd5b81516104bb81610519565b6000806000606084860312156104f2578182fd5b6104fb8461048f565b92506105096020850161048f565b9150604084015190509250925092565b73ffffffffffffffffffffffffffffffffffffffff8116811461010857600080fdfea264697066735822122011c1b088f1e55f17be91086679f6936dd322d6bdeef85942745ab5766cbf147864736f6c63430008030033",
              "opcodes": "PUSH1 0xA0 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x60E CODESIZE SUB DUP1 PUSH2 0x60E DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH2 0x2F SWAP2 PUSH2 0x44 JUMP JUMPDEST PUSH1 0x60 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB NOT AND PUSH1 0x80 MSTORE PUSH2 0x72 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x55 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x6B JUMPI DUP2 DUP3 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH1 0x60 SHR PUSH2 0x571 PUSH2 0x9D PUSH1 0x0 CODECOPY PUSH1 0x0 DUP2 DUP2 PUSH1 0xA5 ADD MSTORE DUP2 DUP2 PUSH2 0x242 ADD MSTORE PUSH2 0x332 ADD MSTORE PUSH2 0x571 PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x4C JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x44BA1FCA EQ PUSH2 0x51 JUMPI DUP1 PUSH4 0x5D1B5F12 EQ PUSH2 0x8B JUMPI DUP1 PUSH4 0x7B103999 EQ PUSH2 0xA0 JUMPI DUP1 PUSH4 0xB1D51210 EQ PUSH2 0xEC JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x78 PUSH32 0x7D86B200CD6CF95BD41BF9D1083923EFC2908DF0A6016584CDBFA288A8C00C48 DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x9E PUSH2 0x99 CALLDATASIZE PUSH1 0x4 PUSH2 0x49F JUMP JUMPDEST PUSH2 0xFF JUMP JUMPDEST STOP JUMPDEST PUSH2 0xC7 PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x82 JUMP JUMPDEST PUSH2 0x9E PUSH2 0xFA CALLDATASIZE PUSH1 0x4 PUSH2 0x49F JUMP JUMPDEST PUSH2 0x10B JUMP JUMPDEST PUSH2 0x108 DUP2 PUSH2 0x114 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x108 DUP2 PUSH2 0x188 JUMP JUMPDEST PUSH2 0x11D DUP2 PUSH2 0x1F8 JUMP JUMPDEST PUSH2 0x108 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x444550454E44454E43595F4E4F545F53544154454C4553530000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x191 DUP2 PUSH2 0x1F8 JUMP JUMPDEST ISZERO PUSH2 0x108 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x444550454E44454E43595F4E4F545F535441544546554C000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x17F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x8B4872B800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x0 SWAP2 DUP3 SWAP2 PUSH32 0x0 AND SWAP1 PUSH4 0x8B4872B8 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x284 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x298 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2BC SWAP2 SWAP1 PUSH2 0x4C2 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND PUSH2 0x2E1 JUMPI DUP4 PUSH2 0x2E3 JUMP JUMPDEST DUP2 JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x9235DCF800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 DUP4 AND PUSH1 0x4 DUP4 ADD MSTORE SWAP2 SWAP3 POP PUSH1 0x0 SWAP2 DUP3 SWAP2 DUP3 SWAP2 PUSH32 0x0 AND SWAP1 PUSH4 0x9235DCF8 SWAP1 PUSH1 0x24 ADD PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x374 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x388 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x3AC SWAP2 SWAP1 PUSH2 0x4DE JUMP JUMPDEST SWAP2 SWAP5 POP SWAP3 POP SWAP1 POP DUP1 PUSH2 0x41A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x444550454E44454E43595F4E4F545F5245474953544552454400000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x17F JUMP JUMPDEST DUP2 ISZERO PUSH2 0x482 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x444550454E44454E43595F444550524543415445440000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x17F JUMP JUMPDEST POP SWAP1 SWAP4 POP POP POP POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x48A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x4B0 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x4BB DUP2 PUSH2 0x519 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x4D3 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x4BB DUP2 PUSH2 0x519 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x4F2 JUMPI DUP2 DUP3 REVERT JUMPDEST PUSH2 0x4FB DUP5 PUSH2 0x48F JUMP JUMPDEST SWAP3 POP PUSH2 0x509 PUSH1 0x20 DUP6 ADD PUSH2 0x48F JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD MLOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND DUP2 EQ PUSH2 0x108 JUMPI PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 GT 0xC1 0xB0 DUP9 CALL 0xE5 0x5F OR 0xBE SWAP2 ADDMOD PUSH7 0x79F6936DD322D6 0xBD 0xEE 0xF8 MSIZE TIMESTAMP PUSH21 0x5AB5766CBF147864736F6C63430008030033000000 ",
              "sourceMap": "111:540:12:-:0;;;260:123;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1590:20:6;;-1:-1:-1;;;;;;1590:20:6;;;111:540:12;;14:310:15;;137:2;125:9;116:7;112:23;108:32;105:2;;;158:6;150;143:22;105:2;189:16;;-1:-1:-1;;;;;234:31:15;;224:42;;214:2;;285:6;277;270:22;214:2;313:5;95:229;-1:-1:-1;;;95:229:15:o;:::-;111:540:12;;;;;;;;;;;;"
            },
            "deployedBytecode": {
              "generatedSources": [
                {
                  "ast": {
                    "nodeType": "YulBlock",
                    "src": "0:3046:15",
                    "statements": [
                      {
                        "nodeType": "YulBlock",
                        "src": "6:3:15",
                        "statements": []
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "71:107:15",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "81:22:15",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "offset",
                                    "nodeType": "YulIdentifier",
                                    "src": "96:6:15"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nodeType": "YulIdentifier",
                                  "src": "90:5:15"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "90:13:15"
                              },
                              "variableNames": [
                                {
                                  "name": "value",
                                  "nodeType": "YulIdentifier",
                                  "src": "81:5:15"
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "156:16:15",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "165:1:15",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "168:1:15",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "158:6:15"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "158:12:15"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "158:12:15"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "125:5:15"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "arguments": [
                                              {
                                                "name": "value",
                                                "nodeType": "YulIdentifier",
                                                "src": "146:5:15"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "iszero",
                                              "nodeType": "YulIdentifier",
                                              "src": "139:6:15"
                                            },
                                            "nodeType": "YulFunctionCall",
                                            "src": "139:13:15"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "iszero",
                                          "nodeType": "YulIdentifier",
                                          "src": "132:6:15"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "132:21:15"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "eq",
                                      "nodeType": "YulIdentifier",
                                      "src": "122:2:15"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "122:32:15"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "115:6:15"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "115:40:15"
                              },
                              "nodeType": "YulIf",
                              "src": "112:2:15"
                            }
                          ]
                        },
                        "name": "abi_decode_bool_fromMemory",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "offset",
                            "nodeType": "YulTypedName",
                            "src": "50:6:15",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "61:5:15",
                            "type": ""
                          }
                        ],
                        "src": "14:164:15"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "253:187:15",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "299:26:15",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "name": "value0",
                                          "nodeType": "YulIdentifier",
                                          "src": "308:6:15"
                                        },
                                        {
                                          "name": "value0",
                                          "nodeType": "YulIdentifier",
                                          "src": "316:6:15"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "301:6:15"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "301:22:15"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "301:22:15"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "274:7:15"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "283:9:15"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "270:3:15"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "270:23:15"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "295:2:15",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "slt",
                                  "nodeType": "YulIdentifier",
                                  "src": "266:3:15"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "266:32:15"
                              },
                              "nodeType": "YulIf",
                              "src": "263:2:15"
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "334:36:15",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "360:9:15"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldataload",
                                  "nodeType": "YulIdentifier",
                                  "src": "347:12:15"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "347:23:15"
                              },
                              "variables": [
                                {
                                  "name": "value",
                                  "nodeType": "YulTypedName",
                                  "src": "338:5:15",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "404:5:15"
                                  }
                                ],
                                "functionName": {
                                  "name": "validator_revert_address",
                                  "nodeType": "YulIdentifier",
                                  "src": "379:24:15"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "379:31:15"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "379:31:15"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "419:15:15",
                              "value": {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "429:5:15"
                              },
                              "variableNames": [
                                {
                                  "name": "value0",
                                  "nodeType": "YulIdentifier",
                                  "src": "419:6:15"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_decode_tuple_t_address",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "219:9:15",
                            "type": ""
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulTypedName",
                            "src": "230:7:15",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "242:6:15",
                            "type": ""
                          }
                        ],
                        "src": "183:257:15"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "526:180:15",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "572:26:15",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "name": "value0",
                                          "nodeType": "YulIdentifier",
                                          "src": "581:6:15"
                                        },
                                        {
                                          "name": "value0",
                                          "nodeType": "YulIdentifier",
                                          "src": "589:6:15"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "574:6:15"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "574:22:15"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "574:22:15"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "547:7:15"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "556:9:15"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "543:3:15"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "543:23:15"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "568:2:15",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "slt",
                                  "nodeType": "YulIdentifier",
                                  "src": "539:3:15"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "539:32:15"
                              },
                              "nodeType": "YulIf",
                              "src": "536:2:15"
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "607:29:15",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "626:9:15"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nodeType": "YulIdentifier",
                                  "src": "620:5:15"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "620:16:15"
                              },
                              "variables": [
                                {
                                  "name": "value",
                                  "nodeType": "YulTypedName",
                                  "src": "611:5:15",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "670:5:15"
                                  }
                                ],
                                "functionName": {
                                  "name": "validator_revert_address",
                                  "nodeType": "YulIdentifier",
                                  "src": "645:24:15"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "645:31:15"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "645:31:15"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "685:15:15",
                              "value": {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "695:5:15"
                              },
                              "variableNames": [
                                {
                                  "name": "value0",
                                  "nodeType": "YulIdentifier",
                                  "src": "685:6:15"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_decode_tuple_t_address_fromMemory",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "492:9:15",
                            "type": ""
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulTypedName",
                            "src": "503:7:15",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "515:6:15",
                            "type": ""
                          }
                        ],
                        "src": "445:261:15"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "820:243:15",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "866:26:15",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "name": "value1",
                                          "nodeType": "YulIdentifier",
                                          "src": "875:6:15"
                                        },
                                        {
                                          "name": "value1",
                                          "nodeType": "YulIdentifier",
                                          "src": "883:6:15"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "868:6:15"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "868:22:15"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "868:22:15"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "841:7:15"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "850:9:15"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "837:3:15"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "837:23:15"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "862:2:15",
                                    "type": "",
                                    "value": "96"
                                  }
                                ],
                                "functionName": {
                                  "name": "slt",
                                  "nodeType": "YulIdentifier",
                                  "src": "833:3:15"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "833:32:15"
                              },
                              "nodeType": "YulIf",
                              "src": "830:2:15"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "901:47:15",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "938:9:15"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_decode_bool_fromMemory",
                                  "nodeType": "YulIdentifier",
                                  "src": "911:26:15"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "911:37:15"
                              },
                              "variableNames": [
                                {
                                  "name": "value0",
                                  "nodeType": "YulIdentifier",
                                  "src": "901:6:15"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "957:56:15",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "998:9:15"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "1009:2:15",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "994:3:15"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "994:18:15"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_decode_bool_fromMemory",
                                  "nodeType": "YulIdentifier",
                                  "src": "967:26:15"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "967:46:15"
                              },
                              "variableNames": [
                                {
                                  "name": "value1",
                                  "nodeType": "YulIdentifier",
                                  "src": "957:6:15"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "1022:35:15",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "1042:9:15"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "1053:2:15",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "1038:3:15"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1038:18:15"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nodeType": "YulIdentifier",
                                  "src": "1032:5:15"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1032:25:15"
                              },
                              "variableNames": [
                                {
                                  "name": "value2",
                                  "nodeType": "YulIdentifier",
                                  "src": "1022:6:15"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_decode_tuple_t_boolt_boolt_bytes32_fromMemory",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "770:9:15",
                            "type": ""
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulTypedName",
                            "src": "781:7:15",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "793:6:15",
                            "type": ""
                          },
                          {
                            "name": "value1",
                            "nodeType": "YulTypedName",
                            "src": "801:6:15",
                            "type": ""
                          },
                          {
                            "name": "value2",
                            "nodeType": "YulTypedName",
                            "src": "809:6:15",
                            "type": ""
                          }
                        ],
                        "src": "711:352:15"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "1169:125:15",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "1179:26:15",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "1191:9:15"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1202:2:15",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "1187:3:15"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1187:18:15"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "1179:4:15"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "1221:9:15"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "value0",
                                        "nodeType": "YulIdentifier",
                                        "src": "1236:6:15"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "1244:42:15",
                                        "type": "",
                                        "value": "0xffffffffffffffffffffffffffffffffffffffff"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "and",
                                      "nodeType": "YulIdentifier",
                                      "src": "1232:3:15"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1232:55:15"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "1214:6:15"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1214:74:15"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "1214:74:15"
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "1138:9:15",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "1149:6:15",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "1160:4:15",
                            "type": ""
                          }
                        ],
                        "src": "1068:226:15"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "1400:76:15",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "1410:26:15",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "1422:9:15"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1433:2:15",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "1418:3:15"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1418:18:15"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "1410:4:15"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "1452:9:15"
                                  },
                                  {
                                    "name": "value0",
                                    "nodeType": "YulIdentifier",
                                    "src": "1463:6:15"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "1445:6:15"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1445:25:15"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "1445:25:15"
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "1369:9:15",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "1380:6:15",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "1391:4:15",
                            "type": ""
                          }
                        ],
                        "src": "1299:177:15"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "1655:174:15",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "1672:9:15"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1683:2:15",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "1665:6:15"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1665:21:15"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "1665:21:15"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "1706:9:15"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "1717:2:15",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "1702:3:15"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1702:18:15"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1722:2:15",
                                    "type": "",
                                    "value": "24"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "1695:6:15"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1695:30:15"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "1695:30:15"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "1745:9:15"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "1756:2:15",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "1741:3:15"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1741:18:15"
                                  },
                                  {
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "1761:26:15",
                                    "type": "",
                                    "value": "DEPENDENCY_NOT_STATELESS"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "1734:6:15"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1734:54:15"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "1734:54:15"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "1797:26:15",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "1809:9:15"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1820:2:15",
                                    "type": "",
                                    "value": "96"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "1805:3:15"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1805:18:15"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "1797:4:15"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_stringliteral_33e7caeaeb13f3dd7003d49fd2bf0210a3c8ba3a01cca653fef5909dfda34f5b__to_t_string_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "1632:9:15",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "1646:4:15",
                            "type": ""
                          }
                        ],
                        "src": "1481:348:15"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "2008:175:15",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "2025:9:15"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2036:2:15",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "2018:6:15"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2018:21:15"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "2018:21:15"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "2059:9:15"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "2070:2:15",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "2055:3:15"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "2055:18:15"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2075:2:15",
                                    "type": "",
                                    "value": "25"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "2048:6:15"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2048:30:15"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "2048:30:15"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "2098:9:15"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "2109:2:15",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "2094:3:15"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "2094:18:15"
                                  },
                                  {
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "2114:27:15",
                                    "type": "",
                                    "value": "DEPENDENCY_NOT_REGISTERED"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "2087:6:15"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2087:55:15"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "2087:55:15"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "2151:26:15",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "2163:9:15"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2174:2:15",
                                    "type": "",
                                    "value": "96"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "2159:3:15"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2159:18:15"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "2151:4:15"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_stringliteral_778fd9d4b718f8239ef06eb57325f48f8e9ee99421da069e57617a6f513bfb7b__to_t_string_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "1985:9:15",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "1999:4:15",
                            "type": ""
                          }
                        ],
                        "src": "1834:349:15"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "2362:171:15",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "2379:9:15"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2390:2:15",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "2372:6:15"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2372:21:15"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "2372:21:15"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "2413:9:15"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "2424:2:15",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "2409:3:15"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "2409:18:15"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2429:2:15",
                                    "type": "",
                                    "value": "21"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "2402:6:15"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2402:30:15"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "2402:30:15"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "2452:9:15"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "2463:2:15",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "2448:3:15"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "2448:18:15"
                                  },
                                  {
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "2468:23:15",
                                    "type": "",
                                    "value": "DEPENDENCY_DEPRECATED"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "2441:6:15"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2441:51:15"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "2441:51:15"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "2501:26:15",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "2513:9:15"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2524:2:15",
                                    "type": "",
                                    "value": "96"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "2509:3:15"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2509:18:15"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "2501:4:15"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_stringliteral_df8a3f58698e280c36562d600ce03d49987f51611989025dd75e965cd317041f__to_t_string_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "2339:9:15",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "2353:4:15",
                            "type": ""
                          }
                        ],
                        "src": "2188:345:15"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "2712:173:15",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "2729:9:15"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2740:2:15",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "2722:6:15"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2722:21:15"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "2722:21:15"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "2763:9:15"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "2774:2:15",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "2759:3:15"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "2759:18:15"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2779:2:15",
                                    "type": "",
                                    "value": "23"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "2752:6:15"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2752:30:15"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "2752:30:15"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "2802:9:15"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "2813:2:15",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "2798:3:15"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "2798:18:15"
                                  },
                                  {
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "2818:25:15",
                                    "type": "",
                                    "value": "DEPENDENCY_NOT_STATEFUL"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "2791:6:15"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2791:53:15"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "2791:53:15"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "2853:26:15",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "2865:9:15"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2876:2:15",
                                    "type": "",
                                    "value": "96"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "2861:3:15"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2861:18:15"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "2853:4:15"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_stringliteral_e8c9c5707c7558388f15b095cd2d761beecde20a447b3260c35b1e715fcae11e__to_t_string_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "2689:9:15",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "2703:4:15",
                            "type": ""
                          }
                        ],
                        "src": "2538:347:15"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "2935:109:15",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "3022:16:15",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "3031:1:15",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "3034:1:15",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "3024:6:15"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "3024:12:15"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "3024:12:15"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "2958:5:15"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "name": "value",
                                            "nodeType": "YulIdentifier",
                                            "src": "2969:5:15"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "2976:42:15",
                                            "type": "",
                                            "value": "0xffffffffffffffffffffffffffffffffffffffff"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "and",
                                          "nodeType": "YulIdentifier",
                                          "src": "2965:3:15"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "2965:54:15"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "eq",
                                      "nodeType": "YulIdentifier",
                                      "src": "2955:2:15"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "2955:65:15"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "2948:6:15"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2948:73:15"
                              },
                              "nodeType": "YulIf",
                              "src": "2945:2:15"
                            }
                          ]
                        },
                        "name": "validator_revert_address",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "2924:5:15",
                            "type": ""
                          }
                        ],
                        "src": "2890:154:15"
                      }
                    ]
                  },
                  "contents": "{\n    { }\n    function abi_decode_bool_fromMemory(offset) -> value\n    {\n        value := mload(offset)\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n    }\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        let value := mload(headStart)\n        validator_revert_address(value)\n        value0 := value\n    }\n    function abi_decode_tuple_t_boolt_boolt_bytes32_fromMemory(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(value1, value1) }\n        value0 := abi_decode_bool_fromMemory(headStart)\n        value1 := abi_decode_bool_fromMemory(add(headStart, 32))\n        value2 := mload(add(headStart, 64))\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n    }\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_stringliteral_33e7caeaeb13f3dd7003d49fd2bf0210a3c8ba3a01cca653fef5909dfda34f5b__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 24)\n        mstore(add(headStart, 64), \"DEPENDENCY_NOT_STATELESS\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_778fd9d4b718f8239ef06eb57325f48f8e9ee99421da069e57617a6f513bfb7b__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 25)\n        mstore(add(headStart, 64), \"DEPENDENCY_NOT_REGISTERED\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_df8a3f58698e280c36562d600ce03d49987f51611989025dd75e965cd317041f__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 21)\n        mstore(add(headStart, 64), \"DEPENDENCY_DEPRECATED\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_e8c9c5707c7558388f15b095cd2d761beecde20a447b3260c35b1e715fcae11e__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 23)\n        mstore(add(headStart, 64), \"DEPENDENCY_NOT_STATEFUL\")\n        tail := add(headStart, 96)\n    }\n    function validator_revert_address(value)\n    {\n        if iszero(eq(value, and(value, 0xffffffffffffffffffffffffffffffffffffffff))) { revert(0, 0) }\n    }\n}",
                  "id": 15,
                  "language": "Yul",
                  "name": "#utility.yul"
                }
              ],
              "immutableReferences": {
                "766": [
                  {
                    "length": 32,
                    "start": 165
                  },
                  {
                    "length": 32,
                    "start": 578
                  },
                  {
                    "length": 32,
                    "start": 818
                  }
                ]
              },
              "linkReferences": {},
              "object": "608060405234801561001057600080fd5b506004361061004c5760003560e01c806344ba1fca146100515780635d1b5f121461008b5780637b103999146100a0578063b1d51210146100ec575b600080fd5b6100787f7d86b200cd6cf95bd41bf9d1083923efc2908df0a6016584cdbfa288a8c00c4881565b6040519081526020015b60405180910390f35b61009e61009936600461049f565b6100ff565b005b6100c77f000000000000000000000000000000000000000000000000000000000000000081565b60405173ffffffffffffffffffffffffffffffffffffffff9091168152602001610082565b61009e6100fa36600461049f565b61010b565b61010881610114565b50565b61010881610188565b61011d816101f8565b610108576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601860248201527f444550454e44454e43595f4e4f545f53544154454c455353000000000000000060448201526064015b60405180910390fd5b610191816101f8565b15610108576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601760248201527f444550454e44454e43595f4e4f545f535441544546554c000000000000000000604482015260640161017f565b6040517f8b4872b800000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff828116600483015260009182917f00000000000000000000000000000000000000000000000000000000000000001690638b4872b89060240160206040518083038186803b15801561028457600080fd5b505afa158015610298573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102bc91906104c2565b9050600073ffffffffffffffffffffffffffffffffffffffff82166102e157836102e3565b815b6040517f9235dcf800000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff8083166004830152919250600091829182917f00000000000000000000000000000000000000000000000000000000000000001690639235dcf89060240160606040518083038186803b15801561037457600080fd5b505afa158015610388573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103ac91906104de565b919450925090508061041a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601960248201527f444550454e44454e43595f4e4f545f5245474953544552454400000000000000604482015260640161017f565b8115610482576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601560248201527f444550454e44454e43595f444550524543415445440000000000000000000000604482015260640161017f565b509093505050505b919050565b8051801515811461048a57600080fd5b6000602082840312156104b0578081fd5b81356104bb81610519565b9392505050565b6000602082840312156104d3578081fd5b81516104bb81610519565b6000806000606084860312156104f2578182fd5b6104fb8461048f565b92506105096020850161048f565b9150604084015190509250925092565b73ffffffffffffffffffffffffffffffffffffffff8116811461010857600080fdfea264697066735822122011c1b088f1e55f17be91086679f6936dd322d6bdeef85942745ab5766cbf147864736f6c63430008030033",
              "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x4C JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x44BA1FCA EQ PUSH2 0x51 JUMPI DUP1 PUSH4 0x5D1B5F12 EQ PUSH2 0x8B JUMPI DUP1 PUSH4 0x7B103999 EQ PUSH2 0xA0 JUMPI DUP1 PUSH4 0xB1D51210 EQ PUSH2 0xEC JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x78 PUSH32 0x7D86B200CD6CF95BD41BF9D1083923EFC2908DF0A6016584CDBFA288A8C00C48 DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x9E PUSH2 0x99 CALLDATASIZE PUSH1 0x4 PUSH2 0x49F JUMP JUMPDEST PUSH2 0xFF JUMP JUMPDEST STOP JUMPDEST PUSH2 0xC7 PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x82 JUMP JUMPDEST PUSH2 0x9E PUSH2 0xFA CALLDATASIZE PUSH1 0x4 PUSH2 0x49F JUMP JUMPDEST PUSH2 0x10B JUMP JUMPDEST PUSH2 0x108 DUP2 PUSH2 0x114 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x108 DUP2 PUSH2 0x188 JUMP JUMPDEST PUSH2 0x11D DUP2 PUSH2 0x1F8 JUMP JUMPDEST PUSH2 0x108 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x444550454E44454E43595F4E4F545F53544154454C4553530000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x191 DUP2 PUSH2 0x1F8 JUMP JUMPDEST ISZERO PUSH2 0x108 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x444550454E44454E43595F4E4F545F535441544546554C000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x17F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x8B4872B800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x0 SWAP2 DUP3 SWAP2 PUSH32 0x0 AND SWAP1 PUSH4 0x8B4872B8 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x284 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x298 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2BC SWAP2 SWAP1 PUSH2 0x4C2 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND PUSH2 0x2E1 JUMPI DUP4 PUSH2 0x2E3 JUMP JUMPDEST DUP2 JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x9235DCF800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 DUP4 AND PUSH1 0x4 DUP4 ADD MSTORE SWAP2 SWAP3 POP PUSH1 0x0 SWAP2 DUP3 SWAP2 DUP3 SWAP2 PUSH32 0x0 AND SWAP1 PUSH4 0x9235DCF8 SWAP1 PUSH1 0x24 ADD PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x374 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x388 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x3AC SWAP2 SWAP1 PUSH2 0x4DE JUMP JUMPDEST SWAP2 SWAP5 POP SWAP3 POP SWAP1 POP DUP1 PUSH2 0x41A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x444550454E44454E43595F4E4F545F5245474953544552454400000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x17F JUMP JUMPDEST DUP2 ISZERO PUSH2 0x482 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x444550454E44454E43595F444550524543415445440000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x17F JUMP JUMPDEST POP SWAP1 SWAP4 POP POP POP POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x48A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x4B0 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x4BB DUP2 PUSH2 0x519 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x4D3 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x4BB DUP2 PUSH2 0x519 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x4F2 JUMPI DUP2 DUP3 REVERT JUMPDEST PUSH2 0x4FB DUP5 PUSH2 0x48F JUMP JUMPDEST SWAP3 POP PUSH2 0x509 PUSH1 0x20 DUP6 ADD PUSH2 0x48F JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD MLOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND DUP2 EQ PUSH2 0x108 JUMPI PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 GT 0xC1 0xB0 DUP9 CALL 0xE5 0x5F OR 0xBE SWAP2 ADDMOD PUSH7 0x79F6936DD322D6 0xBD 0xEE 0xF8 MSIZE TIMESTAMP PUSH21 0x5AB5766CBF147864736F6C63430008030033000000 ",
              "sourceMap": "111:540:12:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;171:82;;216:37;171:82;;;;;1445:25:15;;;1433:2;1418:18;171:82:12;;;;;;;;521:128;;;;;;:::i;:::-;;:::i;:::-;;1340:42:6;;;;;;;;1244::15;1232:55;;;1214:74;;1202:2;1187:18;1340:42:6;1169:125:15;389:126:12;;;;;;:::i;:::-;;:::i;521:128::-;602:40;631:10;602:28;:40::i;:::-;521:128;:::o;389:126::-;469:39;497:10;469:27;:39::i;1878:157:6:-;1968:31;1988:10;1968:19;:31::i;:::-;1960:68;;;;;;;1683:2:15;1960:68:6;;;1665:21:15;1722:2;1702:18;;;1695:30;1761:26;1741:18;;;1734:54;1805:18;;1960:68:6;;;;;;;;2300:156;2390:31;2410:10;2390:19;:31::i;:::-;2389:32;2381:68;;;;;;;2740:2:15;2381:68:6;;;2722:21:15;2779:2;2759:18;;;2752:30;2818:25;2798:18;;;2791:53;2861:18;;2381:68:6;2712:173:15;2705:736:6;3001:48;;;;;:36;1232:55:15;;;3001:48:6;;;1214:74:15;2776:4:6;;;;3011:8;3001:36;;;;1187:18:15;;3001:48:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2966:83;-1:-1:-1;3059:22:6;3084:38;;;:78;;3152:10;3084:78;;;3125:24;3084:78;3228:54;;;;;:38;1232:55:15;;;3228:54:6;;;1214:74:15;3059:103:6;;-1:-1:-1;3174:14:6;;;;;;3238:8;3228:38;;;;1187:18:15;;3228:54:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3173:109;;-1:-1:-1;3173:109:6;-1:-1:-1;3173:109:6;-1:-1:-1;3300:23:6;3292:61;;;;;;;2036:2:15;3292:61:6;;;2018:21:15;2075:2;2055:18;;;2048:30;2114:27;2094:18;;;2087:55;2159:18;;3292:61:6;2008:175:15;3292:61:6;3372:10;3371:11;3363:45;;;;;;;2390:2:15;3363:45:6;;;2372:21:15;2429:2;2409:18;;;2402:30;2468:23;2448:18;;;2441:51;2509:18;;3363:45:6;2362:171:15;3363:45:6;-1:-1:-1;3425:9:6;;-1:-1:-1;;;;2705:736:6;;;;:::o;14:164:15:-;90:13;;139;;132:21;122:32;;112:2;;168:1;165;158:12;183:257;;295:2;283:9;274:7;270:23;266:32;263:2;;;316:6;308;301:22;263:2;360:9;347:23;379:31;404:5;379:31;:::i;:::-;429:5;253:187;-1:-1:-1;;;253:187:15:o;445:261::-;;568:2;556:9;547:7;543:23;539:32;536:2;;;589:6;581;574:22;536:2;626:9;620:16;645:31;670:5;645:31;:::i;711:352::-;;;;862:2;850:9;841:7;837:23;833:32;830:2;;;883:6;875;868:22;830:2;911:37;938:9;911:37;:::i;:::-;901:47;;967:46;1009:2;998:9;994:18;967:46;:::i;:::-;957:56;;1053:2;1042:9;1038:18;1032:25;1022:35;;820:243;;;;;:::o;2890:154::-;2976:42;2969:5;2965:54;2958:5;2955:65;2945:2;;3034:1;3031;3024:12"
            },
            "methodIdentifiers": {
              "NAMESPACE()": "44ba1fca",
              "registry()": "7b103999",
              "validateStatefulDependency(address)": "b1d51210",
              "validateStatelessDependency(address)": "5d1b5f12"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.3+commit.8d00100c\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"registry\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"NAMESPACE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"registry\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"dependency\",\"type\":\"address\"}],\"name\":\"validateStatefulDependency\",\"outputs\":[],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"dependency\",\"type\":\"address\"}],\"name\":\"validateStatelessDependency\",\"outputs\":[],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"stateVariables\":{\"NAMESPACE\":{\"details\":\"Tells the namespace under which the implementation is registered in the Mimic Registry\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/test/BaseImplementationMock.sol\":\"BaseImplementationMock\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":10000},\"remappings\":[]},\"sources\":{\"@mimic-fi/v2-helpers/contracts/auth/IAuthorizer.sol\":{\"keccak256\":\"0x7e5d1c440a02d16c3d62d8ca982749b4cf044ba14e0a40c4f2fe23257a5304d2\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://bdad507d0bdc80eb1ca9fc01d4ef4ff5e0258b631305033b5945aad85fa5068a\",\"dweb:/ipfs/QmaRdsSorrzkxYpeTNMrZvH5RbbM9JYPQ9HyNAcQGmXNAe\"]},\"@openzeppelin/contracts/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x2a21b14ff90012878752f230d3ffd5c3405e5938d06c97a7d89c0a64561d0d66\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3313a8f9bb1f9476857c9050067b31982bf2140b83d84f3bc0cec1f62bbe947f\",\"dweb:/ipfs/Qma17Pk8NRe7aB4UD3jjVxk7nSFaov3eQyv86hcyqkwJRV\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xd6153ce99bcdcce22b124f755e72553295be6abcd63804cfdffceb188b8bef10\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://35c47bece3c03caaa07fab37dd2bb3413bfbca20db7bd9895024390e0a469487\",\"dweb:/ipfs/QmPGWT2x3QHcKxqe6gRmAkdakhbaRgx3DLzcakHz5M4eXG\"]},\"contracts/implementations/BaseImplementation.sol\":{\"keccak256\":\"0x2cb9bedf44e1c7dc11d9b4024df8910152b7d4902336aae6b7629d3f78db12ee\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://171c638ab1f4d887923c08a819d99b9acf635b9702099220e7881dda789597d7\",\"dweb:/ipfs/QmQ1aw3hyeScFKjazTYZDYBS2Smqib5fXRgfwiibikac8P\"]},\"contracts/implementations/IImplementation.sol\":{\"keccak256\":\"0x621ffadea8fdc214f95fa95ff480ebc7f5f51d9678544883def90b59a3851f78\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://9933e44069dee9bf8410f405d734b1320e2b26f11108e723576f9df6ff410b59\",\"dweb:/ipfs/QmfEmrt9bRhjN86BJRST7ZSjkDjegJgd9JtLheizUNzDwN\"]},\"contracts/registry/IRegistry.sol\":{\"keccak256\":\"0xa7d49ecd7b34ed1fdb3cd114432e037d88cf097ceadec01fb5e3d7895d617a65\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://352176031f1aa60f58daf223f0feaeb4fc892107d7a94deec4f25c1cfe7d934b\",\"dweb:/ipfs/QmVnujTPV3v76xU4QpMysSriUEfzPkLci7zaxfLnY27zRw\"]},\"contracts/test/BaseImplementationMock.sol\":{\"keccak256\":\"0x2f6c98f5c7925d837491ab2482c44fad5d82b2155864b67e6767bc0205f6da6a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://05ca811fceb6704ff023bf7b4b4660c9678d31a4d81c7e0c929df70cb42c3b59\",\"dweb:/ipfs/QmdzRwiDK4jctZoPxMtR56pyxdPCWU5fwoxvvKU4JdeghL\"]}},\"version\":1}"
        }
      },
      "contracts/test/InitializableAuthorizedImplementationMock.sol": {
        "InitializableAuthorizedImplementationMock": {
          "abi": [
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "registry",
                  "type": "address"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "constructor"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "who",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "bytes4",
                  "name": "what",
                  "type": "bytes4"
                }
              ],
              "name": "Authorized",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": false,
                  "internalType": "uint8",
                  "name": "version",
                  "type": "uint8"
                }
              ],
              "name": "Initialized",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "who",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "bytes4",
                  "name": "what",
                  "type": "bytes4"
                }
              ],
              "name": "Unauthorized",
              "type": "event"
            },
            {
              "inputs": [],
              "name": "ANY_ADDRESS",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "NAMESPACE",
              "outputs": [
                {
                  "internalType": "bytes32",
                  "name": "",
                  "type": "bytes32"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "who",
                  "type": "address"
                },
                {
                  "internalType": "bytes4",
                  "name": "what",
                  "type": "bytes4"
                }
              ],
              "name": "authorize",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "admin",
                  "type": "address"
                }
              ],
              "name": "initialize",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "who",
                  "type": "address"
                },
                {
                  "internalType": "bytes4",
                  "name": "what",
                  "type": "bytes4"
                }
              ],
              "name": "isAuthorized",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "registry",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "who",
                  "type": "address"
                },
                {
                  "internalType": "bytes4",
                  "name": "what",
                  "type": "bytes4"
                }
              ],
              "name": "unauthorize",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "generatedSources": [
                {
                  "ast": {
                    "nodeType": "YulBlock",
                    "src": "0:923:15",
                    "statements": [
                      {
                        "nodeType": "YulBlock",
                        "src": "6:3:15",
                        "statements": []
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "95:229:15",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "141:26:15",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "name": "value0",
                                          "nodeType": "YulIdentifier",
                                          "src": "150:6:15"
                                        },
                                        {
                                          "name": "value0",
                                          "nodeType": "YulIdentifier",
                                          "src": "158:6:15"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "143:6:15"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "143:22:15"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "143:22:15"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "116:7:15"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "125:9:15"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "112:3:15"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "112:23:15"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "137:2:15",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "slt",
                                  "nodeType": "YulIdentifier",
                                  "src": "108:3:15"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "108:32:15"
                              },
                              "nodeType": "YulIf",
                              "src": "105:2:15"
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "176:29:15",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "195:9:15"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nodeType": "YulIdentifier",
                                  "src": "189:5:15"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "189:16:15"
                              },
                              "variables": [
                                {
                                  "name": "value",
                                  "nodeType": "YulTypedName",
                                  "src": "180:5:15",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "268:26:15",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "name": "value0",
                                          "nodeType": "YulIdentifier",
                                          "src": "277:6:15"
                                        },
                                        {
                                          "name": "value0",
                                          "nodeType": "YulIdentifier",
                                          "src": "285:6:15"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "270:6:15"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "270:22:15"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "270:22:15"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "227:5:15"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "name": "value",
                                            "nodeType": "YulIdentifier",
                                            "src": "238:5:15"
                                          },
                                          {
                                            "arguments": [
                                              {
                                                "arguments": [
                                                  {
                                                    "kind": "number",
                                                    "nodeType": "YulLiteral",
                                                    "src": "253:3:15",
                                                    "type": "",
                                                    "value": "160"
                                                  },
                                                  {
                                                    "kind": "number",
                                                    "nodeType": "YulLiteral",
                                                    "src": "258:1:15",
                                                    "type": "",
                                                    "value": "1"
                                                  }
                                                ],
                                                "functionName": {
                                                  "name": "shl",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "249:3:15"
                                                },
                                                "nodeType": "YulFunctionCall",
                                                "src": "249:11:15"
                                              },
                                              {
                                                "kind": "number",
                                                "nodeType": "YulLiteral",
                                                "src": "262:1:15",
                                                "type": "",
                                                "value": "1"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "sub",
                                              "nodeType": "YulIdentifier",
                                              "src": "245:3:15"
                                            },
                                            "nodeType": "YulFunctionCall",
                                            "src": "245:19:15"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "and",
                                          "nodeType": "YulIdentifier",
                                          "src": "234:3:15"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "234:31:15"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "eq",
                                      "nodeType": "YulIdentifier",
                                      "src": "224:2:15"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "224:42:15"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "217:6:15"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "217:50:15"
                              },
                              "nodeType": "YulIf",
                              "src": "214:2:15"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "303:15:15",
                              "value": {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "313:5:15"
                              },
                              "variableNames": [
                                {
                                  "name": "value0",
                                  "nodeType": "YulIdentifier",
                                  "src": "303:6:15"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_decode_tuple_t_address_fromMemory",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "61:9:15",
                            "type": ""
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulTypedName",
                            "src": "72:7:15",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "84:6:15",
                            "type": ""
                          }
                        ],
                        "src": "14:310:15"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "503:229:15",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "520:9:15"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "531:2:15",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "513:6:15"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "513:21:15"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "513:21:15"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "554:9:15"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "565:2:15",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "550:3:15"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "550:18:15"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "570:2:15",
                                    "type": "",
                                    "value": "39"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "543:6:15"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "543:30:15"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "543:30:15"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "593:9:15"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "604:2:15",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "589:3:15"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "589:18:15"
                                  },
                                  {
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "609:34:15",
                                    "type": "",
                                    "value": "Initializable: contract is initi"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "582:6:15"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "582:62:15"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "582:62:15"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "664:9:15"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "675:2:15",
                                        "type": "",
                                        "value": "96"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "660:3:15"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "660:18:15"
                                  },
                                  {
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "680:9:15",
                                    "type": "",
                                    "value": "alizing"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "653:6:15"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "653:37:15"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "653:37:15"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "699:27:15",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "711:9:15"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "722:3:15",
                                    "type": "",
                                    "value": "128"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "707:3:15"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "707:19:15"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "699:4:15"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_stringliteral_a53f5879e7518078ff19b2e3d6b41e757a87364ec6872787feb45bfc41131d1a__to_t_string_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "480:9:15",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "494:4:15",
                            "type": ""
                          }
                        ],
                        "src": "329:403:15"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "834:87:15",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "844:26:15",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "856:9:15"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "867:2:15",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "852:3:15"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "852:18:15"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "844:4:15"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "886:9:15"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "value0",
                                        "nodeType": "YulIdentifier",
                                        "src": "901:6:15"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "909:4:15",
                                        "type": "",
                                        "value": "0xff"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "and",
                                      "nodeType": "YulIdentifier",
                                      "src": "897:3:15"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "897:17:15"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "879:6:15"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "879:36:15"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "879:36:15"
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "803:9:15",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "814:6:15",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "825:4:15",
                            "type": ""
                          }
                        ],
                        "src": "737:184:15"
                      }
                    ]
                  },
                  "contents": "{\n    { }\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        let value := mload(headStart)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(value0, value0) }\n        value0 := value\n    }\n    function abi_encode_tuple_t_stringliteral_a53f5879e7518078ff19b2e3d6b41e757a87364ec6872787feb45bfc41131d1a__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 39)\n        mstore(add(headStart, 64), \"Initializable: contract is initi\")\n        mstore(add(headStart, 96), \"alizing\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xff))\n    }\n}",
                  "id": 15,
                  "language": "Yul",
                  "name": "#utility.yul"
                }
              ],
              "linkReferences": {},
              "object": "60a060405234801561001057600080fd5b50604051610ddb380380610ddb83398101604081905261002f91610113565b6001600160601b0319606082901b16608052808061004b610053565b505050610141565b600054610100900460ff16156100bf5760405162461bcd60e51b815260206004820152602760248201527f496e697469616c697a61626c653a20636f6e747261637420697320696e697469604482015266616c697a696e6760c81b606482015260840160405180910390fd5b60005460ff9081161015610111576000805460ff191660ff9081179091556040519081527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b565b600060208284031215610124578081fd5b81516001600160a01b038116811461013a578182fd5b9392505050565b60805160601c610c6e61016d60003960008181610116015281816107f5015261094d0152610c6e6000f3fe608060405234801561001057600080fd5b506004361061007d5760003560e01c80637b1039991161005b5780637b10399914610111578063933f0f3c14610138578063c4d66de81461014b578063d9972b961461015e5761007d565b80633f81a1921461008257806344ba1fca146100c75780636646a436146100fc575b600080fd5b61009d73ffffffffffffffffffffffffffffffffffffffff81565b60405173ffffffffffffffffffffffffffffffffffffffff90911681526020015b60405180910390f35b6100ee7ff6349752494beba38de01582bac9aa61dacf82389107f0eb64cc5ab90b2bb4c681565b6040519081526020016100be565b61010f61010a366004610b67565b610181565b005b61009d7f000000000000000000000000000000000000000000000000000000000000000081565b61010f610146366004610b67565b6101bd565b61010f610159366004610b2f565b6101f5565b61017161016c366004610b67565b610394565b60405190151581526020016100be565b6101af336000357fffffffff000000000000000000000000000000000000000000000000000000001661044c565b6101b982826104bc565b5050565b6101eb336000357fffffffff000000000000000000000000000000000000000000000000000000001661044c565b6101b9828261056b565b600054610100900460ff16158080156102155750600054600160ff909116105b80610236575061022430610617565b158015610236575060005460ff166001145b6102c7576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201527f647920696e697469616c697a656400000000000000000000000000000000000060648201526084015b60405180910390fd5b600080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00166001179055801561032557600080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff166101001790555b61032e82610637565b80156101b957600080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15050565b7fffffffff00000000000000000000000000000000000000000000000000000000811660009081527f73df27e0fa8bbb6c6a588f907379871e0f69a2bae64ea632056f6dabc259f362602052604081205460ff1680610445575073ffffffffffffffffffffffffffffffffffffffff831660009081526001602090815260408083207fffffffff000000000000000000000000000000000000000000000000000000008616845290915290205460ff165b9392505050565b6104568282610394565b6101b9576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601760248201527f415554485f53454e4445525f4e4f545f414c4c4f57454400000000000000000060448201526064016102be565b73ffffffffffffffffffffffffffffffffffffffff821660008181526001602090815260408083207fffffffff0000000000000000000000000000000000000000000000000000000086168085529083529281902080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00169055519182527fa2e97b9eea8d1168700e334304edd057dff89c0384ca6f920c73cc3e48c8e52391015b60405180910390a25050565b73ffffffffffffffffffffffffffffffffffffffff821660008181526001602081815260408084207fffffffff0000000000000000000000000000000000000000000000000000000087168086529083529381902080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff001690931790925590519182527f7f06c1c34ad47198873da9dcde2e40904035d41b23da3a9132df674a75022df7910161055f565b73ffffffffffffffffffffffffffffffffffffffff81163b15155b919050565b600054610100900460ff166106ce576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602b60248201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960448201527f6e697469616c697a696e6700000000000000000000000000000000000000000060648201526084016102be565b6106d661072d565b610700817f933f0f3c0000000000000000000000000000000000000000000000000000000061056b565b61072a817f6646a4360000000000000000000000000000000000000000000000000000000061056b565b50565b600054610100900460ff166107c4576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602b60248201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960448201527f6e697469616c697a696e6700000000000000000000000000000000000000000060648201526084016102be565b6040517f8b4872b80000000000000000000000000000000000000000000000000000000081523060048201526000907f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1690638b4872b89060240160206040518083038186803b15801561084c57600080fd5b505afa158015610860573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108849190610b4b565b905073ffffffffffffffffffffffffffffffffffffffff8116610903576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601d60248201527f494d504c454d454e544154494f4e5f4e4f545f5245474953544552454400000060448201526064016102be565b6040517f9235dcf800000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff828116600483015260009182917f00000000000000000000000000000000000000000000000000000000000000001690639235dcf89060240160606040518083038186803b15801561098f57600080fd5b505afa1580156109a3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109c79190610bc3565b92509250508115610a34576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601960248201527f494d504c454d454e544154494f4e5f444550524543415445440000000000000060448201526064016102be565b803073ffffffffffffffffffffffffffffffffffffffff166344ba1fca6040518163ffffffff1660e01b815260040160206040518083038186803b158015610a7b57600080fd5b505afa158015610a8f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ab39190610bfe565b14610b1a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f494e56414c49445f494d504c454d454e544154494f4e5f4e414d45535041434560448201526064016102be565b505050565b8051801515811461063257600080fd5b600060208284031215610b40578081fd5b813561044581610c16565b600060208284031215610b5c578081fd5b815161044581610c16565b60008060408385031215610b79578081fd5b8235610b8481610c16565b915060208301357fffffffff0000000000000000000000000000000000000000000000000000000081168114610bb8578182fd5b809150509250929050565b600080600060608486031215610bd7578081fd5b610be084610b1f565b9250610bee60208501610b1f565b9150604084015190509250925092565b600060208284031215610c0f578081fd5b5051919050565b73ffffffffffffffffffffffffffffffffffffffff8116811461072a57600080fdfea2646970667358221220413e1edb10f25bcfc84680e061c6116e545443da9614b31ed7a15e7abe8d325f64736f6c63430008030033",
              "opcodes": "PUSH1 0xA0 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0xDDB CODESIZE SUB DUP1 PUSH2 0xDDB DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH2 0x2F SWAP2 PUSH2 0x113 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB NOT PUSH1 0x60 DUP3 SWAP1 SHL AND PUSH1 0x80 MSTORE DUP1 DUP1 PUSH2 0x4B PUSH2 0x53 JUMP JUMPDEST POP POP POP PUSH2 0x141 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0xBF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x27 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E697469616C697A61626C653A20636F6E747261637420697320696E697469 PUSH1 0x44 DUP3 ADD MSTORE PUSH7 0x616C697A696E67 PUSH1 0xC8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 SLOAD PUSH1 0xFF SWAP1 DUP2 AND LT ISZERO PUSH2 0x111 JUMPI PUSH1 0x0 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0xFF SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH32 0x7F26B83FF96E1F2B6A682F133852F6798A09C465DA95921460CEFB3847402498 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x124 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x13A JUMPI DUP2 DUP3 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH1 0x60 SHR PUSH2 0xC6E PUSH2 0x16D PUSH1 0x0 CODECOPY PUSH1 0x0 DUP2 DUP2 PUSH2 0x116 ADD MSTORE DUP2 DUP2 PUSH2 0x7F5 ADD MSTORE PUSH2 0x94D ADD MSTORE PUSH2 0xC6E PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x7D JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x7B103999 GT PUSH2 0x5B JUMPI DUP1 PUSH4 0x7B103999 EQ PUSH2 0x111 JUMPI DUP1 PUSH4 0x933F0F3C EQ PUSH2 0x138 JUMPI DUP1 PUSH4 0xC4D66DE8 EQ PUSH2 0x14B JUMPI DUP1 PUSH4 0xD9972B96 EQ PUSH2 0x15E JUMPI PUSH2 0x7D JUMP JUMPDEST DUP1 PUSH4 0x3F81A192 EQ PUSH2 0x82 JUMPI DUP1 PUSH4 0x44BA1FCA EQ PUSH2 0xC7 JUMPI DUP1 PUSH4 0x6646A436 EQ PUSH2 0xFC JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x9D PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xEE PUSH32 0xF6349752494BEBA38DE01582BAC9AA61DACF82389107F0EB64CC5AB90B2BB4C6 DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xBE JUMP JUMPDEST PUSH2 0x10F PUSH2 0x10A CALLDATASIZE PUSH1 0x4 PUSH2 0xB67 JUMP JUMPDEST PUSH2 0x181 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x9D PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH2 0x10F PUSH2 0x146 CALLDATASIZE PUSH1 0x4 PUSH2 0xB67 JUMP JUMPDEST PUSH2 0x1BD JUMP JUMPDEST PUSH2 0x10F PUSH2 0x159 CALLDATASIZE PUSH1 0x4 PUSH2 0xB2F JUMP JUMPDEST PUSH2 0x1F5 JUMP JUMPDEST PUSH2 0x171 PUSH2 0x16C CALLDATASIZE PUSH1 0x4 PUSH2 0xB67 JUMP JUMPDEST PUSH2 0x394 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xBE JUMP JUMPDEST PUSH2 0x1AF CALLER PUSH1 0x0 CALLDATALOAD PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 AND PUSH2 0x44C JUMP JUMPDEST PUSH2 0x1B9 DUP3 DUP3 PUSH2 0x4BC JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x1EB CALLER PUSH1 0x0 CALLDATALOAD PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 AND PUSH2 0x44C JUMP JUMPDEST PUSH2 0x1B9 DUP3 DUP3 PUSH2 0x56B JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND ISZERO DUP1 DUP1 ISZERO PUSH2 0x215 JUMPI POP PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0xFF SWAP1 SWAP2 AND LT JUMPDEST DUP1 PUSH2 0x236 JUMPI POP PUSH2 0x224 ADDRESS PUSH2 0x617 JUMP JUMPDEST ISZERO DUP1 ISZERO PUSH2 0x236 JUMPI POP PUSH1 0x0 SLOAD PUSH1 0xFF AND PUSH1 0x1 EQ JUMPDEST PUSH2 0x2C7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E697469616C697A61626C653A20636F6E747261637420697320616C726561 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x647920696E697469616C697A6564000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00 AND PUSH1 0x1 OR SWAP1 SSTORE DUP1 ISZERO PUSH2 0x325 JUMPI PUSH1 0x0 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00FF AND PUSH2 0x100 OR SWAP1 SSTORE JUMPDEST PUSH2 0x32E DUP3 PUSH2 0x637 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1B9 JUMPI PUSH1 0x0 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00FF AND SWAP1 SSTORE PUSH1 0x40 MLOAD PUSH1 0x1 DUP2 MSTORE PUSH32 0x7F26B83FF96E1F2B6A682F133852F6798A09C465DA95921460CEFB3847402498 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH32 0x73DF27E0FA8BBB6C6A588F907379871E0F69A2BAE64EA632056F6DABC259F362 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0xFF AND DUP1 PUSH2 0x445 JUMPI POP PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP7 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x456 DUP3 DUP3 PUSH2 0x394 JUMP JUMPDEST PUSH2 0x1B9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x415554485F53454E4445525F4E4F545F414C4C4F574544000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x2BE JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP7 AND DUP1 DUP6 MSTORE SWAP1 DUP4 MSTORE SWAP3 DUP2 SWAP1 KECCAK256 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00 AND SWAP1 SSTORE MLOAD SWAP2 DUP3 MSTORE PUSH32 0xA2E97B9EEA8D1168700E334304EDD057DFF89C0384CA6F920C73CC3E48C8E523 SWAP2 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP8 AND DUP1 DUP7 MSTORE SWAP1 DUP4 MSTORE SWAP4 DUP2 SWAP1 KECCAK256 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00 AND SWAP1 SWAP4 OR SWAP1 SWAP3 SSTORE SWAP1 MLOAD SWAP2 DUP3 MSTORE PUSH32 0x7F06C1C34AD47198873DA9DCDE2E40904035D41B23DA3A9132DF674A75022DF7 SWAP2 ADD PUSH2 0x55F JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND EXTCODESIZE ISZERO ISZERO JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND PUSH2 0x6CE JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E697469616C697A61626C653A20636F6E7472616374206973206E6F742069 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6E697469616C697A696E67000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x2BE JUMP JUMPDEST PUSH2 0x6D6 PUSH2 0x72D JUMP JUMPDEST PUSH2 0x700 DUP2 PUSH32 0x933F0F3C00000000000000000000000000000000000000000000000000000000 PUSH2 0x56B JUMP JUMPDEST PUSH2 0x72A DUP2 PUSH32 0x6646A43600000000000000000000000000000000000000000000000000000000 PUSH2 0x56B JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND PUSH2 0x7C4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E697469616C697A61626C653A20636F6E7472616374206973206E6F742069 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6E697469616C697A696E67000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x2BE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x8B4872B800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x0 SWAP1 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH4 0x8B4872B8 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x84C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x860 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x884 SWAP2 SWAP1 PUSH2 0xB4B JUMP JUMPDEST SWAP1 POP PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND PUSH2 0x903 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x494D504C454D454E544154494F4E5F4E4F545F52454749535445524544000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x2BE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x9235DCF800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x0 SWAP2 DUP3 SWAP2 PUSH32 0x0 AND SWAP1 PUSH4 0x9235DCF8 SWAP1 PUSH1 0x24 ADD PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x98F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x9A3 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x9C7 SWAP2 SWAP1 PUSH2 0xBC3 JUMP JUMPDEST SWAP3 POP SWAP3 POP POP DUP2 ISZERO PUSH2 0xA34 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x494D504C454D454E544154494F4E5F4445505245434154454400000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x2BE JUMP JUMPDEST DUP1 ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x44BA1FCA PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xA7B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xA8F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xAB3 SWAP2 SWAP1 PUSH2 0xBFE JUMP JUMPDEST EQ PUSH2 0xB1A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x494E56414C49445F494D504C454D454E544154494F4E5F4E414D455350414345 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x2BE JUMP JUMPDEST POP POP POP JUMP JUMPDEST DUP1 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x632 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xB40 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x445 DUP2 PUSH2 0xC16 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xB5C JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x445 DUP2 PUSH2 0xC16 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xB79 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0xB84 DUP2 PUSH2 0xC16 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP2 AND DUP2 EQ PUSH2 0xBB8 JUMPI DUP2 DUP3 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xBD7 JUMPI DUP1 DUP2 REVERT JUMPDEST PUSH2 0xBE0 DUP5 PUSH2 0xB1F JUMP JUMPDEST SWAP3 POP PUSH2 0xBEE PUSH1 0x20 DUP6 ADD PUSH2 0xB1F JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD MLOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xC0F JUMPI DUP1 DUP2 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND DUP2 EQ PUSH2 0x72A JUMPI PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 COINBASE RETURNDATACOPY 0x1E 0xDB LT CALLCODE JUMPDEST 0xCF 0xC8 CHAINID DUP1 0xE0 PUSH2 0xC611 PUSH15 0x545443DA9614B31ED7A15E7ABE8D32 0x5F PUSH5 0x736F6C6343 STOP ADDMOD SUB STOP CALLER ",
              "sourceMap": "130:448:13:-:0;;;337:142;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;;1590:20:6;;;;;;;405:8:13;;1393:22:9::1;:20;:22::i;:::-;1324:98:::0;1308:132:8;337:142:13;130:448;;5366:279:3;5434:13;;;;;;;5433:14;5425:66;;;;-1:-1:-1;;;5425:66:3;;531:2:15;5425:66:3;;;513:21:15;570:2;550:18;;;543:30;609:34;589:18;;;582:62;-1:-1:-1;;;660:18:15;;;653:37;707:19;;5425:66:3;;;;;;;;5505:12;;5520:15;5505:12;;;:30;5501:138;;;5551:12;:30;;-1:-1:-1;;5551:30:3;5566:15;5551:30;;;;;;5600:28;;879:36:15;;;5600:28:3;;867:2:15;852:18;5600:28:3;;;;;;;5501:138;5366:279::o;14:310:15:-;;137:2;125:9;116:7;112:23;108:32;105:2;;;158:6;150;143:22;105:2;189:16;;-1:-1:-1;;;;;234:31:15;;224:42;;214:2;;285:6;277;270:22;214:2;313:5;95:229;-1:-1:-1;;;95:229:15:o;834:87::-;130:448:13;;;;;;;;;;;;"
            },
            "deployedBytecode": {
              "generatedSources": [
                {
                  "ast": {
                    "nodeType": "YulBlock",
                    "src": "0:5232:15",
                    "statements": [
                      {
                        "nodeType": "YulBlock",
                        "src": "6:3:15",
                        "statements": []
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "71:107:15",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "81:22:15",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "offset",
                                    "nodeType": "YulIdentifier",
                                    "src": "96:6:15"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nodeType": "YulIdentifier",
                                  "src": "90:5:15"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "90:13:15"
                              },
                              "variableNames": [
                                {
                                  "name": "value",
                                  "nodeType": "YulIdentifier",
                                  "src": "81:5:15"
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "156:16:15",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "165:1:15",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "168:1:15",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "158:6:15"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "158:12:15"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "158:12:15"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "125:5:15"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "arguments": [
                                              {
                                                "name": "value",
                                                "nodeType": "YulIdentifier",
                                                "src": "146:5:15"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "iszero",
                                              "nodeType": "YulIdentifier",
                                              "src": "139:6:15"
                                            },
                                            "nodeType": "YulFunctionCall",
                                            "src": "139:13:15"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "iszero",
                                          "nodeType": "YulIdentifier",
                                          "src": "132:6:15"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "132:21:15"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "eq",
                                      "nodeType": "YulIdentifier",
                                      "src": "122:2:15"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "122:32:15"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "115:6:15"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "115:40:15"
                              },
                              "nodeType": "YulIf",
                              "src": "112:2:15"
                            }
                          ]
                        },
                        "name": "abi_decode_bool_fromMemory",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "offset",
                            "nodeType": "YulTypedName",
                            "src": "50:6:15",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "61:5:15",
                            "type": ""
                          }
                        ],
                        "src": "14:164:15"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "253:187:15",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "299:26:15",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "name": "value0",
                                          "nodeType": "YulIdentifier",
                                          "src": "308:6:15"
                                        },
                                        {
                                          "name": "value0",
                                          "nodeType": "YulIdentifier",
                                          "src": "316:6:15"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "301:6:15"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "301:22:15"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "301:22:15"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "274:7:15"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "283:9:15"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "270:3:15"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "270:23:15"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "295:2:15",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "slt",
                                  "nodeType": "YulIdentifier",
                                  "src": "266:3:15"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "266:32:15"
                              },
                              "nodeType": "YulIf",
                              "src": "263:2:15"
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "334:36:15",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "360:9:15"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldataload",
                                  "nodeType": "YulIdentifier",
                                  "src": "347:12:15"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "347:23:15"
                              },
                              "variables": [
                                {
                                  "name": "value",
                                  "nodeType": "YulTypedName",
                                  "src": "338:5:15",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "404:5:15"
                                  }
                                ],
                                "functionName": {
                                  "name": "validator_revert_address",
                                  "nodeType": "YulIdentifier",
                                  "src": "379:24:15"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "379:31:15"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "379:31:15"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "419:15:15",
                              "value": {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "429:5:15"
                              },
                              "variableNames": [
                                {
                                  "name": "value0",
                                  "nodeType": "YulIdentifier",
                                  "src": "419:6:15"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_decode_tuple_t_address",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "219:9:15",
                            "type": ""
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulTypedName",
                            "src": "230:7:15",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "242:6:15",
                            "type": ""
                          }
                        ],
                        "src": "183:257:15"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "526:180:15",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "572:26:15",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "name": "value0",
                                          "nodeType": "YulIdentifier",
                                          "src": "581:6:15"
                                        },
                                        {
                                          "name": "value0",
                                          "nodeType": "YulIdentifier",
                                          "src": "589:6:15"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "574:6:15"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "574:22:15"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "574:22:15"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "547:7:15"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "556:9:15"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "543:3:15"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "543:23:15"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "568:2:15",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "slt",
                                  "nodeType": "YulIdentifier",
                                  "src": "539:3:15"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "539:32:15"
                              },
                              "nodeType": "YulIf",
                              "src": "536:2:15"
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "607:29:15",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "626:9:15"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nodeType": "YulIdentifier",
                                  "src": "620:5:15"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "620:16:15"
                              },
                              "variables": [
                                {
                                  "name": "value",
                                  "nodeType": "YulTypedName",
                                  "src": "611:5:15",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "670:5:15"
                                  }
                                ],
                                "functionName": {
                                  "name": "validator_revert_address",
                                  "nodeType": "YulIdentifier",
                                  "src": "645:24:15"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "645:31:15"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "645:31:15"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "685:15:15",
                              "value": {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "695:5:15"
                              },
                              "variableNames": [
                                {
                                  "name": "value0",
                                  "nodeType": "YulIdentifier",
                                  "src": "685:6:15"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_decode_tuple_t_address_fromMemory",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "492:9:15",
                            "type": ""
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulTypedName",
                            "src": "503:7:15",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "515:6:15",
                            "type": ""
                          }
                        ],
                        "src": "445:261:15"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "797:409:15",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "843:26:15",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "name": "value1",
                                          "nodeType": "YulIdentifier",
                                          "src": "852:6:15"
                                        },
                                        {
                                          "name": "value1",
                                          "nodeType": "YulIdentifier",
                                          "src": "860:6:15"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "845:6:15"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "845:22:15"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "845:22:15"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "818:7:15"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "827:9:15"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "814:3:15"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "814:23:15"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "839:2:15",
                                    "type": "",
                                    "value": "64"
                                  }
                                ],
                                "functionName": {
                                  "name": "slt",
                                  "nodeType": "YulIdentifier",
                                  "src": "810:3:15"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "810:32:15"
                              },
                              "nodeType": "YulIf",
                              "src": "807:2:15"
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "878:36:15",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "904:9:15"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldataload",
                                  "nodeType": "YulIdentifier",
                                  "src": "891:12:15"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "891:23:15"
                              },
                              "variables": [
                                {
                                  "name": "value",
                                  "nodeType": "YulTypedName",
                                  "src": "882:5:15",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "948:5:15"
                                  }
                                ],
                                "functionName": {
                                  "name": "validator_revert_address",
                                  "nodeType": "YulIdentifier",
                                  "src": "923:24:15"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "923:31:15"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "923:31:15"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "963:15:15",
                              "value": {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "973:5:15"
                              },
                              "variableNames": [
                                {
                                  "name": "value0",
                                  "nodeType": "YulIdentifier",
                                  "src": "963:6:15"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "987:47:15",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "1019:9:15"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "1030:2:15",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "1015:3:15"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1015:18:15"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldataload",
                                  "nodeType": "YulIdentifier",
                                  "src": "1002:12:15"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1002:32:15"
                              },
                              "variables": [
                                {
                                  "name": "value_1",
                                  "nodeType": "YulTypedName",
                                  "src": "991:7:15",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "1148:26:15",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "name": "value1",
                                          "nodeType": "YulIdentifier",
                                          "src": "1157:6:15"
                                        },
                                        {
                                          "name": "value1",
                                          "nodeType": "YulIdentifier",
                                          "src": "1165:6:15"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "1150:6:15"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "1150:22:15"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "1150:22:15"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "value_1",
                                        "nodeType": "YulIdentifier",
                                        "src": "1056:7:15"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "name": "value_1",
                                            "nodeType": "YulIdentifier",
                                            "src": "1069:7:15"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "1078:66:15",
                                            "type": "",
                                            "value": "0xffffffff00000000000000000000000000000000000000000000000000000000"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "and",
                                          "nodeType": "YulIdentifier",
                                          "src": "1065:3:15"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "1065:80:15"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "eq",
                                      "nodeType": "YulIdentifier",
                                      "src": "1053:2:15"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1053:93:15"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "1046:6:15"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1046:101:15"
                              },
                              "nodeType": "YulIf",
                              "src": "1043:2:15"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "1183:17:15",
                              "value": {
                                "name": "value_1",
                                "nodeType": "YulIdentifier",
                                "src": "1193:7:15"
                              },
                              "variableNames": [
                                {
                                  "name": "value1",
                                  "nodeType": "YulIdentifier",
                                  "src": "1183:6:15"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_decode_tuple_t_addresst_bytes4",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "755:9:15",
                            "type": ""
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulTypedName",
                            "src": "766:7:15",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "778:6:15",
                            "type": ""
                          },
                          {
                            "name": "value1",
                            "nodeType": "YulTypedName",
                            "src": "786:6:15",
                            "type": ""
                          }
                        ],
                        "src": "711:495:15"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "1320:243:15",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "1366:26:15",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "name": "value2",
                                          "nodeType": "YulIdentifier",
                                          "src": "1375:6:15"
                                        },
                                        {
                                          "name": "value2",
                                          "nodeType": "YulIdentifier",
                                          "src": "1383:6:15"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "1368:6:15"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "1368:22:15"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "1368:22:15"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "1341:7:15"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "1350:9:15"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "1337:3:15"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1337:23:15"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1362:2:15",
                                    "type": "",
                                    "value": "96"
                                  }
                                ],
                                "functionName": {
                                  "name": "slt",
                                  "nodeType": "YulIdentifier",
                                  "src": "1333:3:15"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1333:32:15"
                              },
                              "nodeType": "YulIf",
                              "src": "1330:2:15"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "1401:47:15",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "1438:9:15"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_decode_bool_fromMemory",
                                  "nodeType": "YulIdentifier",
                                  "src": "1411:26:15"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1411:37:15"
                              },
                              "variableNames": [
                                {
                                  "name": "value0",
                                  "nodeType": "YulIdentifier",
                                  "src": "1401:6:15"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "1457:56:15",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "1498:9:15"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "1509:2:15",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "1494:3:15"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1494:18:15"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_decode_bool_fromMemory",
                                  "nodeType": "YulIdentifier",
                                  "src": "1467:26:15"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1467:46:15"
                              },
                              "variableNames": [
                                {
                                  "name": "value1",
                                  "nodeType": "YulIdentifier",
                                  "src": "1457:6:15"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "1522:35:15",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "1542:9:15"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "1553:2:15",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "1538:3:15"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1538:18:15"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nodeType": "YulIdentifier",
                                  "src": "1532:5:15"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1532:25:15"
                              },
                              "variableNames": [
                                {
                                  "name": "value2",
                                  "nodeType": "YulIdentifier",
                                  "src": "1522:6:15"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_decode_tuple_t_boolt_boolt_bytes32_fromMemory",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "1270:9:15",
                            "type": ""
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulTypedName",
                            "src": "1281:7:15",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "1293:6:15",
                            "type": ""
                          },
                          {
                            "name": "value1",
                            "nodeType": "YulTypedName",
                            "src": "1301:6:15",
                            "type": ""
                          },
                          {
                            "name": "value2",
                            "nodeType": "YulTypedName",
                            "src": "1309:6:15",
                            "type": ""
                          }
                        ],
                        "src": "1211:352:15"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "1649:113:15",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "1695:26:15",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "name": "value0",
                                          "nodeType": "YulIdentifier",
                                          "src": "1704:6:15"
                                        },
                                        {
                                          "name": "value0",
                                          "nodeType": "YulIdentifier",
                                          "src": "1712:6:15"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "1697:6:15"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "1697:22:15"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "1697:22:15"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "1670:7:15"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "1679:9:15"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "1666:3:15"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1666:23:15"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1691:2:15",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "slt",
                                  "nodeType": "YulIdentifier",
                                  "src": "1662:3:15"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1662:32:15"
                              },
                              "nodeType": "YulIf",
                              "src": "1659:2:15"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "1730:26:15",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "1746:9:15"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nodeType": "YulIdentifier",
                                  "src": "1740:5:15"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1740:16:15"
                              },
                              "variableNames": [
                                {
                                  "name": "value0",
                                  "nodeType": "YulIdentifier",
                                  "src": "1730:6:15"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_decode_tuple_t_bytes32_fromMemory",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "1615:9:15",
                            "type": ""
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulTypedName",
                            "src": "1626:7:15",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "1638:6:15",
                            "type": ""
                          }
                        ],
                        "src": "1568:194:15"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "1868:125:15",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "1878:26:15",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "1890:9:15"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1901:2:15",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "1886:3:15"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1886:18:15"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "1878:4:15"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "1920:9:15"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "value0",
                                        "nodeType": "YulIdentifier",
                                        "src": "1935:6:15"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "1943:42:15",
                                        "type": "",
                                        "value": "0xffffffffffffffffffffffffffffffffffffffff"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "and",
                                      "nodeType": "YulIdentifier",
                                      "src": "1931:3:15"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1931:55:15"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "1913:6:15"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1913:74:15"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "1913:74:15"
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "1837:9:15",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "1848:6:15",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "1859:4:15",
                            "type": ""
                          }
                        ],
                        "src": "1767:226:15"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "2093:92:15",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "2103:26:15",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "2115:9:15"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2126:2:15",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "2111:3:15"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2111:18:15"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "2103:4:15"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "2145:9:15"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "value0",
                                            "nodeType": "YulIdentifier",
                                            "src": "2170:6:15"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "iszero",
                                          "nodeType": "YulIdentifier",
                                          "src": "2163:6:15"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "2163:14:15"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "iszero",
                                      "nodeType": "YulIdentifier",
                                      "src": "2156:6:15"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "2156:22:15"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "2138:6:15"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2138:41:15"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "2138:41:15"
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "2062:9:15",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "2073:6:15",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "2084:4:15",
                            "type": ""
                          }
                        ],
                        "src": "1998:187:15"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "2291:76:15",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "2301:26:15",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "2313:9:15"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2324:2:15",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "2309:3:15"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2309:18:15"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "2301:4:15"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "2343:9:15"
                                  },
                                  {
                                    "name": "value0",
                                    "nodeType": "YulIdentifier",
                                    "src": "2354:6:15"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "2336:6:15"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2336:25:15"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "2336:25:15"
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "2260:9:15",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "2271:6:15",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "2282:4:15",
                            "type": ""
                          }
                        ],
                        "src": "2190:177:15"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "2471:149:15",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "2481:26:15",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "2493:9:15"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2504:2:15",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "2489:3:15"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2489:18:15"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "2481:4:15"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "2523:9:15"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "value0",
                                        "nodeType": "YulIdentifier",
                                        "src": "2538:6:15"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "2546:66:15",
                                        "type": "",
                                        "value": "0xffffffff00000000000000000000000000000000000000000000000000000000"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "and",
                                      "nodeType": "YulIdentifier",
                                      "src": "2534:3:15"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "2534:79:15"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "2516:6:15"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2516:98:15"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "2516:98:15"
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_bytes4__to_t_bytes4__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "2440:9:15",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "2451:6:15",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "2462:4:15",
                            "type": ""
                          }
                        ],
                        "src": "2372:248:15"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "2732:87:15",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "2742:26:15",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "2754:9:15"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2765:2:15",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "2750:3:15"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2750:18:15"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "2742:4:15"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "2784:9:15"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "value0",
                                        "nodeType": "YulIdentifier",
                                        "src": "2799:6:15"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "2807:4:15",
                                        "type": "",
                                        "value": "0xff"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "and",
                                      "nodeType": "YulIdentifier",
                                      "src": "2795:3:15"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "2795:17:15"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "2777:6:15"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2777:36:15"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "2777:36:15"
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_rational_1_by_1__to_t_uint8__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "2701:9:15",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "2712:6:15",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "2723:4:15",
                            "type": ""
                          }
                        ],
                        "src": "2625:194:15"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "2998:179:15",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "3015:9:15"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "3026:2:15",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "3008:6:15"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3008:21:15"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "3008:21:15"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "3049:9:15"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "3060:2:15",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "3045:3:15"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "3045:18:15"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "3065:2:15",
                                    "type": "",
                                    "value": "29"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "3038:6:15"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3038:30:15"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "3038:30:15"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "3088:9:15"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "3099:2:15",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "3084:3:15"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "3084:18:15"
                                  },
                                  {
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "3104:31:15",
                                    "type": "",
                                    "value": "IMPLEMENTATION_NOT_REGISTERED"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "3077:6:15"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3077:59:15"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "3077:59:15"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "3145:26:15",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "3157:9:15"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "3168:2:15",
                                    "type": "",
                                    "value": "96"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "3153:3:15"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3153:18:15"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "3145:4:15"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_stringliteral_08da2425c2bb79d379d97d111ca6f8eeed0e35247ec89d81b6c7e6238420b675__to_t_string_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "2975:9:15",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "2989:4:15",
                            "type": ""
                          }
                        ],
                        "src": "2824:353:15"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "3356:175:15",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "3373:9:15"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "3384:2:15",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "3366:6:15"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3366:21:15"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "3366:21:15"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "3407:9:15"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "3418:2:15",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "3403:3:15"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "3403:18:15"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "3423:2:15",
                                    "type": "",
                                    "value": "25"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "3396:6:15"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3396:30:15"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "3396:30:15"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "3446:9:15"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "3457:2:15",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "3442:3:15"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "3442:18:15"
                                  },
                                  {
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "3462:27:15",
                                    "type": "",
                                    "value": "IMPLEMENTATION_DEPRECATED"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "3435:6:15"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3435:55:15"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "3435:55:15"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "3499:26:15",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "3511:9:15"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "3522:2:15",
                                    "type": "",
                                    "value": "96"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "3507:3:15"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3507:18:15"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "3499:4:15"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_stringliteral_1b399a63a49fe1f304df5c43235a67416e5723e6bbe3c4e82966d9b2a9a9f199__to_t_string_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "3333:9:15",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "3347:4:15",
                            "type": ""
                          }
                        ],
                        "src": "3182:349:15"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "3710:182:15",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "3727:9:15"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "3738:2:15",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "3720:6:15"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3720:21:15"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "3720:21:15"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "3761:9:15"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "3772:2:15",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "3757:3:15"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "3757:18:15"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "3777:2:15",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "3750:6:15"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3750:30:15"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "3750:30:15"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "3800:9:15"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "3811:2:15",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "3796:3:15"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "3796:18:15"
                                  },
                                  {
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "3816:34:15",
                                    "type": "",
                                    "value": "INVALID_IMPLEMENTATION_NAMESPACE"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "3789:6:15"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3789:62:15"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "3789:62:15"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "3860:26:15",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "3872:9:15"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "3883:2:15",
                                    "type": "",
                                    "value": "96"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "3868:3:15"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3868:18:15"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "3860:4:15"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_stringliteral_749fa90c0042742458a18eef568a1a6d40407387d12f68d10c8b730f2c6f9add__to_t_string_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "3687:9:15",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "3701:4:15",
                            "type": ""
                          }
                        ],
                        "src": "3536:356:15"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "4071:236:15",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "4088:9:15"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "4099:2:15",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "4081:6:15"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4081:21:15"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "4081:21:15"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "4122:9:15"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "4133:2:15",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "4118:3:15"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "4118:18:15"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "4138:2:15",
                                    "type": "",
                                    "value": "46"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "4111:6:15"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4111:30:15"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "4111:30:15"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "4161:9:15"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "4172:2:15",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "4157:3:15"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "4157:18:15"
                                  },
                                  {
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "4177:34:15",
                                    "type": "",
                                    "value": "Initializable: contract is alrea"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "4150:6:15"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4150:62:15"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "4150:62:15"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "4232:9:15"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "4243:2:15",
                                        "type": "",
                                        "value": "96"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "4228:3:15"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "4228:18:15"
                                  },
                                  {
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "4248:16:15",
                                    "type": "",
                                    "value": "dy initialized"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "4221:6:15"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4221:44:15"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "4221:44:15"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "4274:27:15",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "4286:9:15"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "4297:3:15",
                                    "type": "",
                                    "value": "128"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "4282:3:15"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4282:19:15"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "4274:4:15"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759__to_t_string_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "4048:9:15",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "4062:4:15",
                            "type": ""
                          }
                        ],
                        "src": "3897:410:15"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "4486:173:15",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "4503:9:15"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "4514:2:15",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "4496:6:15"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4496:21:15"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "4496:21:15"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "4537:9:15"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "4548:2:15",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "4533:3:15"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "4533:18:15"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "4553:2:15",
                                    "type": "",
                                    "value": "23"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "4526:6:15"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4526:30:15"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "4526:30:15"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "4576:9:15"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "4587:2:15",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "4572:3:15"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "4572:18:15"
                                  },
                                  {
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "4592:25:15",
                                    "type": "",
                                    "value": "AUTH_SENDER_NOT_ALLOWED"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "4565:6:15"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4565:53:15"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "4565:53:15"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "4627:26:15",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "4639:9:15"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "4650:2:15",
                                    "type": "",
                                    "value": "96"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "4635:3:15"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4635:18:15"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "4627:4:15"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_stringliteral_cca20d5e6b0a009174175165fdf5a759ef555d3516bd42d178ac016ae5f041d7__to_t_string_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "4463:9:15",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "4477:4:15",
                            "type": ""
                          }
                        ],
                        "src": "4312:347:15"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "4838:233:15",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "4855:9:15"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "4866:2:15",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "4848:6:15"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4848:21:15"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "4848:21:15"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "4889:9:15"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "4900:2:15",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "4885:3:15"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "4885:18:15"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "4905:2:15",
                                    "type": "",
                                    "value": "43"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "4878:6:15"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4878:30:15"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "4878:30:15"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "4928:9:15"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "4939:2:15",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "4924:3:15"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "4924:18:15"
                                  },
                                  {
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "4944:34:15",
                                    "type": "",
                                    "value": "Initializable: contract is not i"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "4917:6:15"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4917:62:15"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "4917:62:15"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "4999:9:15"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "5010:2:15",
                                        "type": "",
                                        "value": "96"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "4995:3:15"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "4995:18:15"
                                  },
                                  {
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "5015:13:15",
                                    "type": "",
                                    "value": "nitializing"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "4988:6:15"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4988:41:15"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "4988:41:15"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "5038:27:15",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "5050:9:15"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "5061:3:15",
                                    "type": "",
                                    "value": "128"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "5046:3:15"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5046:19:15"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "5038:4:15"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_stringliteral_d688db918bb9dd50354922faa108595679886fe9ff08046ad1ffe30aaea55f8b__to_t_string_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "4815:9:15",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "4829:4:15",
                            "type": ""
                          }
                        ],
                        "src": "4664:407:15"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "5121:109:15",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "5208:16:15",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "5217:1:15",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "5220:1:15",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "5210:6:15"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "5210:12:15"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "5210:12:15"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "5144:5:15"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "name": "value",
                                            "nodeType": "YulIdentifier",
                                            "src": "5155:5:15"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "5162:42:15",
                                            "type": "",
                                            "value": "0xffffffffffffffffffffffffffffffffffffffff"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "and",
                                          "nodeType": "YulIdentifier",
                                          "src": "5151:3:15"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "5151:54:15"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "eq",
                                      "nodeType": "YulIdentifier",
                                      "src": "5141:2:15"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "5141:65:15"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "5134:6:15"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5134:73:15"
                              },
                              "nodeType": "YulIf",
                              "src": "5131:2:15"
                            }
                          ]
                        },
                        "name": "validator_revert_address",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "5110:5:15",
                            "type": ""
                          }
                        ],
                        "src": "5076:154:15"
                      }
                    ]
                  },
                  "contents": "{\n    { }\n    function abi_decode_bool_fromMemory(offset) -> value\n    {\n        value := mload(offset)\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n    }\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        let value := mload(headStart)\n        validator_revert_address(value)\n        value0 := value\n    }\n    function abi_decode_tuple_t_addresst_bytes4(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(value1, value1) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        let value_1 := calldataload(add(headStart, 32))\n        if iszero(eq(value_1, and(value_1, 0xffffffff00000000000000000000000000000000000000000000000000000000))) { revert(value1, value1) }\n        value1 := value_1\n    }\n    function abi_decode_tuple_t_boolt_boolt_bytes32_fromMemory(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(value2, value2) }\n        value0 := abi_decode_bool_fromMemory(headStart)\n        value1 := abi_decode_bool_fromMemory(add(headStart, 32))\n        value2 := mload(add(headStart, 64))\n    }\n    function abi_decode_tuple_t_bytes32_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        value0 := mload(headStart)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_bytes4__to_t_bytes4__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffffffff00000000000000000000000000000000000000000000000000000000))\n    }\n    function abi_encode_tuple_t_rational_1_by_1__to_t_uint8__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xff))\n    }\n    function abi_encode_tuple_t_stringliteral_08da2425c2bb79d379d97d111ca6f8eeed0e35247ec89d81b6c7e6238420b675__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 29)\n        mstore(add(headStart, 64), \"IMPLEMENTATION_NOT_REGISTERED\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_1b399a63a49fe1f304df5c43235a67416e5723e6bbe3c4e82966d9b2a9a9f199__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 25)\n        mstore(add(headStart, 64), \"IMPLEMENTATION_DEPRECATED\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_749fa90c0042742458a18eef568a1a6d40407387d12f68d10c8b730f2c6f9add__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"INVALID_IMPLEMENTATION_NAMESPACE\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 46)\n        mstore(add(headStart, 64), \"Initializable: contract is alrea\")\n        mstore(add(headStart, 96), \"dy initialized\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_cca20d5e6b0a009174175165fdf5a759ef555d3516bd42d178ac016ae5f041d7__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 23)\n        mstore(add(headStart, 64), \"AUTH_SENDER_NOT_ALLOWED\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_d688db918bb9dd50354922faa108595679886fe9ff08046ad1ffe30aaea55f8b__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 43)\n        mstore(add(headStart, 64), \"Initializable: contract is not i\")\n        mstore(add(headStart, 96), \"nitializing\")\n        tail := add(headStart, 128)\n    }\n    function validator_revert_address(value)\n    {\n        if iszero(eq(value, and(value, 0xffffffffffffffffffffffffffffffffffffffff))) { revert(0, 0) }\n    }\n}",
                  "id": 15,
                  "language": "Yul",
                  "name": "#utility.yul"
                }
              ],
              "immutableReferences": {
                "766": [
                  {
                    "length": 32,
                    "start": 278
                  },
                  {
                    "length": 32,
                    "start": 2037
                  },
                  {
                    "length": 32,
                    "start": 2381
                  }
                ]
              },
              "linkReferences": {},
              "object": "608060405234801561001057600080fd5b506004361061007d5760003560e01c80637b1039991161005b5780637b10399914610111578063933f0f3c14610138578063c4d66de81461014b578063d9972b961461015e5761007d565b80633f81a1921461008257806344ba1fca146100c75780636646a436146100fc575b600080fd5b61009d73ffffffffffffffffffffffffffffffffffffffff81565b60405173ffffffffffffffffffffffffffffffffffffffff90911681526020015b60405180910390f35b6100ee7ff6349752494beba38de01582bac9aa61dacf82389107f0eb64cc5ab90b2bb4c681565b6040519081526020016100be565b61010f61010a366004610b67565b610181565b005b61009d7f000000000000000000000000000000000000000000000000000000000000000081565b61010f610146366004610b67565b6101bd565b61010f610159366004610b2f565b6101f5565b61017161016c366004610b67565b610394565b60405190151581526020016100be565b6101af336000357fffffffff000000000000000000000000000000000000000000000000000000001661044c565b6101b982826104bc565b5050565b6101eb336000357fffffffff000000000000000000000000000000000000000000000000000000001661044c565b6101b9828261056b565b600054610100900460ff16158080156102155750600054600160ff909116105b80610236575061022430610617565b158015610236575060005460ff166001145b6102c7576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201527f647920696e697469616c697a656400000000000000000000000000000000000060648201526084015b60405180910390fd5b600080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00166001179055801561032557600080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff166101001790555b61032e82610637565b80156101b957600080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15050565b7fffffffff00000000000000000000000000000000000000000000000000000000811660009081527f73df27e0fa8bbb6c6a588f907379871e0f69a2bae64ea632056f6dabc259f362602052604081205460ff1680610445575073ffffffffffffffffffffffffffffffffffffffff831660009081526001602090815260408083207fffffffff000000000000000000000000000000000000000000000000000000008616845290915290205460ff165b9392505050565b6104568282610394565b6101b9576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601760248201527f415554485f53454e4445525f4e4f545f414c4c4f57454400000000000000000060448201526064016102be565b73ffffffffffffffffffffffffffffffffffffffff821660008181526001602090815260408083207fffffffff0000000000000000000000000000000000000000000000000000000086168085529083529281902080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00169055519182527fa2e97b9eea8d1168700e334304edd057dff89c0384ca6f920c73cc3e48c8e52391015b60405180910390a25050565b73ffffffffffffffffffffffffffffffffffffffff821660008181526001602081815260408084207fffffffff0000000000000000000000000000000000000000000000000000000087168086529083529381902080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff001690931790925590519182527f7f06c1c34ad47198873da9dcde2e40904035d41b23da3a9132df674a75022df7910161055f565b73ffffffffffffffffffffffffffffffffffffffff81163b15155b919050565b600054610100900460ff166106ce576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602b60248201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960448201527f6e697469616c697a696e6700000000000000000000000000000000000000000060648201526084016102be565b6106d661072d565b610700817f933f0f3c0000000000000000000000000000000000000000000000000000000061056b565b61072a817f6646a4360000000000000000000000000000000000000000000000000000000061056b565b50565b600054610100900460ff166107c4576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602b60248201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960448201527f6e697469616c697a696e6700000000000000000000000000000000000000000060648201526084016102be565b6040517f8b4872b80000000000000000000000000000000000000000000000000000000081523060048201526000907f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1690638b4872b89060240160206040518083038186803b15801561084c57600080fd5b505afa158015610860573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108849190610b4b565b905073ffffffffffffffffffffffffffffffffffffffff8116610903576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601d60248201527f494d504c454d454e544154494f4e5f4e4f545f5245474953544552454400000060448201526064016102be565b6040517f9235dcf800000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff828116600483015260009182917f00000000000000000000000000000000000000000000000000000000000000001690639235dcf89060240160606040518083038186803b15801561098f57600080fd5b505afa1580156109a3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109c79190610bc3565b92509250508115610a34576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601960248201527f494d504c454d454e544154494f4e5f444550524543415445440000000000000060448201526064016102be565b803073ffffffffffffffffffffffffffffffffffffffff166344ba1fca6040518163ffffffff1660e01b815260040160206040518083038186803b158015610a7b57600080fd5b505afa158015610a8f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ab39190610bfe565b14610b1a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f494e56414c49445f494d504c454d454e544154494f4e5f4e414d45535041434560448201526064016102be565b505050565b8051801515811461063257600080fd5b600060208284031215610b40578081fd5b813561044581610c16565b600060208284031215610b5c578081fd5b815161044581610c16565b60008060408385031215610b79578081fd5b8235610b8481610c16565b915060208301357fffffffff0000000000000000000000000000000000000000000000000000000081168114610bb8578182fd5b809150509250929050565b600080600060608486031215610bd7578081fd5b610be084610b1f565b9250610bee60208501610b1f565b9150604084015190509250925092565b600060208284031215610c0f578081fd5b5051919050565b73ffffffffffffffffffffffffffffffffffffffff8116811461072a57600080fdfea2646970667358221220413e1edb10f25bcfc84680e061c6116e545443da9614b31ed7a15e7abe8d325f64736f6c63430008030033",
              "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x7D JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x7B103999 GT PUSH2 0x5B JUMPI DUP1 PUSH4 0x7B103999 EQ PUSH2 0x111 JUMPI DUP1 PUSH4 0x933F0F3C EQ PUSH2 0x138 JUMPI DUP1 PUSH4 0xC4D66DE8 EQ PUSH2 0x14B JUMPI DUP1 PUSH4 0xD9972B96 EQ PUSH2 0x15E JUMPI PUSH2 0x7D JUMP JUMPDEST DUP1 PUSH4 0x3F81A192 EQ PUSH2 0x82 JUMPI DUP1 PUSH4 0x44BA1FCA EQ PUSH2 0xC7 JUMPI DUP1 PUSH4 0x6646A436 EQ PUSH2 0xFC JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x9D PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xEE PUSH32 0xF6349752494BEBA38DE01582BAC9AA61DACF82389107F0EB64CC5AB90B2BB4C6 DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xBE JUMP JUMPDEST PUSH2 0x10F PUSH2 0x10A CALLDATASIZE PUSH1 0x4 PUSH2 0xB67 JUMP JUMPDEST PUSH2 0x181 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x9D PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH2 0x10F PUSH2 0x146 CALLDATASIZE PUSH1 0x4 PUSH2 0xB67 JUMP JUMPDEST PUSH2 0x1BD JUMP JUMPDEST PUSH2 0x10F PUSH2 0x159 CALLDATASIZE PUSH1 0x4 PUSH2 0xB2F JUMP JUMPDEST PUSH2 0x1F5 JUMP JUMPDEST PUSH2 0x171 PUSH2 0x16C CALLDATASIZE PUSH1 0x4 PUSH2 0xB67 JUMP JUMPDEST PUSH2 0x394 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xBE JUMP JUMPDEST PUSH2 0x1AF CALLER PUSH1 0x0 CALLDATALOAD PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 AND PUSH2 0x44C JUMP JUMPDEST PUSH2 0x1B9 DUP3 DUP3 PUSH2 0x4BC JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x1EB CALLER PUSH1 0x0 CALLDATALOAD PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 AND PUSH2 0x44C JUMP JUMPDEST PUSH2 0x1B9 DUP3 DUP3 PUSH2 0x56B JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND ISZERO DUP1 DUP1 ISZERO PUSH2 0x215 JUMPI POP PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0xFF SWAP1 SWAP2 AND LT JUMPDEST DUP1 PUSH2 0x236 JUMPI POP PUSH2 0x224 ADDRESS PUSH2 0x617 JUMP JUMPDEST ISZERO DUP1 ISZERO PUSH2 0x236 JUMPI POP PUSH1 0x0 SLOAD PUSH1 0xFF AND PUSH1 0x1 EQ JUMPDEST PUSH2 0x2C7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E697469616C697A61626C653A20636F6E747261637420697320616C726561 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x647920696E697469616C697A6564000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00 AND PUSH1 0x1 OR SWAP1 SSTORE DUP1 ISZERO PUSH2 0x325 JUMPI PUSH1 0x0 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00FF AND PUSH2 0x100 OR SWAP1 SSTORE JUMPDEST PUSH2 0x32E DUP3 PUSH2 0x637 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1B9 JUMPI PUSH1 0x0 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00FF AND SWAP1 SSTORE PUSH1 0x40 MLOAD PUSH1 0x1 DUP2 MSTORE PUSH32 0x7F26B83FF96E1F2B6A682F133852F6798A09C465DA95921460CEFB3847402498 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH32 0x73DF27E0FA8BBB6C6A588F907379871E0F69A2BAE64EA632056F6DABC259F362 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0xFF AND DUP1 PUSH2 0x445 JUMPI POP PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP7 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x456 DUP3 DUP3 PUSH2 0x394 JUMP JUMPDEST PUSH2 0x1B9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x415554485F53454E4445525F4E4F545F414C4C4F574544000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x2BE JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP7 AND DUP1 DUP6 MSTORE SWAP1 DUP4 MSTORE SWAP3 DUP2 SWAP1 KECCAK256 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00 AND SWAP1 SSTORE MLOAD SWAP2 DUP3 MSTORE PUSH32 0xA2E97B9EEA8D1168700E334304EDD057DFF89C0384CA6F920C73CC3E48C8E523 SWAP2 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP8 AND DUP1 DUP7 MSTORE SWAP1 DUP4 MSTORE SWAP4 DUP2 SWAP1 KECCAK256 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00 AND SWAP1 SWAP4 OR SWAP1 SWAP3 SSTORE SWAP1 MLOAD SWAP2 DUP3 MSTORE PUSH32 0x7F06C1C34AD47198873DA9DCDE2E40904035D41B23DA3A9132DF674A75022DF7 SWAP2 ADD PUSH2 0x55F JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND EXTCODESIZE ISZERO ISZERO JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND PUSH2 0x6CE JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E697469616C697A61626C653A20636F6E7472616374206973206E6F742069 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6E697469616C697A696E67000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x2BE JUMP JUMPDEST PUSH2 0x6D6 PUSH2 0x72D JUMP JUMPDEST PUSH2 0x700 DUP2 PUSH32 0x933F0F3C00000000000000000000000000000000000000000000000000000000 PUSH2 0x56B JUMP JUMPDEST PUSH2 0x72A DUP2 PUSH32 0x6646A43600000000000000000000000000000000000000000000000000000000 PUSH2 0x56B JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND PUSH2 0x7C4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E697469616C697A61626C653A20636F6E7472616374206973206E6F742069 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6E697469616C697A696E67000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x2BE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x8B4872B800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x0 SWAP1 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH4 0x8B4872B8 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x84C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x860 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x884 SWAP2 SWAP1 PUSH2 0xB4B JUMP JUMPDEST SWAP1 POP PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND PUSH2 0x903 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x494D504C454D454E544154494F4E5F4E4F545F52454749535445524544000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x2BE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x9235DCF800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x0 SWAP2 DUP3 SWAP2 PUSH32 0x0 AND SWAP1 PUSH4 0x9235DCF8 SWAP1 PUSH1 0x24 ADD PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x98F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x9A3 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x9C7 SWAP2 SWAP1 PUSH2 0xBC3 JUMP JUMPDEST SWAP3 POP SWAP3 POP POP DUP2 ISZERO PUSH2 0xA34 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x494D504C454D454E544154494F4E5F4445505245434154454400000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x2BE JUMP JUMPDEST DUP1 ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x44BA1FCA PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xA7B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xA8F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xAB3 SWAP2 SWAP1 PUSH2 0xBFE JUMP JUMPDEST EQ PUSH2 0xB1A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x494E56414C49445F494D504C454D454E544154494F4E5F4E414D455350414345 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x2BE JUMP JUMPDEST POP POP POP JUMP JUMPDEST DUP1 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x632 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xB40 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x445 DUP2 PUSH2 0xC16 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xB5C JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x445 DUP2 PUSH2 0xC16 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xB79 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0xB84 DUP2 PUSH2 0xC16 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP2 AND DUP2 EQ PUSH2 0xBB8 JUMPI DUP2 DUP3 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xBD7 JUMPI DUP1 DUP2 REVERT JUMPDEST PUSH2 0xBE0 DUP5 PUSH2 0xB1F JUMP JUMPDEST SWAP3 POP PUSH2 0xBEE PUSH1 0x20 DUP6 ADD PUSH2 0xB1F JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD MLOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xC0F JUMPI DUP1 DUP2 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND DUP2 EQ PUSH2 0x72A JUMPI PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 COINBASE RETURNDATACOPY 0x1E 0xDB LT CALLCODE JUMPDEST 0xCF 0xC8 CHAINID DUP1 0xE0 PUSH2 0xC611 PUSH15 0x545443DA9614B31ED7A15E7ABE8D32 0x5F PUSH5 0x736F6C6343 STOP ADDMOD SUB STOP CALLER ",
              "sourceMap": "130:448:13:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1209:89:0;;1255:42;1209:89;;;;;1943:42:15;1931:55;;;1913:74;;1901:2;1886:18;1209:89:0;;;;;;;;228:102:13;;273:57;228:102;;;;;2336:25:15;;;2324:2;2309:18;228:102:13;2291:76:15;2556:110:0;;;;;;:::i;:::-;;:::i;:::-;;1340:42:6;;;;;2244:106:0;;;;;;:::i;:::-;;:::i;485:91:13:-;;;;;;:::i;:::-;;:::i;1880:162:0:-;;;;;;:::i;:::-;;:::i;:::-;;;2163:14:15;;2156:22;2138:41;;2126:2;2111:18;1880:162:0;2093:92:15;2556:110:0;1584:34;1598:10;1610:7;;;;1584:13;:34::i;:::-;2636:23:::1;2649:3;2654:4;2636:12;:23::i;:::-;2556:110:::0;;:::o;2244:106::-;1584:34;1598:10;1610:7;;;;1584:13;:34::i;:::-;2322:21:::1;2333:3;2338:4;2322:10;:21::i;485:91:13:-:0;3100:19:3;3123:13;;;;;;3122:14;;3168:34;;;;-1:-1:-1;3186:12:3;;3201:1;3186:12;;;;:16;3168:34;3167:97;;;;3209:33;3236:4;3209:18;:33::i;:::-;3208:34;:55;;;;-1:-1:-1;3246:12:3;;;;;:17;3208:55;3146:190;;;;;;;4099:2:15;3146:190:3;;;4081:21:15;4138:2;4118:18;;;4111:30;4177:34;4157:18;;;4150:62;4248:16;4228:18;;;4221:44;4282:19;;3146:190:3;;;;;;;;;3346:12;:16;;;;3361:1;3346:16;;;3372:65;;;;3406:13;:20;;;;;;;;3372:65;551:18:13::1;563:5;551:11;:18::i;:::-;3461:14:3::0;3457:99;;;3507:5;3491:21;;;;;;3531:14;;-1:-1:-1;2777:36:15;;3531:14:3;;2765:2:15;2750:18;3531:14:3;;;;;;;485:91:13;;:::o;1880:162:0:-;1981:29;;;1958:4;1981:29;;;:23;;:29;:23;:29;;;;;;:54;;-1:-1:-1;2014:15:0;;;;;;;:10;:15;;;;;;;;:21;;;;;;;;;;;;;1981:54;1974:61;1880:162;-1:-1:-1;;;1880:162:0:o;2951:139::-;3032:23;3045:3;3050:4;3032:12;:23::i;:::-;3024:59;;;;;;;4514:2:15;3024:59:0;;;4496:21:15;4553:2;4533:18;;;4526:30;4592:25;4572:18;;;4565:53;4635:18;;3024:59:0;4486:173:15;3602:141:0;3669:15;;;3693:5;3669:15;;;:10;:15;;;;;;;;:21;;;;;;;;;;;;;:29;;;;;;3713:23;2516:98:15;;;3713:23:0;;2489:18:15;3713:23:0;;;;;;;;3602:141;;:::o;3276:136::-;3341:15;;;;;;;3365:4;3341:15;;;;;;;;:21;;;;;;;;;;;;;:28;;;;;;;;;;3384:21;;2516:98:15;;;3384:21:0;;2489:18:15;3384:21:0;2471:149:15;1175:320:4;1465:19;;;;:23;;1175:320;;;;:::o;1751:210:8:-;4888:13:3;;;;;;;4880:69;;;;;;;4866:2:15;4880:69:3;;;4848:21:15;4905:2;4885:18;;;4878:30;4944:34;4924:18;;;4917:62;5015:13;4995:18;;;4988:41;5046:19;;4880:69:3;4838:233:15;4880:69:3;1823:13:8::1;:11;:13::i;:::-;1846:48;1857:5:::0;1864:29;1846:10:::1;:48::i;:::-;1904:50;1915:5:::0;1922:31;1904:10:::1;:50::i;:::-;1751:210:::0;:::o;1641:476:9:-;4888:13:3;;;;;;;4880:69;;;;;;;4866:2:15;4880:69:3;;;4848:21:15;4905:2;4885:18;;;4878:30;4944:34;4924:18;;;4917:62;5015:13;4995:18;;;4988:41;5046:19;;4880:69:3;4838:233:15;4880:69:3;1730:51:9::1;::::0;;;;1775:4:::1;1730:51;::::0;::::1;1913:74:15::0;1705:22:9::1;::::0;1740:8:::1;1730:36;;::::0;::::1;::::0;1886:18:15;;1730:51:9::1;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1705:76:::0;-1:-1:-1;1799:28:9::1;::::0;::::1;1791:70;;;::::0;::::1;::::0;;3026:2:15;1791:70:9::1;::::0;::::1;3008:21:15::0;3065:2;3045:18;;;3038:30;3104:31;3084:18;;;3077:59;3153:18;;1791:70:9::1;2998:179:15::0;1791:70:9::1;1913:54;::::0;;;;:38:::1;1931:55:15::0;;;1913:54:9::1;::::0;::::1;:74:15::0;1875:15:9::1;::::0;;;1923:8:::1;1913:38;::::0;::::1;::::0;1886:18:15;;1913:54:9::1;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1872:95;;;;;1986:10;1985:11;1977:49;;;::::0;::::1;::::0;;3384:2:15;1977:49:9::1;::::0;::::1;3366:21:15::0;3423:2;3403:18;;;3396:30;3462:27;3442:18;;;3435:55;3507:18;;1977:49:9::1;3356:175:15::0;1977:49:9::1;2064:9;2044:4;:14;;;:16;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:29;2036:74;;;::::0;::::1;::::0;;3738:2:15;2036:74:9::1;::::0;::::1;3720:21:15::0;;;3757:18;;;3750:30;3816:34;3796:18;;;3789:62;3868:18;;2036:74:9::1;3710:182:15::0;2036:74:9::1;4959:1:3;;;1641:476:9:o:0;14:164:15:-;90:13;;139;;132:21;122:32;;112:2;;168:1;165;158:12;183:257;;295:2;283:9;274:7;270:23;266:32;263:2;;;316:6;308;301:22;263:2;360:9;347:23;379:31;404:5;379:31;:::i;445:261::-;;568:2;556:9;547:7;543:23;539:32;536:2;;;589:6;581;574:22;536:2;626:9;620:16;645:31;670:5;645:31;:::i;711:495::-;;;839:2;827:9;818:7;814:23;810:32;807:2;;;860:6;852;845:22;807:2;904:9;891:23;923:31;948:5;923:31;:::i;:::-;973:5;-1:-1:-1;1030:2:15;1015:18;;1002:32;1078:66;1065:80;;1053:93;;1043:2;;1165:6;1157;1150:22;1043:2;1193:7;1183:17;;;797:409;;;;;:::o;1211:352::-;;;;1362:2;1350:9;1341:7;1337:23;1333:32;1330:2;;;1383:6;1375;1368:22;1330:2;1411:37;1438:9;1411:37;:::i;:::-;1401:47;;1467:46;1509:2;1498:9;1494:18;1467:46;:::i;:::-;1457:56;;1553:2;1542:9;1538:18;1532:25;1522:35;;1320:243;;;;;:::o;1568:194::-;;1691:2;1679:9;1670:7;1666:23;1662:32;1659:2;;;1712:6;1704;1697:22;1659:2;-1:-1:-1;1740:16:15;;1649:113;-1:-1:-1;1649:113:15:o;5076:154::-;5162:42;5155:5;5151:54;5144:5;5141:65;5131:2;;5220:1;5217;5210:12"
            },
            "methodIdentifiers": {
              "ANY_ADDRESS()": "3f81a192",
              "NAMESPACE()": "44ba1fca",
              "authorize(address,bytes4)": "933f0f3c",
              "initialize(address)": "c4d66de8",
              "isAuthorized(address,bytes4)": "d9972b96",
              "registry()": "7b103999",
              "unauthorize(address,bytes4)": "6646a436"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.3+commit.8d00100c\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"registry\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"who\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes4\",\"name\":\"what\",\"type\":\"bytes4\"}],\"name\":\"Authorized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"who\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes4\",\"name\":\"what\",\"type\":\"bytes4\"}],\"name\":\"Unauthorized\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"ANY_ADDRESS\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"NAMESPACE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"who\",\"type\":\"address\"},{\"internalType\":\"bytes4\",\"name\":\"what\",\"type\":\"bytes4\"}],\"name\":\"authorize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"admin\",\"type\":\"address\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"who\",\"type\":\"address\"},{\"internalType\":\"bytes4\",\"name\":\"what\",\"type\":\"bytes4\"}],\"name\":\"isAuthorized\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"registry\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"who\",\"type\":\"address\"},{\"internalType\":\"bytes4\",\"name\":\"what\",\"type\":\"bytes4\"}],\"name\":\"unauthorize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"authorize(address,bytes4)\":{\"details\":\"Authorizes someone to call a function. Sender must be authorize to do so.\",\"params\":{\"what\":\"Function selector to be granted\",\"who\":\"Address to be authorized\"}},\"isAuthorized(address,bytes4)\":{\"details\":\"Tells whether someone is allowed to call a function or not. It returns true if it's allowed to anyone.\",\"params\":{\"what\":\"Function selector asking permission for\",\"who\":\"Address asking permission for\"}},\"unauthorize(address,bytes4)\":{\"details\":\"Unauthorizes someone to call a function. Sender must be authorize to do so.\",\"params\":{\"what\":\"Function selector to be revoked\",\"who\":\"Address to be unauthorized\"}}},\"stateVariables\":{\"NAMESPACE\":{\"details\":\"Tells the namespace under which the implementation is registered in the Mimic Registry\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/test/InitializableAuthorizedImplementationMock.sol\":\"InitializableAuthorizedImplementationMock\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":10000},\"remappings\":[]},\"sources\":{\"@mimic-fi/v2-helpers/contracts/auth/Authorizer.sol\":{\"keccak256\":\"0x6c9de187060f53d7a3dc095d061fca507222259af53d8c12301119bf05448b5b\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://d925a2acb78a8539e4ea32e2d4c50250869260d683f3cb591610112140751e98\",\"dweb:/ipfs/QmdVC9L1PNwMSphiqdJpt99ND4kCumEAaJNU8BJLQqcZ8q\"]},\"@mimic-fi/v2-helpers/contracts/auth/IAuthorizer.sol\":{\"keccak256\":\"0x7e5d1c440a02d16c3d62d8ca982749b4cf044ba14e0a40c4f2fe23257a5304d2\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://bdad507d0bdc80eb1ca9fc01d4ef4ff5e0258b631305033b5945aad85fa5068a\",\"dweb:/ipfs/QmaRdsSorrzkxYpeTNMrZvH5RbbM9JYPQ9HyNAcQGmXNAe\"]},\"@openzeppelin/contracts/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x2a21b14ff90012878752f230d3ffd5c3405e5938d06c97a7d89c0a64561d0d66\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3313a8f9bb1f9476857c9050067b31982bf2140b83d84f3bc0cec1f62bbe947f\",\"dweb:/ipfs/Qma17Pk8NRe7aB4UD3jjVxk7nSFaov3eQyv86hcyqkwJRV\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xd6153ce99bcdcce22b124f755e72553295be6abcd63804cfdffceb188b8bef10\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://35c47bece3c03caaa07fab37dd2bb3413bfbca20db7bd9895024390e0a469487\",\"dweb:/ipfs/QmPGWT2x3QHcKxqe6gRmAkdakhbaRgx3DLzcakHz5M4eXG\"]},\"contracts/implementations/BaseImplementation.sol\":{\"keccak256\":\"0x2cb9bedf44e1c7dc11d9b4024df8910152b7d4902336aae6b7629d3f78db12ee\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://171c638ab1f4d887923c08a819d99b9acf635b9702099220e7881dda789597d7\",\"dweb:/ipfs/QmQ1aw3hyeScFKjazTYZDYBS2Smqib5fXRgfwiibikac8P\"]},\"contracts/implementations/IImplementation.sol\":{\"keccak256\":\"0x621ffadea8fdc214f95fa95ff480ebc7f5f51d9678544883def90b59a3851f78\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://9933e44069dee9bf8410f405d734b1320e2b26f11108e723576f9df6ff410b59\",\"dweb:/ipfs/QmfEmrt9bRhjN86BJRST7ZSjkDjegJgd9JtLheizUNzDwN\"]},\"contracts/implementations/InitializableAuthorizedImplementation.sol\":{\"keccak256\":\"0x22a6a18008b214fd56428b1b367adeb4476d1f1aaaeb3edf9b7b9f12b2997379\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://4e0211defd32a50147b89c73f688ec4f80c89e762032340b1505f421986b7c50\",\"dweb:/ipfs/QmYhLrhKfTG8U3hRbVbnNtuFiqRxyjgweWgEQGYra8UyzD\"]},\"contracts/implementations/InitializableImplementation.sol\":{\"keccak256\":\"0x5f5e24745c58ed73a10fa8988ecd8094876950cb6dfab4081cebf12ae76eb25f\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://5c057836fd2047c240fcb92bbfaac9ffb690bb5874a46d8050238c28b04ebca6\",\"dweb:/ipfs/QmdKrYeyrUrgens8wofTYNBSycsRrNsaCdUzKysTeyCELM\"]},\"contracts/registry/IRegistry.sol\":{\"keccak256\":\"0xa7d49ecd7b34ed1fdb3cd114432e037d88cf097ceadec01fb5e3d7895d617a65\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://352176031f1aa60f58daf223f0feaeb4fc892107d7a94deec4f25c1cfe7d934b\",\"dweb:/ipfs/QmVnujTPV3v76xU4QpMysSriUEfzPkLci7zaxfLnY27zRw\"]},\"contracts/test/InitializableAuthorizedImplementationMock.sol\":{\"keccak256\":\"0xa95163946fe85a95089ad766933781c542dcdf4ff2a93bd20464d8db94012062\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f8b72d897766d7c72e23a8903967a7832eaf952c9048e50485b88a31235e907a\",\"dweb:/ipfs/QmYA961G8JNtGC5y5dytHuoQxkFehr2XPCmC7y9ZPQj7au\"]}},\"version\":1}"
        }
      },
      "contracts/test/InitializableImplementationMock.sol": {
        "InitializableImplementationMock": {
          "abi": [
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "registry",
                  "type": "address"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "constructor"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": false,
                  "internalType": "uint8",
                  "name": "version",
                  "type": "uint8"
                }
              ],
              "name": "Initialized",
              "type": "event"
            },
            {
              "inputs": [],
              "name": "NAMESPACE",
              "outputs": [
                {
                  "internalType": "bytes32",
                  "name": "",
                  "type": "bytes32"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "initialize",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "registry",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "generatedSources": [
                {
                  "ast": {
                    "nodeType": "YulBlock",
                    "src": "0:923:15",
                    "statements": [
                      {
                        "nodeType": "YulBlock",
                        "src": "6:3:15",
                        "statements": []
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "95:229:15",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "141:26:15",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "name": "value0",
                                          "nodeType": "YulIdentifier",
                                          "src": "150:6:15"
                                        },
                                        {
                                          "name": "value0",
                                          "nodeType": "YulIdentifier",
                                          "src": "158:6:15"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "143:6:15"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "143:22:15"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "143:22:15"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "116:7:15"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "125:9:15"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "112:3:15"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "112:23:15"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "137:2:15",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "slt",
                                  "nodeType": "YulIdentifier",
                                  "src": "108:3:15"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "108:32:15"
                              },
                              "nodeType": "YulIf",
                              "src": "105:2:15"
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "176:29:15",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "195:9:15"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nodeType": "YulIdentifier",
                                  "src": "189:5:15"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "189:16:15"
                              },
                              "variables": [
                                {
                                  "name": "value",
                                  "nodeType": "YulTypedName",
                                  "src": "180:5:15",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "268:26:15",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "name": "value0",
                                          "nodeType": "YulIdentifier",
                                          "src": "277:6:15"
                                        },
                                        {
                                          "name": "value0",
                                          "nodeType": "YulIdentifier",
                                          "src": "285:6:15"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "270:6:15"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "270:22:15"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "270:22:15"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "227:5:15"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "name": "value",
                                            "nodeType": "YulIdentifier",
                                            "src": "238:5:15"
                                          },
                                          {
                                            "arguments": [
                                              {
                                                "arguments": [
                                                  {
                                                    "kind": "number",
                                                    "nodeType": "YulLiteral",
                                                    "src": "253:3:15",
                                                    "type": "",
                                                    "value": "160"
                                                  },
                                                  {
                                                    "kind": "number",
                                                    "nodeType": "YulLiteral",
                                                    "src": "258:1:15",
                                                    "type": "",
                                                    "value": "1"
                                                  }
                                                ],
                                                "functionName": {
                                                  "name": "shl",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "249:3:15"
                                                },
                                                "nodeType": "YulFunctionCall",
                                                "src": "249:11:15"
                                              },
                                              {
                                                "kind": "number",
                                                "nodeType": "YulLiteral",
                                                "src": "262:1:15",
                                                "type": "",
                                                "value": "1"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "sub",
                                              "nodeType": "YulIdentifier",
                                              "src": "245:3:15"
                                            },
                                            "nodeType": "YulFunctionCall",
                                            "src": "245:19:15"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "and",
                                          "nodeType": "YulIdentifier",
                                          "src": "234:3:15"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "234:31:15"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "eq",
                                      "nodeType": "YulIdentifier",
                                      "src": "224:2:15"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "224:42:15"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "217:6:15"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "217:50:15"
                              },
                              "nodeType": "YulIf",
                              "src": "214:2:15"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "303:15:15",
                              "value": {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "313:5:15"
                              },
                              "variableNames": [
                                {
                                  "name": "value0",
                                  "nodeType": "YulIdentifier",
                                  "src": "303:6:15"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_decode_tuple_t_address_fromMemory",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "61:9:15",
                            "type": ""
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulTypedName",
                            "src": "72:7:15",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "84:6:15",
                            "type": ""
                          }
                        ],
                        "src": "14:310:15"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "503:229:15",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "520:9:15"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "531:2:15",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "513:6:15"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "513:21:15"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "513:21:15"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "554:9:15"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "565:2:15",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "550:3:15"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "550:18:15"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "570:2:15",
                                    "type": "",
                                    "value": "39"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "543:6:15"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "543:30:15"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "543:30:15"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "593:9:15"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "604:2:15",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "589:3:15"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "589:18:15"
                                  },
                                  {
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "609:34:15",
                                    "type": "",
                                    "value": "Initializable: contract is initi"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "582:6:15"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "582:62:15"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "582:62:15"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "664:9:15"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "675:2:15",
                                        "type": "",
                                        "value": "96"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "660:3:15"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "660:18:15"
                                  },
                                  {
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "680:9:15",
                                    "type": "",
                                    "value": "alizing"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "653:6:15"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "653:37:15"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "653:37:15"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "699:27:15",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "711:9:15"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "722:3:15",
                                    "type": "",
                                    "value": "128"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "707:3:15"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "707:19:15"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "699:4:15"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_stringliteral_a53f5879e7518078ff19b2e3d6b41e757a87364ec6872787feb45bfc41131d1a__to_t_string_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "480:9:15",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "494:4:15",
                            "type": ""
                          }
                        ],
                        "src": "329:403:15"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "834:87:15",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "844:26:15",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "856:9:15"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "867:2:15",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "852:3:15"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "852:18:15"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "844:4:15"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "886:9:15"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "value0",
                                        "nodeType": "YulIdentifier",
                                        "src": "901:6:15"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "909:4:15",
                                        "type": "",
                                        "value": "0xff"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "and",
                                      "nodeType": "YulIdentifier",
                                      "src": "897:3:15"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "897:17:15"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "879:6:15"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "879:36:15"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "879:36:15"
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "803:9:15",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "814:6:15",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "825:4:15",
                            "type": ""
                          }
                        ],
                        "src": "737:184:15"
                      }
                    ]
                  },
                  "contents": "{\n    { }\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        let value := mload(headStart)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(value0, value0) }\n        value0 := value\n    }\n    function abi_encode_tuple_t_stringliteral_a53f5879e7518078ff19b2e3d6b41e757a87364ec6872787feb45bfc41131d1a__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 39)\n        mstore(add(headStart, 64), \"Initializable: contract is initi\")\n        mstore(add(headStart, 96), \"alizing\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xff))\n    }\n}",
                  "id": 15,
                  "language": "Yul",
                  "name": "#utility.yul"
                }
              ],
              "linkReferences": {},
              "object": "60a060405234801561001057600080fd5b506040516108c43803806108c483398101604081905261002f91610111565b6001600160601b0319606082901b166080528061004a610051565b505061013f565b600054610100900460ff16156100bd5760405162461bcd60e51b815260206004820152602760248201527f496e697469616c697a61626c653a20636f6e747261637420697320696e697469604482015266616c697a696e6760c81b606482015260840160405180910390fd5b60005460ff908116101561010f576000805460ff191660ff9081179091556040519081527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b565b600060208284031215610122578081fd5b81516001600160a01b0381168114610138578182fd5b9392505050565b60805160601c61075a61016a6000396000818160850152818161035c01526104b4015261075a6000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c806344ba1fca146100465780637b103999146100805780638129fc1c146100cc575b600080fd5b61006d7f79780c4583896c0ab374850d23846f307191c821213ca61eb599c254e854ee6d81565b6040519081526020015b60405180910390f35b6100a77f000000000000000000000000000000000000000000000000000000000000000081565b60405173ffffffffffffffffffffffffffffffffffffffff9091168152602001610077565b6100d46100d6565b005b600054610100900460ff16158080156100f65750600054600160ff909116105b80610117575061010530610274565b158015610117575060005460ff166001145b6101a8576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201527f647920696e697469616c697a656400000000000000000000000000000000000060648201526084015b60405180910390fd5b600080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00166001179055801561020657600080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff166101001790555b61020e610294565b801561027157600080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b50565b73ffffffffffffffffffffffffffffffffffffffff81163b15155b919050565b600054610100900460ff1661032b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602b60248201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960448201527f6e697469616c697a696e67000000000000000000000000000000000000000000606482015260840161019f565b6040517f8b4872b80000000000000000000000000000000000000000000000000000000081523060048201526000907f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1690638b4872b89060240160206040518083038186803b1580156103b357600080fd5b505afa1580156103c7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103eb9190610696565b905073ffffffffffffffffffffffffffffffffffffffff811661046a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601d60248201527f494d504c454d454e544154494f4e5f4e4f545f52454749535445524544000000604482015260640161019f565b6040517f9235dcf800000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff828116600483015260009182917f00000000000000000000000000000000000000000000000000000000000000001690639235dcf89060240160606040518083038186803b1580156104f657600080fd5b505afa15801561050a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061052e91906106d1565b9250925050811561059b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601960248201527f494d504c454d454e544154494f4e5f4445505245434154454400000000000000604482015260640161019f565b803073ffffffffffffffffffffffffffffffffffffffff166344ba1fca6040518163ffffffff1660e01b815260040160206040518083038186803b1580156105e257600080fd5b505afa1580156105f6573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061061a919061070c565b14610681576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f494e56414c49445f494d504c454d454e544154494f4e5f4e414d455350414345604482015260640161019f565b505050565b8051801515811461028f57600080fd5b6000602082840312156106a7578081fd5b815173ffffffffffffffffffffffffffffffffffffffff811681146106ca578182fd5b9392505050565b6000806000606084860312156106e5578182fd5b6106ee84610686565b92506106fc60208501610686565b9150604084015190509250925092565b60006020828403121561071d578081fd5b505191905056fea264697066735822122066b79d913ec8a2d8602f182f000eaafde1156a2438b78a276d8eb3e0cef2ea6a64736f6c63430008030033",
              "opcodes": "PUSH1 0xA0 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x8C4 CODESIZE SUB DUP1 PUSH2 0x8C4 DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH2 0x2F SWAP2 PUSH2 0x111 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB NOT PUSH1 0x60 DUP3 SWAP1 SHL AND PUSH1 0x80 MSTORE DUP1 PUSH2 0x4A PUSH2 0x51 JUMP JUMPDEST POP POP PUSH2 0x13F JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0xBD JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x27 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E697469616C697A61626C653A20636F6E747261637420697320696E697469 PUSH1 0x44 DUP3 ADD MSTORE PUSH7 0x616C697A696E67 PUSH1 0xC8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 SLOAD PUSH1 0xFF SWAP1 DUP2 AND LT ISZERO PUSH2 0x10F JUMPI PUSH1 0x0 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0xFF SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH32 0x7F26B83FF96E1F2B6A682F133852F6798A09C465DA95921460CEFB3847402498 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x122 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x138 JUMPI DUP2 DUP3 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH1 0x60 SHR PUSH2 0x75A PUSH2 0x16A PUSH1 0x0 CODECOPY PUSH1 0x0 DUP2 DUP2 PUSH1 0x85 ADD MSTORE DUP2 DUP2 PUSH2 0x35C ADD MSTORE PUSH2 0x4B4 ADD MSTORE PUSH2 0x75A PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x41 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x44BA1FCA EQ PUSH2 0x46 JUMPI DUP1 PUSH4 0x7B103999 EQ PUSH2 0x80 JUMPI DUP1 PUSH4 0x8129FC1C EQ PUSH2 0xCC JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x6D PUSH32 0x79780C4583896C0AB374850D23846F307191C821213CA61EB599C254E854EE6D DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xA7 PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x77 JUMP JUMPDEST PUSH2 0xD4 PUSH2 0xD6 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND ISZERO DUP1 DUP1 ISZERO PUSH2 0xF6 JUMPI POP PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0xFF SWAP1 SWAP2 AND LT JUMPDEST DUP1 PUSH2 0x117 JUMPI POP PUSH2 0x105 ADDRESS PUSH2 0x274 JUMP JUMPDEST ISZERO DUP1 ISZERO PUSH2 0x117 JUMPI POP PUSH1 0x0 SLOAD PUSH1 0xFF AND PUSH1 0x1 EQ JUMPDEST PUSH2 0x1A8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E697469616C697A61626C653A20636F6E747261637420697320616C726561 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x647920696E697469616C697A6564000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00 AND PUSH1 0x1 OR SWAP1 SSTORE DUP1 ISZERO PUSH2 0x206 JUMPI PUSH1 0x0 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00FF AND PUSH2 0x100 OR SWAP1 SSTORE JUMPDEST PUSH2 0x20E PUSH2 0x294 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x271 JUMPI PUSH1 0x0 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00FF AND SWAP1 SSTORE PUSH1 0x40 MLOAD PUSH1 0x1 DUP2 MSTORE PUSH32 0x7F26B83FF96E1F2B6A682F133852F6798A09C465DA95921460CEFB3847402498 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMPDEST POP JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND EXTCODESIZE ISZERO ISZERO JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND PUSH2 0x32B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E697469616C697A61626C653A20636F6E7472616374206973206E6F742069 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6E697469616C697A696E67000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x19F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x8B4872B800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x0 SWAP1 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH4 0x8B4872B8 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x3B3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x3C7 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x3EB SWAP2 SWAP1 PUSH2 0x696 JUMP JUMPDEST SWAP1 POP PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND PUSH2 0x46A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x494D504C454D454E544154494F4E5F4E4F545F52454749535445524544000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x19F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x9235DCF800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x0 SWAP2 DUP3 SWAP2 PUSH32 0x0 AND SWAP1 PUSH4 0x9235DCF8 SWAP1 PUSH1 0x24 ADD PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x4F6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x50A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x52E SWAP2 SWAP1 PUSH2 0x6D1 JUMP JUMPDEST SWAP3 POP SWAP3 POP POP DUP2 ISZERO PUSH2 0x59B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x494D504C454D454E544154494F4E5F4445505245434154454400000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x19F JUMP JUMPDEST DUP1 ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x44BA1FCA PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x5E2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x5F6 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x61A SWAP2 SWAP1 PUSH2 0x70C JUMP JUMPDEST EQ PUSH2 0x681 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x494E56414C49445F494D504C454D454E544154494F4E5F4E414D455350414345 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x19F JUMP JUMPDEST POP POP POP JUMP JUMPDEST DUP1 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x28F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x6A7 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND DUP2 EQ PUSH2 0x6CA JUMPI DUP2 DUP3 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x6E5 JUMPI DUP2 DUP3 REVERT JUMPDEST PUSH2 0x6EE DUP5 PUSH2 0x686 JUMP JUMPDEST SWAP3 POP PUSH2 0x6FC PUSH1 0x20 DUP6 ADD PUSH2 0x686 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD MLOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x71D JUMPI DUP1 DUP2 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH7 0xB79D913EC8A2D8 PUSH1 0x2F XOR 0x2F STOP 0xE 0xAA REVERT 0xE1 ISZERO PUSH11 0x2438B78A276D8EB3E0CEF2 0xEA PUSH11 0x64736F6C63430008030033 ",
              "sourceMap": "120:389:14:-:0;;;296:132;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;;1590:20:6;;;;;;;354:8:14;1393:22:9::1;:20;:22::i;:::-;1324:98:::0;296:132:14;120:389;;5366:279:3;5434:13;;;;;;;5433:14;5425:66;;;;-1:-1:-1;;;5425:66:3;;531:2:15;5425:66:3;;;513:21:15;570:2;550:18;;;543:30;609:34;589:18;;;582:62;-1:-1:-1;;;660:18:15;;;653:37;707:19;;5425:66:3;;;;;;;;5505:12;;5520:15;5505:12;;;:30;5501:138;;;5551:12;:30;;-1:-1:-1;;5551:30:3;5566:15;5551:30;;;;;;5600:28;;879:36:15;;;5600:28:3;;867:2:15;852:18;5600:28:3;;;;;;;5501:138;5366:279::o;14:310:15:-;;137:2;125:9;116:7;112:23;108:32;105:2;;;158:6;150;143:22;105:2;189:16;;-1:-1:-1;;;;;234:31:15;;224:42;;214:2;;285:6;277;270:22;214:2;313:5;95:229;-1:-1:-1;;;95:229:15:o;834:87::-;120:389:14;;;;;;;;;;;;"
            },
            "deployedBytecode": {
              "generatedSources": [
                {
                  "ast": {
                    "nodeType": "YulBlock",
                    "src": "0:3586:15",
                    "statements": [
                      {
                        "nodeType": "YulBlock",
                        "src": "6:3:15",
                        "statements": []
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "71:107:15",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "81:22:15",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "offset",
                                    "nodeType": "YulIdentifier",
                                    "src": "96:6:15"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nodeType": "YulIdentifier",
                                  "src": "90:5:15"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "90:13:15"
                              },
                              "variableNames": [
                                {
                                  "name": "value",
                                  "nodeType": "YulIdentifier",
                                  "src": "81:5:15"
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "156:16:15",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "165:1:15",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "168:1:15",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "158:6:15"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "158:12:15"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "158:12:15"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "125:5:15"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "arguments": [
                                              {
                                                "name": "value",
                                                "nodeType": "YulIdentifier",
                                                "src": "146:5:15"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "iszero",
                                              "nodeType": "YulIdentifier",
                                              "src": "139:6:15"
                                            },
                                            "nodeType": "YulFunctionCall",
                                            "src": "139:13:15"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "iszero",
                                          "nodeType": "YulIdentifier",
                                          "src": "132:6:15"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "132:21:15"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "eq",
                                      "nodeType": "YulIdentifier",
                                      "src": "122:2:15"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "122:32:15"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "115:6:15"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "115:40:15"
                              },
                              "nodeType": "YulIf",
                              "src": "112:2:15"
                            }
                          ]
                        },
                        "name": "abi_decode_bool_fromMemory",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "offset",
                            "nodeType": "YulTypedName",
                            "src": "50:6:15",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "61:5:15",
                            "type": ""
                          }
                        ],
                        "src": "14:164:15"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "264:252:15",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "310:26:15",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "name": "value0",
                                          "nodeType": "YulIdentifier",
                                          "src": "319:6:15"
                                        },
                                        {
                                          "name": "value0",
                                          "nodeType": "YulIdentifier",
                                          "src": "327:6:15"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "312:6:15"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "312:22:15"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "312:22:15"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "285:7:15"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "294:9:15"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "281:3:15"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "281:23:15"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "306:2:15",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "slt",
                                  "nodeType": "YulIdentifier",
                                  "src": "277:3:15"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "277:32:15"
                              },
                              "nodeType": "YulIf",
                              "src": "274:2:15"
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "345:29:15",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "364:9:15"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nodeType": "YulIdentifier",
                                  "src": "358:5:15"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "358:16:15"
                              },
                              "variables": [
                                {
                                  "name": "value",
                                  "nodeType": "YulTypedName",
                                  "src": "349:5:15",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "460:26:15",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "name": "value0",
                                          "nodeType": "YulIdentifier",
                                          "src": "469:6:15"
                                        },
                                        {
                                          "name": "value0",
                                          "nodeType": "YulIdentifier",
                                          "src": "477:6:15"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "462:6:15"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "462:22:15"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "462:22:15"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "396:5:15"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "name": "value",
                                            "nodeType": "YulIdentifier",
                                            "src": "407:5:15"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "414:42:15",
                                            "type": "",
                                            "value": "0xffffffffffffffffffffffffffffffffffffffff"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "and",
                                          "nodeType": "YulIdentifier",
                                          "src": "403:3:15"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "403:54:15"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "eq",
                                      "nodeType": "YulIdentifier",
                                      "src": "393:2:15"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "393:65:15"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "386:6:15"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "386:73:15"
                              },
                              "nodeType": "YulIf",
                              "src": "383:2:15"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "495:15:15",
                              "value": {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "505:5:15"
                              },
                              "variableNames": [
                                {
                                  "name": "value0",
                                  "nodeType": "YulIdentifier",
                                  "src": "495:6:15"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_decode_tuple_t_address_fromMemory",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "230:9:15",
                            "type": ""
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulTypedName",
                            "src": "241:7:15",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "253:6:15",
                            "type": ""
                          }
                        ],
                        "src": "183:333:15"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "630:243:15",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "676:26:15",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "name": "value1",
                                          "nodeType": "YulIdentifier",
                                          "src": "685:6:15"
                                        },
                                        {
                                          "name": "value1",
                                          "nodeType": "YulIdentifier",
                                          "src": "693:6:15"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "678:6:15"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "678:22:15"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "678:22:15"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "651:7:15"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "660:9:15"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "647:3:15"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "647:23:15"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "672:2:15",
                                    "type": "",
                                    "value": "96"
                                  }
                                ],
                                "functionName": {
                                  "name": "slt",
                                  "nodeType": "YulIdentifier",
                                  "src": "643:3:15"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "643:32:15"
                              },
                              "nodeType": "YulIf",
                              "src": "640:2:15"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "711:47:15",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "748:9:15"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_decode_bool_fromMemory",
                                  "nodeType": "YulIdentifier",
                                  "src": "721:26:15"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "721:37:15"
                              },
                              "variableNames": [
                                {
                                  "name": "value0",
                                  "nodeType": "YulIdentifier",
                                  "src": "711:6:15"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "767:56:15",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "808:9:15"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "819:2:15",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "804:3:15"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "804:18:15"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_decode_bool_fromMemory",
                                  "nodeType": "YulIdentifier",
                                  "src": "777:26:15"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "777:46:15"
                              },
                              "variableNames": [
                                {
                                  "name": "value1",
                                  "nodeType": "YulIdentifier",
                                  "src": "767:6:15"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "832:35:15",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "852:9:15"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "863:2:15",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "848:3:15"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "848:18:15"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nodeType": "YulIdentifier",
                                  "src": "842:5:15"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "842:25:15"
                              },
                              "variableNames": [
                                {
                                  "name": "value2",
                                  "nodeType": "YulIdentifier",
                                  "src": "832:6:15"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_decode_tuple_t_boolt_boolt_bytes32_fromMemory",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "580:9:15",
                            "type": ""
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulTypedName",
                            "src": "591:7:15",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "603:6:15",
                            "type": ""
                          },
                          {
                            "name": "value1",
                            "nodeType": "YulTypedName",
                            "src": "611:6:15",
                            "type": ""
                          },
                          {
                            "name": "value2",
                            "nodeType": "YulTypedName",
                            "src": "619:6:15",
                            "type": ""
                          }
                        ],
                        "src": "521:352:15"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "959:113:15",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "1005:26:15",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "name": "value0",
                                          "nodeType": "YulIdentifier",
                                          "src": "1014:6:15"
                                        },
                                        {
                                          "name": "value0",
                                          "nodeType": "YulIdentifier",
                                          "src": "1022:6:15"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "1007:6:15"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "1007:22:15"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "1007:22:15"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "980:7:15"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "989:9:15"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "976:3:15"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "976:23:15"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1001:2:15",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "slt",
                                  "nodeType": "YulIdentifier",
                                  "src": "972:3:15"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "972:32:15"
                              },
                              "nodeType": "YulIf",
                              "src": "969:2:15"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "1040:26:15",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "1056:9:15"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nodeType": "YulIdentifier",
                                  "src": "1050:5:15"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1050:16:15"
                              },
                              "variableNames": [
                                {
                                  "name": "value0",
                                  "nodeType": "YulIdentifier",
                                  "src": "1040:6:15"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_decode_tuple_t_bytes32_fromMemory",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "925:9:15",
                            "type": ""
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulTypedName",
                            "src": "936:7:15",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "948:6:15",
                            "type": ""
                          }
                        ],
                        "src": "878:194:15"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "1178:125:15",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "1188:26:15",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "1200:9:15"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1211:2:15",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "1196:3:15"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1196:18:15"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "1188:4:15"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "1230:9:15"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "value0",
                                        "nodeType": "YulIdentifier",
                                        "src": "1245:6:15"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "1253:42:15",
                                        "type": "",
                                        "value": "0xffffffffffffffffffffffffffffffffffffffff"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "and",
                                      "nodeType": "YulIdentifier",
                                      "src": "1241:3:15"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1241:55:15"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "1223:6:15"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1223:74:15"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "1223:74:15"
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "1147:9:15",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "1158:6:15",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "1169:4:15",
                            "type": ""
                          }
                        ],
                        "src": "1077:226:15"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "1409:76:15",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "1419:26:15",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "1431:9:15"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1442:2:15",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "1427:3:15"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1427:18:15"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "1419:4:15"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "1461:9:15"
                                  },
                                  {
                                    "name": "value0",
                                    "nodeType": "YulIdentifier",
                                    "src": "1472:6:15"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "1454:6:15"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1454:25:15"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "1454:25:15"
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "1378:9:15",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "1389:6:15",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "1400:4:15",
                            "type": ""
                          }
                        ],
                        "src": "1308:177:15"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "1597:87:15",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "1607:26:15",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "1619:9:15"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1630:2:15",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "1615:3:15"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1615:18:15"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "1607:4:15"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "1649:9:15"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "value0",
                                        "nodeType": "YulIdentifier",
                                        "src": "1664:6:15"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "1672:4:15",
                                        "type": "",
                                        "value": "0xff"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "and",
                                      "nodeType": "YulIdentifier",
                                      "src": "1660:3:15"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1660:17:15"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "1642:6:15"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1642:36:15"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "1642:36:15"
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_rational_1_by_1__to_t_uint8__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "1566:9:15",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "1577:6:15",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "1588:4:15",
                            "type": ""
                          }
                        ],
                        "src": "1490:194:15"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "1863:179:15",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "1880:9:15"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1891:2:15",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "1873:6:15"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1873:21:15"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "1873:21:15"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "1914:9:15"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "1925:2:15",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "1910:3:15"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1910:18:15"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1930:2:15",
                                    "type": "",
                                    "value": "29"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "1903:6:15"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1903:30:15"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "1903:30:15"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "1953:9:15"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "1964:2:15",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "1949:3:15"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1949:18:15"
                                  },
                                  {
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "1969:31:15",
                                    "type": "",
                                    "value": "IMPLEMENTATION_NOT_REGISTERED"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "1942:6:15"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1942:59:15"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "1942:59:15"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "2010:26:15",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "2022:9:15"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2033:2:15",
                                    "type": "",
                                    "value": "96"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "2018:3:15"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2018:18:15"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "2010:4:15"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_stringliteral_08da2425c2bb79d379d97d111ca6f8eeed0e35247ec89d81b6c7e6238420b675__to_t_string_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "1840:9:15",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "1854:4:15",
                            "type": ""
                          }
                        ],
                        "src": "1689:353:15"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "2221:175:15",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "2238:9:15"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2249:2:15",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "2231:6:15"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2231:21:15"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "2231:21:15"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "2272:9:15"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "2283:2:15",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "2268:3:15"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "2268:18:15"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2288:2:15",
                                    "type": "",
                                    "value": "25"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "2261:6:15"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2261:30:15"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "2261:30:15"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "2311:9:15"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "2322:2:15",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "2307:3:15"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "2307:18:15"
                                  },
                                  {
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "2327:27:15",
                                    "type": "",
                                    "value": "IMPLEMENTATION_DEPRECATED"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "2300:6:15"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2300:55:15"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "2300:55:15"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "2364:26:15",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "2376:9:15"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2387:2:15",
                                    "type": "",
                                    "value": "96"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "2372:3:15"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2372:18:15"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "2364:4:15"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_stringliteral_1b399a63a49fe1f304df5c43235a67416e5723e6bbe3c4e82966d9b2a9a9f199__to_t_string_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "2198:9:15",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "2212:4:15",
                            "type": ""
                          }
                        ],
                        "src": "2047:349:15"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "2575:182:15",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "2592:9:15"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2603:2:15",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "2585:6:15"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2585:21:15"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "2585:21:15"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "2626:9:15"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "2637:2:15",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "2622:3:15"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "2622:18:15"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2642:2:15",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "2615:6:15"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2615:30:15"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "2615:30:15"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "2665:9:15"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "2676:2:15",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "2661:3:15"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "2661:18:15"
                                  },
                                  {
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "2681:34:15",
                                    "type": "",
                                    "value": "INVALID_IMPLEMENTATION_NAMESPACE"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "2654:6:15"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2654:62:15"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "2654:62:15"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "2725:26:15",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "2737:9:15"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2748:2:15",
                                    "type": "",
                                    "value": "96"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "2733:3:15"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2733:18:15"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "2725:4:15"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_stringliteral_749fa90c0042742458a18eef568a1a6d40407387d12f68d10c8b730f2c6f9add__to_t_string_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "2552:9:15",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "2566:4:15",
                            "type": ""
                          }
                        ],
                        "src": "2401:356:15"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "2936:236:15",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "2953:9:15"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2964:2:15",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "2946:6:15"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2946:21:15"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "2946:21:15"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "2987:9:15"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "2998:2:15",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "2983:3:15"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "2983:18:15"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "3003:2:15",
                                    "type": "",
                                    "value": "46"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "2976:6:15"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2976:30:15"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "2976:30:15"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "3026:9:15"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "3037:2:15",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "3022:3:15"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "3022:18:15"
                                  },
                                  {
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "3042:34:15",
                                    "type": "",
                                    "value": "Initializable: contract is alrea"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "3015:6:15"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3015:62:15"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "3015:62:15"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "3097:9:15"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "3108:2:15",
                                        "type": "",
                                        "value": "96"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "3093:3:15"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "3093:18:15"
                                  },
                                  {
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "3113:16:15",
                                    "type": "",
                                    "value": "dy initialized"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "3086:6:15"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3086:44:15"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "3086:44:15"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "3139:27:15",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "3151:9:15"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "3162:3:15",
                                    "type": "",
                                    "value": "128"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "3147:3:15"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3147:19:15"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "3139:4:15"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759__to_t_string_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "2913:9:15",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "2927:4:15",
                            "type": ""
                          }
                        ],
                        "src": "2762:410:15"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "3351:233:15",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "3368:9:15"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "3379:2:15",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "3361:6:15"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3361:21:15"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "3361:21:15"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "3402:9:15"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "3413:2:15",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "3398:3:15"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "3398:18:15"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "3418:2:15",
                                    "type": "",
                                    "value": "43"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "3391:6:15"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3391:30:15"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "3391:30:15"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "3441:9:15"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "3452:2:15",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "3437:3:15"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "3437:18:15"
                                  },
                                  {
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "3457:34:15",
                                    "type": "",
                                    "value": "Initializable: contract is not i"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "3430:6:15"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3430:62:15"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "3430:62:15"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "3512:9:15"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "3523:2:15",
                                        "type": "",
                                        "value": "96"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "3508:3:15"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "3508:18:15"
                                  },
                                  {
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "3528:13:15",
                                    "type": "",
                                    "value": "nitializing"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "3501:6:15"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3501:41:15"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "3501:41:15"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "3551:27:15",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "3563:9:15"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "3574:3:15",
                                    "type": "",
                                    "value": "128"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "3559:3:15"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3559:19:15"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "3551:4:15"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_stringliteral_d688db918bb9dd50354922faa108595679886fe9ff08046ad1ffe30aaea55f8b__to_t_string_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "3328:9:15",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "3342:4:15",
                            "type": ""
                          }
                        ],
                        "src": "3177:407:15"
                      }
                    ]
                  },
                  "contents": "{\n    { }\n    function abi_decode_bool_fromMemory(offset) -> value\n    {\n        value := mload(offset)\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        let value := mload(headStart)\n        if iszero(eq(value, and(value, 0xffffffffffffffffffffffffffffffffffffffff))) { revert(value0, value0) }\n        value0 := value\n    }\n    function abi_decode_tuple_t_boolt_boolt_bytes32_fromMemory(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(value1, value1) }\n        value0 := abi_decode_bool_fromMemory(headStart)\n        value1 := abi_decode_bool_fromMemory(add(headStart, 32))\n        value2 := mload(add(headStart, 64))\n    }\n    function abi_decode_tuple_t_bytes32_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        value0 := mload(headStart)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n    }\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_rational_1_by_1__to_t_uint8__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xff))\n    }\n    function abi_encode_tuple_t_stringliteral_08da2425c2bb79d379d97d111ca6f8eeed0e35247ec89d81b6c7e6238420b675__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 29)\n        mstore(add(headStart, 64), \"IMPLEMENTATION_NOT_REGISTERED\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_1b399a63a49fe1f304df5c43235a67416e5723e6bbe3c4e82966d9b2a9a9f199__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 25)\n        mstore(add(headStart, 64), \"IMPLEMENTATION_DEPRECATED\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_749fa90c0042742458a18eef568a1a6d40407387d12f68d10c8b730f2c6f9add__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"INVALID_IMPLEMENTATION_NAMESPACE\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 46)\n        mstore(add(headStart, 64), \"Initializable: contract is alrea\")\n        mstore(add(headStart, 96), \"dy initialized\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_d688db918bb9dd50354922faa108595679886fe9ff08046ad1ffe30aaea55f8b__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 43)\n        mstore(add(headStart, 64), \"Initializable: contract is not i\")\n        mstore(add(headStart, 96), \"nitializing\")\n        tail := add(headStart, 128)\n    }\n}",
                  "id": 15,
                  "language": "Yul",
                  "name": "#utility.yul"
                }
              ],
              "immutableReferences": {
                "766": [
                  {
                    "length": 32,
                    "start": 133
                  },
                  {
                    "length": 32,
                    "start": 860
                  },
                  {
                    "length": 32,
                    "start": 1204
                  }
                ]
              },
              "linkReferences": {},
              "object": "608060405234801561001057600080fd5b50600436106100415760003560e01c806344ba1fca146100465780637b103999146100805780638129fc1c146100cc575b600080fd5b61006d7f79780c4583896c0ab374850d23846f307191c821213ca61eb599c254e854ee6d81565b6040519081526020015b60405180910390f35b6100a77f000000000000000000000000000000000000000000000000000000000000000081565b60405173ffffffffffffffffffffffffffffffffffffffff9091168152602001610077565b6100d46100d6565b005b600054610100900460ff16158080156100f65750600054600160ff909116105b80610117575061010530610274565b158015610117575060005460ff166001145b6101a8576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201527f647920696e697469616c697a656400000000000000000000000000000000000060648201526084015b60405180910390fd5b600080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00166001179055801561020657600080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff166101001790555b61020e610294565b801561027157600080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b50565b73ffffffffffffffffffffffffffffffffffffffff81163b15155b919050565b600054610100900460ff1661032b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602b60248201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960448201527f6e697469616c697a696e67000000000000000000000000000000000000000000606482015260840161019f565b6040517f8b4872b80000000000000000000000000000000000000000000000000000000081523060048201526000907f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1690638b4872b89060240160206040518083038186803b1580156103b357600080fd5b505afa1580156103c7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103eb9190610696565b905073ffffffffffffffffffffffffffffffffffffffff811661046a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601d60248201527f494d504c454d454e544154494f4e5f4e4f545f52454749535445524544000000604482015260640161019f565b6040517f9235dcf800000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff828116600483015260009182917f00000000000000000000000000000000000000000000000000000000000000001690639235dcf89060240160606040518083038186803b1580156104f657600080fd5b505afa15801561050a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061052e91906106d1565b9250925050811561059b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601960248201527f494d504c454d454e544154494f4e5f4445505245434154454400000000000000604482015260640161019f565b803073ffffffffffffffffffffffffffffffffffffffff166344ba1fca6040518163ffffffff1660e01b815260040160206040518083038186803b1580156105e257600080fd5b505afa1580156105f6573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061061a919061070c565b14610681576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f494e56414c49445f494d504c454d454e544154494f4e5f4e414d455350414345604482015260640161019f565b505050565b8051801515811461028f57600080fd5b6000602082840312156106a7578081fd5b815173ffffffffffffffffffffffffffffffffffffffff811681146106ca578182fd5b9392505050565b6000806000606084860312156106e5578182fd5b6106ee84610686565b92506106fc60208501610686565b9150604084015190509250925092565b60006020828403121561071d578081fd5b505191905056fea264697066735822122066b79d913ec8a2d8602f182f000eaafde1156a2438b78a276d8eb3e0cef2ea6a64736f6c63430008030033",
              "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x41 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x44BA1FCA EQ PUSH2 0x46 JUMPI DUP1 PUSH4 0x7B103999 EQ PUSH2 0x80 JUMPI DUP1 PUSH4 0x8129FC1C EQ PUSH2 0xCC JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x6D PUSH32 0x79780C4583896C0AB374850D23846F307191C821213CA61EB599C254E854EE6D DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xA7 PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x77 JUMP JUMPDEST PUSH2 0xD4 PUSH2 0xD6 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND ISZERO DUP1 DUP1 ISZERO PUSH2 0xF6 JUMPI POP PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0xFF SWAP1 SWAP2 AND LT JUMPDEST DUP1 PUSH2 0x117 JUMPI POP PUSH2 0x105 ADDRESS PUSH2 0x274 JUMP JUMPDEST ISZERO DUP1 ISZERO PUSH2 0x117 JUMPI POP PUSH1 0x0 SLOAD PUSH1 0xFF AND PUSH1 0x1 EQ JUMPDEST PUSH2 0x1A8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E697469616C697A61626C653A20636F6E747261637420697320616C726561 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x647920696E697469616C697A6564000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00 AND PUSH1 0x1 OR SWAP1 SSTORE DUP1 ISZERO PUSH2 0x206 JUMPI PUSH1 0x0 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00FF AND PUSH2 0x100 OR SWAP1 SSTORE JUMPDEST PUSH2 0x20E PUSH2 0x294 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x271 JUMPI PUSH1 0x0 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00FF AND SWAP1 SSTORE PUSH1 0x40 MLOAD PUSH1 0x1 DUP2 MSTORE PUSH32 0x7F26B83FF96E1F2B6A682F133852F6798A09C465DA95921460CEFB3847402498 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMPDEST POP JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND EXTCODESIZE ISZERO ISZERO JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND PUSH2 0x32B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E697469616C697A61626C653A20636F6E7472616374206973206E6F742069 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6E697469616C697A696E67000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x19F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x8B4872B800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x0 SWAP1 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH4 0x8B4872B8 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x3B3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x3C7 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x3EB SWAP2 SWAP1 PUSH2 0x696 JUMP JUMPDEST SWAP1 POP PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND PUSH2 0x46A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x494D504C454D454E544154494F4E5F4E4F545F52454749535445524544000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x19F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x9235DCF800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x0 SWAP2 DUP3 SWAP2 PUSH32 0x0 AND SWAP1 PUSH4 0x9235DCF8 SWAP1 PUSH1 0x24 ADD PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x4F6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x50A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x52E SWAP2 SWAP1 PUSH2 0x6D1 JUMP JUMPDEST SWAP3 POP SWAP3 POP POP DUP2 ISZERO PUSH2 0x59B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x494D504C454D454E544154494F4E5F4445505245434154454400000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x19F JUMP JUMPDEST DUP1 ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x44BA1FCA PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x5E2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x5F6 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x61A SWAP2 SWAP1 PUSH2 0x70C JUMP JUMPDEST EQ PUSH2 0x681 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x494E56414C49445F494D504C454D454E544154494F4E5F4E414D455350414345 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x19F JUMP JUMPDEST POP POP POP JUMP JUMPDEST DUP1 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x28F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x6A7 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND DUP2 EQ PUSH2 0x6CA JUMPI DUP2 DUP3 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x6E5 JUMPI DUP2 DUP3 REVERT JUMPDEST PUSH2 0x6EE DUP5 PUSH2 0x686 JUMP JUMPDEST SWAP3 POP PUSH2 0x6FC PUSH1 0x20 DUP6 ADD PUSH2 0x686 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD MLOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x71D JUMPI DUP1 DUP2 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH7 0xB79D913EC8A2D8 PUSH1 0x2F XOR 0x2F STOP 0xE 0xAA REVERT 0xE1 ISZERO PUSH11 0x2438B78A276D8EB3E0CEF2 0xEA PUSH11 0x64736F6C63430008030033 ",
              "sourceMap": "120:389:14:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;198:91;;243:46;198:91;;;;;1454:25:15;;;1442:2;1427:18;198:91:14;;;;;;;;1340:42:6;;;;;;;;1253::15;1241:55;;;1223:74;;1211:2;1196:18;1340:42:6;1178:125:15;434:73:14;;;:::i;:::-;;;3100:19:3;3123:13;;;;;;3122:14;;3168:34;;;;-1:-1:-1;3186:12:3;;3201:1;3186:12;;;;:16;3168:34;3167:97;;;;3209:33;3236:4;3209:18;:33::i;:::-;3208:34;:55;;;;-1:-1:-1;3246:12:3;;;;;:17;3208:55;3146:190;;;;;;;2964:2:15;3146:190:3;;;2946:21:15;3003:2;2983:18;;;2976:30;3042:34;3022:18;;;3015:62;3113:16;3093:18;;;3086:44;3147:19;;3146:190:3;;;;;;;;;3346:12;:16;;;;3361:1;3346:16;;;3372:65;;;;3406:13;:20;;;;;;;;3372:65;487:13:14::1;:11;:13::i;:::-;3461:14:3::0;3457:99;;;3507:5;3491:21;;;;;;3531:14;;-1:-1:-1;1642:36:15;;3531:14:3;;1630:2:15;1615:18;3531:14:3;;;;;;;3457:99;434:73:14;:::o;1175:320:4:-;1465:19;;;;:23;;1175:320;;;;:::o;1641:476:9:-;4888:13:3;;;;;;;4880:69;;;;;;;3379:2:15;4880:69:3;;;3361:21:15;3418:2;3398:18;;;3391:30;3457:34;3437:18;;;3430:62;3528:13;3508:18;;;3501:41;3559:19;;4880:69:3;3351:233:15;4880:69:3;1730:51:9::1;::::0;;;;1775:4:::1;1730:51;::::0;::::1;1223:74:15::0;1705:22:9::1;::::0;1740:8:::1;1730:36;;::::0;::::1;::::0;1196:18:15;;1730:51:9::1;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1705:76:::0;-1:-1:-1;1799:28:9::1;::::0;::::1;1791:70;;;::::0;::::1;::::0;;1891:2:15;1791:70:9::1;::::0;::::1;1873:21:15::0;1930:2;1910:18;;;1903:30;1969:31;1949:18;;;1942:59;2018:18;;1791:70:9::1;1863:179:15::0;1791:70:9::1;1913:54;::::0;;;;:38:::1;1241:55:15::0;;;1913:54:9::1;::::0;::::1;1223:74:15::0;1875:15:9::1;::::0;;;1923:8:::1;1913:38;::::0;::::1;::::0;1196:18:15;;1913:54:9::1;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1872:95;;;;;1986:10;1985:11;1977:49;;;::::0;::::1;::::0;;2249:2:15;1977:49:9::1;::::0;::::1;2231:21:15::0;2288:2;2268:18;;;2261:30;2327:27;2307:18;;;2300:55;2372:18;;1977:49:9::1;2221:175:15::0;1977:49:9::1;2064:9;2044:4;:14;;;:16;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:29;2036:74;;;::::0;::::1;::::0;;2603:2:15;2036:74:9::1;::::0;::::1;2585:21:15::0;;;2622:18;;;2615:30;2681:34;2661:18;;;2654:62;2733:18;;2036:74:9::1;2575:182:15::0;2036:74:9::1;4959:1:3;;;1641:476:9:o:0;14:164:15:-;90:13;;139;;132:21;122:32;;112:2;;168:1;165;158:12;183:333;;306:2;294:9;285:7;281:23;277:32;274:2;;;327:6;319;312:22;274:2;364:9;358:16;414:42;407:5;403:54;396:5;393:65;383:2;;477:6;469;462:22;383:2;505:5;264:252;-1:-1:-1;;;264:252:15:o;521:352::-;;;;672:2;660:9;651:7;647:23;643:32;640:2;;;693:6;685;678:22;640:2;721:37;748:9;721:37;:::i;:::-;711:47;;777:46;819:2;808:9;804:18;777:46;:::i;:::-;767:56;;863:2;852:9;848:18;842:25;832:35;;630:243;;;;;:::o;878:194::-;;1001:2;989:9;980:7;976:23;972:32;969:2;;;1022:6;1014;1007:22;969:2;-1:-1:-1;1050:16:15;;959:113;-1:-1:-1;959:113:15:o"
            },
            "methodIdentifiers": {
              "NAMESPACE()": "44ba1fca",
              "initialize()": "8129fc1c",
              "registry()": "7b103999"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.3+commit.8d00100c\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"registry\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"NAMESPACE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"registry\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"stateVariables\":{\"NAMESPACE\":{\"details\":\"Tells the namespace under which the implementation is registered in the Mimic Registry\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/test/InitializableImplementationMock.sol\":\"InitializableImplementationMock\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":10000},\"remappings\":[]},\"sources\":{\"@mimic-fi/v2-helpers/contracts/auth/IAuthorizer.sol\":{\"keccak256\":\"0x7e5d1c440a02d16c3d62d8ca982749b4cf044ba14e0a40c4f2fe23257a5304d2\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://bdad507d0bdc80eb1ca9fc01d4ef4ff5e0258b631305033b5945aad85fa5068a\",\"dweb:/ipfs/QmaRdsSorrzkxYpeTNMrZvH5RbbM9JYPQ9HyNAcQGmXNAe\"]},\"@openzeppelin/contracts/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x2a21b14ff90012878752f230d3ffd5c3405e5938d06c97a7d89c0a64561d0d66\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3313a8f9bb1f9476857c9050067b31982bf2140b83d84f3bc0cec1f62bbe947f\",\"dweb:/ipfs/Qma17Pk8NRe7aB4UD3jjVxk7nSFaov3eQyv86hcyqkwJRV\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xd6153ce99bcdcce22b124f755e72553295be6abcd63804cfdffceb188b8bef10\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://35c47bece3c03caaa07fab37dd2bb3413bfbca20db7bd9895024390e0a469487\",\"dweb:/ipfs/QmPGWT2x3QHcKxqe6gRmAkdakhbaRgx3DLzcakHz5M4eXG\"]},\"contracts/implementations/BaseImplementation.sol\":{\"keccak256\":\"0x2cb9bedf44e1c7dc11d9b4024df8910152b7d4902336aae6b7629d3f78db12ee\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://171c638ab1f4d887923c08a819d99b9acf635b9702099220e7881dda789597d7\",\"dweb:/ipfs/QmQ1aw3hyeScFKjazTYZDYBS2Smqib5fXRgfwiibikac8P\"]},\"contracts/implementations/IImplementation.sol\":{\"keccak256\":\"0x621ffadea8fdc214f95fa95ff480ebc7f5f51d9678544883def90b59a3851f78\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://9933e44069dee9bf8410f405d734b1320e2b26f11108e723576f9df6ff410b59\",\"dweb:/ipfs/QmfEmrt9bRhjN86BJRST7ZSjkDjegJgd9JtLheizUNzDwN\"]},\"contracts/implementations/InitializableImplementation.sol\":{\"keccak256\":\"0x5f5e24745c58ed73a10fa8988ecd8094876950cb6dfab4081cebf12ae76eb25f\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://5c057836fd2047c240fcb92bbfaac9ffb690bb5874a46d8050238c28b04ebca6\",\"dweb:/ipfs/QmdKrYeyrUrgens8wofTYNBSycsRrNsaCdUzKysTeyCELM\"]},\"contracts/registry/IRegistry.sol\":{\"keccak256\":\"0xa7d49ecd7b34ed1fdb3cd114432e037d88cf097ceadec01fb5e3d7895d617a65\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://352176031f1aa60f58daf223f0feaeb4fc892107d7a94deec4f25c1cfe7d934b\",\"dweb:/ipfs/QmVnujTPV3v76xU4QpMysSriUEfzPkLci7zaxfLnY27zRw\"]},\"contracts/test/InitializableImplementationMock.sol\":{\"keccak256\":\"0xeb0e472ab093c79f53b62b723ed087e746144fdcf91729debb34783fc3ccade3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://af2ed5f52410eed1b1d2ba0c7da4a27aed3eeaa5891dd7e0bacad8a6b128dfb6\",\"dweb:/ipfs/QmTgqckAHKyg8xDAUjL8nZpzsGWfHKAnAAme4cHa2Ak78i\"]}},\"version\":1}"
        }
      }
    },
    "sources": {
      "@mimic-fi/v2-helpers/contracts/auth/Authorizer.sol": {
        "ast": {
          "absolutePath": "@mimic-fi/v2-helpers/contracts/auth/Authorizer.sol",
          "exportedSymbols": {
            "Authorizer": [
              149
            ],
            "IAuthorizer": [
              193
            ]
          },
          "id": 150,
          "license": "GPL-3.0-or-later",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 1,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".0"
              ],
              "nodeType": "PragmaDirective",
              "src": "688:23:0"
            },
            {
              "absolutePath": "@mimic-fi/v2-helpers/contracts/auth/IAuthorizer.sol",
              "file": "./IAuthorizer.sol",
              "id": 2,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 150,
              "sourceUnit": 194,
              "src": "713:27:0",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "abstract": false,
              "baseContracts": [
                {
                  "baseName": {
                    "id": 4,
                    "name": "IAuthorizer",
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 193,
                    "src": "1124:11:0"
                  },
                  "id": 5,
                  "nodeType": "InheritanceSpecifier",
                  "src": "1124:11:0"
                }
              ],
              "contractDependencies": [
                193
              ],
              "contractKind": "contract",
              "documentation": {
                "id": 3,
                "nodeType": "StructuredDocumentation",
                "src": "742:358:0",
                "text": " @title Authorizer\n @dev Authorization module to be used by contracts that need to implement permissions for their methods.\n It provides a permissions model to list who is allowed to call what function in a contract. And only accounts\n authorized to manage those permissions are the ones that are allowed to authorize or unauthorize accounts."
              },
              "fullyImplemented": true,
              "id": 149,
              "linearizedBaseContracts": [
                149,
                193
              ],
              "name": "Authorizer",
              "nameLocation": "1110:10:0",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "constant": true,
                  "functionSelector": "3f81a192",
                  "id": 11,
                  "mutability": "constant",
                  "name": "ANY_ADDRESS",
                  "nameLocation": "1233:11:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 149,
                  "src": "1209:89:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 6,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1209:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": {
                    "arguments": [
                      {
                        "hexValue": "307846466646664666664646666666464666464666464646464666664646466666666646664646466646",
                        "id": 9,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1255:42:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "value": "0xFFfFfFffFFfffFFfFFfFFFFFffFFFffffFfFFFfF"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 8,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "1247:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_address_$",
                        "typeString": "type(address)"
                      },
                      "typeName": {
                        "id": 7,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "1247:7:0",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 10,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1247:51:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "id": 17,
                  "mutability": "mutable",
                  "name": "authorized",
                  "nameLocation": "1457:10:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 149,
                  "src": "1403:64:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_bytes4_$_t_bool_$_$",
                    "typeString": "mapping(address => mapping(bytes4 => bool))"
                  },
                  "typeName": {
                    "id": 16,
                    "keyType": {
                      "id": 12,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "1412:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Mapping",
                    "src": "1403:45:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_bytes4_$_t_bool_$_$",
                      "typeString": "mapping(address => mapping(bytes4 => bool))"
                    },
                    "valueType": {
                      "id": 15,
                      "keyType": {
                        "id": 13,
                        "name": "bytes4",
                        "nodeType": "ElementaryTypeName",
                        "src": "1432:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      },
                      "nodeType": "Mapping",
                      "src": "1423:24:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_bytes4_$_t_bool_$",
                        "typeString": "mapping(bytes4 => bool)"
                      },
                      "valueType": {
                        "id": 14,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "1442:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    }
                  },
                  "visibility": "private"
                },
                {
                  "body": {
                    "id": 28,
                    "nodeType": "Block",
                    "src": "1574:62:0",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 21,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "1598:3:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 22,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "1598:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "expression": {
                                "id": 23,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "1610:3:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 24,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sig",
                              "nodeType": "MemberAccess",
                              "src": "1610:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes4",
                                "typeString": "bytes4"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_bytes4",
                                "typeString": "bytes4"
                              }
                            ],
                            "id": 20,
                            "name": "_authenticate",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 104,
                            "src": "1584:13:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_address_$_t_bytes4_$returns$__$",
                              "typeString": "function (address,bytes4) view"
                            }
                          },
                          "id": 25,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1584:34:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 26,
                        "nodeType": "ExpressionStatement",
                        "src": "1584:34:0"
                      },
                      {
                        "id": 27,
                        "nodeType": "PlaceholderStatement",
                        "src": "1628:1:0"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 18,
                    "nodeType": "StructuredDocumentation",
                    "src": "1474:79:0",
                    "text": " @dev Modifier that should be used to tag protected functions"
                  },
                  "id": 29,
                  "name": "auth",
                  "nameLocation": "1567:4:0",
                  "nodeType": "ModifierDefinition",
                  "parameters": {
                    "id": 19,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1571:2:0"
                  },
                  "src": "1558:78:0",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "baseFunctions": [
                    192
                  ],
                  "body": {
                    "id": 52,
                    "nodeType": "Block",
                    "src": "1964:78:0",
                    "statements": [
                      {
                        "expression": {
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 50,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "baseExpression": {
                              "baseExpression": {
                                "id": 40,
                                "name": "authorized",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 17,
                                "src": "1981:10:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_bytes4_$_t_bool_$_$",
                                  "typeString": "mapping(address => mapping(bytes4 => bool))"
                                }
                              },
                              "id": 42,
                              "indexExpression": {
                                "id": 41,
                                "name": "ANY_ADDRESS",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 11,
                                "src": "1992:11:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "1981:23:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_bytes4_$_t_bool_$",
                                "typeString": "mapping(bytes4 => bool)"
                              }
                            },
                            "id": 44,
                            "indexExpression": {
                              "id": 43,
                              "name": "what",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 34,
                              "src": "2005:4:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes4",
                                "typeString": "bytes4"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "1981:29:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "||",
                          "rightExpression": {
                            "baseExpression": {
                              "baseExpression": {
                                "id": 45,
                                "name": "authorized",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 17,
                                "src": "2014:10:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_bytes4_$_t_bool_$_$",
                                  "typeString": "mapping(address => mapping(bytes4 => bool))"
                                }
                              },
                              "id": 47,
                              "indexExpression": {
                                "id": 46,
                                "name": "who",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 32,
                                "src": "2025:3:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "2014:15:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_bytes4_$_t_bool_$",
                                "typeString": "mapping(bytes4 => bool)"
                              }
                            },
                            "id": 49,
                            "indexExpression": {
                              "id": 48,
                              "name": "what",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 34,
                              "src": "2030:4:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes4",
                                "typeString": "bytes4"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "2014:21:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "1981:54:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "functionReturnParameters": 39,
                        "id": 51,
                        "nodeType": "Return",
                        "src": "1974:61:0"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 30,
                    "nodeType": "StructuredDocumentation",
                    "src": "1642:233:0",
                    "text": " @dev Tells whether someone is allowed to call a function or not. It returns true if it's allowed to anyone.\n @param who Address asking permission for\n @param what Function selector asking permission for"
                  },
                  "functionSelector": "d9972b96",
                  "id": 53,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "isAuthorized",
                  "nameLocation": "1889:12:0",
                  "nodeType": "FunctionDefinition",
                  "overrides": {
                    "id": 36,
                    "nodeType": "OverrideSpecifier",
                    "overrides": [],
                    "src": "1940:8:0"
                  },
                  "parameters": {
                    "id": 35,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 32,
                        "mutability": "mutable",
                        "name": "who",
                        "nameLocation": "1910:3:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 53,
                        "src": "1902:11:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 31,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1902:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 34,
                        "mutability": "mutable",
                        "name": "what",
                        "nameLocation": "1922:4:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 53,
                        "src": "1915:11:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        },
                        "typeName": {
                          "id": 33,
                          "name": "bytes4",
                          "nodeType": "ElementaryTypeName",
                          "src": "1915:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1901:26:0"
                  },
                  "returnParameters": {
                    "id": 39,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 38,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 53,
                        "src": "1958:4:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 37,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "1958:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1957:6:0"
                  },
                  "scope": 149,
                  "src": "1880:162:0",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "baseFunctions": [
                    174
                  ],
                  "body": {
                    "id": 69,
                    "nodeType": "Block",
                    "src": "2312:38:0",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 65,
                              "name": "who",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 56,
                              "src": "2333:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 66,
                              "name": "what",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 58,
                              "src": "2338:4:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes4",
                                "typeString": "bytes4"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_bytes4",
                                "typeString": "bytes4"
                              }
                            ],
                            "id": 64,
                            "name": "_authorize",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 126,
                            "src": "2322:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes4_$returns$__$",
                              "typeString": "function (address,bytes4)"
                            }
                          },
                          "id": 67,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2322:21:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 68,
                        "nodeType": "ExpressionStatement",
                        "src": "2322:21:0"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 54,
                    "nodeType": "StructuredDocumentation",
                    "src": "2048:191:0",
                    "text": " @dev Authorizes someone to call a function. Sender must be authorize to do so.\n @param who Address to be authorized\n @param what Function selector to be granted"
                  },
                  "functionSelector": "933f0f3c",
                  "id": 70,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 62,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 61,
                        "name": "auth",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 29,
                        "src": "2307:4:0"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "2307:4:0"
                    }
                  ],
                  "name": "authorize",
                  "nameLocation": "2253:9:0",
                  "nodeType": "FunctionDefinition",
                  "overrides": {
                    "id": 60,
                    "nodeType": "OverrideSpecifier",
                    "overrides": [],
                    "src": "2298:8:0"
                  },
                  "parameters": {
                    "id": 59,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 56,
                        "mutability": "mutable",
                        "name": "who",
                        "nameLocation": "2271:3:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 70,
                        "src": "2263:11:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 55,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2263:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 58,
                        "mutability": "mutable",
                        "name": "what",
                        "nameLocation": "2283:4:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 70,
                        "src": "2276:11:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        },
                        "typeName": {
                          "id": 57,
                          "name": "bytes4",
                          "nodeType": "ElementaryTypeName",
                          "src": "2276:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2262:26:0"
                  },
                  "returnParameters": {
                    "id": 63,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2312:0:0"
                  },
                  "scope": 149,
                  "src": "2244:106:0",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "baseFunctions": [
                    182
                  ],
                  "body": {
                    "id": 86,
                    "nodeType": "Block",
                    "src": "2626:40:0",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 82,
                              "name": "who",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 73,
                              "src": "2649:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 83,
                              "name": "what",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 75,
                              "src": "2654:4:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes4",
                                "typeString": "bytes4"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_bytes4",
                                "typeString": "bytes4"
                              }
                            ],
                            "id": 81,
                            "name": "_unauthorize",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 148,
                            "src": "2636:12:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes4_$returns$__$",
                              "typeString": "function (address,bytes4)"
                            }
                          },
                          "id": 84,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2636:23:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 85,
                        "nodeType": "ExpressionStatement",
                        "src": "2636:23:0"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 71,
                    "nodeType": "StructuredDocumentation",
                    "src": "2356:195:0",
                    "text": " @dev Unauthorizes someone to call a function. Sender must be authorize to do so.\n @param who Address to be unauthorized\n @param what Function selector to be revoked"
                  },
                  "functionSelector": "6646a436",
                  "id": 87,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 79,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 78,
                        "name": "auth",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 29,
                        "src": "2621:4:0"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "2621:4:0"
                    }
                  ],
                  "name": "unauthorize",
                  "nameLocation": "2565:11:0",
                  "nodeType": "FunctionDefinition",
                  "overrides": {
                    "id": 77,
                    "nodeType": "OverrideSpecifier",
                    "overrides": [],
                    "src": "2612:8:0"
                  },
                  "parameters": {
                    "id": 76,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 73,
                        "mutability": "mutable",
                        "name": "who",
                        "nameLocation": "2585:3:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 87,
                        "src": "2577:11:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 72,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2577:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 75,
                        "mutability": "mutable",
                        "name": "what",
                        "nameLocation": "2597:4:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 87,
                        "src": "2590:11:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        },
                        "typeName": {
                          "id": 74,
                          "name": "bytes4",
                          "nodeType": "ElementaryTypeName",
                          "src": "2590:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2576:26:0"
                  },
                  "returnParameters": {
                    "id": 80,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2626:0:0"
                  },
                  "scope": 149,
                  "src": "2556:110:0",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 103,
                    "nodeType": "Block",
                    "src": "3014:76:0",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 97,
                                  "name": "who",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 90,
                                  "src": "3045:3:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                {
                                  "id": 98,
                                  "name": "what",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 92,
                                  "src": "3050:4:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes4",
                                    "typeString": "bytes4"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  {
                                    "typeIdentifier": "t_bytes4",
                                    "typeString": "bytes4"
                                  }
                                ],
                                "id": 96,
                                "name": "isAuthorized",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 53,
                                "src": "3032:12:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$_t_address_$_t_bytes4_$returns$_t_bool_$",
                                  "typeString": "function (address,bytes4) view returns (bool)"
                                }
                              },
                              "id": 99,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "3032:23:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "415554485f53454e4445525f4e4f545f414c4c4f574544",
                              "id": 100,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3057:25:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_cca20d5e6b0a009174175165fdf5a759ef555d3516bd42d178ac016ae5f041d7",
                                "typeString": "literal_string \"AUTH_SENDER_NOT_ALLOWED\""
                              },
                              "value": "AUTH_SENDER_NOT_ALLOWED"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_cca20d5e6b0a009174175165fdf5a759ef555d3516bd42d178ac016ae5f041d7",
                                "typeString": "literal_string \"AUTH_SENDER_NOT_ALLOWED\""
                              }
                            ],
                            "id": 95,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "3024:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 101,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3024:59:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 102,
                        "nodeType": "ExpressionStatement",
                        "src": "3024:59:0"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 88,
                    "nodeType": "StructuredDocumentation",
                    "src": "2672:274:0",
                    "text": " @dev Internal function to authenticate someone over a function.\n It reverts if the given account is not authorized to call the requested function.\n @param who Address to be authenticated\n @param what Function selector to be authenticated"
                  },
                  "id": 104,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_authenticate",
                  "nameLocation": "2960:13:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 93,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 90,
                        "mutability": "mutable",
                        "name": "who",
                        "nameLocation": "2982:3:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 104,
                        "src": "2974:11:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 89,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2974:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 92,
                        "mutability": "mutable",
                        "name": "what",
                        "nameLocation": "2994:4:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 104,
                        "src": "2987:11:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        },
                        "typeName": {
                          "id": 91,
                          "name": "bytes4",
                          "nodeType": "ElementaryTypeName",
                          "src": "2987:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2973:26:0"
                  },
                  "returnParameters": {
                    "id": 94,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "3014:0:0"
                  },
                  "scope": 149,
                  "src": "2951:139:0",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 125,
                    "nodeType": "Block",
                    "src": "3331:81:0",
                    "statements": [
                      {
                        "expression": {
                          "id": 118,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "baseExpression": {
                                "id": 112,
                                "name": "authorized",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 17,
                                "src": "3341:10:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_bytes4_$_t_bool_$_$",
                                  "typeString": "mapping(address => mapping(bytes4 => bool))"
                                }
                              },
                              "id": 115,
                              "indexExpression": {
                                "id": 113,
                                "name": "who",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 107,
                                "src": "3352:3:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "3341:15:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_bytes4_$_t_bool_$",
                                "typeString": "mapping(bytes4 => bool)"
                              }
                            },
                            "id": 116,
                            "indexExpression": {
                              "id": 114,
                              "name": "what",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 109,
                              "src": "3357:4:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes4",
                                "typeString": "bytes4"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "3341:21:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "74727565",
                            "id": 117,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "3365:4:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "true"
                          },
                          "src": "3341:28:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 119,
                        "nodeType": "ExpressionStatement",
                        "src": "3341:28:0"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 121,
                              "name": "who",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 107,
                              "src": "3395:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 122,
                              "name": "what",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 109,
                              "src": "3400:4:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes4",
                                "typeString": "bytes4"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_bytes4",
                                "typeString": "bytes4"
                              }
                            ],
                            "id": 120,
                            "name": "Authorized",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 159,
                            "src": "3384:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_bytes4_$returns$__$",
                              "typeString": "function (address,bytes4)"
                            }
                          },
                          "id": 123,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3384:21:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 124,
                        "nodeType": "EmitStatement",
                        "src": "3379:26:0"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 105,
                    "nodeType": "StructuredDocumentation",
                    "src": "3096:175:0",
                    "text": " @dev Internal function to authorize someone to call a function\n @param who Address to be authorized\n @param what Function selector to be granted"
                  },
                  "id": 126,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_authorize",
                  "nameLocation": "3285:10:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 110,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 107,
                        "mutability": "mutable",
                        "name": "who",
                        "nameLocation": "3304:3:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 126,
                        "src": "3296:11:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 106,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3296:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 109,
                        "mutability": "mutable",
                        "name": "what",
                        "nameLocation": "3316:4:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 126,
                        "src": "3309:11:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        },
                        "typeName": {
                          "id": 108,
                          "name": "bytes4",
                          "nodeType": "ElementaryTypeName",
                          "src": "3309:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3295:26:0"
                  },
                  "returnParameters": {
                    "id": 111,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "3331:0:0"
                  },
                  "scope": 149,
                  "src": "3276:136:0",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 147,
                    "nodeType": "Block",
                    "src": "3659:84:0",
                    "statements": [
                      {
                        "expression": {
                          "id": 140,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "baseExpression": {
                                "id": 134,
                                "name": "authorized",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 17,
                                "src": "3669:10:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_bytes4_$_t_bool_$_$",
                                  "typeString": "mapping(address => mapping(bytes4 => bool))"
                                }
                              },
                              "id": 137,
                              "indexExpression": {
                                "id": 135,
                                "name": "who",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 129,
                                "src": "3680:3:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "3669:15:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_bytes4_$_t_bool_$",
                                "typeString": "mapping(bytes4 => bool)"
                              }
                            },
                            "id": 138,
                            "indexExpression": {
                              "id": 136,
                              "name": "what",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 131,
                              "src": "3685:4:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes4",
                                "typeString": "bytes4"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "3669:21:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "66616c7365",
                            "id": 139,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "3693:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "false"
                          },
                          "src": "3669:29:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 141,
                        "nodeType": "ExpressionStatement",
                        "src": "3669:29:0"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 143,
                              "name": "who",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 129,
                              "src": "3726:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 144,
                              "name": "what",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 131,
                              "src": "3731:4:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes4",
                                "typeString": "bytes4"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_bytes4",
                                "typeString": "bytes4"
                              }
                            ],
                            "id": 142,
                            "name": "Unauthorized",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 166,
                            "src": "3713:12:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_bytes4_$returns$__$",
                              "typeString": "function (address,bytes4)"
                            }
                          },
                          "id": 145,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3713:23:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 146,
                        "nodeType": "EmitStatement",
                        "src": "3708:28:0"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 127,
                    "nodeType": "StructuredDocumentation",
                    "src": "3418:179:0",
                    "text": " @dev Internal function to unauthorize someone to call a function\n @param who Address to be unauthorized\n @param what Function selector to be revoked"
                  },
                  "id": 148,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_unauthorize",
                  "nameLocation": "3611:12:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 132,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 129,
                        "mutability": "mutable",
                        "name": "who",
                        "nameLocation": "3632:3:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 148,
                        "src": "3624:11:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 128,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3624:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 131,
                        "mutability": "mutable",
                        "name": "what",
                        "nameLocation": "3644:4:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 148,
                        "src": "3637:11:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        },
                        "typeName": {
                          "id": 130,
                          "name": "bytes4",
                          "nodeType": "ElementaryTypeName",
                          "src": "3637:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3623:26:0"
                  },
                  "returnParameters": {
                    "id": 133,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "3659:0:0"
                  },
                  "scope": 149,
                  "src": "3602:141:0",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                }
              ],
              "scope": 150,
              "src": "1101:2644:0"
            }
          ],
          "src": "688:3058:0"
        },
        "id": 0
      },
      "@mimic-fi/v2-helpers/contracts/auth/IAuthorizer.sol": {
        "ast": {
          "absolutePath": "@mimic-fi/v2-helpers/contracts/auth/IAuthorizer.sol",
          "exportedSymbols": {
            "IAuthorizer": [
              193
            ]
          },
          "id": 194,
          "license": "GPL-3.0-or-later",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 151,
              "literals": [
                "solidity",
                ">=",
                "0.8",
                ".0"
              ],
              "nodeType": "PragmaDirective",
              "src": "688:24:1"
            },
            {
              "abstract": false,
              "baseContracts": [],
              "contractDependencies": [],
              "contractKind": "interface",
              "documentation": {
                "id": 152,
                "nodeType": "StructuredDocumentation",
                "src": "714:29:1",
                "text": " @title IAuthorizer"
              },
              "fullyImplemented": false,
              "id": 193,
              "linearizedBaseContracts": [
                193
              ],
              "name": "IAuthorizer",
              "nameLocation": "754:11:1",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "anonymous": false,
                  "documentation": {
                    "id": 153,
                    "nodeType": "StructuredDocumentation",
                    "src": "772:80:1",
                    "text": " @dev Emitted when an account is authorized to call a function"
                  },
                  "id": 159,
                  "name": "Authorized",
                  "nameLocation": "863:10:1",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 158,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 155,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "who",
                        "nameLocation": "890:3:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 159,
                        "src": "874:19:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 154,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "874:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 157,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "what",
                        "nameLocation": "902:4:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 159,
                        "src": "895:11:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        },
                        "typeName": {
                          "id": 156,
                          "name": "bytes4",
                          "nodeType": "ElementaryTypeName",
                          "src": "895:6:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "873:34:1"
                  },
                  "src": "857:51:1"
                },
                {
                  "anonymous": false,
                  "documentation": {
                    "id": 160,
                    "nodeType": "StructuredDocumentation",
                    "src": "914:82:1",
                    "text": " @dev Emitted when an account is unauthorized to call a function"
                  },
                  "id": 166,
                  "name": "Unauthorized",
                  "nameLocation": "1007:12:1",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 165,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 162,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "who",
                        "nameLocation": "1036:3:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 166,
                        "src": "1020:19:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 161,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1020:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 164,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "what",
                        "nameLocation": "1048:4:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 166,
                        "src": "1041:11:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        },
                        "typeName": {
                          "id": 163,
                          "name": "bytes4",
                          "nodeType": "ElementaryTypeName",
                          "src": "1041:6:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1019:34:1"
                  },
                  "src": "1001:53:1"
                },
                {
                  "documentation": {
                    "id": 167,
                    "nodeType": "StructuredDocumentation",
                    "src": "1060:191:1",
                    "text": " @dev Authorizes someone to call a function. Sender must be authorize to do so.\n @param who Address to be authorized\n @param what Function selector to be granted"
                  },
                  "functionSelector": "933f0f3c",
                  "id": 174,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "authorize",
                  "nameLocation": "1265:9:1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 172,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 169,
                        "mutability": "mutable",
                        "name": "who",
                        "nameLocation": "1283:3:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 174,
                        "src": "1275:11:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 168,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1275:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 171,
                        "mutability": "mutable",
                        "name": "what",
                        "nameLocation": "1295:4:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 174,
                        "src": "1288:11:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        },
                        "typeName": {
                          "id": 170,
                          "name": "bytes4",
                          "nodeType": "ElementaryTypeName",
                          "src": "1288:6:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1274:26:1"
                  },
                  "returnParameters": {
                    "id": 173,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1309:0:1"
                  },
                  "scope": 193,
                  "src": "1256:54:1",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 175,
                    "nodeType": "StructuredDocumentation",
                    "src": "1316:195:1",
                    "text": " @dev Unauthorizes someone to call a function. Sender must be authorize to do so.\n @param who Address to be unauthorized\n @param what Function selector to be revoked"
                  },
                  "functionSelector": "6646a436",
                  "id": 182,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "unauthorize",
                  "nameLocation": "1525:11:1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 180,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 177,
                        "mutability": "mutable",
                        "name": "who",
                        "nameLocation": "1545:3:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 182,
                        "src": "1537:11:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 176,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1537:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 179,
                        "mutability": "mutable",
                        "name": "what",
                        "nameLocation": "1557:4:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 182,
                        "src": "1550:11:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        },
                        "typeName": {
                          "id": 178,
                          "name": "bytes4",
                          "nodeType": "ElementaryTypeName",
                          "src": "1550:6:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1536:26:1"
                  },
                  "returnParameters": {
                    "id": 181,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1571:0:1"
                  },
                  "scope": 193,
                  "src": "1516:56:1",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 183,
                    "nodeType": "StructuredDocumentation",
                    "src": "1578:233:1",
                    "text": " @dev Tells whether someone is allowed to call a function or not. It returns true if it's allowed to anyone.\n @param who Address asking permission for\n @param what Function selector asking permission for"
                  },
                  "functionSelector": "d9972b96",
                  "id": 192,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "isAuthorized",
                  "nameLocation": "1825:12:1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 188,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 185,
                        "mutability": "mutable",
                        "name": "who",
                        "nameLocation": "1846:3:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 192,
                        "src": "1838:11:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 184,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1838:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 187,
                        "mutability": "mutable",
                        "name": "what",
                        "nameLocation": "1858:4:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 192,
                        "src": "1851:11:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        },
                        "typeName": {
                          "id": 186,
                          "name": "bytes4",
                          "nodeType": "ElementaryTypeName",
                          "src": "1851:6:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1837:26:1"
                  },
                  "returnParameters": {
                    "id": 191,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 190,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 192,
                        "src": "1887:4:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 189,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "1887:4:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1886:6:1"
                  },
                  "scope": 193,
                  "src": "1816:77:1",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                }
              ],
              "scope": 194,
              "src": "744:1151:1"
            }
          ],
          "src": "688:1208:1"
        },
        "id": 1
      },
      "@openzeppelin/contracts/proxy/Clones.sol": {
        "ast": {
          "absolutePath": "@openzeppelin/contracts/proxy/Clones.sol",
          "exportedSymbols": {
            "Clones": [
              273
            ]
          },
          "id": 274,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 195,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".0"
              ],
              "nodeType": "PragmaDirective",
              "src": "100:23:2"
            },
            {
              "abstract": false,
              "baseContracts": [],
              "contractDependencies": [],
              "contractKind": "library",
              "documentation": {
                "id": 196,
                "nodeType": "StructuredDocumentation",
                "src": "125:629:2",
                "text": " @dev https://eips.ethereum.org/EIPS/eip-1167[EIP 1167] is a standard for\n deploying minimal proxy contracts, also known as \"clones\".\n > To simply and cheaply clone contract functionality in an immutable way, this standard specifies\n > a minimal bytecode implementation that delegates all calls to a known, fixed address.\n The library includes functions to deploy a proxy using either `create` (traditional deployment) or `create2`\n (salted deterministic deployment). It also includes functions to predict the addresses of clones deployed using the\n deterministic method.\n _Available since v3.4._"
              },
              "fullyImplemented": true,
              "id": 273,
              "linearizedBaseContracts": [
                273
              ],
              "name": "Clones",
              "nameLocation": "763:6:2",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "body": {
                    "id": 215,
                    "nodeType": "Block",
                    "src": "1048:483:2",
                    "statements": [
                      {
                        "AST": {
                          "nodeType": "YulBlock",
                          "src": "1110:348:2",
                          "statements": [
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "1124:22:2",
                              "value": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1141:4:2",
                                    "type": "",
                                    "value": "0x40"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nodeType": "YulIdentifier",
                                  "src": "1135:5:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1135:11:2"
                              },
                              "variables": [
                                {
                                  "name": "ptr",
                                  "nodeType": "YulTypedName",
                                  "src": "1128:3:2",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "ptr",
                                    "nodeType": "YulIdentifier",
                                    "src": "1166:3:2"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1171:66:2",
                                    "type": "",
                                    "value": "0x3d602d80600a3d3981f3363d3d373d3d3d363d73000000000000000000000000"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "1159:6:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1159:79:2"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "1159:79:2"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "ptr",
                                        "nodeType": "YulIdentifier",
                                        "src": "1262:3:2"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "1267:4:2",
                                        "type": "",
                                        "value": "0x14"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "1258:3:2"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1258:14:2"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "1278:4:2",
                                        "type": "",
                                        "value": "0x60"
                                      },
                                      {
                                        "name": "implementation",
                                        "nodeType": "YulIdentifier",
                                        "src": "1284:14:2"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shl",
                                      "nodeType": "YulIdentifier",
                                      "src": "1274:3:2"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1274:25:2"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "1251:6:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1251:49:2"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "1251:49:2"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "ptr",
                                        "nodeType": "YulIdentifier",
                                        "src": "1324:3:2"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "1329:4:2",
                                        "type": "",
                                        "value": "0x28"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "1320:3:2"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1320:14:2"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1336:66:2",
                                    "type": "",
                                    "value": "0x5af43d82803e903d91602b57fd5bf30000000000000000000000000000000000"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "1313:6:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1313:90:2"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "1313:90:2"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "1416:32:2",
                              "value": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1435:1:2",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "name": "ptr",
                                    "nodeType": "YulIdentifier",
                                    "src": "1438:3:2"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1443:4:2",
                                    "type": "",
                                    "value": "0x37"
                                  }
                                ],
                                "functionName": {
                                  "name": "create",
                                  "nodeType": "YulIdentifier",
                                  "src": "1428:6:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1428:20:2"
                              },
                              "variableNames": [
                                {
                                  "name": "instance",
                                  "nodeType": "YulIdentifier",
                                  "src": "1416:8:2"
                                }
                              ]
                            }
                          ]
                        },
                        "documentation": "@solidity memory-safe-assembly",
                        "evmVersion": "istanbul",
                        "externalReferences": [
                          {
                            "declaration": 199,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "1284:14:2",
                            "valueSize": 1
                          },
                          {
                            "declaration": 202,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "1416:8:2",
                            "valueSize": 1
                          }
                        ],
                        "id": 204,
                        "nodeType": "InlineAssembly",
                        "src": "1101:357:2"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "id": 211,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 206,
                                "name": "instance",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 202,
                                "src": "1475:8:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "!=",
                              "rightExpression": {
                                "arguments": [
                                  {
                                    "hexValue": "30",
                                    "id": 209,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "1495:1:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    }
                                  ],
                                  "id": 208,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "1487:7:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 207,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "1487:7:2",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 210,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "1487:10:2",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "src": "1475:22:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "455243313136373a20637265617465206661696c6564",
                              "id": 212,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1499:24:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_68ca40b61460257f14e69f48b1a4dbc812e9afc6932f127ef8084544457b3335",
                                "typeString": "literal_string \"ERC1167: create failed\""
                              },
                              "value": "ERC1167: create failed"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_68ca40b61460257f14e69f48b1a4dbc812e9afc6932f127ef8084544457b3335",
                                "typeString": "literal_string \"ERC1167: create failed\""
                              }
                            ],
                            "id": 205,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "1467:7:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 213,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1467:57:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 214,
                        "nodeType": "ExpressionStatement",
                        "src": "1467:57:2"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 197,
                    "nodeType": "StructuredDocumentation",
                    "src": "776:192:2",
                    "text": " @dev Deploys and returns the address of a clone that mimics the behaviour of `implementation`.\n This function uses the create opcode, which should never revert."
                  },
                  "id": 216,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "clone",
                  "nameLocation": "982:5:2",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 200,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 199,
                        "mutability": "mutable",
                        "name": "implementation",
                        "nameLocation": "996:14:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 216,
                        "src": "988:22:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 198,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "988:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "987:24:2"
                  },
                  "returnParameters": {
                    "id": 203,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 202,
                        "mutability": "mutable",
                        "name": "instance",
                        "nameLocation": "1038:8:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 216,
                        "src": "1030:16:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 201,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1030:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1029:18:2"
                  },
                  "scope": 273,
                  "src": "973:558:2",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 237,
                    "nodeType": "Block",
                    "src": "2008:491:2",
                    "statements": [
                      {
                        "AST": {
                          "nodeType": "YulBlock",
                          "src": "2070:355:2",
                          "statements": [
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "2084:22:2",
                              "value": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2101:4:2",
                                    "type": "",
                                    "value": "0x40"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nodeType": "YulIdentifier",
                                  "src": "2095:5:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2095:11:2"
                              },
                              "variables": [
                                {
                                  "name": "ptr",
                                  "nodeType": "YulTypedName",
                                  "src": "2088:3:2",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "ptr",
                                    "nodeType": "YulIdentifier",
                                    "src": "2126:3:2"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2131:66:2",
                                    "type": "",
                                    "value": "0x3d602d80600a3d3981f3363d3d373d3d3d363d73000000000000000000000000"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "2119:6:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2119:79:2"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "2119:79:2"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "ptr",
                                        "nodeType": "YulIdentifier",
                                        "src": "2222:3:2"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "2227:4:2",
                                        "type": "",
                                        "value": "0x14"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "2218:3:2"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "2218:14:2"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "2238:4:2",
                                        "type": "",
                                        "value": "0x60"
                                      },
                                      {
                                        "name": "implementation",
                                        "nodeType": "YulIdentifier",
                                        "src": "2244:14:2"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shl",
                                      "nodeType": "YulIdentifier",
                                      "src": "2234:3:2"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "2234:25:2"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "2211:6:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2211:49:2"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "2211:49:2"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "ptr",
                                        "nodeType": "YulIdentifier",
                                        "src": "2284:3:2"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "2289:4:2",
                                        "type": "",
                                        "value": "0x28"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "2280:3:2"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "2280:14:2"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2296:66:2",
                                    "type": "",
                                    "value": "0x5af43d82803e903d91602b57fd5bf30000000000000000000000000000000000"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "2273:6:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2273:90:2"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "2273:90:2"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "2376:39:2",
                              "value": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2396:1:2",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "name": "ptr",
                                    "nodeType": "YulIdentifier",
                                    "src": "2399:3:2"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2404:4:2",
                                    "type": "",
                                    "value": "0x37"
                                  },
                                  {
                                    "name": "salt",
                                    "nodeType": "YulIdentifier",
                                    "src": "2410:4:2"
                                  }
                                ],
                                "functionName": {
                                  "name": "create2",
                                  "nodeType": "YulIdentifier",
                                  "src": "2388:7:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2388:27:2"
                              },
                              "variableNames": [
                                {
                                  "name": "instance",
                                  "nodeType": "YulIdentifier",
                                  "src": "2376:8:2"
                                }
                              ]
                            }
                          ]
                        },
                        "documentation": "@solidity memory-safe-assembly",
                        "evmVersion": "istanbul",
                        "externalReferences": [
                          {
                            "declaration": 219,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "2244:14:2",
                            "valueSize": 1
                          },
                          {
                            "declaration": 224,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "2376:8:2",
                            "valueSize": 1
                          },
                          {
                            "declaration": 221,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "2410:4:2",
                            "valueSize": 1
                          }
                        ],
                        "id": 226,
                        "nodeType": "InlineAssembly",
                        "src": "2061:364:2"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "id": 233,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 228,
                                "name": "instance",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 224,
                                "src": "2442:8:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "!=",
                              "rightExpression": {
                                "arguments": [
                                  {
                                    "hexValue": "30",
                                    "id": 231,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "2462:1:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    }
                                  ],
                                  "id": 230,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "2454:7:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 229,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "2454:7:2",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 232,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "2454:10:2",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "src": "2442:22:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "455243313136373a2063726561746532206661696c6564",
                              "id": 234,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2466:25:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_4ec050e530ce66e7658278ab7a4e4a2f19225159c48fc52eb249bd268e755d73",
                                "typeString": "literal_string \"ERC1167: create2 failed\""
                              },
                              "value": "ERC1167: create2 failed"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_4ec050e530ce66e7658278ab7a4e4a2f19225159c48fc52eb249bd268e755d73",
                                "typeString": "literal_string \"ERC1167: create2 failed\""
                              }
                            ],
                            "id": 227,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "2434:7:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 235,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2434:58:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 236,
                        "nodeType": "ExpressionStatement",
                        "src": "2434:58:2"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 217,
                    "nodeType": "StructuredDocumentation",
                    "src": "1537:364:2",
                    "text": " @dev Deploys and returns the address of a clone that mimics the behaviour of `implementation`.\n This function uses the create2 opcode and a `salt` to deterministically deploy\n the clone. Using the same `implementation` and `salt` multiple time will revert, since\n the clones cannot be deployed twice at the same address."
                  },
                  "id": 238,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "cloneDeterministic",
                  "nameLocation": "1915:18:2",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 222,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 219,
                        "mutability": "mutable",
                        "name": "implementation",
                        "nameLocation": "1942:14:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 238,
                        "src": "1934:22:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 218,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1934:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 221,
                        "mutability": "mutable",
                        "name": "salt",
                        "nameLocation": "1966:4:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 238,
                        "src": "1958:12:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 220,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "1958:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1933:38:2"
                  },
                  "returnParameters": {
                    "id": 225,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 224,
                        "mutability": "mutable",
                        "name": "instance",
                        "nameLocation": "1998:8:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 238,
                        "src": "1990:16:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 223,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1990:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1989:18:2"
                  },
                  "scope": 273,
                  "src": "1906:593:2",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 251,
                    "nodeType": "Block",
                    "src": "2774:582:2",
                    "statements": [
                      {
                        "AST": {
                          "nodeType": "YulBlock",
                          "src": "2836:514:2",
                          "statements": [
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "2850:22:2",
                              "value": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2867:4:2",
                                    "type": "",
                                    "value": "0x40"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nodeType": "YulIdentifier",
                                  "src": "2861:5:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2861:11:2"
                              },
                              "variables": [
                                {
                                  "name": "ptr",
                                  "nodeType": "YulTypedName",
                                  "src": "2854:3:2",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "ptr",
                                    "nodeType": "YulIdentifier",
                                    "src": "2892:3:2"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2897:66:2",
                                    "type": "",
                                    "value": "0x3d602d80600a3d3981f3363d3d373d3d3d363d73000000000000000000000000"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "2885:6:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2885:79:2"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "2885:79:2"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "ptr",
                                        "nodeType": "YulIdentifier",
                                        "src": "2988:3:2"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "2993:4:2",
                                        "type": "",
                                        "value": "0x14"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "2984:3:2"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "2984:14:2"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "3004:4:2",
                                        "type": "",
                                        "value": "0x60"
                                      },
                                      {
                                        "name": "implementation",
                                        "nodeType": "YulIdentifier",
                                        "src": "3010:14:2"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shl",
                                      "nodeType": "YulIdentifier",
                                      "src": "3000:3:2"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "3000:25:2"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "2977:6:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2977:49:2"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "2977:49:2"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "ptr",
                                        "nodeType": "YulIdentifier",
                                        "src": "3050:3:2"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "3055:4:2",
                                        "type": "",
                                        "value": "0x28"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "3046:3:2"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "3046:14:2"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "3062:66:2",
                                    "type": "",
                                    "value": "0x5af43d82803e903d91602b57fd5bf3ff00000000000000000000000000000000"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "3039:6:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3039:90:2"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "3039:90:2"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "ptr",
                                        "nodeType": "YulIdentifier",
                                        "src": "3153:3:2"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "3158:4:2",
                                        "type": "",
                                        "value": "0x38"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "3149:3:2"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "3149:14:2"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "3169:4:2",
                                        "type": "",
                                        "value": "0x60"
                                      },
                                      {
                                        "name": "deployer",
                                        "nodeType": "YulIdentifier",
                                        "src": "3175:8:2"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shl",
                                      "nodeType": "YulIdentifier",
                                      "src": "3165:3:2"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "3165:19:2"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "3142:6:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3142:43:2"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "3142:43:2"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "ptr",
                                        "nodeType": "YulIdentifier",
                                        "src": "3209:3:2"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "3214:4:2",
                                        "type": "",
                                        "value": "0x4c"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "3205:3:2"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "3205:14:2"
                                  },
                                  {
                                    "name": "salt",
                                    "nodeType": "YulIdentifier",
                                    "src": "3221:4:2"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "3198:6:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3198:28:2"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "3198:28:2"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "ptr",
                                        "nodeType": "YulIdentifier",
                                        "src": "3250:3:2"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "3255:4:2",
                                        "type": "",
                                        "value": "0x6c"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "3246:3:2"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "3246:14:2"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "ptr",
                                        "nodeType": "YulIdentifier",
                                        "src": "3272:3:2"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "3277:4:2",
                                        "type": "",
                                        "value": "0x37"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "keccak256",
                                      "nodeType": "YulIdentifier",
                                      "src": "3262:9:2"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "3262:20:2"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "3239:6:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3239:44:2"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "3239:44:2"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "3296:44:2",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "ptr",
                                        "nodeType": "YulIdentifier",
                                        "src": "3323:3:2"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "3328:4:2",
                                        "type": "",
                                        "value": "0x37"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "3319:3:2"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "3319:14:2"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "3335:4:2",
                                    "type": "",
                                    "value": "0x55"
                                  }
                                ],
                                "functionName": {
                                  "name": "keccak256",
                                  "nodeType": "YulIdentifier",
                                  "src": "3309:9:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3309:31:2"
                              },
                              "variableNames": [
                                {
                                  "name": "predicted",
                                  "nodeType": "YulIdentifier",
                                  "src": "3296:9:2"
                                }
                              ]
                            }
                          ]
                        },
                        "documentation": "@solidity memory-safe-assembly",
                        "evmVersion": "istanbul",
                        "externalReferences": [
                          {
                            "declaration": 245,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "3175:8:2",
                            "valueSize": 1
                          },
                          {
                            "declaration": 241,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "3010:14:2",
                            "valueSize": 1
                          },
                          {
                            "declaration": 248,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "3296:9:2",
                            "valueSize": 1
                          },
                          {
                            "declaration": 243,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "3221:4:2",
                            "valueSize": 1
                          }
                        ],
                        "id": 250,
                        "nodeType": "InlineAssembly",
                        "src": "2827:523:2"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 239,
                    "nodeType": "StructuredDocumentation",
                    "src": "2505:99:2",
                    "text": " @dev Computes the address of a clone deployed using {Clones-cloneDeterministic}."
                  },
                  "id": 252,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "predictDeterministicAddress",
                  "nameLocation": "2618:27:2",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 246,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 241,
                        "mutability": "mutable",
                        "name": "implementation",
                        "nameLocation": "2663:14:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 252,
                        "src": "2655:22:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 240,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2655:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 243,
                        "mutability": "mutable",
                        "name": "salt",
                        "nameLocation": "2695:4:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 252,
                        "src": "2687:12:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 242,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "2687:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 245,
                        "mutability": "mutable",
                        "name": "deployer",
                        "nameLocation": "2717:8:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 252,
                        "src": "2709:16:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 244,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2709:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2645:86:2"
                  },
                  "returnParameters": {
                    "id": 249,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 248,
                        "mutability": "mutable",
                        "name": "predicted",
                        "nameLocation": "2763:9:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 252,
                        "src": "2755:17:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 247,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2755:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2754:19:2"
                  },
                  "scope": 273,
                  "src": "2609:747:2",
                  "stateMutability": "pure",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 271,
                    "nodeType": "Block",
                    "src": "3611:88:2",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 263,
                              "name": "implementation",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 255,
                              "src": "3656:14:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 264,
                              "name": "salt",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 257,
                              "src": "3672:4:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "id": 267,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -28,
                                  "src": "3686:4:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_Clones_$273",
                                    "typeString": "library Clones"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_Clones_$273",
                                    "typeString": "library Clones"
                                  }
                                ],
                                "id": 266,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "3678:7:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 265,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "3678:7:2",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 268,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "3678:13:2",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 262,
                            "name": "predictDeterministicAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              252,
                              272
                            ],
                            "referencedDeclaration": 252,
                            "src": "3628:27:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_address_$_t_bytes32_$_t_address_$returns$_t_address_$",
                              "typeString": "function (address,bytes32,address) pure returns (address)"
                            }
                          },
                          "id": 269,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3628:64:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "functionReturnParameters": 261,
                        "id": 270,
                        "nodeType": "Return",
                        "src": "3621:71:2"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 253,
                    "nodeType": "StructuredDocumentation",
                    "src": "3362:99:2",
                    "text": " @dev Computes the address of a clone deployed using {Clones-cloneDeterministic}."
                  },
                  "id": 272,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "predictDeterministicAddress",
                  "nameLocation": "3475:27:2",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 258,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 255,
                        "mutability": "mutable",
                        "name": "implementation",
                        "nameLocation": "3511:14:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 272,
                        "src": "3503:22:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 254,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3503:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 257,
                        "mutability": "mutable",
                        "name": "salt",
                        "nameLocation": "3535:4:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 272,
                        "src": "3527:12:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 256,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "3527:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3502:38:2"
                  },
                  "returnParameters": {
                    "id": 261,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 260,
                        "mutability": "mutable",
                        "name": "predicted",
                        "nameLocation": "3596:9:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 272,
                        "src": "3588:17:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 259,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3588:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3587:19:2"
                  },
                  "scope": 273,
                  "src": "3466:233:2",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "internal"
                }
              ],
              "scope": 274,
              "src": "755:2946:2"
            }
          ],
          "src": "100:3602:2"
        },
        "id": 2
      },
      "@openzeppelin/contracts/proxy/utils/Initializable.sol": {
        "ast": {
          "absolutePath": "@openzeppelin/contracts/proxy/utils/Initializable.sol",
          "exportedSymbols": {
            "Address": [
              719
            ],
            "Initializable": [
              424
            ]
          },
          "id": 425,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 275,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".2"
              ],
              "nodeType": "PragmaDirective",
              "src": "113:23:3"
            },
            {
              "absolutePath": "@openzeppelin/contracts/utils/Address.sol",
              "file": "../../utils/Address.sol",
              "id": 276,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 425,
              "sourceUnit": 720,
              "src": "138:33:3",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "abstract": true,
              "baseContracts": [],
              "contractDependencies": [],
              "contractKind": "contract",
              "documentation": {
                "id": 277,
                "nodeType": "StructuredDocumentation",
                "src": "173:2198:3",
                "text": " @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\n behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\n external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\n function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\n The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\n reused. This mechanism prevents re-execution of each \"step\" but allows the creation of new initialization steps in\n case an upgrade adds a module that needs to be initialized.\n For example:\n [.hljs-theme-light.nopadding]\n ```\n contract MyToken is ERC20Upgradeable {\n     function initialize() initializer public {\n         __ERC20_init(\"MyToken\", \"MTK\");\n     }\n }\n contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\n     function initializeV2() reinitializer(2) public {\n         __ERC20Permit_init(\"MyToken\");\n     }\n }\n ```\n TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\n possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\n CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\n that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\n [CAUTION]\n ====\n Avoid leaving a contract uninitialized.\n An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\n contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\n the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\n [.hljs-theme-light.nopadding]\n ```\n /// @custom:oz-upgrades-unsafe-allow constructor\n constructor() {\n     _disableInitializers();\n }\n ```\n ===="
              },
              "fullyImplemented": true,
              "id": 424,
              "linearizedBaseContracts": [
                424
              ],
              "name": "Initializable",
              "nameLocation": "2390:13:3",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "constant": false,
                  "documentation": {
                    "id": 278,
                    "nodeType": "StructuredDocumentation",
                    "src": "2410:109:3",
                    "text": " @dev Indicates that the contract has been initialized.\n @custom:oz-retyped-from bool"
                  },
                  "id": 280,
                  "mutability": "mutable",
                  "name": "_initialized",
                  "nameLocation": "2538:12:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 424,
                  "src": "2524:26:3",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 279,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "2524:5:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "private"
                },
                {
                  "constant": false,
                  "documentation": {
                    "id": 281,
                    "nodeType": "StructuredDocumentation",
                    "src": "2557:91:3",
                    "text": " @dev Indicates that the contract is in the process of being initialized."
                  },
                  "id": 283,
                  "mutability": "mutable",
                  "name": "_initializing",
                  "nameLocation": "2666:13:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 424,
                  "src": "2653:26:3",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 282,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "2653:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "private"
                },
                {
                  "anonymous": false,
                  "documentation": {
                    "id": 284,
                    "nodeType": "StructuredDocumentation",
                    "src": "2686:90:3",
                    "text": " @dev Triggered when the contract has been initialized or reinitialized."
                  },
                  "id": 288,
                  "name": "Initialized",
                  "nameLocation": "2787:11:3",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 287,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 286,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "version",
                        "nameLocation": "2805:7:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 288,
                        "src": "2799:13:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        "typeName": {
                          "id": 285,
                          "name": "uint8",
                          "nodeType": "ElementaryTypeName",
                          "src": "2799:5:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2798:15:3"
                  },
                  "src": "2781:33:3"
                },
                {
                  "body": {
                    "id": 343,
                    "nodeType": "Block",
                    "src": "3090:472:3",
                    "statements": [
                      {
                        "assignments": [
                          292
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 292,
                            "mutability": "mutable",
                            "name": "isTopLevelCall",
                            "nameLocation": "3105:14:3",
                            "nodeType": "VariableDeclaration",
                            "scope": 343,
                            "src": "3100:19:3",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "typeName": {
                              "id": 291,
                              "name": "bool",
                              "nodeType": "ElementaryTypeName",
                              "src": "3100:4:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 295,
                        "initialValue": {
                          "id": 294,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "!",
                          "prefix": true,
                          "src": "3122:14:3",
                          "subExpression": {
                            "id": 293,
                            "name": "_initializing",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 283,
                            "src": "3123:13:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "3100:36:3"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "id": 316,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "components": [
                                  {
                                    "commonType": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    },
                                    "id": 301,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "id": 297,
                                      "name": "isTopLevelCall",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 292,
                                      "src": "3168:14:3",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "&&",
                                    "rightExpression": {
                                      "commonType": {
                                        "typeIdentifier": "t_uint8",
                                        "typeString": "uint8"
                                      },
                                      "id": 300,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "id": 298,
                                        "name": "_initialized",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 280,
                                        "src": "3186:12:3",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint8",
                                          "typeString": "uint8"
                                        }
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": "<",
                                      "rightExpression": {
                                        "hexValue": "31",
                                        "id": 299,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "3201:1:3",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_1_by_1",
                                          "typeString": "int_const 1"
                                        },
                                        "value": "1"
                                      },
                                      "src": "3186:16:3",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                      }
                                    },
                                    "src": "3168:34:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  }
                                ],
                                "id": 302,
                                "isConstant": false,
                                "isInlineArray": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "TupleExpression",
                                "src": "3167:36:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "||",
                              "rightExpression": {
                                "components": [
                                  {
                                    "commonType": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    },
                                    "id": 314,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "id": 310,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "UnaryOperation",
                                      "operator": "!",
                                      "prefix": true,
                                      "src": "3208:34:3",
                                      "subExpression": {
                                        "arguments": [
                                          {
                                            "arguments": [
                                              {
                                                "id": 307,
                                                "name": "this",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": -28,
                                                "src": "3236:4:3",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_contract$_Initializable_$424",
                                                  "typeString": "contract Initializable"
                                                }
                                              }
                                            ],
                                            "expression": {
                                              "argumentTypes": [
                                                {
                                                  "typeIdentifier": "t_contract$_Initializable_$424",
                                                  "typeString": "contract Initializable"
                                                }
                                              ],
                                              "id": 306,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": true,
                                              "lValueRequested": false,
                                              "nodeType": "ElementaryTypeNameExpression",
                                              "src": "3228:7:3",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_type$_t_address_$",
                                                "typeString": "type(address)"
                                              },
                                              "typeName": {
                                                "id": 305,
                                                "name": "address",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "3228:7:3",
                                                "typeDescriptions": {}
                                              }
                                            },
                                            "id": 308,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "kind": "typeConversion",
                                            "lValueRequested": false,
                                            "names": [],
                                            "nodeType": "FunctionCall",
                                            "src": "3228:13:3",
                                            "tryCall": false,
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_address",
                                              "typeString": "address"
                                            }
                                          }
                                        ],
                                        "expression": {
                                          "argumentTypes": [
                                            {
                                              "typeIdentifier": "t_address",
                                              "typeString": "address"
                                            }
                                          ],
                                          "expression": {
                                            "id": 303,
                                            "name": "Address",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 719,
                                            "src": "3209:7:3",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_type$_t_contract$_Address_$719_$",
                                              "typeString": "type(library Address)"
                                            }
                                          },
                                          "id": 304,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "memberName": "isContract",
                                          "nodeType": "MemberAccess",
                                          "referencedDeclaration": 442,
                                          "src": "3209:18:3",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
                                            "typeString": "function (address) view returns (bool)"
                                          }
                                        },
                                        "id": 309,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "3209:33:3",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_bool",
                                          "typeString": "bool"
                                        }
                                      },
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "&&",
                                    "rightExpression": {
                                      "commonType": {
                                        "typeIdentifier": "t_uint8",
                                        "typeString": "uint8"
                                      },
                                      "id": 313,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "id": 311,
                                        "name": "_initialized",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 280,
                                        "src": "3246:12:3",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint8",
                                          "typeString": "uint8"
                                        }
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": "==",
                                      "rightExpression": {
                                        "hexValue": "31",
                                        "id": 312,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "3262:1:3",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_1_by_1",
                                          "typeString": "int_const 1"
                                        },
                                        "value": "1"
                                      },
                                      "src": "3246:17:3",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                      }
                                    },
                                    "src": "3208:55:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  }
                                ],
                                "id": 315,
                                "isConstant": false,
                                "isInlineArray": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "TupleExpression",
                                "src": "3207:57:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "src": "3167:97:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "496e697469616c697a61626c653a20636f6e747261637420697320616c726561647920696e697469616c697a6564",
                              "id": 317,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3278:48:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759",
                                "typeString": "literal_string \"Initializable: contract is already initialized\""
                              },
                              "value": "Initializable: contract is already initialized"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759",
                                "typeString": "literal_string \"Initializable: contract is already initialized\""
                              }
                            ],
                            "id": 296,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "3146:7:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 318,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3146:190:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 319,
                        "nodeType": "ExpressionStatement",
                        "src": "3146:190:3"
                      },
                      {
                        "expression": {
                          "id": 322,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 320,
                            "name": "_initialized",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 280,
                            "src": "3346:12:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint8",
                              "typeString": "uint8"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "31",
                            "id": 321,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "3361:1:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            },
                            "value": "1"
                          },
                          "src": "3346:16:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "id": 323,
                        "nodeType": "ExpressionStatement",
                        "src": "3346:16:3"
                      },
                      {
                        "condition": {
                          "id": 324,
                          "name": "isTopLevelCall",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 292,
                          "src": "3376:14:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 330,
                        "nodeType": "IfStatement",
                        "src": "3372:65:3",
                        "trueBody": {
                          "id": 329,
                          "nodeType": "Block",
                          "src": "3392:45:3",
                          "statements": [
                            {
                              "expression": {
                                "id": 327,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 325,
                                  "name": "_initializing",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 283,
                                  "src": "3406:13:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "hexValue": "74727565",
                                  "id": 326,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "bool",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "3422:4:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  },
                                  "value": "true"
                                },
                                "src": "3406:20:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 328,
                              "nodeType": "ExpressionStatement",
                              "src": "3406:20:3"
                            }
                          ]
                        }
                      },
                      {
                        "id": 331,
                        "nodeType": "PlaceholderStatement",
                        "src": "3446:1:3"
                      },
                      {
                        "condition": {
                          "id": 332,
                          "name": "isTopLevelCall",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 292,
                          "src": "3461:14:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 342,
                        "nodeType": "IfStatement",
                        "src": "3457:99:3",
                        "trueBody": {
                          "id": 341,
                          "nodeType": "Block",
                          "src": "3477:79:3",
                          "statements": [
                            {
                              "expression": {
                                "id": 335,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 333,
                                  "name": "_initializing",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 283,
                                  "src": "3491:13:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "hexValue": "66616c7365",
                                  "id": 334,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "bool",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "3507:5:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  },
                                  "value": "false"
                                },
                                "src": "3491:21:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 336,
                              "nodeType": "ExpressionStatement",
                              "src": "3491:21:3"
                            },
                            {
                              "eventCall": {
                                "arguments": [
                                  {
                                    "hexValue": "31",
                                    "id": 338,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "3543:1:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_1_by_1",
                                      "typeString": "int_const 1"
                                    },
                                    "value": "1"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_rational_1_by_1",
                                      "typeString": "int_const 1"
                                    }
                                  ],
                                  "id": 337,
                                  "name": "Initialized",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 288,
                                  "src": "3531:11:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_event_nonpayable$_t_uint8_$returns$__$",
                                    "typeString": "function (uint8)"
                                  }
                                },
                                "id": 339,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "3531:14:3",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 340,
                              "nodeType": "EmitStatement",
                              "src": "3526:19:3"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "documentation": {
                    "id": 289,
                    "nodeType": "StructuredDocumentation",
                    "src": "2820:242:3",
                    "text": " @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\n `onlyInitializing` functions can be used to initialize parent contracts. Equivalent to `reinitializer(1)`."
                  },
                  "id": 344,
                  "name": "initializer",
                  "nameLocation": "3076:11:3",
                  "nodeType": "ModifierDefinition",
                  "parameters": {
                    "id": 290,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "3087:2:3"
                  },
                  "src": "3067:495:3",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 376,
                    "nodeType": "Block",
                    "src": "4377:255:3",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "id": 355,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 351,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "UnaryOperation",
                                "operator": "!",
                                "prefix": true,
                                "src": "4395:14:3",
                                "subExpression": {
                                  "id": 350,
                                  "name": "_initializing",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 283,
                                  "src": "4396:13:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "&&",
                              "rightExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_uint8",
                                  "typeString": "uint8"
                                },
                                "id": 354,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 352,
                                  "name": "_initialized",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 280,
                                  "src": "4413:12:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint8",
                                    "typeString": "uint8"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "<",
                                "rightExpression": {
                                  "id": 353,
                                  "name": "version",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 347,
                                  "src": "4428:7:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint8",
                                    "typeString": "uint8"
                                  }
                                },
                                "src": "4413:22:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "src": "4395:40:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "496e697469616c697a61626c653a20636f6e747261637420697320616c726561647920696e697469616c697a6564",
                              "id": 356,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4437:48:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759",
                                "typeString": "literal_string \"Initializable: contract is already initialized\""
                              },
                              "value": "Initializable: contract is already initialized"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759",
                                "typeString": "literal_string \"Initializable: contract is already initialized\""
                              }
                            ],
                            "id": 349,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "4387:7:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 357,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4387:99:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 358,
                        "nodeType": "ExpressionStatement",
                        "src": "4387:99:3"
                      },
                      {
                        "expression": {
                          "id": 361,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 359,
                            "name": "_initialized",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 280,
                            "src": "4496:12:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint8",
                              "typeString": "uint8"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 360,
                            "name": "version",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 347,
                            "src": "4511:7:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint8",
                              "typeString": "uint8"
                            }
                          },
                          "src": "4496:22:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "id": 362,
                        "nodeType": "ExpressionStatement",
                        "src": "4496:22:3"
                      },
                      {
                        "expression": {
                          "id": 365,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 363,
                            "name": "_initializing",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 283,
                            "src": "4528:13:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "74727565",
                            "id": 364,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "4544:4:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "true"
                          },
                          "src": "4528:20:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 366,
                        "nodeType": "ExpressionStatement",
                        "src": "4528:20:3"
                      },
                      {
                        "id": 367,
                        "nodeType": "PlaceholderStatement",
                        "src": "4558:1:3"
                      },
                      {
                        "expression": {
                          "id": 370,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 368,
                            "name": "_initializing",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 283,
                            "src": "4569:13:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "66616c7365",
                            "id": 369,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "4585:5:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "false"
                          },
                          "src": "4569:21:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 371,
                        "nodeType": "ExpressionStatement",
                        "src": "4569:21:3"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 373,
                              "name": "version",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 347,
                              "src": "4617:7:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint8",
                                "typeString": "uint8"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint8",
                                "typeString": "uint8"
                              }
                            ],
                            "id": 372,
                            "name": "Initialized",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 288,
                            "src": "4605:11:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_uint8_$returns$__$",
                              "typeString": "function (uint8)"
                            }
                          },
                          "id": 374,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4605:20:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 375,
                        "nodeType": "EmitStatement",
                        "src": "4600:25:3"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 345,
                    "nodeType": "StructuredDocumentation",
                    "src": "3568:766:3",
                    "text": " @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\n contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\n used to initialize parent contracts.\n `initializer` is equivalent to `reinitializer(1)`, so a reinitializer may be used after the original\n initialization step. This is essential to configure modules that are added through upgrades and that require\n initialization.\n Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\n a contract, executing them in the right order is up to the developer or operator."
                  },
                  "id": 377,
                  "name": "reinitializer",
                  "nameLocation": "4348:13:3",
                  "nodeType": "ModifierDefinition",
                  "parameters": {
                    "id": 348,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 347,
                        "mutability": "mutable",
                        "name": "version",
                        "nameLocation": "4368:7:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 377,
                        "src": "4362:13:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        "typeName": {
                          "id": 346,
                          "name": "uint8",
                          "nodeType": "ElementaryTypeName",
                          "src": "4362:5:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4361:15:3"
                  },
                  "src": "4339:293:3",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 386,
                    "nodeType": "Block",
                    "src": "4870:97:3",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 381,
                              "name": "_initializing",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 283,
                              "src": "4888:13:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "496e697469616c697a61626c653a20636f6e7472616374206973206e6f7420696e697469616c697a696e67",
                              "id": 382,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4903:45:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_d688db918bb9dd50354922faa108595679886fe9ff08046ad1ffe30aaea55f8b",
                                "typeString": "literal_string \"Initializable: contract is not initializing\""
                              },
                              "value": "Initializable: contract is not initializing"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_d688db918bb9dd50354922faa108595679886fe9ff08046ad1ffe30aaea55f8b",
                                "typeString": "literal_string \"Initializable: contract is not initializing\""
                              }
                            ],
                            "id": 380,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "4880:7:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 383,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4880:69:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 384,
                        "nodeType": "ExpressionStatement",
                        "src": "4880:69:3"
                      },
                      {
                        "id": 385,
                        "nodeType": "PlaceholderStatement",
                        "src": "4959:1:3"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 378,
                    "nodeType": "StructuredDocumentation",
                    "src": "4638:199:3",
                    "text": " @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\n {initializer} and {reinitializer} modifiers, directly or indirectly."
                  },
                  "id": 387,
                  "name": "onlyInitializing",
                  "nameLocation": "4851:16:3",
                  "nodeType": "ModifierDefinition",
                  "parameters": {
                    "id": 379,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "4867:2:3"
                  },
                  "src": "4842:125:3",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 422,
                    "nodeType": "Block",
                    "src": "5415:230:3",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 393,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "UnaryOperation",
                              "operator": "!",
                              "prefix": true,
                              "src": "5433:14:3",
                              "subExpression": {
                                "id": 392,
                                "name": "_initializing",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 283,
                                "src": "5434:13:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "496e697469616c697a61626c653a20636f6e747261637420697320696e697469616c697a696e67",
                              "id": 394,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "5449:41:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_a53f5879e7518078ff19b2e3d6b41e757a87364ec6872787feb45bfc41131d1a",
                                "typeString": "literal_string \"Initializable: contract is initializing\""
                              },
                              "value": "Initializable: contract is initializing"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_a53f5879e7518078ff19b2e3d6b41e757a87364ec6872787feb45bfc41131d1a",
                                "typeString": "literal_string \"Initializable: contract is initializing\""
                              }
                            ],
                            "id": 391,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "5425:7:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 395,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5425:66:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 396,
                        "nodeType": "ExpressionStatement",
                        "src": "5425:66:3"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          },
                          "id": 403,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 397,
                            "name": "_initialized",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 280,
                            "src": "5505:12:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint8",
                              "typeString": "uint8"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<",
                          "rightExpression": {
                            "expression": {
                              "arguments": [
                                {
                                  "id": 400,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "5525:5:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_uint8_$",
                                    "typeString": "type(uint8)"
                                  },
                                  "typeName": {
                                    "id": 399,
                                    "name": "uint8",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "5525:5:3",
                                    "typeDescriptions": {}
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_type$_t_uint8_$",
                                    "typeString": "type(uint8)"
                                  }
                                ],
                                "id": 398,
                                "name": "type",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -27,
                                "src": "5520:4:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                                  "typeString": "function () pure"
                                }
                              },
                              "id": 401,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "5520:11:3",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_meta_type_t_uint8",
                                "typeString": "type(uint8)"
                              }
                            },
                            "id": 402,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "max",
                            "nodeType": "MemberAccess",
                            "src": "5520:15:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint8",
                              "typeString": "uint8"
                            }
                          },
                          "src": "5505:30:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 421,
                        "nodeType": "IfStatement",
                        "src": "5501:138:3",
                        "trueBody": {
                          "id": 420,
                          "nodeType": "Block",
                          "src": "5537:102:3",
                          "statements": [
                            {
                              "expression": {
                                "id": 410,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 404,
                                  "name": "_initialized",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 280,
                                  "src": "5551:12:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint8",
                                    "typeString": "uint8"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "expression": {
                                    "arguments": [
                                      {
                                        "id": 407,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "lValueRequested": false,
                                        "nodeType": "ElementaryTypeNameExpression",
                                        "src": "5571:5:3",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_type$_t_uint8_$",
                                          "typeString": "type(uint8)"
                                        },
                                        "typeName": {
                                          "id": 406,
                                          "name": "uint8",
                                          "nodeType": "ElementaryTypeName",
                                          "src": "5571:5:3",
                                          "typeDescriptions": {}
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_type$_t_uint8_$",
                                          "typeString": "type(uint8)"
                                        }
                                      ],
                                      "id": 405,
                                      "name": "type",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": -27,
                                      "src": "5566:4:3",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                                        "typeString": "function () pure"
                                      }
                                    },
                                    "id": 408,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "5566:11:3",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_meta_type_t_uint8",
                                      "typeString": "type(uint8)"
                                    }
                                  },
                                  "id": 409,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "memberName": "max",
                                  "nodeType": "MemberAccess",
                                  "src": "5566:15:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint8",
                                    "typeString": "uint8"
                                  }
                                },
                                "src": "5551:30:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint8",
                                  "typeString": "uint8"
                                }
                              },
                              "id": 411,
                              "nodeType": "ExpressionStatement",
                              "src": "5551:30:3"
                            },
                            {
                              "eventCall": {
                                "arguments": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "id": 415,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "lValueRequested": false,
                                          "nodeType": "ElementaryTypeNameExpression",
                                          "src": "5617:5:3",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_type$_t_uint8_$",
                                            "typeString": "type(uint8)"
                                          },
                                          "typeName": {
                                            "id": 414,
                                            "name": "uint8",
                                            "nodeType": "ElementaryTypeName",
                                            "src": "5617:5:3",
                                            "typeDescriptions": {}
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_type$_t_uint8_$",
                                            "typeString": "type(uint8)"
                                          }
                                        ],
                                        "id": 413,
                                        "name": "type",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": -27,
                                        "src": "5612:4:3",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                                          "typeString": "function () pure"
                                        }
                                      },
                                      "id": 416,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "functionCall",
                                      "lValueRequested": false,
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "5612:11:3",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_magic_meta_type_t_uint8",
                                        "typeString": "type(uint8)"
                                      }
                                    },
                                    "id": 417,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "memberName": "max",
                                    "nodeType": "MemberAccess",
                                    "src": "5612:15:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint8",
                                      "typeString": "uint8"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint8",
                                      "typeString": "uint8"
                                    }
                                  ],
                                  "id": 412,
                                  "name": "Initialized",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 288,
                                  "src": "5600:11:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_event_nonpayable$_t_uint8_$returns$__$",
                                    "typeString": "function (uint8)"
                                  }
                                },
                                "id": 418,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "5600:28:3",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 419,
                              "nodeType": "EmitStatement",
                              "src": "5595:33:3"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "documentation": {
                    "id": 388,
                    "nodeType": "StructuredDocumentation",
                    "src": "4973:388:3",
                    "text": " @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\n Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\n to any version. It is recommended to use this to lock implementation contracts that are designed to be called\n through proxies."
                  },
                  "id": 423,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_disableInitializers",
                  "nameLocation": "5375:20:3",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 389,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "5395:2:3"
                  },
                  "returnParameters": {
                    "id": 390,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "5415:0:3"
                  },
                  "scope": 424,
                  "src": "5366:279:3",
                  "stateMutability": "nonpayable",
                  "virtual": true,
                  "visibility": "internal"
                }
              ],
              "scope": 425,
              "src": "2372:3275:3"
            }
          ],
          "src": "113:5535:3"
        },
        "id": 3
      },
      "@openzeppelin/contracts/utils/Address.sol": {
        "ast": {
          "absolutePath": "@openzeppelin/contracts/utils/Address.sol",
          "exportedSymbols": {
            "Address": [
              719
            ]
          },
          "id": 720,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 426,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".1"
              ],
              "nodeType": "PragmaDirective",
              "src": "101:23:4"
            },
            {
              "abstract": false,
              "baseContracts": [],
              "contractDependencies": [],
              "contractKind": "library",
              "documentation": {
                "id": 427,
                "nodeType": "StructuredDocumentation",
                "src": "126:67:4",
                "text": " @dev Collection of functions related to the address type"
              },
              "fullyImplemented": true,
              "id": 719,
              "linearizedBaseContracts": [
                719
              ],
              "name": "Address",
              "nameLocation": "202:7:4",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "body": {
                    "id": 441,
                    "nodeType": "Block",
                    "src": "1241:254:4",
                    "statements": [
                      {
                        "expression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 439,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "expression": {
                                "id": 435,
                                "name": "account",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 430,
                                "src": "1465:7:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "id": 436,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "code",
                              "nodeType": "MemberAccess",
                              "src": "1465:12:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            },
                            "id": 437,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "length",
                            "nodeType": "MemberAccess",
                            "src": "1465:19:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 438,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1487:1:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "1465:23:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "functionReturnParameters": 434,
                        "id": 440,
                        "nodeType": "Return",
                        "src": "1458:30:4"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 428,
                    "nodeType": "StructuredDocumentation",
                    "src": "216:954:4",
                    "text": " @dev Returns true if `account` is a contract.\n [IMPORTANT]\n ====\n It is unsafe to assume that an address for which this function returns\n false is an externally-owned account (EOA) and not a contract.\n Among others, `isContract` will return false for the following\n types of addresses:\n  - an externally-owned account\n  - a contract in construction\n  - an address where a contract will be created\n  - an address where a contract lived, but was destroyed\n ====\n [IMPORTANT]\n ====\n You shouldn't rely on `isContract` to protect against flash loan attacks!\n Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n constructor.\n ===="
                  },
                  "id": 442,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "isContract",
                  "nameLocation": "1184:10:4",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 431,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 430,
                        "mutability": "mutable",
                        "name": "account",
                        "nameLocation": "1203:7:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 442,
                        "src": "1195:15:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 429,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1195:7:4",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1194:17:4"
                  },
                  "returnParameters": {
                    "id": 434,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 433,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 442,
                        "src": "1235:4:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 432,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "1235:4:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1234:6:4"
                  },
                  "scope": 719,
                  "src": "1175:320:4",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 475,
                    "nodeType": "Block",
                    "src": "2483:241:4",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 457,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "arguments": [
                                    {
                                      "id": 453,
                                      "name": "this",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": -28,
                                      "src": "2509:4:4",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_Address_$719",
                                        "typeString": "library Address"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_contract$_Address_$719",
                                        "typeString": "library Address"
                                      }
                                    ],
                                    "id": 452,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "2501:7:4",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_address_$",
                                      "typeString": "type(address)"
                                    },
                                    "typeName": {
                                      "id": 451,
                                      "name": "address",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "2501:7:4",
                                      "typeDescriptions": {}
                                    }
                                  },
                                  "id": 454,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "2501:13:4",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "id": 455,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "balance",
                                "nodeType": "MemberAccess",
                                "src": "2501:21:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">=",
                              "rightExpression": {
                                "id": 456,
                                "name": "amount",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 447,
                                "src": "2526:6:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "2501:31:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "416464726573733a20696e73756666696369656e742062616c616e6365",
                              "id": 458,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2534:31:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
                                "typeString": "literal_string \"Address: insufficient balance\""
                              },
                              "value": "Address: insufficient balance"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
                                "typeString": "literal_string \"Address: insufficient balance\""
                              }
                            ],
                            "id": 450,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "2493:7:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 459,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2493:73:4",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 460,
                        "nodeType": "ExpressionStatement",
                        "src": "2493:73:4"
                      },
                      {
                        "assignments": [
                          462,
                          null
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 462,
                            "mutability": "mutable",
                            "name": "success",
                            "nameLocation": "2583:7:4",
                            "nodeType": "VariableDeclaration",
                            "scope": 475,
                            "src": "2578:12:4",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "typeName": {
                              "id": 461,
                              "name": "bool",
                              "nodeType": "ElementaryTypeName",
                              "src": "2578:4:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "visibility": "internal"
                          },
                          null
                        ],
                        "id": 469,
                        "initialValue": {
                          "arguments": [
                            {
                              "hexValue": "",
                              "id": 467,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2626:2:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                "typeString": "literal_string \"\""
                              },
                              "value": ""
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                "typeString": "literal_string \"\""
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                  "typeString": "literal_string \"\""
                                }
                              ],
                              "expression": {
                                "id": 463,
                                "name": "recipient",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 445,
                                "src": "2596:9:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              },
                              "id": 464,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "call",
                              "nodeType": "MemberAccess",
                              "src": "2596:14:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                                "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                              }
                            },
                            "id": 466,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "names": [
                              "value"
                            ],
                            "nodeType": "FunctionCallOptions",
                            "options": [
                              {
                                "id": 465,
                                "name": "amount",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 447,
                                "src": "2618:6:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "src": "2596:29:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
                              "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                            }
                          },
                          "id": 468,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2596:33:4",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                            "typeString": "tuple(bool,bytes memory)"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "2577:52:4"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 471,
                              "name": "success",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 462,
                              "src": "2647:7:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "416464726573733a20756e61626c6520746f2073656e642076616c75652c20726563697069656e74206d61792068617665207265766572746564",
                              "id": 472,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2656:60:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
                                "typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
                              },
                              "value": "Address: unable to send value, recipient may have reverted"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
                                "typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
                              }
                            ],
                            "id": 470,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "2639:7:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 473,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2639:78:4",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 474,
                        "nodeType": "ExpressionStatement",
                        "src": "2639:78:4"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 443,
                    "nodeType": "StructuredDocumentation",
                    "src": "1501:906:4",
                    "text": " @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."
                  },
                  "id": 476,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "sendValue",
                  "nameLocation": "2421:9:4",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 448,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 445,
                        "mutability": "mutable",
                        "name": "recipient",
                        "nameLocation": "2447:9:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 476,
                        "src": "2431:25:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        "typeName": {
                          "id": 444,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2431:15:4",
                          "stateMutability": "payable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 447,
                        "mutability": "mutable",
                        "name": "amount",
                        "nameLocation": "2466:6:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 476,
                        "src": "2458:14:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 446,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2458:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2430:43:4"
                  },
                  "returnParameters": {
                    "id": 449,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2483:0:4"
                  },
                  "scope": 719,
                  "src": "2412:312:4",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 492,
                    "nodeType": "Block",
                    "src": "3555:84:4",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 487,
                              "name": "target",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 479,
                              "src": "3585:6:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 488,
                              "name": "data",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 481,
                              "src": "3593:4:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            },
                            {
                              "hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c206661696c6564",
                              "id": 489,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3599:32:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
                                "typeString": "literal_string \"Address: low-level call failed\""
                              },
                              "value": "Address: low-level call failed"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
                                "typeString": "literal_string \"Address: low-level call failed\""
                              }
                            ],
                            "id": 486,
                            "name": "functionCall",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              493,
                              513
                            ],
                            "referencedDeclaration": 513,
                            "src": "3572:12:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
                              "typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
                            }
                          },
                          "id": 490,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3572:60:4",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        },
                        "functionReturnParameters": 485,
                        "id": 491,
                        "nodeType": "Return",
                        "src": "3565:67:4"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 477,
                    "nodeType": "StructuredDocumentation",
                    "src": "2730:731:4",
                    "text": " @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason, it is bubbled up by this\n function (like regular Solidity function calls).\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert.\n _Available since v3.1._"
                  },
                  "id": 493,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "functionCall",
                  "nameLocation": "3475:12:4",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 482,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 479,
                        "mutability": "mutable",
                        "name": "target",
                        "nameLocation": "3496:6:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 493,
                        "src": "3488:14:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 478,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3488:7:4",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 481,
                        "mutability": "mutable",
                        "name": "data",
                        "nameLocation": "3517:4:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 493,
                        "src": "3504:17:4",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 480,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "3504:5:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3487:35:4"
                  },
                  "returnParameters": {
                    "id": 485,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 484,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 493,
                        "src": "3541:12:4",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 483,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "3541:5:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3540:14:4"
                  },
                  "scope": 719,
                  "src": "3466:173:4",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 512,
                    "nodeType": "Block",
                    "src": "4008:76:4",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 506,
                              "name": "target",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 496,
                              "src": "4047:6:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 507,
                              "name": "data",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 498,
                              "src": "4055:4:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            },
                            {
                              "hexValue": "30",
                              "id": 508,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4061:1:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            },
                            {
                              "id": 509,
                              "name": "errorMessage",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 500,
                              "src": "4064:12:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              },
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            ],
                            "id": 505,
                            "name": "functionCallWithValue",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              533,
                              583
                            ],
                            "referencedDeclaration": 583,
                            "src": "4025:21:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
                              "typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
                            }
                          },
                          "id": 510,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4025:52:4",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        },
                        "functionReturnParameters": 504,
                        "id": 511,
                        "nodeType": "Return",
                        "src": "4018:59:4"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 494,
                    "nodeType": "StructuredDocumentation",
                    "src": "3645:211:4",
                    "text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
                  },
                  "id": 513,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "functionCall",
                  "nameLocation": "3870:12:4",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 501,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 496,
                        "mutability": "mutable",
                        "name": "target",
                        "nameLocation": "3900:6:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 513,
                        "src": "3892:14:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 495,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3892:7:4",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 498,
                        "mutability": "mutable",
                        "name": "data",
                        "nameLocation": "3929:4:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 513,
                        "src": "3916:17:4",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 497,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "3916:5:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 500,
                        "mutability": "mutable",
                        "name": "errorMessage",
                        "nameLocation": "3957:12:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 513,
                        "src": "3943:26:4",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 499,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "3943:6:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3882:93:4"
                  },
                  "returnParameters": {
                    "id": 504,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 503,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 513,
                        "src": "3994:12:4",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 502,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "3994:5:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3993:14:4"
                  },
                  "scope": 719,
                  "src": "3861:223:4",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 532,
                    "nodeType": "Block",
                    "src": "4589:111:4",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 526,
                              "name": "target",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 516,
                              "src": "4628:6:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 527,
                              "name": "data",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 518,
                              "src": "4636:4:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            },
                            {
                              "id": 528,
                              "name": "value",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 520,
                              "src": "4642:5:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c20776974682076616c7565206661696c6564",
                              "id": 529,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4649:43:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
                                "typeString": "literal_string \"Address: low-level call with value failed\""
                              },
                              "value": "Address: low-level call with value failed"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
                                "typeString": "literal_string \"Address: low-level call with value failed\""
                              }
                            ],
                            "id": 525,
                            "name": "functionCallWithValue",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              533,
                              583
                            ],
                            "referencedDeclaration": 583,
                            "src": "4606:21:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
                              "typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
                            }
                          },
                          "id": 530,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4606:87:4",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        },
                        "functionReturnParameters": 524,
                        "id": 531,
                        "nodeType": "Return",
                        "src": "4599:94:4"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 514,
                    "nodeType": "StructuredDocumentation",
                    "src": "4090:351:4",
                    "text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`.\n _Available since v3.1._"
                  },
                  "id": 533,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "functionCallWithValue",
                  "nameLocation": "4455:21:4",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 521,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 516,
                        "mutability": "mutable",
                        "name": "target",
                        "nameLocation": "4494:6:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 533,
                        "src": "4486:14:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 515,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "4486:7:4",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 518,
                        "mutability": "mutable",
                        "name": "data",
                        "nameLocation": "4523:4:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 533,
                        "src": "4510:17:4",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 517,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "4510:5:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 520,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "4545:5:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 533,
                        "src": "4537:13:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 519,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "4537:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4476:80:4"
                  },
                  "returnParameters": {
                    "id": 524,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 523,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 533,
                        "src": "4575:12:4",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 522,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "4575:5:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4574:14:4"
                  },
                  "scope": 719,
                  "src": "4446:254:4",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 582,
                    "nodeType": "Block",
                    "src": "5127:320:4",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 554,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "arguments": [
                                    {
                                      "id": 550,
                                      "name": "this",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": -28,
                                      "src": "5153:4:4",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_Address_$719",
                                        "typeString": "library Address"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_contract$_Address_$719",
                                        "typeString": "library Address"
                                      }
                                    ],
                                    "id": 549,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "5145:7:4",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_address_$",
                                      "typeString": "type(address)"
                                    },
                                    "typeName": {
                                      "id": 548,
                                      "name": "address",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "5145:7:4",
                                      "typeDescriptions": {}
                                    }
                                  },
                                  "id": 551,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "5145:13:4",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "id": 552,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "balance",
                                "nodeType": "MemberAccess",
                                "src": "5145:21:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">=",
                              "rightExpression": {
                                "id": 553,
                                "name": "value",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 540,
                                "src": "5170:5:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "5145:30:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c",
                              "id": 555,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "5177:40:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
                                "typeString": "literal_string \"Address: insufficient balance for call\""
                              },
                              "value": "Address: insufficient balance for call"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
                                "typeString": "literal_string \"Address: insufficient balance for call\""
                              }
                            ],
                            "id": 547,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "5137:7:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 556,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5137:81:4",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 557,
                        "nodeType": "ExpressionStatement",
                        "src": "5137:81:4"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 560,
                                  "name": "target",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 536,
                                  "src": "5247:6:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 559,
                                "name": "isContract",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 442,
                                "src": "5236:10:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
                                  "typeString": "function (address) view returns (bool)"
                                }
                              },
                              "id": 561,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "5236:18:4",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374",
                              "id": 562,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "5256:31:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
                                "typeString": "literal_string \"Address: call to non-contract\""
                              },
                              "value": "Address: call to non-contract"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
                                "typeString": "literal_string \"Address: call to non-contract\""
                              }
                            ],
                            "id": 558,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "5228:7:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 563,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5228:60:4",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 564,
                        "nodeType": "ExpressionStatement",
                        "src": "5228:60:4"
                      },
                      {
                        "assignments": [
                          566,
                          568
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 566,
                            "mutability": "mutable",
                            "name": "success",
                            "nameLocation": "5305:7:4",
                            "nodeType": "VariableDeclaration",
                            "scope": 582,
                            "src": "5300:12:4",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "typeName": {
                              "id": 565,
                              "name": "bool",
                              "nodeType": "ElementaryTypeName",
                              "src": "5300:4:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "visibility": "internal"
                          },
                          {
                            "constant": false,
                            "id": 568,
                            "mutability": "mutable",
                            "name": "returndata",
                            "nameLocation": "5327:10:4",
                            "nodeType": "VariableDeclaration",
                            "scope": 582,
                            "src": "5314:23:4",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes"
                            },
                            "typeName": {
                              "id": 567,
                              "name": "bytes",
                              "nodeType": "ElementaryTypeName",
                              "src": "5314:5:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_storage_ptr",
                                "typeString": "bytes"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 575,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 573,
                              "name": "data",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 538,
                              "src": "5367:4:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              ],
                              "expression": {
                                "id": 569,
                                "name": "target",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 536,
                                "src": "5341:6:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "id": 570,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "call",
                              "nodeType": "MemberAccess",
                              "src": "5341:11:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                                "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                              }
                            },
                            "id": 572,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "names": [
                              "value"
                            ],
                            "nodeType": "FunctionCallOptions",
                            "options": [
                              {
                                "id": 571,
                                "name": "value",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 540,
                                "src": "5360:5:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "src": "5341:25:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
                              "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                            }
                          },
                          "id": 574,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5341:31:4",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                            "typeString": "tuple(bool,bytes memory)"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "5299:73:4"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 577,
                              "name": "success",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 566,
                              "src": "5406:7:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "id": 578,
                              "name": "returndata",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 568,
                              "src": "5415:10:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            },
                            {
                              "id": 579,
                              "name": "errorMessage",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 542,
                              "src": "5427:12:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              },
                              {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            ],
                            "id": 576,
                            "name": "verifyCallResult",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 718,
                            "src": "5389:16:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
                              "typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
                            }
                          },
                          "id": 580,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5389:51:4",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        },
                        "functionReturnParameters": 546,
                        "id": 581,
                        "nodeType": "Return",
                        "src": "5382:58:4"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 534,
                    "nodeType": "StructuredDocumentation",
                    "src": "4706:237:4",
                    "text": " @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n with `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
                  },
                  "id": 583,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "functionCallWithValue",
                  "nameLocation": "4957:21:4",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 543,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 536,
                        "mutability": "mutable",
                        "name": "target",
                        "nameLocation": "4996:6:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 583,
                        "src": "4988:14:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 535,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "4988:7:4",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 538,
                        "mutability": "mutable",
                        "name": "data",
                        "nameLocation": "5025:4:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 583,
                        "src": "5012:17:4",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 537,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "5012:5:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 540,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "5047:5:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 583,
                        "src": "5039:13:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 539,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "5039:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 542,
                        "mutability": "mutable",
                        "name": "errorMessage",
                        "nameLocation": "5076:12:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 583,
                        "src": "5062:26:4",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 541,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "5062:6:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4978:116:4"
                  },
                  "returnParameters": {
                    "id": 546,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 545,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 583,
                        "src": "5113:12:4",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 544,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "5113:5:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "5112:14:4"
                  },
                  "scope": 719,
                  "src": "4948:499:4",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 599,
                    "nodeType": "Block",
                    "src": "5724:97:4",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 594,
                              "name": "target",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 586,
                              "src": "5760:6:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 595,
                              "name": "data",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 588,
                              "src": "5768:4:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            },
                            {
                              "hexValue": "416464726573733a206c6f772d6c6576656c207374617469632063616c6c206661696c6564",
                              "id": 596,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "5774:39:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
                                "typeString": "literal_string \"Address: low-level static call failed\""
                              },
                              "value": "Address: low-level static call failed"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
                                "typeString": "literal_string \"Address: low-level static call failed\""
                              }
                            ],
                            "id": 593,
                            "name": "functionStaticCall",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              600,
                              635
                            ],
                            "referencedDeclaration": 635,
                            "src": "5741:18:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
                              "typeString": "function (address,bytes memory,string memory) view returns (bytes memory)"
                            }
                          },
                          "id": 597,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5741:73:4",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        },
                        "functionReturnParameters": 592,
                        "id": 598,
                        "nodeType": "Return",
                        "src": "5734:80:4"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 584,
                    "nodeType": "StructuredDocumentation",
                    "src": "5453:166:4",
                    "text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
                  },
                  "id": 600,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "functionStaticCall",
                  "nameLocation": "5633:18:4",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 589,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 586,
                        "mutability": "mutable",
                        "name": "target",
                        "nameLocation": "5660:6:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 600,
                        "src": "5652:14:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 585,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "5652:7:4",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 588,
                        "mutability": "mutable",
                        "name": "data",
                        "nameLocation": "5681:4:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 600,
                        "src": "5668:17:4",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 587,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "5668:5:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "5651:35:4"
                  },
                  "returnParameters": {
                    "id": 592,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 591,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 600,
                        "src": "5710:12:4",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 590,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "5710:5:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "5709:14:4"
                  },
                  "scope": 719,
                  "src": "5624:197:4",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 634,
                    "nodeType": "Block",
                    "src": "6163:228:4",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 614,
                                  "name": "target",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 603,
                                  "src": "6192:6:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 613,
                                "name": "isContract",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 442,
                                "src": "6181:10:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
                                  "typeString": "function (address) view returns (bool)"
                                }
                              },
                              "id": 615,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "6181:18:4",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "416464726573733a207374617469632063616c6c20746f206e6f6e2d636f6e7472616374",
                              "id": 616,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "6201:38:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_c79cc78e4f16ce3933a42b84c73868f93bb4a59c031a0acf576679de98c608a9",
                                "typeString": "literal_string \"Address: static call to non-contract\""
                              },
                              "value": "Address: static call to non-contract"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_c79cc78e4f16ce3933a42b84c73868f93bb4a59c031a0acf576679de98c608a9",
                                "typeString": "literal_string \"Address: static call to non-contract\""
                              }
                            ],
                            "id": 612,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "6173:7:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 617,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6173:67:4",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 618,
                        "nodeType": "ExpressionStatement",
                        "src": "6173:67:4"
                      },
                      {
                        "assignments": [
                          620,
                          622
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 620,
                            "mutability": "mutable",
                            "name": "success",
                            "nameLocation": "6257:7:4",
                            "nodeType": "VariableDeclaration",
                            "scope": 634,
                            "src": "6252:12:4",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "typeName": {
                              "id": 619,
                              "name": "bool",
                              "nodeType": "ElementaryTypeName",
                              "src": "6252:4:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "visibility": "internal"
                          },
                          {
                            "constant": false,
                            "id": 622,
                            "mutability": "mutable",
                            "name": "returndata",
                            "nameLocation": "6279:10:4",
                            "nodeType": "VariableDeclaration",
                            "scope": 634,
                            "src": "6266:23:4",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes"
                            },
                            "typeName": {
                              "id": 621,
                              "name": "bytes",
                              "nodeType": "ElementaryTypeName",
                              "src": "6266:5:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_storage_ptr",
                                "typeString": "bytes"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 627,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 625,
                              "name": "data",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 605,
                              "src": "6311:4:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "expression": {
                              "id": 623,
                              "name": "target",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 603,
                              "src": "6293:6:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "id": 624,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "staticcall",
                            "nodeType": "MemberAccess",
                            "src": "6293:17:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                              "typeString": "function (bytes memory) view returns (bool,bytes memory)"
                            }
                          },
                          "id": 626,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6293:23:4",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                            "typeString": "tuple(bool,bytes memory)"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "6251:65:4"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 629,
                              "name": "success",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 620,
                              "src": "6350:7:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "id": 630,
                              "name": "returndata",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 622,
                              "src": "6359:10:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            },
                            {
                              "id": 631,
                              "name": "errorMessage",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 607,
                              "src": "6371:12:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              },
                              {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            ],
                            "id": 628,
                            "name": "verifyCallResult",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 718,
                            "src": "6333:16:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
                              "typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
                            }
                          },
                          "id": 632,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6333:51:4",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        },
                        "functionReturnParameters": 611,
                        "id": 633,
                        "nodeType": "Return",
                        "src": "6326:58:4"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 601,
                    "nodeType": "StructuredDocumentation",
                    "src": "5827:173:4",
                    "text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
                  },
                  "id": 635,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "functionStaticCall",
                  "nameLocation": "6014:18:4",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 608,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 603,
                        "mutability": "mutable",
                        "name": "target",
                        "nameLocation": "6050:6:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 635,
                        "src": "6042:14:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 602,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "6042:7:4",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 605,
                        "mutability": "mutable",
                        "name": "data",
                        "nameLocation": "6079:4:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 635,
                        "src": "6066:17:4",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 604,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "6066:5:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 607,
                        "mutability": "mutable",
                        "name": "errorMessage",
                        "nameLocation": "6107:12:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 635,
                        "src": "6093:26:4",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 606,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "6093:6:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "6032:93:4"
                  },
                  "returnParameters": {
                    "id": 611,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 610,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 635,
                        "src": "6149:12:4",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 609,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "6149:5:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "6148:14:4"
                  },
                  "scope": 719,
                  "src": "6005:386:4",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 651,
                    "nodeType": "Block",
                    "src": "6667:101:4",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 646,
                              "name": "target",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 638,
                              "src": "6705:6:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 647,
                              "name": "data",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 640,
                              "src": "6713:4:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            },
                            {
                              "hexValue": "416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564",
                              "id": 648,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "6719:41:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
                                "typeString": "literal_string \"Address: low-level delegate call failed\""
                              },
                              "value": "Address: low-level delegate call failed"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
                                "typeString": "literal_string \"Address: low-level delegate call failed\""
                              }
                            ],
                            "id": 645,
                            "name": "functionDelegateCall",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              652,
                              687
                            ],
                            "referencedDeclaration": 687,
                            "src": "6684:20:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
                              "typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
                            }
                          },
                          "id": 649,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6684:77:4",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        },
                        "functionReturnParameters": 644,
                        "id": 650,
                        "nodeType": "Return",
                        "src": "6677:84:4"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 636,
                    "nodeType": "StructuredDocumentation",
                    "src": "6397:168:4",
                    "text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"
                  },
                  "id": 652,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "functionDelegateCall",
                  "nameLocation": "6579:20:4",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 641,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 638,
                        "mutability": "mutable",
                        "name": "target",
                        "nameLocation": "6608:6:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 652,
                        "src": "6600:14:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 637,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "6600:7:4",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 640,
                        "mutability": "mutable",
                        "name": "data",
                        "nameLocation": "6629:4:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 652,
                        "src": "6616:17:4",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 639,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "6616:5:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "6599:35:4"
                  },
                  "returnParameters": {
                    "id": 644,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 643,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 652,
                        "src": "6653:12:4",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 642,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "6653:5:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "6652:14:4"
                  },
                  "scope": 719,
                  "src": "6570:198:4",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 686,
                    "nodeType": "Block",
                    "src": "7109:232:4",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 666,
                                  "name": "target",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 655,
                                  "src": "7138:6:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 665,
                                "name": "isContract",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 442,
                                "src": "7127:10:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
                                  "typeString": "function (address) view returns (bool)"
                                }
                              },
                              "id": 667,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "7127:18:4",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6e7472616374",
                              "id": 668,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "7147:40:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520",
                                "typeString": "literal_string \"Address: delegate call to non-contract\""
                              },
                              "value": "Address: delegate call to non-contract"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520",
                                "typeString": "literal_string \"Address: delegate call to non-contract\""
                              }
                            ],
                            "id": 664,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "7119:7:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 669,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7119:69:4",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 670,
                        "nodeType": "ExpressionStatement",
                        "src": "7119:69:4"
                      },
                      {
                        "assignments": [
                          672,
                          674
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 672,
                            "mutability": "mutable",
                            "name": "success",
                            "nameLocation": "7205:7:4",
                            "nodeType": "VariableDeclaration",
                            "scope": 686,
                            "src": "7200:12:4",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "typeName": {
                              "id": 671,
                              "name": "bool",
                              "nodeType": "ElementaryTypeName",
                              "src": "7200:4:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "visibility": "internal"
                          },
                          {
                            "constant": false,
                            "id": 674,
                            "mutability": "mutable",
                            "name": "returndata",
                            "nameLocation": "7227:10:4",
                            "nodeType": "VariableDeclaration",
                            "scope": 686,
                            "src": "7214:23:4",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes"
                            },
                            "typeName": {
                              "id": 673,
                              "name": "bytes",
                              "nodeType": "ElementaryTypeName",
                              "src": "7214:5:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_storage_ptr",
                                "typeString": "bytes"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 679,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 677,
                              "name": "data",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 657,
                              "src": "7261:4:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "expression": {
                              "id": 675,
                              "name": "target",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 655,
                              "src": "7241:6:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "id": 676,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "delegatecall",
                            "nodeType": "MemberAccess",
                            "src": "7241:19:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                              "typeString": "function (bytes memory) returns (bool,bytes memory)"
                            }
                          },
                          "id": 678,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7241:25:4",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                            "typeString": "tuple(bool,bytes memory)"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "7199:67:4"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 681,
                              "name": "success",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 672,
                              "src": "7300:7:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "id": 682,
                              "name": "returndata",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 674,
                              "src": "7309:10:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            },
                            {
                              "id": 683,
                              "name": "errorMessage",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 659,
                              "src": "7321:12:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              },
                              {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            ],
                            "id": 680,
                            "name": "verifyCallResult",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 718,
                            "src": "7283:16:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
                              "typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
                            }
                          },
                          "id": 684,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7283:51:4",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        },
                        "functionReturnParameters": 663,
                        "id": 685,
                        "nodeType": "Return",
                        "src": "7276:58:4"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 653,
                    "nodeType": "StructuredDocumentation",
                    "src": "6774:175:4",
                    "text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"
                  },
                  "id": 687,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "functionDelegateCall",
                  "nameLocation": "6963:20:4",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 660,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 655,
                        "mutability": "mutable",
                        "name": "target",
                        "nameLocation": "7001:6:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 687,
                        "src": "6993:14:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 654,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "6993:7:4",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 657,
                        "mutability": "mutable",
                        "name": "data",
                        "nameLocation": "7030:4:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 687,
                        "src": "7017:17:4",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 656,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "7017:5:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 659,
                        "mutability": "mutable",
                        "name": "errorMessage",
                        "nameLocation": "7058:12:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 687,
                        "src": "7044:26:4",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 658,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "7044:6:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "6983:93:4"
                  },
                  "returnParameters": {
                    "id": 663,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 662,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 687,
                        "src": "7095:12:4",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 661,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "7095:5:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "7094:14:4"
                  },
                  "scope": 719,
                  "src": "6954:387:4",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 717,
                    "nodeType": "Block",
                    "src": "7721:582:4",
                    "statements": [
                      {
                        "condition": {
                          "id": 699,
                          "name": "success",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 690,
                          "src": "7735:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": {
                          "id": 715,
                          "nodeType": "Block",
                          "src": "7792:505:4",
                          "statements": [
                            {
                              "condition": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 706,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "expression": {
                                    "id": 703,
                                    "name": "returndata",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 692,
                                    "src": "7876:10:4",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes_memory_ptr",
                                      "typeString": "bytes memory"
                                    }
                                  },
                                  "id": 704,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "length",
                                  "nodeType": "MemberAccess",
                                  "src": "7876:17:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": ">",
                                "rightExpression": {
                                  "hexValue": "30",
                                  "id": 705,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "7896:1:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                },
                                "src": "7876:21:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "falseBody": {
                                "id": 713,
                                "nodeType": "Block",
                                "src": "8234:53:4",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "id": 710,
                                          "name": "errorMessage",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 694,
                                          "src": "8259:12:4",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_string_memory_ptr",
                                            "typeString": "string memory"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_string_memory_ptr",
                                            "typeString": "string memory"
                                          }
                                        ],
                                        "id": 709,
                                        "name": "revert",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [
                                          -19,
                                          -19
                                        ],
                                        "referencedDeclaration": -19,
                                        "src": "8252:6:4",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
                                          "typeString": "function (string memory) pure"
                                        }
                                      },
                                      "id": 711,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "functionCall",
                                      "lValueRequested": false,
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "8252:20:4",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_tuple$__$",
                                        "typeString": "tuple()"
                                      }
                                    },
                                    "id": 712,
                                    "nodeType": "ExpressionStatement",
                                    "src": "8252:20:4"
                                  }
                                ]
                              },
                              "id": 714,
                              "nodeType": "IfStatement",
                              "src": "7872:415:4",
                              "trueBody": {
                                "id": 708,
                                "nodeType": "Block",
                                "src": "7899:329:4",
                                "statements": [
                                  {
                                    "AST": {
                                      "nodeType": "YulBlock",
                                      "src": "8069:145:4",
                                      "statements": [
                                        {
                                          "nodeType": "YulVariableDeclaration",
                                          "src": "8091:40:4",
                                          "value": {
                                            "arguments": [
                                              {
                                                "name": "returndata",
                                                "nodeType": "YulIdentifier",
                                                "src": "8120:10:4"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "mload",
                                              "nodeType": "YulIdentifier",
                                              "src": "8114:5:4"
                                            },
                                            "nodeType": "YulFunctionCall",
                                            "src": "8114:17:4"
                                          },
                                          "variables": [
                                            {
                                              "name": "returndata_size",
                                              "nodeType": "YulTypedName",
                                              "src": "8095:15:4",
                                              "type": ""
                                            }
                                          ]
                                        },
                                        {
                                          "expression": {
                                            "arguments": [
                                              {
                                                "arguments": [
                                                  {
                                                    "kind": "number",
                                                    "nodeType": "YulLiteral",
                                                    "src": "8163:2:4",
                                                    "type": "",
                                                    "value": "32"
                                                  },
                                                  {
                                                    "name": "returndata",
                                                    "nodeType": "YulIdentifier",
                                                    "src": "8167:10:4"
                                                  }
                                                ],
                                                "functionName": {
                                                  "name": "add",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "8159:3:4"
                                                },
                                                "nodeType": "YulFunctionCall",
                                                "src": "8159:19:4"
                                              },
                                              {
                                                "name": "returndata_size",
                                                "nodeType": "YulIdentifier",
                                                "src": "8180:15:4"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "revert",
                                              "nodeType": "YulIdentifier",
                                              "src": "8152:6:4"
                                            },
                                            "nodeType": "YulFunctionCall",
                                            "src": "8152:44:4"
                                          },
                                          "nodeType": "YulExpressionStatement",
                                          "src": "8152:44:4"
                                        }
                                      ]
                                    },
                                    "documentation": "@solidity memory-safe-assembly",
                                    "evmVersion": "istanbul",
                                    "externalReferences": [
                                      {
                                        "declaration": 692,
                                        "isOffset": false,
                                        "isSlot": false,
                                        "src": "8120:10:4",
                                        "valueSize": 1
                                      },
                                      {
                                        "declaration": 692,
                                        "isOffset": false,
                                        "isSlot": false,
                                        "src": "8167:10:4",
                                        "valueSize": 1
                                      }
                                    ],
                                    "id": 707,
                                    "nodeType": "InlineAssembly",
                                    "src": "8060:154:4"
                                  }
                                ]
                              }
                            }
                          ]
                        },
                        "id": 716,
                        "nodeType": "IfStatement",
                        "src": "7731:566:4",
                        "trueBody": {
                          "id": 702,
                          "nodeType": "Block",
                          "src": "7744:42:4",
                          "statements": [
                            {
                              "expression": {
                                "id": 700,
                                "name": "returndata",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 692,
                                "src": "7765:10:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              },
                              "functionReturnParameters": 698,
                              "id": 701,
                              "nodeType": "Return",
                              "src": "7758:17:4"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "documentation": {
                    "id": 688,
                    "nodeType": "StructuredDocumentation",
                    "src": "7347:209:4",
                    "text": " @dev Tool to verifies that a low level call was successful, and revert if it wasn't, either by bubbling the\n revert reason using the provided one.\n _Available since v4.3._"
                  },
                  "id": 718,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "verifyCallResult",
                  "nameLocation": "7570:16:4",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 695,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 690,
                        "mutability": "mutable",
                        "name": "success",
                        "nameLocation": "7601:7:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 718,
                        "src": "7596:12:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 689,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "7596:4:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 692,
                        "mutability": "mutable",
                        "name": "returndata",
                        "nameLocation": "7631:10:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 718,
                        "src": "7618:23:4",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 691,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "7618:5:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 694,
                        "mutability": "mutable",
                        "name": "errorMessage",
                        "nameLocation": "7665:12:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 718,
                        "src": "7651:26:4",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 693,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "7651:6:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "7586:97:4"
                  },
                  "returnParameters": {
                    "id": 698,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 697,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 718,
                        "src": "7707:12:4",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 696,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "7707:5:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "7706:14:4"
                  },
                  "scope": 719,
                  "src": "7561:742:4",
                  "stateMutability": "pure",
                  "virtual": false,
                  "visibility": "internal"
                }
              ],
              "scope": 720,
              "src": "194:8111:4"
            }
          ],
          "src": "101:8205:4"
        },
        "id": 4
      },
      "contracts/implementations/BaseAuthorizedImplementation.sol": {
        "ast": {
          "absolutePath": "contracts/implementations/BaseAuthorizedImplementation.sol",
          "exportedSymbols": {
            "Address": [
              719
            ],
            "Authorizer": [
              149
            ],
            "BaseAuthorizedImplementation": [
              755
            ],
            "BaseImplementation": [
              868
            ],
            "IAuthorizer": [
              193
            ],
            "IImplementation": [
              884
            ],
            "IRegistry": [
              1098
            ],
            "Initializable": [
              424
            ]
          },
          "id": 756,
          "license": "GPL-3.0-or-later",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 721,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".0"
              ],
              "nodeType": "PragmaDirective",
              "src": "688:23:5"
            },
            {
              "absolutePath": "@mimic-fi/v2-helpers/contracts/auth/Authorizer.sol",
              "file": "@mimic-fi/v2-helpers/contracts/auth/Authorizer.sol",
              "id": 722,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 756,
              "sourceUnit": 150,
              "src": "713:60:5",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "absolutePath": "contracts/implementations/BaseImplementation.sol",
              "file": "./BaseImplementation.sol",
              "id": 723,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 756,
              "sourceUnit": 869,
              "src": "775:34:5",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "abstract": true,
              "baseContracts": [
                {
                  "baseName": {
                    "id": 725,
                    "name": "BaseImplementation",
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 868,
                    "src": "1084:18:5"
                  },
                  "id": 726,
                  "nodeType": "InheritanceSpecifier",
                  "src": "1084:18:5"
                },
                {
                  "baseName": {
                    "id": 727,
                    "name": "Authorizer",
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 149,
                    "src": "1104:10:5"
                  },
                  "id": 728,
                  "nodeType": "InheritanceSpecifier",
                  "src": "1104:10:5"
                }
              ],
              "contractDependencies": [
                149,
                193,
                868,
                884
              ],
              "contractKind": "contract",
              "documentation": {
                "id": 724,
                "nodeType": "StructuredDocumentation",
                "src": "811:222:5",
                "text": " @title BaseAuthorizedImplementation\n @dev BaseImplementation using the Authorizer mixin. Base implementations that want to use the Authorizer\n permissions mechanism should inherit from this contract instead."
              },
              "fullyImplemented": false,
              "id": 755,
              "linearizedBaseContracts": [
                755,
                149,
                193,
                868,
                884
              ],
              "name": "BaseAuthorizedImplementation",
              "nameLocation": "1052:28:5",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "body": {
                    "id": 753,
                    "nodeType": "Block",
                    "src": "1399:125:5",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 740,
                              "name": "admin",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 731,
                              "src": "1420:5:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "expression": {
                                "expression": {
                                  "id": 741,
                                  "name": "Authorizer",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 149,
                                  "src": "1427:10:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_contract$_Authorizer_$149_$",
                                    "typeString": "type(contract Authorizer)"
                                  }
                                },
                                "id": 742,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberName": "authorize",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 70,
                                "src": "1427:20:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_declaration_nonpayable$_t_address_$_t_bytes4_$returns$__$",
                                  "typeString": "function Authorizer.authorize(address,bytes4)"
                                }
                              },
                              "id": 743,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberName": "selector",
                              "nodeType": "MemberAccess",
                              "src": "1427:29:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes4",
                                "typeString": "bytes4"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_bytes4",
                                "typeString": "bytes4"
                              }
                            ],
                            "id": 739,
                            "name": "_authorize",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 126,
                            "src": "1409:10:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes4_$returns$__$",
                              "typeString": "function (address,bytes4)"
                            }
                          },
                          "id": 744,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1409:48:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 745,
                        "nodeType": "ExpressionStatement",
                        "src": "1409:48:5"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 747,
                              "name": "admin",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 731,
                              "src": "1478:5:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "expression": {
                                "expression": {
                                  "id": 748,
                                  "name": "Authorizer",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 149,
                                  "src": "1485:10:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_contract$_Authorizer_$149_$",
                                    "typeString": "type(contract Authorizer)"
                                  }
                                },
                                "id": 749,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberName": "unauthorize",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 87,
                                "src": "1485:22:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_declaration_nonpayable$_t_address_$_t_bytes4_$returns$__$",
                                  "typeString": "function Authorizer.unauthorize(address,bytes4)"
                                }
                              },
                              "id": 750,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberName": "selector",
                              "nodeType": "MemberAccess",
                              "src": "1485:31:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes4",
                                "typeString": "bytes4"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_bytes4",
                                "typeString": "bytes4"
                              }
                            ],
                            "id": 746,
                            "name": "_authorize",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 126,
                            "src": "1467:10:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes4_$returns$__$",
                              "typeString": "function (address,bytes4)"
                            }
                          },
                          "id": 751,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1467:50:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 752,
                        "nodeType": "ExpressionStatement",
                        "src": "1467:50:5"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 729,
                    "nodeType": "StructuredDocumentation",
                    "src": "1121:199:5",
                    "text": " @dev Creates a new BaseAuthorizedImplementation\n @param admin Address to be granted authorize and unauthorize permissions\n @param registry Address of the Mimic Registry"
                  },
                  "id": 754,
                  "implemented": true,
                  "kind": "constructor",
                  "modifiers": [
                    {
                      "arguments": [
                        {
                          "id": 736,
                          "name": "registry",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 733,
                          "src": "1389:8:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "id": 737,
                      "modifierName": {
                        "id": 735,
                        "name": "BaseImplementation",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 868,
                        "src": "1370:18:5"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "1370:28:5"
                    }
                  ],
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 734,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 731,
                        "mutability": "mutable",
                        "name": "admin",
                        "nameLocation": "1345:5:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 754,
                        "src": "1337:13:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 730,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1337:7:5",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 733,
                        "mutability": "mutable",
                        "name": "registry",
                        "nameLocation": "1360:8:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 754,
                        "src": "1352:16:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 732,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1352:7:5",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1336:33:5"
                  },
                  "returnParameters": {
                    "id": 738,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1399:0:5"
                  },
                  "scope": 755,
                  "src": "1325:199:5",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                }
              ],
              "scope": 756,
              "src": "1034:492:5"
            }
          ],
          "src": "688:839:5"
        },
        "id": 5
      },
      "contracts/implementations/BaseImplementation.sol": {
        "ast": {
          "absolutePath": "contracts/implementations/BaseImplementation.sol",
          "exportedSymbols": {
            "Address": [
              719
            ],
            "BaseImplementation": [
              868
            ],
            "IAuthorizer": [
              193
            ],
            "IImplementation": [
              884
            ],
            "IRegistry": [
              1098
            ],
            "Initializable": [
              424
            ]
          },
          "id": 869,
          "license": "GPL-3.0-or-later",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 757,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".0"
              ],
              "nodeType": "PragmaDirective",
              "src": "688:23:6"
            },
            {
              "absolutePath": "@openzeppelin/contracts/proxy/utils/Initializable.sol",
              "file": "@openzeppelin/contracts/proxy/utils/Initializable.sol",
              "id": 758,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 869,
              "sourceUnit": 425,
              "src": "713:63:6",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "absolutePath": "contracts/implementations/IImplementation.sol",
              "file": "./IImplementation.sol",
              "id": 759,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 869,
              "sourceUnit": 885,
              "src": "778:31:6",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "absolutePath": "contracts/registry/IRegistry.sol",
              "file": "../registry/IRegistry.sol",
              "id": 760,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 869,
              "sourceUnit": 1099,
              "src": "810:35:6",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "abstract": true,
              "baseContracts": [
                {
                  "baseName": {
                    "id": 762,
                    "name": "IImplementation",
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 884,
                    "src": "1266:15:6"
                  },
                  "id": 763,
                  "nodeType": "InheritanceSpecifier",
                  "src": "1266:15:6"
                }
              ],
              "contractDependencies": [
                884
              ],
              "contractKind": "contract",
              "documentation": {
                "id": 761,
                "nodeType": "StructuredDocumentation",
                "src": "847:378:6",
                "text": " @title BaseImplementation\n @dev This implementation contract comes with an immutable reference to an implementations registry where it should\n be registered as well (checked during initialization). It allows requesting new instances of other registered\n implementations to as another safety check to make sure valid instances are referenced in case it's needed."
              },
              "fullyImplemented": false,
              "id": 868,
              "linearizedBaseContracts": [
                868,
                884
              ],
              "name": "BaseImplementation",
              "nameLocation": "1244:18:6",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "baseFunctions": [
                    883
                  ],
                  "constant": false,
                  "functionSelector": "7b103999",
                  "id": 766,
                  "mutability": "immutable",
                  "name": "registry",
                  "nameLocation": "1374:8:6",
                  "nodeType": "VariableDeclaration",
                  "overrides": {
                    "id": 765,
                    "nodeType": "OverrideSpecifier",
                    "overrides": [],
                    "src": "1365:8:6"
                  },
                  "scope": 868,
                  "src": "1340:42:6",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 764,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1340:7:6",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 776,
                    "nodeType": "Block",
                    "src": "1580:37:6",
                    "statements": [
                      {
                        "expression": {
                          "id": 774,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 772,
                            "name": "registry",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 766,
                            "src": "1590:8:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 773,
                            "name": "_registry",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 769,
                            "src": "1601:9:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "1590:20:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 775,
                        "nodeType": "ExpressionStatement",
                        "src": "1590:20:6"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 767,
                    "nodeType": "StructuredDocumentation",
                    "src": "1389:155:6",
                    "text": " @dev Creates a new BaseImplementation\n @param _registry Address of the Mimic Registry where dependencies will be validated against"
                  },
                  "id": 777,
                  "implemented": true,
                  "kind": "constructor",
                  "modifiers": [],
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 770,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 769,
                        "mutability": "mutable",
                        "name": "_registry",
                        "nameLocation": "1569:9:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 777,
                        "src": "1561:17:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 768,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1561:7:6",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1560:19:6"
                  },
                  "returnParameters": {
                    "id": 771,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1580:0:6"
                  },
                  "scope": 868,
                  "src": "1549:68:6",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 790,
                    "nodeType": "Block",
                    "src": "1950:85:6",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 785,
                                  "name": "dependency",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 780,
                                  "src": "1988:10:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 784,
                                "name": "_validateDependency",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 867,
                                "src": "1968:19:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
                                  "typeString": "function (address) view returns (bool)"
                                }
                              },
                              "id": 786,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1968:31:6",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "444550454e44454e43595f4e4f545f53544154454c455353",
                              "id": 787,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2001:26:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_33e7caeaeb13f3dd7003d49fd2bf0210a3c8ba3a01cca653fef5909dfda34f5b",
                                "typeString": "literal_string \"DEPENDENCY_NOT_STATELESS\""
                              },
                              "value": "DEPENDENCY_NOT_STATELESS"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_33e7caeaeb13f3dd7003d49fd2bf0210a3c8ba3a01cca653fef5909dfda34f5b",
                                "typeString": "literal_string \"DEPENDENCY_NOT_STATELESS\""
                              }
                            ],
                            "id": 783,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "1960:7:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 788,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1960:68:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 789,
                        "nodeType": "ExpressionStatement",
                        "src": "1960:68:6"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 778,
                    "nodeType": "StructuredDocumentation",
                    "src": "1623:250:6",
                    "text": " @dev Internal function to validate a new dependency that must be registered as stateless.\n It checks the new dependency is registered, not deprecated, and stateless.\n @param dependency New stateless dependency to be set"
                  },
                  "id": 791,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_validateStatelessDependency",
                  "nameLocation": "1887:28:6",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 781,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 780,
                        "mutability": "mutable",
                        "name": "dependency",
                        "nameLocation": "1924:10:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 791,
                        "src": "1916:18:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 779,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1916:7:6",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1915:20:6"
                  },
                  "returnParameters": {
                    "id": 782,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1950:0:6"
                  },
                  "scope": 868,
                  "src": "1878:157:6",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 805,
                    "nodeType": "Block",
                    "src": "2371:85:6",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 801,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "UnaryOperation",
                              "operator": "!",
                              "prefix": true,
                              "src": "2389:32:6",
                              "subExpression": {
                                "arguments": [
                                  {
                                    "id": 799,
                                    "name": "dependency",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 794,
                                    "src": "2410:10:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 798,
                                  "name": "_validateDependency",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 867,
                                  "src": "2390:19:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
                                    "typeString": "function (address) view returns (bool)"
                                  }
                                },
                                "id": 800,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "2390:31:6",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "444550454e44454e43595f4e4f545f535441544546554c",
                              "id": 802,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2423:25:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_e8c9c5707c7558388f15b095cd2d761beecde20a447b3260c35b1e715fcae11e",
                                "typeString": "literal_string \"DEPENDENCY_NOT_STATEFUL\""
                              },
                              "value": "DEPENDENCY_NOT_STATEFUL"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_e8c9c5707c7558388f15b095cd2d761beecde20a447b3260c35b1e715fcae11e",
                                "typeString": "literal_string \"DEPENDENCY_NOT_STATEFUL\""
                              }
                            ],
                            "id": 797,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "2381:7:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 803,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2381:68:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 804,
                        "nodeType": "ExpressionStatement",
                        "src": "2381:68:6"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 792,
                    "nodeType": "StructuredDocumentation",
                    "src": "2041:254:6",
                    "text": " @dev Internal function to validate a new dependency that cannot be registered as stateless.\n It checks the new dependency is registered, not deprecated, and not stateful.\n @param dependency New stateful dependency to be set"
                  },
                  "id": 806,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_validateStatefulDependency",
                  "nameLocation": "2309:27:6",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 795,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 794,
                        "mutability": "mutable",
                        "name": "dependency",
                        "nameLocation": "2345:10:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 806,
                        "src": "2337:18:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 793,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2337:7:6",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2336:20:6"
                  },
                  "returnParameters": {
                    "id": 796,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2371:0:6"
                  },
                  "scope": 868,
                  "src": "2300:156:6",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 866,
                    "nodeType": "Block",
                    "src": "2782:659:6",
                    "statements": [
                      {
                        "assignments": [
                          815
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 815,
                            "mutability": "mutable",
                            "name": "dependencyImplementation",
                            "nameLocation": "2974:24:6",
                            "nodeType": "VariableDeclaration",
                            "scope": 866,
                            "src": "2966:32:6",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 814,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "2966:7:6",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 822,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 820,
                              "name": "dependency",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 809,
                              "src": "3038:10:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 817,
                                  "name": "registry",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 766,
                                  "src": "3011:8:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 816,
                                "name": "IRegistry",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1098,
                                "src": "3001:9:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IRegistry_$1098_$",
                                  "typeString": "type(contract IRegistry)"
                                }
                              },
                              "id": 818,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "3001:19:6",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IRegistry_$1098",
                                "typeString": "contract IRegistry"
                              }
                            },
                            "id": 819,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "implementationOf",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1049,
                            "src": "3001:36:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_address_$",
                              "typeString": "function (address) view external returns (address)"
                            }
                          },
                          "id": 821,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3001:48:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "2966:83:6"
                      },
                      {
                        "assignments": [
                          824
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 824,
                            "mutability": "mutable",
                            "name": "implementation",
                            "nameLocation": "3067:14:6",
                            "nodeType": "VariableDeclaration",
                            "scope": 866,
                            "src": "3059:22:6",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 823,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "3059:7:6",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 834,
                        "initialValue": {
                          "condition": {
                            "commonType": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "id": 830,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 825,
                              "name": "dependencyImplementation",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 815,
                              "src": "3084:24:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "!=",
                            "rightExpression": {
                              "arguments": [
                                {
                                  "hexValue": "30",
                                  "id": 828,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "3120:1:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  }
                                ],
                                "id": 827,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "3112:7:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 826,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "3112:7:6",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 829,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "3112:10:6",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "src": "3084:38:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "falseExpression": {
                            "id": 832,
                            "name": "dependency",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 809,
                            "src": "3152:10:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "id": 833,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "Conditional",
                          "src": "3084:78:6",
                          "trueExpression": {
                            "id": 831,
                            "name": "dependencyImplementation",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 815,
                            "src": "3125:24:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "3059:103:6"
                      },
                      {
                        "assignments": [
                          836,
                          838,
                          840
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 836,
                            "mutability": "mutable",
                            "name": "stateless",
                            "nameLocation": "3179:9:6",
                            "nodeType": "VariableDeclaration",
                            "scope": 866,
                            "src": "3174:14:6",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "typeName": {
                              "id": 835,
                              "name": "bool",
                              "nodeType": "ElementaryTypeName",
                              "src": "3174:4:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "visibility": "internal"
                          },
                          {
                            "constant": false,
                            "id": 838,
                            "mutability": "mutable",
                            "name": "deprecated",
                            "nameLocation": "3195:10:6",
                            "nodeType": "VariableDeclaration",
                            "scope": 866,
                            "src": "3190:15:6",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "typeName": {
                              "id": 837,
                              "name": "bool",
                              "nodeType": "ElementaryTypeName",
                              "src": "3190:4:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "visibility": "internal"
                          },
                          {
                            "constant": false,
                            "id": 840,
                            "mutability": "mutable",
                            "name": "namespace",
                            "nameLocation": "3215:9:6",
                            "nodeType": "VariableDeclaration",
                            "scope": 866,
                            "src": "3207:17:6",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            "typeName": {
                              "id": 839,
                              "name": "bytes32",
                              "nodeType": "ElementaryTypeName",
                              "src": "3207:7:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 847,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 845,
                              "name": "implementation",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 824,
                              "src": "3267:14:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 842,
                                  "name": "registry",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 766,
                                  "src": "3238:8:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 841,
                                "name": "IRegistry",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1098,
                                "src": "3228:9:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IRegistry_$1098_$",
                                  "typeString": "type(contract IRegistry)"
                                }
                              },
                              "id": 843,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "3228:19:6",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IRegistry_$1098",
                                "typeString": "contract IRegistry"
                              }
                            },
                            "id": 844,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "implementationData",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1061,
                            "src": "3228:38:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_bool_$_t_bool_$_t_bytes32_$",
                              "typeString": "function (address) view external returns (bool,bool,bytes32)"
                            }
                          },
                          "id": 846,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3228:54:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$_t_bool_$_t_bool_$_t_bytes32_$",
                            "typeString": "tuple(bool,bool,bytes32)"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "3173:109:6"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              },
                              "id": 854,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 849,
                                "name": "namespace",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 840,
                                "src": "3300:9:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "!=",
                              "rightExpression": {
                                "arguments": [
                                  {
                                    "hexValue": "30",
                                    "id": 852,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "3321:1:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    }
                                  ],
                                  "id": 851,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "3313:7:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_bytes32_$",
                                    "typeString": "type(bytes32)"
                                  },
                                  "typeName": {
                                    "id": 850,
                                    "name": "bytes32",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "3313:7:6",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 853,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "3313:10:6",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              },
                              "src": "3300:23:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "444550454e44454e43595f4e4f545f52454749535445524544",
                              "id": 855,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3325:27:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_778fd9d4b718f8239ef06eb57325f48f8e9ee99421da069e57617a6f513bfb7b",
                                "typeString": "literal_string \"DEPENDENCY_NOT_REGISTERED\""
                              },
                              "value": "DEPENDENCY_NOT_REGISTERED"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_778fd9d4b718f8239ef06eb57325f48f8e9ee99421da069e57617a6f513bfb7b",
                                "typeString": "literal_string \"DEPENDENCY_NOT_REGISTERED\""
                              }
                            ],
                            "id": 848,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "3292:7:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 856,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3292:61:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 857,
                        "nodeType": "ExpressionStatement",
                        "src": "3292:61:6"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 860,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "UnaryOperation",
                              "operator": "!",
                              "prefix": true,
                              "src": "3371:11:6",
                              "subExpression": {
                                "id": 859,
                                "name": "deprecated",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 838,
                                "src": "3372:10:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "444550454e44454e43595f44455052454341544544",
                              "id": 861,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3384:23:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_df8a3f58698e280c36562d600ce03d49987f51611989025dd75e965cd317041f",
                                "typeString": "literal_string \"DEPENDENCY_DEPRECATED\""
                              },
                              "value": "DEPENDENCY_DEPRECATED"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_df8a3f58698e280c36562d600ce03d49987f51611989025dd75e965cd317041f",
                                "typeString": "literal_string \"DEPENDENCY_DEPRECATED\""
                              }
                            ],
                            "id": 858,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "3363:7:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 862,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3363:45:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 863,
                        "nodeType": "ExpressionStatement",
                        "src": "3363:45:6"
                      },
                      {
                        "expression": {
                          "id": 864,
                          "name": "stateless",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 836,
                          "src": "3425:9:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "functionReturnParameters": 813,
                        "id": 865,
                        "nodeType": "Return",
                        "src": "3418:16:6"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 807,
                    "nodeType": "StructuredDocumentation",
                    "src": "2462:238:6",
                    "text": " @dev Internal function to validate a new dependency. It checks the dependency is registered and not deprecated.\n @param dependency New dependency to be set\n @return Whether the dependency is stateless or not"
                  },
                  "id": 867,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_validateDependency",
                  "nameLocation": "2714:19:6",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 810,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 809,
                        "mutability": "mutable",
                        "name": "dependency",
                        "nameLocation": "2742:10:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 867,
                        "src": "2734:18:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 808,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2734:7:6",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2733:20:6"
                  },
                  "returnParameters": {
                    "id": 813,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 812,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 867,
                        "src": "2776:4:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 811,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "2776:4:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2775:6:6"
                  },
                  "scope": 868,
                  "src": "2705:736:6",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "private"
                }
              ],
              "scope": 869,
              "src": "1226:2217:6"
            }
          ],
          "src": "688:2756:6"
        },
        "id": 6
      },
      "contracts/implementations/IImplementation.sol": {
        "ast": {
          "absolutePath": "contracts/implementations/IImplementation.sol",
          "exportedSymbols": {
            "IImplementation": [
              884
            ]
          },
          "id": 885,
          "license": "GPL-3.0-or-later",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 870,
              "literals": [
                "solidity",
                ">=",
                "0.8",
                ".0"
              ],
              "nodeType": "PragmaDirective",
              "src": "688:24:7"
            },
            {
              "abstract": false,
              "baseContracts": [],
              "contractDependencies": [],
              "contractKind": "interface",
              "documentation": {
                "id": 871,
                "nodeType": "StructuredDocumentation",
                "src": "754:147:7",
                "text": " @title IImplementation\n @dev Implementation interface that must be followed for implementations to be registered in the Mimic Registry"
              },
              "fullyImplemented": false,
              "id": 884,
              "linearizedBaseContracts": [
                884
              ],
              "name": "IImplementation",
              "nameLocation": "912:15:7",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "documentation": {
                    "id": 872,
                    "nodeType": "StructuredDocumentation",
                    "src": "934:110:7",
                    "text": " @dev Tells the namespace under which the implementation is registered in the Mimic Registry"
                  },
                  "functionSelector": "44ba1fca",
                  "id": 877,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "NAMESPACE",
                  "nameLocation": "1058:9:7",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 873,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1067:2:7"
                  },
                  "returnParameters": {
                    "id": 876,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 875,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 877,
                        "src": "1093:7:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 874,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "1093:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1092:9:7"
                  },
                  "scope": 884,
                  "src": "1049:53:7",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 878,
                    "nodeType": "StructuredDocumentation",
                    "src": "1108:63:7",
                    "text": " @dev Tells the address of the Mimic Registry"
                  },
                  "functionSelector": "7b103999",
                  "id": 883,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "registry",
                  "nameLocation": "1185:8:7",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 879,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1193:2:7"
                  },
                  "returnParameters": {
                    "id": 882,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 881,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 883,
                        "src": "1219:7:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 880,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1219:7:7",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1218:9:7"
                  },
                  "scope": 884,
                  "src": "1176:52:7",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                }
              ],
              "scope": 885,
              "src": "902:328:7"
            }
          ],
          "src": "688:543:7"
        },
        "id": 7
      },
      "contracts/implementations/InitializableAuthorizedImplementation.sol": {
        "ast": {
          "absolutePath": "contracts/implementations/InitializableAuthorizedImplementation.sol",
          "exportedSymbols": {
            "Address": [
              719
            ],
            "Authorizer": [
              149
            ],
            "BaseImplementation": [
              868
            ],
            "IAuthorizer": [
              193
            ],
            "IImplementation": [
              884
            ],
            "IRegistry": [
              1098
            ],
            "Initializable": [
              424
            ],
            "InitializableAuthorizedImplementation": [
              930
            ],
            "InitializableImplementation": [
              1008
            ]
          },
          "id": 931,
          "license": "GPL-3.0-or-later",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 886,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".0"
              ],
              "nodeType": "PragmaDirective",
              "src": "688:23:8"
            },
            {
              "absolutePath": "@mimic-fi/v2-helpers/contracts/auth/Authorizer.sol",
              "file": "@mimic-fi/v2-helpers/contracts/auth/Authorizer.sol",
              "id": 887,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 931,
              "sourceUnit": 150,
              "src": "713:60:8",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "absolutePath": "contracts/implementations/InitializableImplementation.sol",
              "file": "./InitializableImplementation.sol",
              "id": 888,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 931,
              "sourceUnit": 1009,
              "src": "775:43:8",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "abstract": true,
              "baseContracts": [
                {
                  "baseName": {
                    "id": 890,
                    "name": "InitializableImplementation",
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 1008,
                    "src": "1129:27:8"
                  },
                  "id": 891,
                  "nodeType": "InheritanceSpecifier",
                  "src": "1129:27:8"
                },
                {
                  "baseName": {
                    "id": 892,
                    "name": "Authorizer",
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 149,
                    "src": "1158:10:8"
                  },
                  "id": 893,
                  "nodeType": "InheritanceSpecifier",
                  "src": "1158:10:8"
                }
              ],
              "contractDependencies": [
                149,
                193,
                424,
                868,
                884,
                1008
              ],
              "contractKind": "contract",
              "documentation": {
                "id": 889,
                "nodeType": "StructuredDocumentation",
                "src": "820:249:8",
                "text": " @title InitializableAuthorizedImplementation\n @dev InitializableImplementation using the Authorizer mixin. Initializable implementations that want to use the\n Authorizer permissions mechanism should inherit from this contract instead."
              },
              "fullyImplemented": false,
              "id": 930,
              "linearizedBaseContracts": [
                930,
                149,
                193,
                1008,
                424,
                868,
                884
              ],
              "name": "InitializableAuthorizedImplementation",
              "nameLocation": "1088:37:8",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "body": {
                    "id": 902,
                    "nodeType": "Block",
                    "src": "1376:64:8",
                    "statements": []
                  },
                  "documentation": {
                    "id": 894,
                    "nodeType": "StructuredDocumentation",
                    "src": "1175:128:8",
                    "text": " @dev Creates a new InitializableAuthorizedImplementation\n @param registry Address of the Mimic Registry"
                  },
                  "id": 903,
                  "implemented": true,
                  "kind": "constructor",
                  "modifiers": [
                    {
                      "arguments": [
                        {
                          "id": 899,
                          "name": "registry",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 896,
                          "src": "1366:8:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "id": 900,
                      "modifierName": {
                        "id": 898,
                        "name": "InitializableImplementation",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 1008,
                        "src": "1338:27:8"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "1338:37:8"
                    }
                  ],
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 897,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 896,
                        "mutability": "mutable",
                        "name": "registry",
                        "nameLocation": "1328:8:8",
                        "nodeType": "VariableDeclaration",
                        "scope": 903,
                        "src": "1320:16:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 895,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1320:7:8",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1319:18:8"
                  },
                  "returnParameters": {
                    "id": 901,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1376:0:8"
                  },
                  "scope": 930,
                  "src": "1308:132:8",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 928,
                    "nodeType": "Block",
                    "src": "1813:148:8",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 911,
                            "name": "_initialize",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              929,
                              1007
                            ],
                            "referencedDeclaration": 1007,
                            "src": "1823:11:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$__$",
                              "typeString": "function () view"
                            }
                          },
                          "id": 912,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1823:13:8",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 913,
                        "nodeType": "ExpressionStatement",
                        "src": "1823:13:8"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 915,
                              "name": "admin",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 906,
                              "src": "1857:5:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "expression": {
                                "expression": {
                                  "id": 916,
                                  "name": "Authorizer",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 149,
                                  "src": "1864:10:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_contract$_Authorizer_$149_$",
                                    "typeString": "type(contract Authorizer)"
                                  }
                                },
                                "id": 917,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberName": "authorize",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 70,
                                "src": "1864:20:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_declaration_nonpayable$_t_address_$_t_bytes4_$returns$__$",
                                  "typeString": "function Authorizer.authorize(address,bytes4)"
                                }
                              },
                              "id": 918,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberName": "selector",
                              "nodeType": "MemberAccess",
                              "src": "1864:29:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes4",
                                "typeString": "bytes4"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_bytes4",
                                "typeString": "bytes4"
                              }
                            ],
                            "id": 914,
                            "name": "_authorize",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 126,
                            "src": "1846:10:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes4_$returns$__$",
                              "typeString": "function (address,bytes4)"
                            }
                          },
                          "id": 919,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1846:48:8",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 920,
                        "nodeType": "ExpressionStatement",
                        "src": "1846:48:8"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 922,
                              "name": "admin",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 906,
                              "src": "1915:5:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "expression": {
                                "expression": {
                                  "id": 923,
                                  "name": "Authorizer",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 149,
                                  "src": "1922:10:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_contract$_Authorizer_$149_$",
                                    "typeString": "type(contract Authorizer)"
                                  }
                                },
                                "id": 924,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberName": "unauthorize",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 87,
                                "src": "1922:22:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_declaration_nonpayable$_t_address_$_t_bytes4_$returns$__$",
                                  "typeString": "function Authorizer.unauthorize(address,bytes4)"
                                }
                              },
                              "id": 925,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberName": "selector",
                              "nodeType": "MemberAccess",
                              "src": "1922:31:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes4",
                                "typeString": "bytes4"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_bytes4",
                                "typeString": "bytes4"
                              }
                            ],
                            "id": 921,
                            "name": "_authorize",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 126,
                            "src": "1904:10:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes4_$returns$__$",
                              "typeString": "function (address,bytes4)"
                            }
                          },
                          "id": 926,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1904:50:8",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 927,
                        "nodeType": "ExpressionStatement",
                        "src": "1904:50:8"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 904,
                    "nodeType": "StructuredDocumentation",
                    "src": "1446:300:8",
                    "text": " @dev Initialization function that authorizes an admin account to authorize and unauthorize accounts.\n Note this function can only be called from a function marked with the `initializer` modifier.\n @param admin Address to be granted authorize and unauthorize permissions"
                  },
                  "id": 929,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 909,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 908,
                        "name": "onlyInitializing",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 387,
                        "src": "1796:16:8"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "1796:16:8"
                    }
                  ],
                  "name": "_initialize",
                  "nameLocation": "1760:11:8",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 907,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 906,
                        "mutability": "mutable",
                        "name": "admin",
                        "nameLocation": "1780:5:8",
                        "nodeType": "VariableDeclaration",
                        "scope": 929,
                        "src": "1772:13:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 905,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1772:7:8",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1771:15:8"
                  },
                  "returnParameters": {
                    "id": 910,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1813:0:8"
                  },
                  "scope": 930,
                  "src": "1751:210:8",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                }
              ],
              "scope": 931,
              "src": "1070:893:8"
            }
          ],
          "src": "688:1276:8"
        },
        "id": 8
      },
      "contracts/implementations/InitializableImplementation.sol": {
        "ast": {
          "absolutePath": "contracts/implementations/InitializableImplementation.sol",
          "exportedSymbols": {
            "Address": [
              719
            ],
            "BaseImplementation": [
              868
            ],
            "IAuthorizer": [
              193
            ],
            "IImplementation": [
              884
            ],
            "IRegistry": [
              1098
            ],
            "Initializable": [
              424
            ],
            "InitializableImplementation": [
              1008
            ]
          },
          "id": 1009,
          "license": "GPL-3.0-or-later",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 932,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".0"
              ],
              "nodeType": "PragmaDirective",
              "src": "688:23:9"
            },
            {
              "absolutePath": "@openzeppelin/contracts/proxy/utils/Initializable.sol",
              "file": "@openzeppelin/contracts/proxy/utils/Initializable.sol",
              "id": 933,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 1009,
              "sourceUnit": 425,
              "src": "713:63:9",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "absolutePath": "contracts/implementations/BaseImplementation.sol",
              "file": "./BaseImplementation.sol",
              "id": 934,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 1009,
              "sourceUnit": 869,
              "src": "778:34:9",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "abstract": true,
              "baseContracts": [
                {
                  "baseName": {
                    "id": 936,
                    "name": "BaseImplementation",
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 868,
                    "src": "1168:18:9"
                  },
                  "id": 937,
                  "nodeType": "InheritanceSpecifier",
                  "src": "1168:18:9"
                },
                {
                  "baseName": {
                    "id": 938,
                    "name": "Initializable",
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 424,
                    "src": "1188:13:9"
                  },
                  "id": 939,
                  "nodeType": "InheritanceSpecifier",
                  "src": "1188:13:9"
                }
              ],
              "contractDependencies": [
                424,
                868,
                884
              ],
              "contractKind": "contract",
              "documentation": {
                "id": 935,
                "nodeType": "StructuredDocumentation",
                "src": "814:304:9",
                "text": " @title InitializableImplementation\n @dev Implementation contract to be used through proxies. Inheriting contracts are meant to be initialized through\n initialization functions instead of constructor functions. It allows re-using the same logic contract while making\n deployments cheaper."
              },
              "fullyImplemented": false,
              "id": 1008,
              "linearizedBaseContracts": [
                1008,
                424,
                868,
                884
              ],
              "name": "InitializableImplementation",
              "nameLocation": "1137:27:9",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "body": {
                    "id": 951,
                    "nodeType": "Block",
                    "src": "1383:39:9",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 948,
                            "name": "_disableInitializers",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 423,
                            "src": "1393:20:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                              "typeString": "function ()"
                            }
                          },
                          "id": 949,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1393:22:9",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 950,
                        "nodeType": "ExpressionStatement",
                        "src": "1393:22:9"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 940,
                    "nodeType": "StructuredDocumentation",
                    "src": "1208:111:9",
                    "text": " @dev Creates a new BaseImplementation. Note that initializers are disabled at creation time."
                  },
                  "id": 952,
                  "implemented": true,
                  "kind": "constructor",
                  "modifiers": [
                    {
                      "arguments": [
                        {
                          "id": 945,
                          "name": "registry",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 942,
                          "src": "1373:8:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "id": 946,
                      "modifierName": {
                        "id": 944,
                        "name": "BaseImplementation",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 868,
                        "src": "1354:18:9"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "1354:28:9"
                    }
                  ],
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 943,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 942,
                        "mutability": "mutable",
                        "name": "registry",
                        "nameLocation": "1344:8:9",
                        "nodeType": "VariableDeclaration",
                        "scope": 952,
                        "src": "1336:16:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 941,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1336:7:9",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1335:18:9"
                  },
                  "returnParameters": {
                    "id": 947,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1383:0:9"
                  },
                  "scope": 1008,
                  "src": "1324:98:9",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 1006,
                    "nodeType": "Block",
                    "src": "1695:422:9",
                    "statements": [
                      {
                        "assignments": [
                          959
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 959,
                            "mutability": "mutable",
                            "name": "implementation",
                            "nameLocation": "1713:14:9",
                            "nodeType": "VariableDeclaration",
                            "scope": 1006,
                            "src": "1705:22:9",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 958,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "1705:7:9",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 969,
                        "initialValue": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 966,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -28,
                                  "src": "1775:4:9",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_InitializableImplementation_$1008",
                                    "typeString": "contract InitializableImplementation"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_InitializableImplementation_$1008",
                                    "typeString": "contract InitializableImplementation"
                                  }
                                ],
                                "id": 965,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "1767:7:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 964,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "1767:7:9",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 967,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1767:13:9",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 961,
                                  "name": "registry",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 766,
                                  "src": "1740:8:9",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 960,
                                "name": "IRegistry",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1098,
                                "src": "1730:9:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IRegistry_$1098_$",
                                  "typeString": "type(contract IRegistry)"
                                }
                              },
                              "id": 962,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1730:19:9",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IRegistry_$1098",
                                "typeString": "contract IRegistry"
                              }
                            },
                            "id": 963,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "implementationOf",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1049,
                            "src": "1730:36:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_address_$",
                              "typeString": "function (address) view external returns (address)"
                            }
                          },
                          "id": 968,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1730:51:9",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "1705:76:9"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "id": 976,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 971,
                                "name": "implementation",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 959,
                                "src": "1799:14:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "!=",
                              "rightExpression": {
                                "arguments": [
                                  {
                                    "hexValue": "30",
                                    "id": 974,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "1825:1:9",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    }
                                  ],
                                  "id": 973,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "1817:7:9",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 972,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "1817:7:9",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 975,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "1817:10:9",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "src": "1799:28:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "494d504c454d454e544154494f4e5f4e4f545f52454749535445524544",
                              "id": 977,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1829:31:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_08da2425c2bb79d379d97d111ca6f8eeed0e35247ec89d81b6c7e6238420b675",
                                "typeString": "literal_string \"IMPLEMENTATION_NOT_REGISTERED\""
                              },
                              "value": "IMPLEMENTATION_NOT_REGISTERED"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_08da2425c2bb79d379d97d111ca6f8eeed0e35247ec89d81b6c7e6238420b675",
                                "typeString": "literal_string \"IMPLEMENTATION_NOT_REGISTERED\""
                              }
                            ],
                            "id": 970,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "1791:7:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 978,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1791:70:9",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 979,
                        "nodeType": "ExpressionStatement",
                        "src": "1791:70:9"
                      },
                      {
                        "assignments": [
                          null,
                          981,
                          983
                        ],
                        "declarations": [
                          null,
                          {
                            "constant": false,
                            "id": 981,
                            "mutability": "mutable",
                            "name": "deprecated",
                            "nameLocation": "1880:10:9",
                            "nodeType": "VariableDeclaration",
                            "scope": 1006,
                            "src": "1875:15:9",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "typeName": {
                              "id": 980,
                              "name": "bool",
                              "nodeType": "ElementaryTypeName",
                              "src": "1875:4:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "visibility": "internal"
                          },
                          {
                            "constant": false,
                            "id": 983,
                            "mutability": "mutable",
                            "name": "namespace",
                            "nameLocation": "1900:9:9",
                            "nodeType": "VariableDeclaration",
                            "scope": 1006,
                            "src": "1892:17:9",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            "typeName": {
                              "id": 982,
                              "name": "bytes32",
                              "nodeType": "ElementaryTypeName",
                              "src": "1892:7:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 990,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 988,
                              "name": "implementation",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 959,
                              "src": "1952:14:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 985,
                                  "name": "registry",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 766,
                                  "src": "1923:8:9",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 984,
                                "name": "IRegistry",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1098,
                                "src": "1913:9:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IRegistry_$1098_$",
                                  "typeString": "type(contract IRegistry)"
                                }
                              },
                              "id": 986,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1913:19:9",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IRegistry_$1098",
                                "typeString": "contract IRegistry"
                              }
                            },
                            "id": 987,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "implementationData",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1061,
                            "src": "1913:38:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_bool_$_t_bool_$_t_bytes32_$",
                              "typeString": "function (address) view external returns (bool,bool,bytes32)"
                            }
                          },
                          "id": 989,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1913:54:9",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$_t_bool_$_t_bool_$_t_bytes32_$",
                            "typeString": "tuple(bool,bool,bytes32)"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "1872:95:9"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 993,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "UnaryOperation",
                              "operator": "!",
                              "prefix": true,
                              "src": "1985:11:9",
                              "subExpression": {
                                "id": 992,
                                "name": "deprecated",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 981,
                                "src": "1986:10:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "494d504c454d454e544154494f4e5f44455052454341544544",
                              "id": 994,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1998:27:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_1b399a63a49fe1f304df5c43235a67416e5723e6bbe3c4e82966d9b2a9a9f199",
                                "typeString": "literal_string \"IMPLEMENTATION_DEPRECATED\""
                              },
                              "value": "IMPLEMENTATION_DEPRECATED"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_1b399a63a49fe1f304df5c43235a67416e5723e6bbe3c4e82966d9b2a9a9f199",
                                "typeString": "literal_string \"IMPLEMENTATION_DEPRECATED\""
                              }
                            ],
                            "id": 991,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "1977:7:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 995,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1977:49:9",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 996,
                        "nodeType": "ExpressionStatement",
                        "src": "1977:49:9"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              },
                              "id": 1002,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "arguments": [],
                                "expression": {
                                  "argumentTypes": [],
                                  "expression": {
                                    "id": 998,
                                    "name": "this",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -28,
                                    "src": "2044:4:9",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_InitializableImplementation_$1008",
                                      "typeString": "contract InitializableImplementation"
                                    }
                                  },
                                  "id": 999,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "NAMESPACE",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 877,
                                  "src": "2044:14:9",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_external_view$__$returns$_t_bytes32_$",
                                    "typeString": "function () view external returns (bytes32)"
                                  }
                                },
                                "id": 1000,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "2044:16:9",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "id": 1001,
                                "name": "namespace",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 983,
                                "src": "2064:9:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              },
                              "src": "2044:29:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "494e56414c49445f494d504c454d454e544154494f4e5f4e414d455350414345",
                              "id": 1003,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2075:34:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_749fa90c0042742458a18eef568a1a6d40407387d12f68d10c8b730f2c6f9add",
                                "typeString": "literal_string \"INVALID_IMPLEMENTATION_NAMESPACE\""
                              },
                              "value": "INVALID_IMPLEMENTATION_NAMESPACE"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_749fa90c0042742458a18eef568a1a6d40407387d12f68d10c8b730f2c6f9add",
                                "typeString": "literal_string \"INVALID_IMPLEMENTATION_NAMESPACE\""
                              }
                            ],
                            "id": 997,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "2036:7:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1004,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2036:74:9",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1005,
                        "nodeType": "ExpressionStatement",
                        "src": "2036:74:9"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 953,
                    "nodeType": "StructuredDocumentation",
                    "src": "1428:208:9",
                    "text": " @dev Initialization function to check a new instance is properly set up in the registry.\n Note this function can only be called from a function marked with the `initializer` modifier."
                  },
                  "id": 1007,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 956,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 955,
                        "name": "onlyInitializing",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 387,
                        "src": "1678:16:9"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "1678:16:9"
                    }
                  ],
                  "name": "_initialize",
                  "nameLocation": "1650:11:9",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 954,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1661:2:9"
                  },
                  "returnParameters": {
                    "id": 957,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1695:0:9"
                  },
                  "scope": 1008,
                  "src": "1641:476:9",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "internal"
                }
              ],
              "scope": 1009,
              "src": "1119:1000:9"
            }
          ],
          "src": "688:1432:9"
        },
        "id": 9
      },
      "contracts/registry/IRegistry.sol": {
        "ast": {
          "absolutePath": "contracts/registry/IRegistry.sol",
          "exportedSymbols": {
            "IAuthorizer": [
              193
            ],
            "IRegistry": [
              1098
            ]
          },
          "id": 1099,
          "license": "GPL-3.0-or-later",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 1010,
              "literals": [
                "solidity",
                ">=",
                "0.8",
                ".0"
              ],
              "nodeType": "PragmaDirective",
              "src": "688:24:10"
            },
            {
              "absolutePath": "@mimic-fi/v2-helpers/contracts/auth/IAuthorizer.sol",
              "file": "@mimic-fi/v2-helpers/contracts/auth/IAuthorizer.sol",
              "id": 1011,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 1099,
              "sourceUnit": 194,
              "src": "714:61:10",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "abstract": false,
              "baseContracts": [
                {
                  "baseName": {
                    "id": 1013,
                    "name": "IAuthorizer",
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 193,
                    "src": "898:11:10"
                  },
                  "id": 1014,
                  "nodeType": "InheritanceSpecifier",
                  "src": "898:11:10"
                }
              ],
              "contractDependencies": [
                193
              ],
              "contractKind": "interface",
              "documentation": {
                "id": 1012,
                "nodeType": "StructuredDocumentation",
                "src": "777:97:10",
                "text": " @title IRegistry\n @dev Registry interface, it must follow the IAuthorizer interface."
              },
              "fullyImplemented": false,
              "id": 1098,
              "linearizedBaseContracts": [
                1098,
                193
              ],
              "name": "IRegistry",
              "nameLocation": "885:9:10",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "anonymous": false,
                  "documentation": {
                    "id": 1015,
                    "nodeType": "StructuredDocumentation",
                    "src": "916:77:10",
                    "text": " @dev Emitted every time a new implementation is registered"
                  },
                  "id": 1023,
                  "name": "Registered",
                  "nameLocation": "1004:10:10",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 1022,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1017,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "namespace",
                        "nameLocation": "1031:9:10",
                        "nodeType": "VariableDeclaration",
                        "scope": 1023,
                        "src": "1015:25:10",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 1016,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "1015:7:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1019,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "implementation",
                        "nameLocation": "1058:14:10",
                        "nodeType": "VariableDeclaration",
                        "scope": 1023,
                        "src": "1042:30:10",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1018,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1042:7:10",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1021,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "stateless",
                        "nameLocation": "1079:9:10",
                        "nodeType": "VariableDeclaration",
                        "scope": 1023,
                        "src": "1074:14:10",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 1020,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "1074:4:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1014:75:10"
                  },
                  "src": "998:92:10"
                },
                {
                  "anonymous": false,
                  "documentation": {
                    "id": 1024,
                    "nodeType": "StructuredDocumentation",
                    "src": "1096:74:10",
                    "text": " @dev Emitted every time an implementation is deprecated"
                  },
                  "id": 1030,
                  "name": "Deprecated",
                  "nameLocation": "1181:10:10",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 1029,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1026,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "namespace",
                        "nameLocation": "1208:9:10",
                        "nodeType": "VariableDeclaration",
                        "scope": 1030,
                        "src": "1192:25:10",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 1025,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "1192:7:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1028,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "implementation",
                        "nameLocation": "1235:14:10",
                        "nodeType": "VariableDeclaration",
                        "scope": 1030,
                        "src": "1219:30:10",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1027,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1219:7:10",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1191:59:10"
                  },
                  "src": "1175:76:10"
                },
                {
                  "anonymous": false,
                  "documentation": {
                    "id": 1031,
                    "nodeType": "StructuredDocumentation",
                    "src": "1257:70:10",
                    "text": " @dev Emitted every time an implementation is cloned"
                  },
                  "id": 1041,
                  "name": "Cloned",
                  "nameLocation": "1338:6:10",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 1040,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1033,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "namespace",
                        "nameLocation": "1361:9:10",
                        "nodeType": "VariableDeclaration",
                        "scope": 1041,
                        "src": "1345:25:10",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 1032,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "1345:7:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1035,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "implementation",
                        "nameLocation": "1388:14:10",
                        "nodeType": "VariableDeclaration",
                        "scope": 1041,
                        "src": "1372:30:10",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1034,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1372:7:10",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1037,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "instance",
                        "nameLocation": "1412:8:10",
                        "nodeType": "VariableDeclaration",
                        "scope": 1041,
                        "src": "1404:16:10",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1036,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1404:7:10",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1039,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "initResult",
                        "nameLocation": "1428:10:10",
                        "nodeType": "VariableDeclaration",
                        "scope": 1041,
                        "src": "1422:16:10",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 1038,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "1422:5:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1344:95:10"
                  },
                  "src": "1332:108:10"
                },
                {
                  "documentation": {
                    "id": 1042,
                    "nodeType": "StructuredDocumentation",
                    "src": "1446:160:10",
                    "text": " @dev Tells the implementation associated to a contract instance\n @param instance Address of the instance to request it's implementation"
                  },
                  "functionSelector": "8b4872b8",
                  "id": 1049,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "implementationOf",
                  "nameLocation": "1620:16:10",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1045,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1044,
                        "mutability": "mutable",
                        "name": "instance",
                        "nameLocation": "1645:8:10",
                        "nodeType": "VariableDeclaration",
                        "scope": 1049,
                        "src": "1637:16:10",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1043,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1637:7:10",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1636:18:10"
                  },
                  "returnParameters": {
                    "id": 1048,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1047,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1049,
                        "src": "1678:7:10",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1046,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1678:7:10",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1677:9:10"
                  },
                  "scope": 1098,
                  "src": "1611:76:10",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 1050,
                    "nodeType": "StructuredDocumentation",
                    "src": "1693:140:10",
                    "text": " @dev Tells the data of an implementation:\n @param implementation Address of the implementation to request it's data"
                  },
                  "functionSelector": "9235dcf8",
                  "id": 1061,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "implementationData",
                  "nameLocation": "1847:18:10",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1053,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1052,
                        "mutability": "mutable",
                        "name": "implementation",
                        "nameLocation": "1874:14:10",
                        "nodeType": "VariableDeclaration",
                        "scope": 1061,
                        "src": "1866:22:10",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1051,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1866:7:10",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1865:24:10"
                  },
                  "returnParameters": {
                    "id": 1060,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1055,
                        "mutability": "mutable",
                        "name": "stateless",
                        "nameLocation": "1942:9:10",
                        "nodeType": "VariableDeclaration",
                        "scope": 1061,
                        "src": "1937:14:10",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 1054,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "1937:4:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1057,
                        "mutability": "mutable",
                        "name": "deprecated",
                        "nameLocation": "1958:10:10",
                        "nodeType": "VariableDeclaration",
                        "scope": 1061,
                        "src": "1953:15:10",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 1056,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "1953:4:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1059,
                        "mutability": "mutable",
                        "name": "namespace",
                        "nameLocation": "1978:9:10",
                        "nodeType": "VariableDeclaration",
                        "scope": 1061,
                        "src": "1970:17:10",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 1058,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "1970:7:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1936:52:10"
                  },
                  "scope": 1098,
                  "src": "1838:151:10",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 1062,
                    "nodeType": "StructuredDocumentation",
                    "src": "1995:240:10",
                    "text": " @dev Tells if a specific implementation is registered under a certain namespace and it's not deprecated\n @param namespace Namespace asking for\n @param implementation Address of the implementation to be checked"
                  },
                  "functionSelector": "ca0f8f3b",
                  "id": 1071,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "isActive",
                  "nameLocation": "2249:8:10",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1067,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1064,
                        "mutability": "mutable",
                        "name": "namespace",
                        "nameLocation": "2266:9:10",
                        "nodeType": "VariableDeclaration",
                        "scope": 1071,
                        "src": "2258:17:10",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 1063,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "2258:7:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1066,
                        "mutability": "mutable",
                        "name": "implementation",
                        "nameLocation": "2285:14:10",
                        "nodeType": "VariableDeclaration",
                        "scope": 1071,
                        "src": "2277:22:10",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1065,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2277:7:10",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2257:43:10"
                  },
                  "returnParameters": {
                    "id": 1070,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1069,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1071,
                        "src": "2324:4:10",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 1068,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "2324:4:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2323:6:10"
                  },
                  "scope": 1098,
                  "src": "2240:90:10",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 1072,
                    "nodeType": "StructuredDocumentation",
                    "src": "2336:291:10",
                    "text": " @dev Registers a new implementation for a given namespace\n @param namespace Namespace to be used for the implementation\n @param implementation Address of the implementation to be registered\n @param stateless Whether the implementation is stateless or not"
                  },
                  "functionSelector": "678449d4",
                  "id": 1081,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "register",
                  "nameLocation": "2641:8:10",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1079,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1074,
                        "mutability": "mutable",
                        "name": "namespace",
                        "nameLocation": "2658:9:10",
                        "nodeType": "VariableDeclaration",
                        "scope": 1081,
                        "src": "2650:17:10",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 1073,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "2650:7:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1076,
                        "mutability": "mutable",
                        "name": "implementation",
                        "nameLocation": "2677:14:10",
                        "nodeType": "VariableDeclaration",
                        "scope": 1081,
                        "src": "2669:22:10",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1075,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2669:7:10",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1078,
                        "mutability": "mutable",
                        "name": "stateless",
                        "nameLocation": "2698:9:10",
                        "nodeType": "VariableDeclaration",
                        "scope": 1081,
                        "src": "2693:14:10",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 1077,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "2693:4:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2649:59:10"
                  },
                  "returnParameters": {
                    "id": 1080,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2717:0:10"
                  },
                  "scope": 1098,
                  "src": "2632:86:10",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 1082,
                    "nodeType": "StructuredDocumentation",
                    "src": "2724:138:10",
                    "text": " @dev Deprecates a registered implementation\n @param implementation Address of the implementation to be deprecated"
                  },
                  "functionSelector": "0753c30c",
                  "id": 1087,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "deprecate",
                  "nameLocation": "2876:9:10",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1085,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1084,
                        "mutability": "mutable",
                        "name": "implementation",
                        "nameLocation": "2894:14:10",
                        "nodeType": "VariableDeclaration",
                        "scope": 1087,
                        "src": "2886:22:10",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1083,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2886:7:10",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2885:24:10"
                  },
                  "returnParameters": {
                    "id": 1086,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2918:0:10"
                  },
                  "scope": 1098,
                  "src": "2867:52:10",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 1088,
                    "nodeType": "StructuredDocumentation",
                    "src": "2925:262:10",
                    "text": " @dev Clones a registered implementation\n @param implementation Address of the implementation to be cloned\n @param initializeData Arbitrary data to be sent after deployment\n @return instance Address of the new instance created"
                  },
                  "functionSelector": "0fbe133c",
                  "id": 1097,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "clone",
                  "nameLocation": "3201:5:10",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1093,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1090,
                        "mutability": "mutable",
                        "name": "implementation",
                        "nameLocation": "3215:14:10",
                        "nodeType": "VariableDeclaration",
                        "scope": 1097,
                        "src": "3207:22:10",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1089,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3207:7:10",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1092,
                        "mutability": "mutable",
                        "name": "initializeData",
                        "nameLocation": "3244:14:10",
                        "nodeType": "VariableDeclaration",
                        "scope": 1097,
                        "src": "3231:27:10",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 1091,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "3231:5:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3206:53:10"
                  },
                  "returnParameters": {
                    "id": 1096,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1095,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1097,
                        "src": "3278:7:10",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1094,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3278:7:10",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3277:9:10"
                  },
                  "scope": 1098,
                  "src": "3192:95:10",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                }
              ],
              "scope": 1099,
              "src": "875:2414:10"
            }
          ],
          "src": "688:2602:10"
        },
        "id": 10
      },
      "contracts/registry/Registry.sol": {
        "ast": {
          "absolutePath": "contracts/registry/Registry.sol",
          "exportedSymbols": {
            "Address": [
              719
            ],
            "Authorizer": [
              149
            ],
            "Clones": [
              273
            ],
            "IAuthorizer": [
              193
            ],
            "IRegistry": [
              1098
            ],
            "Registry": [
              1427
            ]
          },
          "id": 1428,
          "license": "GPL-3.0-or-later",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 1100,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".0"
              ],
              "nodeType": "PragmaDirective",
              "src": "688:23:11"
            },
            {
              "absolutePath": "@openzeppelin/contracts/proxy/Clones.sol",
              "file": "@openzeppelin/contracts/proxy/Clones.sol",
              "id": 1101,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 1428,
              "sourceUnit": 274,
              "src": "713:50:11",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "absolutePath": "@openzeppelin/contracts/utils/Address.sol",
              "file": "@openzeppelin/contracts/utils/Address.sol",
              "id": 1102,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 1428,
              "sourceUnit": 720,
              "src": "764:51:11",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "absolutePath": "@mimic-fi/v2-helpers/contracts/auth/Authorizer.sol",
              "file": "@mimic-fi/v2-helpers/contracts/auth/Authorizer.sol",
              "id": 1103,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 1428,
              "sourceUnit": 150,
              "src": "817:60:11",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "absolutePath": "contracts/registry/IRegistry.sol",
              "file": "./IRegistry.sol",
              "id": 1104,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 1428,
              "sourceUnit": 1099,
              "src": "879:25:11",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "abstract": false,
              "baseContracts": [
                {
                  "baseName": {
                    "id": 1106,
                    "name": "IRegistry",
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 1098,
                    "src": "1435:9:11"
                  },
                  "id": 1107,
                  "nodeType": "InheritanceSpecifier",
                  "src": "1435:9:11"
                },
                {
                  "baseName": {
                    "id": 1108,
                    "name": "Authorizer",
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 149,
                    "src": "1446:10:11"
                  },
                  "id": 1109,
                  "nodeType": "InheritanceSpecifier",
                  "src": "1446:10:11"
                }
              ],
              "contractDependencies": [
                149,
                193,
                1098
              ],
              "contractKind": "contract",
              "documentation": {
                "id": 1105,
                "nodeType": "StructuredDocumentation",
                "src": "906:507:11",
                "text": " @title Registry\n @dev Registry of contracts that acts as a curated list of implementations and instances to be trusted by the Mimic\n protocol. Here consumers can find either implementation contracts (to be cloned through proxies) and contract\n instances (from cloned implementations).\n The registry follows the Authorizer mixin and only authorized parties are allowed to register implementations.\n Instances are automatically registered when a new clone is requested to the registry."
              },
              "fullyImplemented": true,
              "id": 1427,
              "linearizedBaseContracts": [
                1427,
                149,
                1098,
                193
              ],
              "name": "Registry",
              "nameLocation": "1423:8:11",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "id": 1112,
                  "libraryName": {
                    "id": 1110,
                    "name": "Address",
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 719,
                    "src": "1469:7:11"
                  },
                  "nodeType": "UsingForDirective",
                  "src": "1463:26:11",
                  "typeName": {
                    "id": 1111,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1481:7:11",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                },
                {
                  "canonicalName": "Registry.ImplementationData",
                  "id": 1119,
                  "members": [
                    {
                      "constant": false,
                      "id": 1114,
                      "mutability": "mutable",
                      "name": "stateless",
                      "nameLocation": "1536:9:11",
                      "nodeType": "VariableDeclaration",
                      "scope": 1119,
                      "src": "1531:14:11",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 1113,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "1531:4:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 1116,
                      "mutability": "mutable",
                      "name": "deprecated",
                      "nameLocation": "1560:10:11",
                      "nodeType": "VariableDeclaration",
                      "scope": 1119,
                      "src": "1555:15:11",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 1115,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "1555:4:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 1118,
                      "mutability": "mutable",
                      "name": "namespace",
                      "nameLocation": "1588:9:11",
                      "nodeType": "VariableDeclaration",
                      "scope": 1119,
                      "src": "1580:17:11",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 1117,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "1580:7:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "name": "ImplementationData",
                  "nameLocation": "1502:18:11",
                  "nodeType": "StructDefinition",
                  "scope": 1427,
                  "src": "1495:109:11",
                  "visibility": "public"
                },
                {
                  "baseFunctions": [
                    1049
                  ],
                  "constant": false,
                  "functionSelector": "8b4872b8",
                  "id": 1124,
                  "mutability": "mutable",
                  "name": "implementationOf",
                  "nameLocation": "1725:16:11",
                  "nodeType": "VariableDeclaration",
                  "overrides": {
                    "id": 1123,
                    "nodeType": "OverrideSpecifier",
                    "overrides": [],
                    "src": "1716:8:11"
                  },
                  "scope": 1427,
                  "src": "1680:61:11",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                    "typeString": "mapping(address => address)"
                  },
                  "typeName": {
                    "id": 1122,
                    "keyType": {
                      "id": 1120,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "1689:7:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Mapping",
                    "src": "1680:28:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                      "typeString": "mapping(address => address)"
                    },
                    "valueType": {
                      "id": 1121,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "1700:7:11",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    }
                  },
                  "visibility": "public"
                },
                {
                  "baseFunctions": [
                    1061
                  ],
                  "constant": false,
                  "functionSelector": "9235dcf8",
                  "id": 1130,
                  "mutability": "mutable",
                  "name": "implementationData",
                  "nameLocation": "1854:18:11",
                  "nodeType": "VariableDeclaration",
                  "overrides": {
                    "id": 1129,
                    "nodeType": "OverrideSpecifier",
                    "overrides": [],
                    "src": "1845:8:11"
                  },
                  "scope": 1427,
                  "src": "1798:74:11",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_mapping$_t_address_$_t_struct$_ImplementationData_$1119_storage_$",
                    "typeString": "mapping(address => struct Registry.ImplementationData)"
                  },
                  "typeName": {
                    "id": 1128,
                    "keyType": {
                      "id": 1125,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "1807:7:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Mapping",
                    "src": "1798:39:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_mapping$_t_address_$_t_struct$_ImplementationData_$1119_storage_$",
                      "typeString": "mapping(address => struct Registry.ImplementationData)"
                    },
                    "valueType": {
                      "id": 1127,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 1126,
                        "name": "ImplementationData",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 1119,
                        "src": "1818:18:11"
                      },
                      "referencedDeclaration": 1119,
                      "src": "1818:18:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_ImplementationData_$1119_storage_ptr",
                        "typeString": "struct Registry.ImplementationData"
                      }
                    }
                  },
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 1164,
                    "nodeType": "Block",
                    "src": "2075:236:11",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 1137,
                              "name": "admin",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1133,
                              "src": "2096:5:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "expression": {
                                "expression": {
                                  "id": 1138,
                                  "name": "Registry",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1427,
                                  "src": "2103:8:11",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_contract$_Registry_$1427_$",
                                    "typeString": "type(contract Registry)"
                                  }
                                },
                                "id": 1139,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberName": "register",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 1281,
                                "src": "2103:17:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_declaration_nonpayable$_t_bytes32_$_t_address_$_t_bool_$returns$__$",
                                  "typeString": "function Registry.register(bytes32,address,bool)"
                                }
                              },
                              "id": 1140,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberName": "selector",
                              "nodeType": "MemberAccess",
                              "src": "2103:26:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes4",
                                "typeString": "bytes4"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_bytes4",
                                "typeString": "bytes4"
                              }
                            ],
                            "id": 1136,
                            "name": "_authorize",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 126,
                            "src": "2085:10:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes4_$returns$__$",
                              "typeString": "function (address,bytes4)"
                            }
                          },
                          "id": 1141,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2085:45:11",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1142,
                        "nodeType": "ExpressionStatement",
                        "src": "2085:45:11"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 1144,
                              "name": "admin",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1133,
                              "src": "2151:5:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "expression": {
                                "expression": {
                                  "id": 1145,
                                  "name": "Registry",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1427,
                                  "src": "2158:8:11",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_contract$_Registry_$1427_$",
                                    "typeString": "type(contract Registry)"
                                  }
                                },
                                "id": 1146,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberName": "deprecate",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 1338,
                                "src": "2158:18:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_declaration_nonpayable$_t_address_$returns$__$",
                                  "typeString": "function Registry.deprecate(address)"
                                }
                              },
                              "id": 1147,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberName": "selector",
                              "nodeType": "MemberAccess",
                              "src": "2158:27:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes4",
                                "typeString": "bytes4"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_bytes4",
                                "typeString": "bytes4"
                              }
                            ],
                            "id": 1143,
                            "name": "_authorize",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 126,
                            "src": "2140:10:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes4_$returns$__$",
                              "typeString": "function (address,bytes4)"
                            }
                          },
                          "id": 1148,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2140:46:11",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1149,
                        "nodeType": "ExpressionStatement",
                        "src": "2140:46:11"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 1151,
                              "name": "admin",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1133,
                              "src": "2207:5:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "expression": {
                                "expression": {
                                  "id": 1152,
                                  "name": "Authorizer",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 149,
                                  "src": "2214:10:11",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_contract$_Authorizer_$149_$",
                                    "typeString": "type(contract Authorizer)"
                                  }
                                },
                                "id": 1153,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberName": "authorize",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 70,
                                "src": "2214:20:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_declaration_nonpayable$_t_address_$_t_bytes4_$returns$__$",
                                  "typeString": "function Authorizer.authorize(address,bytes4)"
                                }
                              },
                              "id": 1154,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberName": "selector",
                              "nodeType": "MemberAccess",
                              "src": "2214:29:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes4",
                                "typeString": "bytes4"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_bytes4",
                                "typeString": "bytes4"
                              }
                            ],
                            "id": 1150,
                            "name": "_authorize",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 126,
                            "src": "2196:10:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes4_$returns$__$",
                              "typeString": "function (address,bytes4)"
                            }
                          },
                          "id": 1155,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2196:48:11",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1156,
                        "nodeType": "ExpressionStatement",
                        "src": "2196:48:11"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 1158,
                              "name": "admin",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1133,
                              "src": "2265:5:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "expression": {
                                "expression": {
                                  "id": 1159,
                                  "name": "Authorizer",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 149,
                                  "src": "2272:10:11",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_contract$_Authorizer_$149_$",
                                    "typeString": "type(contract Authorizer)"
                                  }
                                },
                                "id": 1160,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberName": "unauthorize",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 87,
                                "src": "2272:22:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_declaration_nonpayable$_t_address_$_t_bytes4_$returns$__$",
                                  "typeString": "function Authorizer.unauthorize(address,bytes4)"
                                }
                              },
                              "id": 1161,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberName": "selector",
                              "nodeType": "MemberAccess",
                              "src": "2272:31:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes4",
                                "typeString": "bytes4"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_bytes4",
                                "typeString": "bytes4"
                              }
                            ],
                            "id": 1157,
                            "name": "_authorize",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 126,
                            "src": "2254:10:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes4_$returns$__$",
                              "typeString": "function (address,bytes4)"
                            }
                          },
                          "id": 1162,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2254:50:11",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1163,
                        "nodeType": "ExpressionStatement",
                        "src": "2254:50:11"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1131,
                    "nodeType": "StructuredDocumentation",
                    "src": "1879:164:11",
                    "text": " @dev Initializes the Registry contract\n @param admin Address to be granted with register, deprecate, authorize, and unauthorize permissions"
                  },
                  "id": 1165,
                  "implemented": true,
                  "kind": "constructor",
                  "modifiers": [],
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1134,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1133,
                        "mutability": "mutable",
                        "name": "admin",
                        "nameLocation": "2068:5:11",
                        "nodeType": "VariableDeclaration",
                        "scope": 1165,
                        "src": "2060:13:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1132,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2060:7:11",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2059:15:11"
                  },
                  "returnParameters": {
                    "id": 1135,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2075:0:11"
                  },
                  "scope": 1427,
                  "src": "2048:263:11",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "baseFunctions": [
                    1071
                  ],
                  "body": {
                    "id": 1192,
                    "nodeType": "Block",
                    "src": "2661:149:11",
                    "statements": [
                      {
                        "assignments": [
                          1178
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1178,
                            "mutability": "mutable",
                            "name": "data",
                            "nameLocation": "2698:4:11",
                            "nodeType": "VariableDeclaration",
                            "scope": 1192,
                            "src": "2671:31:11",
                            "stateVariable": false,
                            "storageLocation": "storage",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_ImplementationData_$1119_storage_ptr",
                              "typeString": "struct Registry.ImplementationData"
                            },
                            "typeName": {
                              "id": 1177,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 1176,
                                "name": "ImplementationData",
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 1119,
                                "src": "2671:18:11"
                              },
                              "referencedDeclaration": 1119,
                              "src": "2671:18:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_ImplementationData_$1119_storage_ptr",
                                "typeString": "struct Registry.ImplementationData"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1182,
                        "initialValue": {
                          "baseExpression": {
                            "id": 1179,
                            "name": "implementationData",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1130,
                            "src": "2705:18:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_ImplementationData_$1119_storage_$",
                              "typeString": "mapping(address => struct Registry.ImplementationData storage ref)"
                            }
                          },
                          "id": 1181,
                          "indexExpression": {
                            "id": 1180,
                            "name": "implementation",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1170,
                            "src": "2724:14:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "2705:34:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_ImplementationData_$1119_storage",
                            "typeString": "struct Registry.ImplementationData storage ref"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "2671:68:11"
                      },
                      {
                        "expression": {
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 1190,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 1185,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "UnaryOperation",
                            "operator": "!",
                            "prefix": true,
                            "src": "2756:16:11",
                            "subExpression": {
                              "expression": {
                                "id": 1183,
                                "name": "data",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1178,
                                "src": "2757:4:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_ImplementationData_$1119_storage_ptr",
                                  "typeString": "struct Registry.ImplementationData storage pointer"
                                }
                              },
                              "id": 1184,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "deprecated",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 1116,
                              "src": "2757:15:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "&&",
                          "rightExpression": {
                            "commonType": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            "id": 1189,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "expression": {
                                "id": 1186,
                                "name": "data",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1178,
                                "src": "2776:4:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_ImplementationData_$1119_storage_ptr",
                                  "typeString": "struct Registry.ImplementationData storage pointer"
                                }
                              },
                              "id": 1187,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "namespace",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 1118,
                              "src": "2776:14:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "==",
                            "rightExpression": {
                              "id": 1188,
                              "name": "namespace",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1168,
                              "src": "2794:9:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "src": "2776:27:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "2756:47:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "functionReturnParameters": 1175,
                        "id": 1191,
                        "nodeType": "Return",
                        "src": "2749:54:11"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1166,
                    "nodeType": "StructuredDocumentation",
                    "src": "2317:240:11",
                    "text": " @dev Tells if a specific implementation is registered under a certain namespace and it's not deprecated\n @param namespace Namespace asking for\n @param implementation Address of the implementation to be checked"
                  },
                  "functionSelector": "ca0f8f3b",
                  "id": 1193,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "isActive",
                  "nameLocation": "2571:8:11",
                  "nodeType": "FunctionDefinition",
                  "overrides": {
                    "id": 1172,
                    "nodeType": "OverrideSpecifier",
                    "overrides": [],
                    "src": "2637:8:11"
                  },
                  "parameters": {
                    "id": 1171,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1168,
                        "mutability": "mutable",
                        "name": "namespace",
                        "nameLocation": "2588:9:11",
                        "nodeType": "VariableDeclaration",
                        "scope": 1193,
                        "src": "2580:17:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 1167,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "2580:7:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1170,
                        "mutability": "mutable",
                        "name": "implementation",
                        "nameLocation": "2607:14:11",
                        "nodeType": "VariableDeclaration",
                        "scope": 1193,
                        "src": "2599:22:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1169,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2599:7:11",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2579:43:11"
                  },
                  "returnParameters": {
                    "id": 1175,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1174,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1193,
                        "src": "2655:4:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 1173,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "2655:4:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2654:6:11"
                  },
                  "scope": 1427,
                  "src": "2562:248:11",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "baseFunctions": [
                    1081
                  ],
                  "body": {
                    "id": 1280,
                    "nodeType": "Block",
                    "src": "3240:560:11",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              },
                              "id": 1212,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 1207,
                                "name": "namespace",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1196,
                                "src": "3258:9:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "!=",
                              "rightExpression": {
                                "arguments": [
                                  {
                                    "hexValue": "30",
                                    "id": 1210,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "3279:1:11",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    }
                                  ],
                                  "id": 1209,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "3271:7:11",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_bytes32_$",
                                    "typeString": "type(bytes32)"
                                  },
                                  "typeName": {
                                    "id": 1208,
                                    "name": "bytes32",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "3271:7:11",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 1211,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "3271:10:11",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              },
                              "src": "3258:23:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "494e56414c49445f4e414d455350414345",
                              "id": 1213,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3283:19:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_f8d0b8ec94df87420bce918295fc6fb6ab479bdb3b78376fc9f2ae8c511a4a6c",
                                "typeString": "literal_string \"INVALID_NAMESPACE\""
                              },
                              "value": "INVALID_NAMESPACE"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_f8d0b8ec94df87420bce918295fc6fb6ab479bdb3b78376fc9f2ae8c511a4a6c",
                                "typeString": "literal_string \"INVALID_NAMESPACE\""
                              }
                            ],
                            "id": 1206,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "3250:7:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1214,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3250:53:11",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1215,
                        "nodeType": "ExpressionStatement",
                        "src": "3250:53:11"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "id": 1222,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 1217,
                                "name": "implementation",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1198,
                                "src": "3321:14:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "!=",
                              "rightExpression": {
                                "arguments": [
                                  {
                                    "hexValue": "30",
                                    "id": 1220,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "3347:1:11",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    }
                                  ],
                                  "id": 1219,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "3339:7:11",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 1218,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "3339:7:11",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 1221,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "3339:10:11",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "src": "3321:28:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "494e56414c49445f494d504c454d454e544154494f4e",
                              "id": 1223,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3351:24:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_d018dd82e2a195c7ea949ecda8e19f3e54fbb728e79acd6a3a3b5470d19082c6",
                                "typeString": "literal_string \"INVALID_IMPLEMENTATION\""
                              },
                              "value": "INVALID_IMPLEMENTATION"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_d018dd82e2a195c7ea949ecda8e19f3e54fbb728e79acd6a3a3b5470d19082c6",
                                "typeString": "literal_string \"INVALID_IMPLEMENTATION\""
                              }
                            ],
                            "id": 1216,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "3313:7:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1224,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3313:63:11",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1225,
                        "nodeType": "ExpressionStatement",
                        "src": "3313:63:11"
                      },
                      {
                        "assignments": [
                          1228
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1228,
                            "mutability": "mutable",
                            "name": "data",
                            "nameLocation": "3414:4:11",
                            "nodeType": "VariableDeclaration",
                            "scope": 1280,
                            "src": "3387:31:11",
                            "stateVariable": false,
                            "storageLocation": "storage",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_ImplementationData_$1119_storage_ptr",
                              "typeString": "struct Registry.ImplementationData"
                            },
                            "typeName": {
                              "id": 1227,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 1226,
                                "name": "ImplementationData",
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 1119,
                                "src": "3387:18:11"
                              },
                              "referencedDeclaration": 1119,
                              "src": "3387:18:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_ImplementationData_$1119_storage_ptr",
                                "typeString": "struct Registry.ImplementationData"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1232,
                        "initialValue": {
                          "baseExpression": {
                            "id": 1229,
                            "name": "implementationData",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1130,
                            "src": "3421:18:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_ImplementationData_$1119_storage_$",
                              "typeString": "mapping(address => struct Registry.ImplementationData storage ref)"
                            }
                          },
                          "id": 1231,
                          "indexExpression": {
                            "id": 1230,
                            "name": "implementation",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1198,
                            "src": "3440:14:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "3421:34:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_ImplementationData_$1119_storage",
                            "typeString": "struct Registry.ImplementationData storage ref"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "3387:68:11"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              },
                              "id": 1240,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 1234,
                                  "name": "data",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1228,
                                  "src": "3473:4:11",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_ImplementationData_$1119_storage_ptr",
                                    "typeString": "struct Registry.ImplementationData storage pointer"
                                  }
                                },
                                "id": 1235,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "namespace",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 1118,
                                "src": "3473:14:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "arguments": [
                                  {
                                    "hexValue": "30",
                                    "id": 1238,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "3499:1:11",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    }
                                  ],
                                  "id": 1237,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "3491:7:11",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_bytes32_$",
                                    "typeString": "type(bytes32)"
                                  },
                                  "typeName": {
                                    "id": 1236,
                                    "name": "bytes32",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "3491:7:11",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 1239,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "3491:10:11",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              },
                              "src": "3473:28:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "524547495354455245445f494d504c454d454e544154494f4e",
                              "id": 1241,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3503:27:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_0ca54846c3bb548883687dca8e12101dfb883d90d88b9fe5238eae9147ced712",
                                "typeString": "literal_string \"REGISTERED_IMPLEMENTATION\""
                              },
                              "value": "REGISTERED_IMPLEMENTATION"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_0ca54846c3bb548883687dca8e12101dfb883d90d88b9fe5238eae9147ced712",
                                "typeString": "literal_string \"REGISTERED_IMPLEMENTATION\""
                              }
                            ],
                            "id": 1233,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "3465:7:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1242,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3465:66:11",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1243,
                        "nodeType": "ExpressionStatement",
                        "src": "3465:66:11"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "id": 1252,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "baseExpression": {
                                  "id": 1245,
                                  "name": "implementationOf",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1124,
                                  "src": "3549:16:11",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                                    "typeString": "mapping(address => address)"
                                  }
                                },
                                "id": 1247,
                                "indexExpression": {
                                  "id": 1246,
                                  "name": "implementation",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1198,
                                  "src": "3566:14:11",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "3549:32:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "arguments": [
                                  {
                                    "hexValue": "30",
                                    "id": 1250,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "3593:1:11",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    }
                                  ],
                                  "id": 1249,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "3585:7:11",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 1248,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "3585:7:11",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 1251,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "3585:10:11",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "src": "3549:46:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "43414e4e4f545f52454749535445525f494e5354414e4345",
                              "id": 1253,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3597:26:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_984199bd9bbf325bed3d7c596c131b36732101e0d3151c139c4d2657c9618b8e",
                                "typeString": "literal_string \"CANNOT_REGISTER_INSTANCE\""
                              },
                              "value": "CANNOT_REGISTER_INSTANCE"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_984199bd9bbf325bed3d7c596c131b36732101e0d3151c139c4d2657c9618b8e",
                                "typeString": "literal_string \"CANNOT_REGISTER_INSTANCE\""
                              }
                            ],
                            "id": 1244,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "3541:7:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1254,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3541:83:11",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1255,
                        "nodeType": "ExpressionStatement",
                        "src": "3541:83:11"
                      },
                      {
                        "expression": {
                          "id": 1260,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "id": 1256,
                              "name": "data",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1228,
                              "src": "3635:4:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_ImplementationData_$1119_storage_ptr",
                                "typeString": "struct Registry.ImplementationData storage pointer"
                              }
                            },
                            "id": 1258,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "deprecated",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1116,
                            "src": "3635:15:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "66616c7365",
                            "id": 1259,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "3653:5:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "false"
                          },
                          "src": "3635:23:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1261,
                        "nodeType": "ExpressionStatement",
                        "src": "3635:23:11"
                      },
                      {
                        "expression": {
                          "id": 1266,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "id": 1262,
                              "name": "data",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1228,
                              "src": "3668:4:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_ImplementationData_$1119_storage_ptr",
                                "typeString": "struct Registry.ImplementationData storage pointer"
                              }
                            },
                            "id": 1264,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "stateless",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1114,
                            "src": "3668:14:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 1265,
                            "name": "stateless",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1200,
                            "src": "3685:9:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "3668:26:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1267,
                        "nodeType": "ExpressionStatement",
                        "src": "3668:26:11"
                      },
                      {
                        "expression": {
                          "id": 1272,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "id": 1268,
                              "name": "data",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1228,
                              "src": "3704:4:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_ImplementationData_$1119_storage_ptr",
                                "typeString": "struct Registry.ImplementationData storage pointer"
                              }
                            },
                            "id": 1270,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "namespace",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1118,
                            "src": "3704:14:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 1271,
                            "name": "namespace",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1196,
                            "src": "3721:9:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "src": "3704:26:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "id": 1273,
                        "nodeType": "ExpressionStatement",
                        "src": "3704:26:11"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 1275,
                              "name": "namespace",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1196,
                              "src": "3756:9:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            {
                              "id": 1276,
                              "name": "implementation",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1198,
                              "src": "3767:14:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 1277,
                              "name": "stateless",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1200,
                              "src": "3783:9:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            ],
                            "id": 1274,
                            "name": "Registered",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1023,
                            "src": "3745:10:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_bool_$returns$__$",
                              "typeString": "function (bytes32,address,bool)"
                            }
                          },
                          "id": 1278,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3745:48:11",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1279,
                        "nodeType": "EmitStatement",
                        "src": "3740:53:11"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1194,
                    "nodeType": "StructuredDocumentation",
                    "src": "2816:319:11",
                    "text": " @dev Registers a new implementation for a given namespace. Sender must be authorized.\n @param namespace Namespace to be used for the implementation\n @param implementation Address of the implementation to be registered\n @param stateless Whether the implementation is stateless or not"
                  },
                  "functionSelector": "678449d4",
                  "id": 1281,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 1204,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 1203,
                        "name": "auth",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 29,
                        "src": "3235:4:11"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "3235:4:11"
                    }
                  ],
                  "name": "register",
                  "nameLocation": "3149:8:11",
                  "nodeType": "FunctionDefinition",
                  "overrides": {
                    "id": 1202,
                    "nodeType": "OverrideSpecifier",
                    "overrides": [],
                    "src": "3226:8:11"
                  },
                  "parameters": {
                    "id": 1201,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1196,
                        "mutability": "mutable",
                        "name": "namespace",
                        "nameLocation": "3166:9:11",
                        "nodeType": "VariableDeclaration",
                        "scope": 1281,
                        "src": "3158:17:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 1195,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "3158:7:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1198,
                        "mutability": "mutable",
                        "name": "implementation",
                        "nameLocation": "3185:14:11",
                        "nodeType": "VariableDeclaration",
                        "scope": 1281,
                        "src": "3177:22:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1197,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3177:7:11",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1200,
                        "mutability": "mutable",
                        "name": "stateless",
                        "nameLocation": "3206:9:11",
                        "nodeType": "VariableDeclaration",
                        "scope": 1281,
                        "src": "3201:14:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 1199,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "3201:4:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3157:59:11"
                  },
                  "returnParameters": {
                    "id": 1205,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "3240:0:11"
                  },
                  "scope": 1427,
                  "src": "3140:660:11",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "baseFunctions": [
                    1087
                  ],
                  "body": {
                    "id": 1337,
                    "nodeType": "Block",
                    "src": "4086:396:11",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "id": 1296,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 1291,
                                "name": "implementation",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1284,
                                "src": "4104:14:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "!=",
                              "rightExpression": {
                                "arguments": [
                                  {
                                    "hexValue": "30",
                                    "id": 1294,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "4130:1:11",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    }
                                  ],
                                  "id": 1293,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "4122:7:11",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 1292,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "4122:7:11",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 1295,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "4122:10:11",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "src": "4104:28:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "494d504c454d454e544154494f4e5f414444524553535f5a45524f",
                              "id": 1297,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4134:29:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_55d47d3de142046027656b5b30de14d253112231a3b04e1e9201a26ec7a1a3ef",
                                "typeString": "literal_string \"IMPLEMENTATION_ADDRESS_ZERO\""
                              },
                              "value": "IMPLEMENTATION_ADDRESS_ZERO"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_55d47d3de142046027656b5b30de14d253112231a3b04e1e9201a26ec7a1a3ef",
                                "typeString": "literal_string \"IMPLEMENTATION_ADDRESS_ZERO\""
                              }
                            ],
                            "id": 1290,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "4096:7:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1298,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4096:68:11",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1299,
                        "nodeType": "ExpressionStatement",
                        "src": "4096:68:11"
                      },
                      {
                        "assignments": [
                          1302
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1302,
                            "mutability": "mutable",
                            "name": "data",
                            "nameLocation": "4202:4:11",
                            "nodeType": "VariableDeclaration",
                            "scope": 1337,
                            "src": "4175:31:11",
                            "stateVariable": false,
                            "storageLocation": "storage",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_ImplementationData_$1119_storage_ptr",
                              "typeString": "struct Registry.ImplementationData"
                            },
                            "typeName": {
                              "id": 1301,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 1300,
                                "name": "ImplementationData",
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 1119,
                                "src": "4175:18:11"
                              },
                              "referencedDeclaration": 1119,
                              "src": "4175:18:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_ImplementationData_$1119_storage_ptr",
                                "typeString": "struct Registry.ImplementationData"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1306,
                        "initialValue": {
                          "baseExpression": {
                            "id": 1303,
                            "name": "implementationData",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1130,
                            "src": "4209:18:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_ImplementationData_$1119_storage_$",
                              "typeString": "mapping(address => struct Registry.ImplementationData storage ref)"
                            }
                          },
                          "id": 1305,
                          "indexExpression": {
                            "id": 1304,
                            "name": "implementation",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1284,
                            "src": "4228:14:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "4209:34:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_ImplementationData_$1119_storage",
                            "typeString": "struct Registry.ImplementationData storage ref"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "4175:68:11"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              },
                              "id": 1314,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 1308,
                                  "name": "data",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1302,
                                  "src": "4261:4:11",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_ImplementationData_$1119_storage_ptr",
                                    "typeString": "struct Registry.ImplementationData storage pointer"
                                  }
                                },
                                "id": 1309,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "namespace",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 1118,
                                "src": "4261:14:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "!=",
                              "rightExpression": {
                                "arguments": [
                                  {
                                    "hexValue": "30",
                                    "id": 1312,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "4287:1:11",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    }
                                  ],
                                  "id": 1311,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "4279:7:11",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_bytes32_$",
                                    "typeString": "type(bytes32)"
                                  },
                                  "typeName": {
                                    "id": 1310,
                                    "name": "bytes32",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "4279:7:11",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 1313,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "4279:10:11",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              },
                              "src": "4261:28:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "554e524547495354455245445f494d504c454d454e544154494f4e",
                              "id": 1315,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4291:29:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_77283051cd0b6a39c2f3e7ec3fdf74b0a7c03b314f2c2c9d9a01468dd48f844b",
                                "typeString": "literal_string \"UNREGISTERED_IMPLEMENTATION\""
                              },
                              "value": "UNREGISTERED_IMPLEMENTATION"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_77283051cd0b6a39c2f3e7ec3fdf74b0a7c03b314f2c2c9d9a01468dd48f844b",
                                "typeString": "literal_string \"UNREGISTERED_IMPLEMENTATION\""
                              }
                            ],
                            "id": 1307,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "4253:7:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1316,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4253:68:11",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1317,
                        "nodeType": "ExpressionStatement",
                        "src": "4253:68:11"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 1321,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "UnaryOperation",
                              "operator": "!",
                              "prefix": true,
                              "src": "4339:16:11",
                              "subExpression": {
                                "expression": {
                                  "id": 1319,
                                  "name": "data",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1302,
                                  "src": "4340:4:11",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_ImplementationData_$1119_storage_ptr",
                                    "typeString": "struct Registry.ImplementationData storage pointer"
                                  }
                                },
                                "id": 1320,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "deprecated",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 1116,
                                "src": "4340:15:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "444550524543415445445f494d504c454d454e544154494f4e",
                              "id": 1322,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4357:27:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_3367adfa843ca35e9cc5c6cd8a969de35e1046ce305281944f16be39673c71e7",
                                "typeString": "literal_string \"DEPRECATED_IMPLEMENTATION\""
                              },
                              "value": "DEPRECATED_IMPLEMENTATION"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_3367adfa843ca35e9cc5c6cd8a969de35e1046ce305281944f16be39673c71e7",
                                "typeString": "literal_string \"DEPRECATED_IMPLEMENTATION\""
                              }
                            ],
                            "id": 1318,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "4331:7:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1323,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4331:54:11",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1324,
                        "nodeType": "ExpressionStatement",
                        "src": "4331:54:11"
                      },
                      {
                        "expression": {
                          "id": 1329,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "id": 1325,
                              "name": "data",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1302,
                              "src": "4396:4:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_ImplementationData_$1119_storage_ptr",
                                "typeString": "struct Registry.ImplementationData storage pointer"
                              }
                            },
                            "id": 1327,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "deprecated",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1116,
                            "src": "4396:15:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "74727565",
                            "id": 1328,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "4414:4:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "true"
                          },
                          "src": "4396:22:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1330,
                        "nodeType": "ExpressionStatement",
                        "src": "4396:22:11"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 1332,
                                "name": "data",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1302,
                                "src": "4444:4:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_ImplementationData_$1119_storage_ptr",
                                  "typeString": "struct Registry.ImplementationData storage pointer"
                                }
                              },
                              "id": 1333,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "namespace",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 1118,
                              "src": "4444:14:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            {
                              "id": 1334,
                              "name": "implementation",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1284,
                              "src": "4460:14:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 1331,
                            "name": "Deprecated",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1030,
                            "src": "4433:10:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_address_$returns$__$",
                              "typeString": "function (bytes32,address)"
                            }
                          },
                          "id": 1335,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4433:42:11",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1336,
                        "nodeType": "EmitStatement",
                        "src": "4428:47:11"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1282,
                    "nodeType": "StructuredDocumentation",
                    "src": "3806:209:11",
                    "text": " @dev Deprecates a registered implementation. Sender must be authorized.\n @param implementation Address of the implementation to be deprecated. It must be registered and not deprecated."
                  },
                  "functionSelector": "0753c30c",
                  "id": 1338,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 1288,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 1287,
                        "name": "auth",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 29,
                        "src": "4081:4:11"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "4081:4:11"
                    }
                  ],
                  "name": "deprecate",
                  "nameLocation": "4029:9:11",
                  "nodeType": "FunctionDefinition",
                  "overrides": {
                    "id": 1286,
                    "nodeType": "OverrideSpecifier",
                    "overrides": [],
                    "src": "4072:8:11"
                  },
                  "parameters": {
                    "id": 1285,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1284,
                        "mutability": "mutable",
                        "name": "implementation",
                        "nameLocation": "4047:14:11",
                        "nodeType": "VariableDeclaration",
                        "scope": 1338,
                        "src": "4039:22:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1283,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "4039:7:11",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4038:24:11"
                  },
                  "returnParameters": {
                    "id": 1289,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "4086:0:11"
                  },
                  "scope": 1427,
                  "src": "4020:462:11",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "baseFunctions": [
                    1097
                  ],
                  "body": {
                    "id": 1425,
                    "nodeType": "Block",
                    "src": "4959:648:11",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "id": 1355,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 1350,
                                "name": "implementation",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1341,
                                "src": "4977:14:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "!=",
                              "rightExpression": {
                                "arguments": [
                                  {
                                    "hexValue": "30",
                                    "id": 1353,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "5003:1:11",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    }
                                  ],
                                  "id": 1352,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "4995:7:11",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 1351,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "4995:7:11",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 1354,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "4995:10:11",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "src": "4977:28:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "494d504c454d454e544154494f4e5f414444524553535f5a45524f",
                              "id": 1356,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "5007:29:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_55d47d3de142046027656b5b30de14d253112231a3b04e1e9201a26ec7a1a3ef",
                                "typeString": "literal_string \"IMPLEMENTATION_ADDRESS_ZERO\""
                              },
                              "value": "IMPLEMENTATION_ADDRESS_ZERO"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_55d47d3de142046027656b5b30de14d253112231a3b04e1e9201a26ec7a1a3ef",
                                "typeString": "literal_string \"IMPLEMENTATION_ADDRESS_ZERO\""
                              }
                            ],
                            "id": 1349,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "4969:7:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1357,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4969:68:11",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1358,
                        "nodeType": "ExpressionStatement",
                        "src": "4969:68:11"
                      },
                      {
                        "assignments": [
                          1361
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1361,
                            "mutability": "mutable",
                            "name": "data",
                            "nameLocation": "5075:4:11",
                            "nodeType": "VariableDeclaration",
                            "scope": 1425,
                            "src": "5048:31:11",
                            "stateVariable": false,
                            "storageLocation": "storage",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_ImplementationData_$1119_storage_ptr",
                              "typeString": "struct Registry.ImplementationData"
                            },
                            "typeName": {
                              "id": 1360,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 1359,
                                "name": "ImplementationData",
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 1119,
                                "src": "5048:18:11"
                              },
                              "referencedDeclaration": 1119,
                              "src": "5048:18:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_ImplementationData_$1119_storage_ptr",
                                "typeString": "struct Registry.ImplementationData"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1365,
                        "initialValue": {
                          "baseExpression": {
                            "id": 1362,
                            "name": "implementationData",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1130,
                            "src": "5082:18:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_ImplementationData_$1119_storage_$",
                              "typeString": "mapping(address => struct Registry.ImplementationData storage ref)"
                            }
                          },
                          "id": 1364,
                          "indexExpression": {
                            "id": 1363,
                            "name": "implementation",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1341,
                            "src": "5101:14:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "5082:34:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_ImplementationData_$1119_storage",
                            "typeString": "struct Registry.ImplementationData storage ref"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "5048:68:11"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              },
                              "id": 1373,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 1367,
                                  "name": "data",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1361,
                                  "src": "5134:4:11",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_ImplementationData_$1119_storage_ptr",
                                    "typeString": "struct Registry.ImplementationData storage pointer"
                                  }
                                },
                                "id": 1368,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "namespace",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 1118,
                                "src": "5134:14:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "!=",
                              "rightExpression": {
                                "arguments": [
                                  {
                                    "hexValue": "30",
                                    "id": 1371,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "5160:1:11",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    }
                                  ],
                                  "id": 1370,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "5152:7:11",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_bytes32_$",
                                    "typeString": "type(bytes32)"
                                  },
                                  "typeName": {
                                    "id": 1369,
                                    "name": "bytes32",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "5152:7:11",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 1372,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "5152:10:11",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              },
                              "src": "5134:28:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "554e524547495354455245445f494d504c454d454e544154494f4e",
                              "id": 1374,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "5164:29:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_77283051cd0b6a39c2f3e7ec3fdf74b0a7c03b314f2c2c9d9a01468dd48f844b",
                                "typeString": "literal_string \"UNREGISTERED_IMPLEMENTATION\""
                              },
                              "value": "UNREGISTERED_IMPLEMENTATION"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_77283051cd0b6a39c2f3e7ec3fdf74b0a7c03b314f2c2c9d9a01468dd48f844b",
                                "typeString": "literal_string \"UNREGISTERED_IMPLEMENTATION\""
                              }
                            ],
                            "id": 1366,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "5126:7:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1375,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5126:68:11",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1376,
                        "nodeType": "ExpressionStatement",
                        "src": "5126:68:11"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 1380,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "UnaryOperation",
                              "operator": "!",
                              "prefix": true,
                              "src": "5212:16:11",
                              "subExpression": {
                                "expression": {
                                  "id": 1378,
                                  "name": "data",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1361,
                                  "src": "5213:4:11",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_ImplementationData_$1119_storage_ptr",
                                    "typeString": "struct Registry.ImplementationData storage pointer"
                                  }
                                },
                                "id": 1379,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "deprecated",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 1116,
                                "src": "5213:15:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "444550524543415445445f494d504c454d454e544154494f4e",
                              "id": 1381,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "5230:27:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_3367adfa843ca35e9cc5c6cd8a969de35e1046ce305281944f16be39673c71e7",
                                "typeString": "literal_string \"DEPRECATED_IMPLEMENTATION\""
                              },
                              "value": "DEPRECATED_IMPLEMENTATION"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_3367adfa843ca35e9cc5c6cd8a969de35e1046ce305281944f16be39673c71e7",
                                "typeString": "literal_string \"DEPRECATED_IMPLEMENTATION\""
                              }
                            ],
                            "id": 1377,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "5204:7:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1382,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5204:54:11",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1383,
                        "nodeType": "ExpressionStatement",
                        "src": "5204:54:11"
                      },
                      {
                        "expression": {
                          "id": 1392,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1384,
                            "name": "instance",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1347,
                            "src": "5269:8:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "id": 1389,
                                    "name": "implementation",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1341,
                                    "src": "5301:14:11",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 1388,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "5293:7:11",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 1387,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "5293:7:11",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 1390,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "5293:23:11",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "expression": {
                                "id": 1385,
                                "name": "Clones",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 273,
                                "src": "5280:6:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_Clones_$273_$",
                                  "typeString": "type(library Clones)"
                                }
                              },
                              "id": 1386,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "clone",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 216,
                              "src": "5280:12:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$_t_address_$",
                                "typeString": "function (address) returns (address)"
                              }
                            },
                            "id": 1391,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "5280:37:11",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "5269:48:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 1393,
                        "nodeType": "ExpressionStatement",
                        "src": "5269:48:11"
                      },
                      {
                        "expression": {
                          "id": 1398,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 1394,
                              "name": "implementationOf",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1124,
                              "src": "5327:16:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                                "typeString": "mapping(address => address)"
                              }
                            },
                            "id": 1396,
                            "indexExpression": {
                              "id": 1395,
                              "name": "instance",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1347,
                              "src": "5344:8:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "5327:26:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 1397,
                            "name": "implementation",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1341,
                            "src": "5356:14:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "5327:43:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 1399,
                        "nodeType": "ExpressionStatement",
                        "src": "5327:43:11"
                      },
                      {
                        "assignments": [
                          1401
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1401,
                            "mutability": "mutable",
                            "name": "result",
                            "nameLocation": "5393:6:11",
                            "nodeType": "VariableDeclaration",
                            "scope": 1425,
                            "src": "5380:19:11",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes"
                            },
                            "typeName": {
                              "id": 1400,
                              "name": "bytes",
                              "nodeType": "ElementaryTypeName",
                              "src": "5380:5:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_storage_ptr",
                                "typeString": "bytes"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1416,
                        "initialValue": {
                          "condition": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 1405,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "expression": {
                                "id": 1402,
                                "name": "initializeData",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1343,
                                "src": "5402:14:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              },
                              "id": 1403,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "length",
                              "nodeType": "MemberAccess",
                              "src": "5402:21:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "==",
                            "rightExpression": {
                              "hexValue": "30",
                              "id": 1404,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "5427:1:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            },
                            "src": "5402:26:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "falseExpression": {
                            "arguments": [
                              {
                                "id": 1412,
                                "name": "initializeData",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1343,
                                "src": "5492:14:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              },
                              {
                                "hexValue": "434c4f4e455f494e49545f4641494c4544",
                                "id": 1413,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "string",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "5508:19:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_stringliteral_81b515a41ce663cf96fa4e3b1b7a102c04c6c8e7345c9d3ee9c14a663cfaeeca",
                                  "typeString": "literal_string \"CLONE_INIT_FAILED\""
                                },
                                "value": "CLONE_INIT_FAILED"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_81b515a41ce663cf96fa4e3b1b7a102c04c6c8e7345c9d3ee9c14a663cfaeeca",
                                  "typeString": "literal_string \"CLONE_INIT_FAILED\""
                                }
                              ],
                              "expression": {
                                "id": 1410,
                                "name": "instance",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1347,
                                "src": "5470:8:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "id": 1411,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "functionCall",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 513,
                              "src": "5470:21:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$bound_to$_t_address_$",
                                "typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
                              }
                            },
                            "id": 1414,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "5470:58:11",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          },
                          "id": 1415,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "Conditional",
                          "src": "5402:126:11",
                          "trueExpression": {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 1408,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "5453:1:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 1407,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "NewExpression",
                              "src": "5443:9:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$",
                                "typeString": "function (uint256) pure returns (bytes memory)"
                              },
                              "typeName": {
                                "id": 1406,
                                "name": "bytes",
                                "nodeType": "ElementaryTypeName",
                                "src": "5447:5:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes_storage_ptr",
                                  "typeString": "bytes"
                                }
                              }
                            },
                            "id": 1409,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "5443:12:11",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "5380:148:11"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 1418,
                                "name": "data",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1361,
                                "src": "5551:4:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_ImplementationData_$1119_storage_ptr",
                                  "typeString": "struct Registry.ImplementationData storage pointer"
                                }
                              },
                              "id": 1419,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "namespace",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 1118,
                              "src": "5551:14:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            {
                              "id": 1420,
                              "name": "implementation",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1341,
                              "src": "5567:14:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 1421,
                              "name": "instance",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1347,
                              "src": "5583:8:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 1422,
                              "name": "result",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1401,
                              "src": "5593:6:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "id": 1417,
                            "name": "Cloned",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1041,
                            "src": "5544:6:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_address_$_t_bytes_memory_ptr_$returns$__$",
                              "typeString": "function (bytes32,address,address,bytes memory)"
                            }
                          },
                          "id": 1423,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5544:56:11",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1424,
                        "nodeType": "EmitStatement",
                        "src": "5539:61:11"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1339,
                    "nodeType": "StructuredDocumentation",
                    "src": "4488:353:11",
                    "text": " @dev Clones a registered implementation\n @param implementation Address of the implementation to be cloned. It must be registered and not deprecated.\n @param initializeData Arbitrary data to be sent after deployment. It can be used to initialize the new instance.\n @return instance Address of the new instance created"
                  },
                  "functionSelector": "0fbe133c",
                  "id": 1426,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "clone",
                  "nameLocation": "4855:5:11",
                  "nodeType": "FunctionDefinition",
                  "overrides": {
                    "id": 1345,
                    "nodeType": "OverrideSpecifier",
                    "overrides": [],
                    "src": "4923:8:11"
                  },
                  "parameters": {
                    "id": 1344,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1341,
                        "mutability": "mutable",
                        "name": "implementation",
                        "nameLocation": "4869:14:11",
                        "nodeType": "VariableDeclaration",
                        "scope": 1426,
                        "src": "4861:22:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1340,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "4861:7:11",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1343,
                        "mutability": "mutable",
                        "name": "initializeData",
                        "nameLocation": "4898:14:11",
                        "nodeType": "VariableDeclaration",
                        "scope": 1426,
                        "src": "4885:27:11",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 1342,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "4885:5:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4860:53:11"
                  },
                  "returnParameters": {
                    "id": 1348,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1347,
                        "mutability": "mutable",
                        "name": "instance",
                        "nameLocation": "4949:8:11",
                        "nodeType": "VariableDeclaration",
                        "scope": 1426,
                        "src": "4941:16:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1346,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "4941:7:11",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4940:18:11"
                  },
                  "scope": 1427,
                  "src": "4846:761:11",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                }
              ],
              "scope": 1428,
              "src": "1414:4195:11"
            }
          ],
          "src": "688:4922:11"
        },
        "id": 11
      },
      "contracts/test/BaseImplementationMock.sol": {
        "ast": {
          "absolutePath": "contracts/test/BaseImplementationMock.sol",
          "exportedSymbols": {
            "Address": [
              719
            ],
            "BaseImplementation": [
              868
            ],
            "BaseImplementationMock": [
              1468
            ],
            "IAuthorizer": [
              193
            ],
            "IImplementation": [
              884
            ],
            "IRegistry": [
              1098
            ],
            "Initializable": [
              424
            ]
          },
          "id": 1469,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 1429,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".0"
              ],
              "nodeType": "PragmaDirective",
              "src": "33:23:12"
            },
            {
              "absolutePath": "contracts/implementations/BaseImplementation.sol",
              "file": "../implementations/BaseImplementation.sol",
              "id": 1430,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 1469,
              "sourceUnit": 869,
              "src": "58:51:12",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "abstract": false,
              "baseContracts": [
                {
                  "baseName": {
                    "id": 1431,
                    "name": "BaseImplementation",
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 868,
                    "src": "146:18:12"
                  },
                  "id": 1432,
                  "nodeType": "InheritanceSpecifier",
                  "src": "146:18:12"
                }
              ],
              "contractDependencies": [
                868,
                884
              ],
              "contractKind": "contract",
              "fullyImplemented": true,
              "id": 1468,
              "linearizedBaseContracts": [
                1468,
                868,
                884
              ],
              "name": "BaseImplementationMock",
              "nameLocation": "120:22:12",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "baseFunctions": [
                    877
                  ],
                  "constant": true,
                  "functionSelector": "44ba1fca",
                  "id": 1438,
                  "mutability": "constant",
                  "name": "NAMESPACE",
                  "nameLocation": "204:9:12",
                  "nodeType": "VariableDeclaration",
                  "overrides": {
                    "id": 1434,
                    "nodeType": "OverrideSpecifier",
                    "overrides": [],
                    "src": "195:8:12"
                  },
                  "scope": 1468,
                  "src": "171:82:12",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 1433,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "171:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": {
                    "arguments": [
                      {
                        "hexValue": "424153455f494d504c454d454e544154494f4e5f4d4f434b",
                        "id": 1436,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "226:26:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_7d86b200cd6cf95bd41bf9d1083923efc2908df0a6016584cdbfa288a8c00c48",
                          "typeString": "literal_string \"BASE_IMPLEMENTATION_MOCK\""
                        },
                        "value": "BASE_IMPLEMENTATION_MOCK"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_7d86b200cd6cf95bd41bf9d1083923efc2908df0a6016584cdbfa288a8c00c48",
                          "typeString": "literal_string \"BASE_IMPLEMENTATION_MOCK\""
                        }
                      ],
                      "id": 1435,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -8,
                      "src": "216:9:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 1437,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "216:37:12",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 1446,
                    "nodeType": "Block",
                    "src": "319:64:12",
                    "statements": []
                  },
                  "id": 1447,
                  "implemented": true,
                  "kind": "constructor",
                  "modifiers": [
                    {
                      "arguments": [
                        {
                          "id": 1443,
                          "name": "registry",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1440,
                          "src": "309:8:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "id": 1444,
                      "modifierName": {
                        "id": 1442,
                        "name": "BaseImplementation",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 868,
                        "src": "290:18:12"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "290:28:12"
                    }
                  ],
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1441,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1440,
                        "mutability": "mutable",
                        "name": "registry",
                        "nameLocation": "280:8:12",
                        "nodeType": "VariableDeclaration",
                        "scope": 1447,
                        "src": "272:16:12",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1439,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "272:7:12",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "271:18:12"
                  },
                  "returnParameters": {
                    "id": 1445,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "319:0:12"
                  },
                  "scope": 1468,
                  "src": "260:123:12",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 1456,
                    "nodeType": "Block",
                    "src": "459:56:12",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 1453,
                              "name": "dependency",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1449,
                              "src": "497:10:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 1452,
                            "name": "_validateStatefulDependency",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 806,
                            "src": "469:27:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_address_$returns$__$",
                              "typeString": "function (address) view"
                            }
                          },
                          "id": 1454,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "469:39:12",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1455,
                        "nodeType": "ExpressionStatement",
                        "src": "469:39:12"
                      }
                    ]
                  },
                  "functionSelector": "b1d51210",
                  "id": 1457,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "validateStatefulDependency",
                  "nameLocation": "398:26:12",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1450,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1449,
                        "mutability": "mutable",
                        "name": "dependency",
                        "nameLocation": "433:10:12",
                        "nodeType": "VariableDeclaration",
                        "scope": 1457,
                        "src": "425:18:12",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1448,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "425:7:12",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "424:20:12"
                  },
                  "returnParameters": {
                    "id": 1451,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "459:0:12"
                  },
                  "scope": 1468,
                  "src": "389:126:12",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 1466,
                    "nodeType": "Block",
                    "src": "592:57:12",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 1463,
                              "name": "dependency",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1459,
                              "src": "631:10:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 1462,
                            "name": "_validateStatelessDependency",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 791,
                            "src": "602:28:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_address_$returns$__$",
                              "typeString": "function (address) view"
                            }
                          },
                          "id": 1464,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "602:40:12",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1465,
                        "nodeType": "ExpressionStatement",
                        "src": "602:40:12"
                      }
                    ]
                  },
                  "functionSelector": "5d1b5f12",
                  "id": 1467,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "validateStatelessDependency",
                  "nameLocation": "530:27:12",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1460,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1459,
                        "mutability": "mutable",
                        "name": "dependency",
                        "nameLocation": "566:10:12",
                        "nodeType": "VariableDeclaration",
                        "scope": 1467,
                        "src": "558:18:12",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1458,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "558:7:12",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "557:20:12"
                  },
                  "returnParameters": {
                    "id": 1461,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "592:0:12"
                  },
                  "scope": 1468,
                  "src": "521:128:12",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                }
              ],
              "scope": 1469,
              "src": "111:540:12"
            }
          ],
          "src": "33:619:12"
        },
        "id": 12
      },
      "contracts/test/InitializableAuthorizedImplementationMock.sol": {
        "ast": {
          "absolutePath": "contracts/test/InitializableAuthorizedImplementationMock.sol",
          "exportedSymbols": {
            "Address": [
              719
            ],
            "Authorizer": [
              149
            ],
            "BaseImplementation": [
              868
            ],
            "IAuthorizer": [
              193
            ],
            "IImplementation": [
              884
            ],
            "IRegistry": [
              1098
            ],
            "Initializable": [
              424
            ],
            "InitializableAuthorizedImplementation": [
              930
            ],
            "InitializableAuthorizedImplementationMock": [
              1501
            ],
            "InitializableImplementation": [
              1008
            ]
          },
          "id": 1502,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 1470,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".0"
              ],
              "nodeType": "PragmaDirective",
              "src": "33:23:13"
            },
            {
              "absolutePath": "contracts/implementations/InitializableAuthorizedImplementation.sol",
              "file": "../implementations/InitializableAuthorizedImplementation.sol",
              "id": 1471,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 1502,
              "sourceUnit": 931,
              "src": "58:70:13",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "abstract": false,
              "baseContracts": [
                {
                  "baseName": {
                    "id": 1472,
                    "name": "InitializableAuthorizedImplementation",
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 930,
                    "src": "184:37:13"
                  },
                  "id": 1473,
                  "nodeType": "InheritanceSpecifier",
                  "src": "184:37:13"
                }
              ],
              "contractDependencies": [
                149,
                193,
                424,
                868,
                884,
                930,
                1008
              ],
              "contractKind": "contract",
              "fullyImplemented": true,
              "id": 1501,
              "linearizedBaseContracts": [
                1501,
                930,
                149,
                193,
                1008,
                424,
                868,
                884
              ],
              "name": "InitializableAuthorizedImplementationMock",
              "nameLocation": "139:41:13",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "baseFunctions": [
                    877
                  ],
                  "constant": true,
                  "functionSelector": "44ba1fca",
                  "id": 1479,
                  "mutability": "constant",
                  "name": "NAMESPACE",
                  "nameLocation": "261:9:13",
                  "nodeType": "VariableDeclaration",
                  "overrides": {
                    "id": 1475,
                    "nodeType": "OverrideSpecifier",
                    "overrides": [],
                    "src": "252:8:13"
                  },
                  "scope": 1501,
                  "src": "228:102:13",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 1474,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "228:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": {
                    "arguments": [
                      {
                        "hexValue": "494e495449414c495a41424c455f415554484f52495a45445f494d504c454d454e544154494f4e5f4d4f434b",
                        "id": 1477,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "283:46:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f6349752494beba38de01582bac9aa61dacf82389107f0eb64cc5ab90b2bb4c6",
                          "typeString": "literal_string \"INITIALIZABLE_AUTHORIZED_IMPLEMENTATION_MOCK\""
                        },
                        "value": "INITIALIZABLE_AUTHORIZED_IMPLEMENTATION_MOCK"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_f6349752494beba38de01582bac9aa61dacf82389107f0eb64cc5ab90b2bb4c6",
                          "typeString": "literal_string \"INITIALIZABLE_AUTHORIZED_IMPLEMENTATION_MOCK\""
                        }
                      ],
                      "id": 1476,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -8,
                      "src": "273:9:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 1478,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "273:57:13",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 1487,
                    "nodeType": "Block",
                    "src": "415:64:13",
                    "statements": []
                  },
                  "id": 1488,
                  "implemented": true,
                  "kind": "constructor",
                  "modifiers": [
                    {
                      "arguments": [
                        {
                          "id": 1484,
                          "name": "registry",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1481,
                          "src": "405:8:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "id": 1485,
                      "modifierName": {
                        "id": 1483,
                        "name": "InitializableAuthorizedImplementation",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 930,
                        "src": "367:37:13"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "367:47:13"
                    }
                  ],
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1482,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1481,
                        "mutability": "mutable",
                        "name": "registry",
                        "nameLocation": "357:8:13",
                        "nodeType": "VariableDeclaration",
                        "scope": 1488,
                        "src": "349:16:13",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1480,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "349:7:13",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "348:18:13"
                  },
                  "returnParameters": {
                    "id": 1486,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "415:0:13"
                  },
                  "scope": 1501,
                  "src": "337:142:13",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 1499,
                    "nodeType": "Block",
                    "src": "541:35:13",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 1496,
                              "name": "admin",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1490,
                              "src": "563:5:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 1495,
                            "name": "_initialize",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              929,
                              1007
                            ],
                            "referencedDeclaration": 929,
                            "src": "551:11:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                              "typeString": "function (address)"
                            }
                          },
                          "id": 1497,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "551:18:13",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1498,
                        "nodeType": "ExpressionStatement",
                        "src": "551:18:13"
                      }
                    ]
                  },
                  "functionSelector": "c4d66de8",
                  "id": 1500,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 1493,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 1492,
                        "name": "initializer",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 344,
                        "src": "529:11:13"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "529:11:13"
                    }
                  ],
                  "name": "initialize",
                  "nameLocation": "494:10:13",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1491,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1490,
                        "mutability": "mutable",
                        "name": "admin",
                        "nameLocation": "513:5:13",
                        "nodeType": "VariableDeclaration",
                        "scope": 1500,
                        "src": "505:13:13",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1489,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "505:7:13",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "504:15:13"
                  },
                  "returnParameters": {
                    "id": 1494,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "541:0:13"
                  },
                  "scope": 1501,
                  "src": "485:91:13",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                }
              ],
              "scope": 1502,
              "src": "130:448:13"
            }
          ],
          "src": "33:546:13"
        },
        "id": 13
      },
      "contracts/test/InitializableImplementationMock.sol": {
        "ast": {
          "absolutePath": "contracts/test/InitializableImplementationMock.sol",
          "exportedSymbols": {
            "Address": [
              719
            ],
            "BaseImplementation": [
              868
            ],
            "IAuthorizer": [
              193
            ],
            "IImplementation": [
              884
            ],
            "IRegistry": [
              1098
            ],
            "Initializable": [
              424
            ],
            "InitializableImplementation": [
              1008
            ],
            "InitializableImplementationMock": [
              1531
            ]
          },
          "id": 1532,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 1503,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".0"
              ],
              "nodeType": "PragmaDirective",
              "src": "33:23:14"
            },
            {
              "absolutePath": "contracts/implementations/InitializableImplementation.sol",
              "file": "../implementations/InitializableImplementation.sol",
              "id": 1504,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 1532,
              "sourceUnit": 1009,
              "src": "58:60:14",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "abstract": false,
              "baseContracts": [
                {
                  "baseName": {
                    "id": 1505,
                    "name": "InitializableImplementation",
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 1008,
                    "src": "164:27:14"
                  },
                  "id": 1506,
                  "nodeType": "InheritanceSpecifier",
                  "src": "164:27:14"
                }
              ],
              "contractDependencies": [
                424,
                868,
                884,
                1008
              ],
              "contractKind": "contract",
              "fullyImplemented": true,
              "id": 1531,
              "linearizedBaseContracts": [
                1531,
                1008,
                424,
                868,
                884
              ],
              "name": "InitializableImplementationMock",
              "nameLocation": "129:31:14",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "baseFunctions": [
                    877
                  ],
                  "constant": true,
                  "functionSelector": "44ba1fca",
                  "id": 1512,
                  "mutability": "constant",
                  "name": "NAMESPACE",
                  "nameLocation": "231:9:14",
                  "nodeType": "VariableDeclaration",
                  "overrides": {
                    "id": 1508,
                    "nodeType": "OverrideSpecifier",
                    "overrides": [],
                    "src": "222:8:14"
                  },
                  "scope": 1531,
                  "src": "198:91:14",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 1507,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "198:7:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": {
                    "arguments": [
                      {
                        "hexValue": "494e495449414c495a41424c455f494d504c454d454e544154494f4e5f4d4f434b",
                        "id": 1510,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "253:35:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_79780c4583896c0ab374850d23846f307191c821213ca61eb599c254e854ee6d",
                          "typeString": "literal_string \"INITIALIZABLE_IMPLEMENTATION_MOCK\""
                        },
                        "value": "INITIALIZABLE_IMPLEMENTATION_MOCK"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_79780c4583896c0ab374850d23846f307191c821213ca61eb599c254e854ee6d",
                          "typeString": "literal_string \"INITIALIZABLE_IMPLEMENTATION_MOCK\""
                        }
                      ],
                      "id": 1509,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -8,
                      "src": "243:9:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 1511,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "243:46:14",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 1520,
                    "nodeType": "Block",
                    "src": "364:64:14",
                    "statements": []
                  },
                  "id": 1521,
                  "implemented": true,
                  "kind": "constructor",
                  "modifiers": [
                    {
                      "arguments": [
                        {
                          "id": 1517,
                          "name": "registry",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1514,
                          "src": "354:8:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "id": 1518,
                      "modifierName": {
                        "id": 1516,
                        "name": "InitializableImplementation",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 1008,
                        "src": "326:27:14"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "326:37:14"
                    }
                  ],
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1515,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1514,
                        "mutability": "mutable",
                        "name": "registry",
                        "nameLocation": "316:8:14",
                        "nodeType": "VariableDeclaration",
                        "scope": 1521,
                        "src": "308:16:14",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1513,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "308:7:14",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "307:18:14"
                  },
                  "returnParameters": {
                    "id": 1519,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "364:0:14"
                  },
                  "scope": 1531,
                  "src": "296:132:14",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 1529,
                    "nodeType": "Block",
                    "src": "477:30:14",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 1526,
                            "name": "_initialize",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1007,
                            "src": "487:11:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$__$",
                              "typeString": "function () view"
                            }
                          },
                          "id": 1527,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "487:13:14",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1528,
                        "nodeType": "ExpressionStatement",
                        "src": "487:13:14"
                      }
                    ]
                  },
                  "functionSelector": "8129fc1c",
                  "id": 1530,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 1524,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 1523,
                        "name": "initializer",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 344,
                        "src": "465:11:14"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "465:11:14"
                    }
                  ],
                  "name": "initialize",
                  "nameLocation": "443:10:14",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1522,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "453:2:14"
                  },
                  "returnParameters": {
                    "id": 1525,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "477:0:14"
                  },
                  "scope": 1531,
                  "src": "434:73:14",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                }
              ],
              "scope": 1532,
              "src": "120:389:14"
            }
          ],
          "src": "33:477:14"
        },
        "id": 14
      }
    }
  }
}
