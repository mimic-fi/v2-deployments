{"id":"27ac1b8fd5c857c86264593b6f7bb455","_format":"hh-sol-build-info-1","solcVersion":"0.8.3","solcLongVersion":"0.8.3+commit.8d00100c","input":{"language":"Solidity","sources":{"@mimic-fi/v2-helpers/contracts/auth/IAuthorizer.sol":{"content":"// SPDX-License-Identifier: GPL-3.0-or-later\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n\n// You should have received a copy of the GNU General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\npragma solidity >=0.8.0;\n\n/**\n * @title IAuthorizer\n */\ninterface IAuthorizer {\n    /**\n     * @dev Emitted when an account is authorized to call a function\n     */\n    event Authorized(address indexed who, bytes4 what);\n\n    /**\n     * @dev Emitted when an account is unauthorized to call a function\n     */\n    event Unauthorized(address indexed who, bytes4 what);\n\n    /**\n     * @dev Authorizes someone to call a function. Sender must be authorize to do so.\n     * @param who Address to be authorized\n     * @param what Function selector to be granted\n     */\n    function authorize(address who, bytes4 what) external;\n\n    /**\n     * @dev Unauthorizes someone to call a function. Sender must be authorize to do so.\n     * @param who Address to be unauthorized\n     * @param what Function selector to be revoked\n     */\n    function unauthorize(address who, bytes4 what) external;\n\n    /**\n     * @dev Tells whether someone is allowed to call a function or not. It returns true if it's allowed to anyone.\n     * @param who Address asking permission for\n     * @param what Function selector asking permission for\n     */\n    function isAuthorized(address who, bytes4 what) external view returns (bool);\n}\n"},"@mimic-fi/v2-helpers/contracts/math/UncheckedMath.sol":{"content":"// SPDX-License-Identifier: GPL-3.0-or-later\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n\n// You should have received a copy of the GNU General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\npragma solidity ^0.8.0;\n\n/**\n * @title UncheckedMath\n * @dev Math library to perform unchecked operations\n */\nlibrary UncheckedMath {\n    /**\n     * @dev Unsafely adds two unsigned integers\n     */\n    function uncheckedAdd(uint256 a, uint256 b) internal pure returns (uint256) {\n        unchecked {\n            return a + b;\n        }\n    }\n\n    /**\n     * @dev Unsafely subtracts two unsigned integers\n     */\n    function uncheckedSub(uint256 a, uint256 b) internal pure returns (uint256) {\n        unchecked {\n            return a - b;\n        }\n    }\n\n    /**\n     * @dev Unsafely multiplies two unsigned integers\n     */\n    function uncheckedMul(uint256 a, uint256 b) internal pure returns (uint256) {\n        unchecked {\n            return a * b;\n        }\n    }\n\n    /**\n     * @dev Unsafely multiplies two signed integers\n     */\n    function uncheckedMul(int256 a, int256 b) internal pure returns (int256) {\n        unchecked {\n            return a * b;\n        }\n    }\n\n    /**\n     * @dev Unsafely divides two unsigned integers\n     */\n    function uncheckedDiv(uint256 a, uint256 b) internal pure returns (uint256) {\n        unchecked {\n            return a / b;\n        }\n    }\n}\n"},"@mimic-fi/v2-helpers/contracts/utils/Arrays.sol":{"content":"// SPDX-License-Identifier: GPL-3.0-or-later\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n\n// You should have received a copy of the GNU General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\npragma solidity ^0.8.0;\n\nimport '../math/UncheckedMath.sol';\n\n/**\n * @title Arrays\n * @dev Helper methods to operate arrays\n */\nlibrary Arrays {\n    using UncheckedMath for uint256;\n\n    /**\n     * @dev Tells if an array of addresses includes the given ones\n     */\n    function includes(address[] memory arr, address a, address b) internal pure returns (bool) {\n        bool containsA;\n        bool containsB;\n        for (uint256 i = 0; i < arr.length; i = i.uncheckedAdd(1)) {\n            if (arr[i] == a) containsA = true;\n            if (arr[i] == b) containsB = true;\n        }\n        return containsA && containsB;\n    }\n\n    /**\n     * @dev Builds an array of addresses based on the given ones\n     */\n    function from(address a, address b) internal pure returns (address[] memory result) {\n        result = new address[](2);\n        result[0] = a;\n        result[1] = b;\n    }\n\n    /**\n     * @dev Builds an array of addresses based on the given ones\n     */\n    function from(address a, address[] memory b, address c) internal pure returns (address[] memory result) {\n        // No need for checked math since we are simply adding one to a memory array's length\n        result = new address[](b.length.uncheckedAdd(2));\n        result[0] = a;\n\n        // No need for checked math since we are using it to compute indexes manually, always within boundaries\n        for (uint256 i = 0; i < b.length; i = i.uncheckedAdd(1)) result[i.uncheckedAdd(1)] = b[i];\n        result[b.length.uncheckedAdd(1)] = c;\n    }\n\n    /**\n     * @dev Builds an array of addresses based on the given ones\n     */\n    function from(address a, address[] memory b, address[] memory c) internal pure returns (address[] memory result) {\n        // No need for checked math since we are simply adding two memory array's length\n        result = new address[](b.length.uncheckedAdd(c.length).uncheckedAdd(1));\n        result[0] = a;\n\n        // No need for checked math since we are using it to compute indexes manually, always within boundaries\n        for (uint256 i = 0; i < b.length; i = i.uncheckedAdd(1)) {\n            result[i.uncheckedAdd(1)] = b[i];\n        }\n\n        // No need for checked math since we are using it to compute indexes manually, always within boundaries\n        for (uint256 i = 0; i < c.length; i = i.uncheckedAdd(1)) {\n            result[b.length.uncheckedAdd(1).uncheckedAdd(i)] = c[i];\n        }\n    }\n}\n"},"@mimic-fi/v2-helpers/contracts/utils/Bytes.sol":{"content":"// SPDX-License-Identifier: GPL-3.0-or-later\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n\n// You should have received a copy of the GNU General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\npragma solidity ^0.8.0;\n\n/**\n * @title Bytes\n * @dev Helper methods to operate bytes-related types\n */\nlibrary Bytes {\n    /**\n     * @dev Concatenates an address to a bytes array\n     */\n    function concat(bytes memory self, address value) internal pure returns (bytes memory) {\n        return abi.encodePacked(self, value);\n    }\n\n    /**\n     * @dev Concatenates an uint24 to a bytes array\n     */\n    function concat(bytes memory self, uint24 value) internal pure returns (bytes memory) {\n        return abi.encodePacked(self, value);\n    }\n}\n"},"@mimic-fi/v2-registry/contracts/implementations/BaseImplementation.sol":{"content":"// SPDX-License-Identifier: GPL-3.0-or-later\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n\n// You should have received a copy of the GNU General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\npragma solidity ^0.8.0;\n\nimport '@openzeppelin/contracts/proxy/utils/Initializable.sol';\n\nimport './IImplementation.sol';\nimport '../registry/IRegistry.sol';\n\n/**\n * @title BaseImplementation\n * @dev This implementation contract comes with an immutable reference to an implementations registry where it should\n * be registered as well (checked during initialization). It allows requesting new instances of other registered\n * implementations to as another safety check to make sure valid instances are referenced in case it's needed.\n */\nabstract contract BaseImplementation is IImplementation {\n    // Immutable implementations registry reference\n    address public immutable override registry;\n\n    /**\n     * @dev Creates a new BaseImplementation\n     * @param _registry Address of the Mimic Registry where dependencies will be validated against\n     */\n    constructor(address _registry) {\n        registry = _registry;\n    }\n\n    /**\n     * @dev Internal function to validate a new dependency that must be registered as stateless.\n     * It checks the new dependency is registered, not deprecated, and stateless.\n     * @param dependency New stateless dependency to be set\n     */\n    function _validateStatelessDependency(address dependency) internal view {\n        require(_validateDependency(dependency), 'DEPENDENCY_NOT_STATELESS');\n    }\n\n    /**\n     * @dev Internal function to validate a new dependency that cannot be registered as stateless.\n     * It checks the new dependency is registered, not deprecated, and not stateful.\n     * @param dependency New stateful dependency to be set\n     */\n    function _validateStatefulDependency(address dependency) internal view {\n        require(!_validateDependency(dependency), 'DEPENDENCY_NOT_STATEFUL');\n    }\n\n    /**\n     * @dev Internal function to validate a new dependency. It checks the dependency is registered and not deprecated.\n     * @param dependency New dependency to be set\n     * @return Whether the dependency is stateless or not\n     */\n    function _validateDependency(address dependency) private view returns (bool) {\n        (bool stateless, bool deprecated, bytes32 namespace) = IRegistry(registry).implementationData(dependency);\n        require(namespace != bytes32(0), 'DEPENDENCY_NOT_REGISTERED');\n        require(!deprecated, 'DEPENDENCY_DEPRECATED');\n        return stateless;\n    }\n}\n"},"@mimic-fi/v2-registry/contracts/implementations/IImplementation.sol":{"content":"// SPDX-License-Identifier: GPL-3.0-or-later\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n\n// You should have received a copy of the GNU General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\npragma solidity >=0.8.0;\n\n// solhint-disable func-name-mixedcase\n\n/**\n * @title IImplementation\n * @dev Implementation interface that must be followed for implementations to be registered in the Mimic Registry\n */\ninterface IImplementation {\n    /**\n     * @dev Tells the namespace under which the implementation is registered in the Mimic Registry\n     */\n    function NAMESPACE() external view returns (bytes32);\n\n    /**\n     * @dev Tells the address of the Mimic Registry\n     */\n    function registry() external view returns (address);\n}\n"},"@mimic-fi/v2-registry/contracts/registry/IRegistry.sol":{"content":"// SPDX-License-Identifier: GPL-3.0-or-later\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n\n// You should have received a copy of the GNU General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\npragma solidity >=0.8.0;\n\nimport '@mimic-fi/v2-helpers/contracts/auth/IAuthorizer.sol';\n\n/**\n * @title IRegistry\n * @dev Registry interface, it must follow the IAuthorizer interface.\n */\ninterface IRegistry is IAuthorizer {\n    /**\n     * @dev Emitted every time a new implementation is registered\n     */\n    event Registered(bytes32 indexed namespace, address indexed implementation, bool stateless);\n\n    /**\n     * @dev Emitted every time an implementation is deprecated\n     */\n    event Deprecated(bytes32 indexed namespace, address indexed implementation);\n\n    /**\n     * @dev Tells the data of an implementation:\n     * @param implementation Address of the implementation to request it's data\n     */\n    function implementationData(address implementation)\n        external\n        view\n        returns (bool stateless, bool deprecated, bytes32 namespace);\n\n    /**\n     * @dev Tells if a specific implementation is registered under a certain namespace and it's not deprecated\n     * @param namespace Namespace asking for\n     * @param implementation Address of the implementation to be checked\n     */\n    function isActive(bytes32 namespace, address implementation) external view returns (bool);\n\n    /**\n     * @dev Registers a new implementation for a given namespace\n     * @param namespace Namespace to be used for the implementation\n     * @param implementation Address of the implementation to be registered\n     * @param stateless Whether the implementation is stateless or not\n     */\n    function register(bytes32 namespace, address implementation, bool stateless) external;\n\n    /**\n     * @dev Deprecates a registered implementation\n     * @param implementation Address of the implementation to be deprecated\n     */\n    function deprecate(address implementation) external;\n}\n"},"@openzeppelin/contracts/proxy/utils/Initializable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.7.0) (proxy/utils/Initializable.sol)\n\npragma solidity ^0.8.2;\n\nimport \"../../utils/Address.sol\";\n\n/**\n * @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\n * behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\n * external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\n * function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\n *\n * The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\n * reused. This mechanism prevents re-execution of each \"step\" but allows the creation of new initialization steps in\n * case an upgrade adds a module that needs to be initialized.\n *\n * For example:\n *\n * [.hljs-theme-light.nopadding]\n * ```\n * contract MyToken is ERC20Upgradeable {\n *     function initialize() initializer public {\n *         __ERC20_init(\"MyToken\", \"MTK\");\n *     }\n * }\n * contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\n *     function initializeV2() reinitializer(2) public {\n *         __ERC20Permit_init(\"MyToken\");\n *     }\n * }\n * ```\n *\n * TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\n * possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\n *\n * CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\n * that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\n *\n * [CAUTION]\n * ====\n * Avoid leaving a contract uninitialized.\n *\n * An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\n * contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\n * the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\n *\n * [.hljs-theme-light.nopadding]\n * ```\n * /// @custom:oz-upgrades-unsafe-allow constructor\n * constructor() {\n *     _disableInitializers();\n * }\n * ```\n * ====\n */\nabstract contract Initializable {\n    /**\n     * @dev Indicates that the contract has been initialized.\n     * @custom:oz-retyped-from bool\n     */\n    uint8 private _initialized;\n\n    /**\n     * @dev Indicates that the contract is in the process of being initialized.\n     */\n    bool private _initializing;\n\n    /**\n     * @dev Triggered when the contract has been initialized or reinitialized.\n     */\n    event Initialized(uint8 version);\n\n    /**\n     * @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\n     * `onlyInitializing` functions can be used to initialize parent contracts. Equivalent to `reinitializer(1)`.\n     */\n    modifier initializer() {\n        bool isTopLevelCall = !_initializing;\n        require(\n            (isTopLevelCall && _initialized < 1) || (!Address.isContract(address(this)) && _initialized == 1),\n            \"Initializable: contract is already initialized\"\n        );\n        _initialized = 1;\n        if (isTopLevelCall) {\n            _initializing = true;\n        }\n        _;\n        if (isTopLevelCall) {\n            _initializing = false;\n            emit Initialized(1);\n        }\n    }\n\n    /**\n     * @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\n     * contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\n     * used to initialize parent contracts.\n     *\n     * `initializer` is equivalent to `reinitializer(1)`, so a reinitializer may be used after the original\n     * initialization step. This is essential to configure modules that are added through upgrades and that require\n     * initialization.\n     *\n     * Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\n     * a contract, executing them in the right order is up to the developer or operator.\n     */\n    modifier reinitializer(uint8 version) {\n        require(!_initializing && _initialized < version, \"Initializable: contract is already initialized\");\n        _initialized = version;\n        _initializing = true;\n        _;\n        _initializing = false;\n        emit Initialized(version);\n    }\n\n    /**\n     * @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\n     * {initializer} and {reinitializer} modifiers, directly or indirectly.\n     */\n    modifier onlyInitializing() {\n        require(_initializing, \"Initializable: contract is not initializing\");\n        _;\n    }\n\n    /**\n     * @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\n     * Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\n     * to any version. It is recommended to use this to lock implementation contracts that are designed to be called\n     * through proxies.\n     */\n    function _disableInitializers() internal virtual {\n        require(!_initializing, \"Initializable: contract is initializing\");\n        if (_initialized < type(uint8).max) {\n            _initialized = type(uint8).max;\n            emit Initialized(type(uint8).max);\n        }\n    }\n}\n"},"@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/extensions/draft-IERC20Permit.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\n * https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\n *\n * Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\n * presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't\n * need to send a transaction, and thus is not required to hold Ether at all.\n */\ninterface IERC20Permit {\n    /**\n     * @dev Sets `value` as the allowance of `spender` over ``owner``'s tokens,\n     * given ``owner``'s signed approval.\n     *\n     * IMPORTANT: The same issues {IERC20-approve} has related to transaction\n     * ordering also apply here.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     * - `deadline` must be a timestamp in the future.\n     * - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\n     * over the EIP712-formatted function arguments.\n     * - the signature must use ``owner``'s current nonce (see {nonces}).\n     *\n     * For more information on the signature format, see the\n     * https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\n     * section].\n     */\n    function permit(\n        address owner,\n        address spender,\n        uint256 value,\n        uint256 deadline,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) external;\n\n    /**\n     * @dev Returns the current nonce for `owner`. This value must be\n     * included whenever a signature is generated for {permit}.\n     *\n     * Every successful call to {permit} increases ``owner``'s nonce by one. This\n     * prevents a signature from being used multiple times.\n     */\n    function nonces(address owner) external view returns (uint256);\n\n    /**\n     * @dev Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\n     */\n    // solhint-disable-next-line func-name-mixedcase\n    function DOMAIN_SEPARATOR() external view returns (bytes32);\n}\n"},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/extensions/IERC20Metadata.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../IERC20.sol\";\n\n/**\n * @dev Interface for the optional metadata functions from the ERC20 standard.\n *\n * _Available since v4.1._\n */\ninterface IERC20Metadata is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n"},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the amount of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the amount of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves `amount` tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Moves `amount` tokens from `from` to `to` using the\n     * allowance mechanism. `amount` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(\n        address from,\n        address to,\n        uint256 amount\n    ) external returns (bool);\n}\n"},"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.7.0) (token/ERC20/utils/SafeERC20.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../IERC20.sol\";\nimport \"../extensions/draft-IERC20Permit.sol\";\nimport \"../../../utils/Address.sol\";\n\n/**\n * @title SafeERC20\n * @dev Wrappers around ERC20 operations that throw on failure (when the token\n * contract returns false). Tokens that return no value (and instead revert or\n * throw on failure) are also supported, non-reverting calls are assumed to be\n * successful.\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\n */\nlibrary SafeERC20 {\n    using Address for address;\n\n    function safeTransfer(\n        IERC20 token,\n        address to,\n        uint256 value\n    ) internal {\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value));\n    }\n\n    function safeTransferFrom(\n        IERC20 token,\n        address from,\n        address to,\n        uint256 value\n    ) internal {\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value));\n    }\n\n    /**\n     * @dev Deprecated. This function has issues similar to the ones found in\n     * {IERC20-approve}, and its usage is discouraged.\n     *\n     * Whenever possible, use {safeIncreaseAllowance} and\n     * {safeDecreaseAllowance} instead.\n     */\n    function safeApprove(\n        IERC20 token,\n        address spender,\n        uint256 value\n    ) internal {\n        // safeApprove should only be called when setting an initial allowance,\n        // or when resetting it to zero. To increase and decrease it, use\n        // 'safeIncreaseAllowance' and 'safeDecreaseAllowance'\n        require(\n            (value == 0) || (token.allowance(address(this), spender) == 0),\n            \"SafeERC20: approve from non-zero to non-zero allowance\"\n        );\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, value));\n    }\n\n    function safeIncreaseAllowance(\n        IERC20 token,\n        address spender,\n        uint256 value\n    ) internal {\n        uint256 newAllowance = token.allowance(address(this), spender) + value;\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\n    }\n\n    function safeDecreaseAllowance(\n        IERC20 token,\n        address spender,\n        uint256 value\n    ) internal {\n        unchecked {\n            uint256 oldAllowance = token.allowance(address(this), spender);\n            require(oldAllowance >= value, \"SafeERC20: decreased allowance below zero\");\n            uint256 newAllowance = oldAllowance - value;\n            _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\n        }\n    }\n\n    function safePermit(\n        IERC20Permit token,\n        address owner,\n        address spender,\n        uint256 value,\n        uint256 deadline,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) internal {\n        uint256 nonceBefore = token.nonces(owner);\n        token.permit(owner, spender, value, deadline, v, r, s);\n        uint256 nonceAfter = token.nonces(owner);\n        require(nonceAfter == nonceBefore + 1, \"SafeERC20: permit did not succeed\");\n    }\n\n    /**\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\n     * @param token The token targeted by the call.\n     * @param data The call data (encoded using abi.encode or one of its variants).\n     */\n    function _callOptionalReturn(IERC20 token, bytes memory data) private {\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\n        // we're implementing it ourselves. We use {Address.functionCall} to perform this call, which verifies that\n        // the target address contains contract code and also asserts for success in the low-level call.\n\n        bytes memory returndata = address(token).functionCall(data, \"SafeERC20: low-level call failed\");\n        if (returndata.length > 0) {\n            // Return data is optional\n            require(abi.decode(returndata, (bool)), \"SafeERC20: ERC20 operation did not succeed\");\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/Address.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.7.0) (utils/Address.sol)\n\npragma solidity ^0.8.1;\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary Address {\n    /**\n     * @dev Returns true if `account` is a contract.\n     *\n     * [IMPORTANT]\n     * ====\n     * It is unsafe to assume that an address for which this function returns\n     * false is an externally-owned account (EOA) and not a contract.\n     *\n     * Among others, `isContract` will return false for the following\n     * types of addresses:\n     *\n     *  - an externally-owned account\n     *  - a contract in construction\n     *  - an address where a contract will be created\n     *  - an address where a contract lived, but was destroyed\n     * ====\n     *\n     * [IMPORTANT]\n     * ====\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\n     *\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n     * constructor.\n     * ====\n     */\n    function isContract(address account) internal view returns (bool) {\n        // This method relies on extcodesize/address.code.length, which returns 0\n        // for contracts in construction, since the code is only stored at the end\n        // of the constructor execution.\n\n        return account.code.length > 0;\n    }\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        require(address(this).balance >= amount, \"Address: insufficient balance\");\n\n        (bool success, ) = recipient.call{value: amount}(\"\");\n        require(success, \"Address: unable to send value, recipient may have reverted\");\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain `call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason, it is bubbled up by this\n     * function (like regular Solidity function calls).\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionCall(target, data, \"Address: low-level call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n     * `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, value, \"Address: low-level call with value failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        require(address(this).balance >= value, \"Address: insufficient balance for call\");\n        require(isContract(target), \"Address: call to non-contract\");\n\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\n        return verifyCallResult(success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\n        return functionStaticCall(target, data, \"Address: low-level static call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal view returns (bytes memory) {\n        require(isContract(target), \"Address: static call to non-contract\");\n\n        (bool success, bytes memory returndata) = target.staticcall(data);\n        return verifyCallResult(success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionDelegateCall(target, data, \"Address: low-level delegate call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        require(isContract(target), \"Address: delegate call to non-contract\");\n\n        (bool success, bytes memory returndata) = target.delegatecall(data);\n        return verifyCallResult(success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Tool to verifies that a low level call was successful, and revert if it wasn't, either by bubbling the\n     * revert reason using the provided one.\n     *\n     * _Available since v4.3._\n     */\n    function verifyCallResult(\n        bool success,\n        bytes memory returndata,\n        string memory errorMessage\n    ) internal pure returns (bytes memory) {\n        if (success) {\n            return returndata;\n        } else {\n            // Look for revert reason and bubble it up if present\n            if (returndata.length > 0) {\n                // The easiest way to bubble the revert reason is using memory via assembly\n                /// @solidity memory-safe-assembly\n                assembly {\n                    let returndata_size := mload(returndata)\n                    revert(add(32, returndata), returndata_size)\n                }\n            } else {\n                revert(errorMessage);\n            }\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/math/SafeCast.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.7.0) (utils/math/SafeCast.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Wrappers over Solidity's uintXX/intXX casting operators with added overflow\n * checks.\n *\n * Downcasting from uint256/int256 in Solidity does not revert on overflow. This can\n * easily result in undesired exploitation or bugs, since developers usually\n * assume that overflows raise errors. `SafeCast` restores this intuition by\n * reverting the transaction when such an operation overflows.\n *\n * Using this library instead of the unchecked operations eliminates an entire\n * class of bugs, so it's recommended to use it always.\n *\n * Can be combined with {SafeMath} and {SignedSafeMath} to extend it to smaller types, by performing\n * all math on `uint256` and `int256` and then downcasting.\n */\nlibrary SafeCast {\n    /**\n     * @dev Returns the downcasted uint248 from uint256, reverting on\n     * overflow (when the input is greater than largest uint248).\n     *\n     * Counterpart to Solidity's `uint248` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 248 bits\n     *\n     * _Available since v4.7._\n     */\n    function toUint248(uint256 value) internal pure returns (uint248) {\n        require(value <= type(uint248).max, \"SafeCast: value doesn't fit in 248 bits\");\n        return uint248(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint240 from uint256, reverting on\n     * overflow (when the input is greater than largest uint240).\n     *\n     * Counterpart to Solidity's `uint240` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 240 bits\n     *\n     * _Available since v4.7._\n     */\n    function toUint240(uint256 value) internal pure returns (uint240) {\n        require(value <= type(uint240).max, \"SafeCast: value doesn't fit in 240 bits\");\n        return uint240(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint232 from uint256, reverting on\n     * overflow (when the input is greater than largest uint232).\n     *\n     * Counterpart to Solidity's `uint232` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 232 bits\n     *\n     * _Available since v4.7._\n     */\n    function toUint232(uint256 value) internal pure returns (uint232) {\n        require(value <= type(uint232).max, \"SafeCast: value doesn't fit in 232 bits\");\n        return uint232(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint224 from uint256, reverting on\n     * overflow (when the input is greater than largest uint224).\n     *\n     * Counterpart to Solidity's `uint224` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 224 bits\n     *\n     * _Available since v4.2._\n     */\n    function toUint224(uint256 value) internal pure returns (uint224) {\n        require(value <= type(uint224).max, \"SafeCast: value doesn't fit in 224 bits\");\n        return uint224(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint216 from uint256, reverting on\n     * overflow (when the input is greater than largest uint216).\n     *\n     * Counterpart to Solidity's `uint216` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 216 bits\n     *\n     * _Available since v4.7._\n     */\n    function toUint216(uint256 value) internal pure returns (uint216) {\n        require(value <= type(uint216).max, \"SafeCast: value doesn't fit in 216 bits\");\n        return uint216(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint208 from uint256, reverting on\n     * overflow (when the input is greater than largest uint208).\n     *\n     * Counterpart to Solidity's `uint208` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 208 bits\n     *\n     * _Available since v4.7._\n     */\n    function toUint208(uint256 value) internal pure returns (uint208) {\n        require(value <= type(uint208).max, \"SafeCast: value doesn't fit in 208 bits\");\n        return uint208(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint200 from uint256, reverting on\n     * overflow (when the input is greater than largest uint200).\n     *\n     * Counterpart to Solidity's `uint200` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 200 bits\n     *\n     * _Available since v4.7._\n     */\n    function toUint200(uint256 value) internal pure returns (uint200) {\n        require(value <= type(uint200).max, \"SafeCast: value doesn't fit in 200 bits\");\n        return uint200(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint192 from uint256, reverting on\n     * overflow (when the input is greater than largest uint192).\n     *\n     * Counterpart to Solidity's `uint192` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 192 bits\n     *\n     * _Available since v4.7._\n     */\n    function toUint192(uint256 value) internal pure returns (uint192) {\n        require(value <= type(uint192).max, \"SafeCast: value doesn't fit in 192 bits\");\n        return uint192(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint184 from uint256, reverting on\n     * overflow (when the input is greater than largest uint184).\n     *\n     * Counterpart to Solidity's `uint184` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 184 bits\n     *\n     * _Available since v4.7._\n     */\n    function toUint184(uint256 value) internal pure returns (uint184) {\n        require(value <= type(uint184).max, \"SafeCast: value doesn't fit in 184 bits\");\n        return uint184(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint176 from uint256, reverting on\n     * overflow (when the input is greater than largest uint176).\n     *\n     * Counterpart to Solidity's `uint176` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 176 bits\n     *\n     * _Available since v4.7._\n     */\n    function toUint176(uint256 value) internal pure returns (uint176) {\n        require(value <= type(uint176).max, \"SafeCast: value doesn't fit in 176 bits\");\n        return uint176(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint168 from uint256, reverting on\n     * overflow (when the input is greater than largest uint168).\n     *\n     * Counterpart to Solidity's `uint168` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 168 bits\n     *\n     * _Available since v4.7._\n     */\n    function toUint168(uint256 value) internal pure returns (uint168) {\n        require(value <= type(uint168).max, \"SafeCast: value doesn't fit in 168 bits\");\n        return uint168(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint160 from uint256, reverting on\n     * overflow (when the input is greater than largest uint160).\n     *\n     * Counterpart to Solidity's `uint160` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 160 bits\n     *\n     * _Available since v4.7._\n     */\n    function toUint160(uint256 value) internal pure returns (uint160) {\n        require(value <= type(uint160).max, \"SafeCast: value doesn't fit in 160 bits\");\n        return uint160(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint152 from uint256, reverting on\n     * overflow (when the input is greater than largest uint152).\n     *\n     * Counterpart to Solidity's `uint152` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 152 bits\n     *\n     * _Available since v4.7._\n     */\n    function toUint152(uint256 value) internal pure returns (uint152) {\n        require(value <= type(uint152).max, \"SafeCast: value doesn't fit in 152 bits\");\n        return uint152(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint144 from uint256, reverting on\n     * overflow (when the input is greater than largest uint144).\n     *\n     * Counterpart to Solidity's `uint144` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 144 bits\n     *\n     * _Available since v4.7._\n     */\n    function toUint144(uint256 value) internal pure returns (uint144) {\n        require(value <= type(uint144).max, \"SafeCast: value doesn't fit in 144 bits\");\n        return uint144(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint136 from uint256, reverting on\n     * overflow (when the input is greater than largest uint136).\n     *\n     * Counterpart to Solidity's `uint136` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 136 bits\n     *\n     * _Available since v4.7._\n     */\n    function toUint136(uint256 value) internal pure returns (uint136) {\n        require(value <= type(uint136).max, \"SafeCast: value doesn't fit in 136 bits\");\n        return uint136(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint128 from uint256, reverting on\n     * overflow (when the input is greater than largest uint128).\n     *\n     * Counterpart to Solidity's `uint128` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 128 bits\n     *\n     * _Available since v2.5._\n     */\n    function toUint128(uint256 value) internal pure returns (uint128) {\n        require(value <= type(uint128).max, \"SafeCast: value doesn't fit in 128 bits\");\n        return uint128(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint120 from uint256, reverting on\n     * overflow (when the input is greater than largest uint120).\n     *\n     * Counterpart to Solidity's `uint120` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 120 bits\n     *\n     * _Available since v4.7._\n     */\n    function toUint120(uint256 value) internal pure returns (uint120) {\n        require(value <= type(uint120).max, \"SafeCast: value doesn't fit in 120 bits\");\n        return uint120(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint112 from uint256, reverting on\n     * overflow (when the input is greater than largest uint112).\n     *\n     * Counterpart to Solidity's `uint112` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 112 bits\n     *\n     * _Available since v4.7._\n     */\n    function toUint112(uint256 value) internal pure returns (uint112) {\n        require(value <= type(uint112).max, \"SafeCast: value doesn't fit in 112 bits\");\n        return uint112(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint104 from uint256, reverting on\n     * overflow (when the input is greater than largest uint104).\n     *\n     * Counterpart to Solidity's `uint104` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 104 bits\n     *\n     * _Available since v4.7._\n     */\n    function toUint104(uint256 value) internal pure returns (uint104) {\n        require(value <= type(uint104).max, \"SafeCast: value doesn't fit in 104 bits\");\n        return uint104(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint96 from uint256, reverting on\n     * overflow (when the input is greater than largest uint96).\n     *\n     * Counterpart to Solidity's `uint96` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 96 bits\n     *\n     * _Available since v4.2._\n     */\n    function toUint96(uint256 value) internal pure returns (uint96) {\n        require(value <= type(uint96).max, \"SafeCast: value doesn't fit in 96 bits\");\n        return uint96(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint88 from uint256, reverting on\n     * overflow (when the input is greater than largest uint88).\n     *\n     * Counterpart to Solidity's `uint88` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 88 bits\n     *\n     * _Available since v4.7._\n     */\n    function toUint88(uint256 value) internal pure returns (uint88) {\n        require(value <= type(uint88).max, \"SafeCast: value doesn't fit in 88 bits\");\n        return uint88(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint80 from uint256, reverting on\n     * overflow (when the input is greater than largest uint80).\n     *\n     * Counterpart to Solidity's `uint80` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 80 bits\n     *\n     * _Available since v4.7._\n     */\n    function toUint80(uint256 value) internal pure returns (uint80) {\n        require(value <= type(uint80).max, \"SafeCast: value doesn't fit in 80 bits\");\n        return uint80(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint72 from uint256, reverting on\n     * overflow (when the input is greater than largest uint72).\n     *\n     * Counterpart to Solidity's `uint72` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 72 bits\n     *\n     * _Available since v4.7._\n     */\n    function toUint72(uint256 value) internal pure returns (uint72) {\n        require(value <= type(uint72).max, \"SafeCast: value doesn't fit in 72 bits\");\n        return uint72(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint64 from uint256, reverting on\n     * overflow (when the input is greater than largest uint64).\n     *\n     * Counterpart to Solidity's `uint64` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 64 bits\n     *\n     * _Available since v2.5._\n     */\n    function toUint64(uint256 value) internal pure returns (uint64) {\n        require(value <= type(uint64).max, \"SafeCast: value doesn't fit in 64 bits\");\n        return uint64(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint56 from uint256, reverting on\n     * overflow (when the input is greater than largest uint56).\n     *\n     * Counterpart to Solidity's `uint56` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 56 bits\n     *\n     * _Available since v4.7._\n     */\n    function toUint56(uint256 value) internal pure returns (uint56) {\n        require(value <= type(uint56).max, \"SafeCast: value doesn't fit in 56 bits\");\n        return uint56(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint48 from uint256, reverting on\n     * overflow (when the input is greater than largest uint48).\n     *\n     * Counterpart to Solidity's `uint48` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 48 bits\n     *\n     * _Available since v4.7._\n     */\n    function toUint48(uint256 value) internal pure returns (uint48) {\n        require(value <= type(uint48).max, \"SafeCast: value doesn't fit in 48 bits\");\n        return uint48(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint40 from uint256, reverting on\n     * overflow (when the input is greater than largest uint40).\n     *\n     * Counterpart to Solidity's `uint40` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 40 bits\n     *\n     * _Available since v4.7._\n     */\n    function toUint40(uint256 value) internal pure returns (uint40) {\n        require(value <= type(uint40).max, \"SafeCast: value doesn't fit in 40 bits\");\n        return uint40(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint32 from uint256, reverting on\n     * overflow (when the input is greater than largest uint32).\n     *\n     * Counterpart to Solidity's `uint32` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 32 bits\n     *\n     * _Available since v2.5._\n     */\n    function toUint32(uint256 value) internal pure returns (uint32) {\n        require(value <= type(uint32).max, \"SafeCast: value doesn't fit in 32 bits\");\n        return uint32(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint24 from uint256, reverting on\n     * overflow (when the input is greater than largest uint24).\n     *\n     * Counterpart to Solidity's `uint24` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 24 bits\n     *\n     * _Available since v4.7._\n     */\n    function toUint24(uint256 value) internal pure returns (uint24) {\n        require(value <= type(uint24).max, \"SafeCast: value doesn't fit in 24 bits\");\n        return uint24(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint16 from uint256, reverting on\n     * overflow (when the input is greater than largest uint16).\n     *\n     * Counterpart to Solidity's `uint16` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 16 bits\n     *\n     * _Available since v2.5._\n     */\n    function toUint16(uint256 value) internal pure returns (uint16) {\n        require(value <= type(uint16).max, \"SafeCast: value doesn't fit in 16 bits\");\n        return uint16(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint8 from uint256, reverting on\n     * overflow (when the input is greater than largest uint8).\n     *\n     * Counterpart to Solidity's `uint8` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 8 bits\n     *\n     * _Available since v2.5._\n     */\n    function toUint8(uint256 value) internal pure returns (uint8) {\n        require(value <= type(uint8).max, \"SafeCast: value doesn't fit in 8 bits\");\n        return uint8(value);\n    }\n\n    /**\n     * @dev Converts a signed int256 into an unsigned uint256.\n     *\n     * Requirements:\n     *\n     * - input must be greater than or equal to 0.\n     *\n     * _Available since v3.0._\n     */\n    function toUint256(int256 value) internal pure returns (uint256) {\n        require(value >= 0, \"SafeCast: value must be positive\");\n        return uint256(value);\n    }\n\n    /**\n     * @dev Returns the downcasted int248 from int256, reverting on\n     * overflow (when the input is less than smallest int248 or\n     * greater than largest int248).\n     *\n     * Counterpart to Solidity's `int248` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 248 bits\n     *\n     * _Available since v4.7._\n     */\n    function toInt248(int256 value) internal pure returns (int248) {\n        require(value >= type(int248).min && value <= type(int248).max, \"SafeCast: value doesn't fit in 248 bits\");\n        return int248(value);\n    }\n\n    /**\n     * @dev Returns the downcasted int240 from int256, reverting on\n     * overflow (when the input is less than smallest int240 or\n     * greater than largest int240).\n     *\n     * Counterpart to Solidity's `int240` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 240 bits\n     *\n     * _Available since v4.7._\n     */\n    function toInt240(int256 value) internal pure returns (int240) {\n        require(value >= type(int240).min && value <= type(int240).max, \"SafeCast: value doesn't fit in 240 bits\");\n        return int240(value);\n    }\n\n    /**\n     * @dev Returns the downcasted int232 from int256, reverting on\n     * overflow (when the input is less than smallest int232 or\n     * greater than largest int232).\n     *\n     * Counterpart to Solidity's `int232` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 232 bits\n     *\n     * _Available since v4.7._\n     */\n    function toInt232(int256 value) internal pure returns (int232) {\n        require(value >= type(int232).min && value <= type(int232).max, \"SafeCast: value doesn't fit in 232 bits\");\n        return int232(value);\n    }\n\n    /**\n     * @dev Returns the downcasted int224 from int256, reverting on\n     * overflow (when the input is less than smallest int224 or\n     * greater than largest int224).\n     *\n     * Counterpart to Solidity's `int224` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 224 bits\n     *\n     * _Available since v4.7._\n     */\n    function toInt224(int256 value) internal pure returns (int224) {\n        require(value >= type(int224).min && value <= type(int224).max, \"SafeCast: value doesn't fit in 224 bits\");\n        return int224(value);\n    }\n\n    /**\n     * @dev Returns the downcasted int216 from int256, reverting on\n     * overflow (when the input is less than smallest int216 or\n     * greater than largest int216).\n     *\n     * Counterpart to Solidity's `int216` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 216 bits\n     *\n     * _Available since v4.7._\n     */\n    function toInt216(int256 value) internal pure returns (int216) {\n        require(value >= type(int216).min && value <= type(int216).max, \"SafeCast: value doesn't fit in 216 bits\");\n        return int216(value);\n    }\n\n    /**\n     * @dev Returns the downcasted int208 from int256, reverting on\n     * overflow (when the input is less than smallest int208 or\n     * greater than largest int208).\n     *\n     * Counterpart to Solidity's `int208` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 208 bits\n     *\n     * _Available since v4.7._\n     */\n    function toInt208(int256 value) internal pure returns (int208) {\n        require(value >= type(int208).min && value <= type(int208).max, \"SafeCast: value doesn't fit in 208 bits\");\n        return int208(value);\n    }\n\n    /**\n     * @dev Returns the downcasted int200 from int256, reverting on\n     * overflow (when the input is less than smallest int200 or\n     * greater than largest int200).\n     *\n     * Counterpart to Solidity's `int200` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 200 bits\n     *\n     * _Available since v4.7._\n     */\n    function toInt200(int256 value) internal pure returns (int200) {\n        require(value >= type(int200).min && value <= type(int200).max, \"SafeCast: value doesn't fit in 200 bits\");\n        return int200(value);\n    }\n\n    /**\n     * @dev Returns the downcasted int192 from int256, reverting on\n     * overflow (when the input is less than smallest int192 or\n     * greater than largest int192).\n     *\n     * Counterpart to Solidity's `int192` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 192 bits\n     *\n     * _Available since v4.7._\n     */\n    function toInt192(int256 value) internal pure returns (int192) {\n        require(value >= type(int192).min && value <= type(int192).max, \"SafeCast: value doesn't fit in 192 bits\");\n        return int192(value);\n    }\n\n    /**\n     * @dev Returns the downcasted int184 from int256, reverting on\n     * overflow (when the input is less than smallest int184 or\n     * greater than largest int184).\n     *\n     * Counterpart to Solidity's `int184` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 184 bits\n     *\n     * _Available since v4.7._\n     */\n    function toInt184(int256 value) internal pure returns (int184) {\n        require(value >= type(int184).min && value <= type(int184).max, \"SafeCast: value doesn't fit in 184 bits\");\n        return int184(value);\n    }\n\n    /**\n     * @dev Returns the downcasted int176 from int256, reverting on\n     * overflow (when the input is less than smallest int176 or\n     * greater than largest int176).\n     *\n     * Counterpart to Solidity's `int176` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 176 bits\n     *\n     * _Available since v4.7._\n     */\n    function toInt176(int256 value) internal pure returns (int176) {\n        require(value >= type(int176).min && value <= type(int176).max, \"SafeCast: value doesn't fit in 176 bits\");\n        return int176(value);\n    }\n\n    /**\n     * @dev Returns the downcasted int168 from int256, reverting on\n     * overflow (when the input is less than smallest int168 or\n     * greater than largest int168).\n     *\n     * Counterpart to Solidity's `int168` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 168 bits\n     *\n     * _Available since v4.7._\n     */\n    function toInt168(int256 value) internal pure returns (int168) {\n        require(value >= type(int168).min && value <= type(int168).max, \"SafeCast: value doesn't fit in 168 bits\");\n        return int168(value);\n    }\n\n    /**\n     * @dev Returns the downcasted int160 from int256, reverting on\n     * overflow (when the input is less than smallest int160 or\n     * greater than largest int160).\n     *\n     * Counterpart to Solidity's `int160` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 160 bits\n     *\n     * _Available since v4.7._\n     */\n    function toInt160(int256 value) internal pure returns (int160) {\n        require(value >= type(int160).min && value <= type(int160).max, \"SafeCast: value doesn't fit in 160 bits\");\n        return int160(value);\n    }\n\n    /**\n     * @dev Returns the downcasted int152 from int256, reverting on\n     * overflow (when the input is less than smallest int152 or\n     * greater than largest int152).\n     *\n     * Counterpart to Solidity's `int152` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 152 bits\n     *\n     * _Available since v4.7._\n     */\n    function toInt152(int256 value) internal pure returns (int152) {\n        require(value >= type(int152).min && value <= type(int152).max, \"SafeCast: value doesn't fit in 152 bits\");\n        return int152(value);\n    }\n\n    /**\n     * @dev Returns the downcasted int144 from int256, reverting on\n     * overflow (when the input is less than smallest int144 or\n     * greater than largest int144).\n     *\n     * Counterpart to Solidity's `int144` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 144 bits\n     *\n     * _Available since v4.7._\n     */\n    function toInt144(int256 value) internal pure returns (int144) {\n        require(value >= type(int144).min && value <= type(int144).max, \"SafeCast: value doesn't fit in 144 bits\");\n        return int144(value);\n    }\n\n    /**\n     * @dev Returns the downcasted int136 from int256, reverting on\n     * overflow (when the input is less than smallest int136 or\n     * greater than largest int136).\n     *\n     * Counterpart to Solidity's `int136` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 136 bits\n     *\n     * _Available since v4.7._\n     */\n    function toInt136(int256 value) internal pure returns (int136) {\n        require(value >= type(int136).min && value <= type(int136).max, \"SafeCast: value doesn't fit in 136 bits\");\n        return int136(value);\n    }\n\n    /**\n     * @dev Returns the downcasted int128 from int256, reverting on\n     * overflow (when the input is less than smallest int128 or\n     * greater than largest int128).\n     *\n     * Counterpart to Solidity's `int128` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 128 bits\n     *\n     * _Available since v3.1._\n     */\n    function toInt128(int256 value) internal pure returns (int128) {\n        require(value >= type(int128).min && value <= type(int128).max, \"SafeCast: value doesn't fit in 128 bits\");\n        return int128(value);\n    }\n\n    /**\n     * @dev Returns the downcasted int120 from int256, reverting on\n     * overflow (when the input is less than smallest int120 or\n     * greater than largest int120).\n     *\n     * Counterpart to Solidity's `int120` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 120 bits\n     *\n     * _Available since v4.7._\n     */\n    function toInt120(int256 value) internal pure returns (int120) {\n        require(value >= type(int120).min && value <= type(int120).max, \"SafeCast: value doesn't fit in 120 bits\");\n        return int120(value);\n    }\n\n    /**\n     * @dev Returns the downcasted int112 from int256, reverting on\n     * overflow (when the input is less than smallest int112 or\n     * greater than largest int112).\n     *\n     * Counterpart to Solidity's `int112` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 112 bits\n     *\n     * _Available since v4.7._\n     */\n    function toInt112(int256 value) internal pure returns (int112) {\n        require(value >= type(int112).min && value <= type(int112).max, \"SafeCast: value doesn't fit in 112 bits\");\n        return int112(value);\n    }\n\n    /**\n     * @dev Returns the downcasted int104 from int256, reverting on\n     * overflow (when the input is less than smallest int104 or\n     * greater than largest int104).\n     *\n     * Counterpart to Solidity's `int104` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 104 bits\n     *\n     * _Available since v4.7._\n     */\n    function toInt104(int256 value) internal pure returns (int104) {\n        require(value >= type(int104).min && value <= type(int104).max, \"SafeCast: value doesn't fit in 104 bits\");\n        return int104(value);\n    }\n\n    /**\n     * @dev Returns the downcasted int96 from int256, reverting on\n     * overflow (when the input is less than smallest int96 or\n     * greater than largest int96).\n     *\n     * Counterpart to Solidity's `int96` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 96 bits\n     *\n     * _Available since v4.7._\n     */\n    function toInt96(int256 value) internal pure returns (int96) {\n        require(value >= type(int96).min && value <= type(int96).max, \"SafeCast: value doesn't fit in 96 bits\");\n        return int96(value);\n    }\n\n    /**\n     * @dev Returns the downcasted int88 from int256, reverting on\n     * overflow (when the input is less than smallest int88 or\n     * greater than largest int88).\n     *\n     * Counterpart to Solidity's `int88` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 88 bits\n     *\n     * _Available since v4.7._\n     */\n    function toInt88(int256 value) internal pure returns (int88) {\n        require(value >= type(int88).min && value <= type(int88).max, \"SafeCast: value doesn't fit in 88 bits\");\n        return int88(value);\n    }\n\n    /**\n     * @dev Returns the downcasted int80 from int256, reverting on\n     * overflow (when the input is less than smallest int80 or\n     * greater than largest int80).\n     *\n     * Counterpart to Solidity's `int80` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 80 bits\n     *\n     * _Available since v4.7._\n     */\n    function toInt80(int256 value) internal pure returns (int80) {\n        require(value >= type(int80).min && value <= type(int80).max, \"SafeCast: value doesn't fit in 80 bits\");\n        return int80(value);\n    }\n\n    /**\n     * @dev Returns the downcasted int72 from int256, reverting on\n     * overflow (when the input is less than smallest int72 or\n     * greater than largest int72).\n     *\n     * Counterpart to Solidity's `int72` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 72 bits\n     *\n     * _Available since v4.7._\n     */\n    function toInt72(int256 value) internal pure returns (int72) {\n        require(value >= type(int72).min && value <= type(int72).max, \"SafeCast: value doesn't fit in 72 bits\");\n        return int72(value);\n    }\n\n    /**\n     * @dev Returns the downcasted int64 from int256, reverting on\n     * overflow (when the input is less than smallest int64 or\n     * greater than largest int64).\n     *\n     * Counterpart to Solidity's `int64` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 64 bits\n     *\n     * _Available since v3.1._\n     */\n    function toInt64(int256 value) internal pure returns (int64) {\n        require(value >= type(int64).min && value <= type(int64).max, \"SafeCast: value doesn't fit in 64 bits\");\n        return int64(value);\n    }\n\n    /**\n     * @dev Returns the downcasted int56 from int256, reverting on\n     * overflow (when the input is less than smallest int56 or\n     * greater than largest int56).\n     *\n     * Counterpart to Solidity's `int56` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 56 bits\n     *\n     * _Available since v4.7._\n     */\n    function toInt56(int256 value) internal pure returns (int56) {\n        require(value >= type(int56).min && value <= type(int56).max, \"SafeCast: value doesn't fit in 56 bits\");\n        return int56(value);\n    }\n\n    /**\n     * @dev Returns the downcasted int48 from int256, reverting on\n     * overflow (when the input is less than smallest int48 or\n     * greater than largest int48).\n     *\n     * Counterpart to Solidity's `int48` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 48 bits\n     *\n     * _Available since v4.7._\n     */\n    function toInt48(int256 value) internal pure returns (int48) {\n        require(value >= type(int48).min && value <= type(int48).max, \"SafeCast: value doesn't fit in 48 bits\");\n        return int48(value);\n    }\n\n    /**\n     * @dev Returns the downcasted int40 from int256, reverting on\n     * overflow (when the input is less than smallest int40 or\n     * greater than largest int40).\n     *\n     * Counterpart to Solidity's `int40` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 40 bits\n     *\n     * _Available since v4.7._\n     */\n    function toInt40(int256 value) internal pure returns (int40) {\n        require(value >= type(int40).min && value <= type(int40).max, \"SafeCast: value doesn't fit in 40 bits\");\n        return int40(value);\n    }\n\n    /**\n     * @dev Returns the downcasted int32 from int256, reverting on\n     * overflow (when the input is less than smallest int32 or\n     * greater than largest int32).\n     *\n     * Counterpart to Solidity's `int32` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 32 bits\n     *\n     * _Available since v3.1._\n     */\n    function toInt32(int256 value) internal pure returns (int32) {\n        require(value >= type(int32).min && value <= type(int32).max, \"SafeCast: value doesn't fit in 32 bits\");\n        return int32(value);\n    }\n\n    /**\n     * @dev Returns the downcasted int24 from int256, reverting on\n     * overflow (when the input is less than smallest int24 or\n     * greater than largest int24).\n     *\n     * Counterpart to Solidity's `int24` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 24 bits\n     *\n     * _Available since v4.7._\n     */\n    function toInt24(int256 value) internal pure returns (int24) {\n        require(value >= type(int24).min && value <= type(int24).max, \"SafeCast: value doesn't fit in 24 bits\");\n        return int24(value);\n    }\n\n    /**\n     * @dev Returns the downcasted int16 from int256, reverting on\n     * overflow (when the input is less than smallest int16 or\n     * greater than largest int16).\n     *\n     * Counterpart to Solidity's `int16` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 16 bits\n     *\n     * _Available since v3.1._\n     */\n    function toInt16(int256 value) internal pure returns (int16) {\n        require(value >= type(int16).min && value <= type(int16).max, \"SafeCast: value doesn't fit in 16 bits\");\n        return int16(value);\n    }\n\n    /**\n     * @dev Returns the downcasted int8 from int256, reverting on\n     * overflow (when the input is less than smallest int8 or\n     * greater than largest int8).\n     *\n     * Counterpart to Solidity's `int8` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 8 bits\n     *\n     * _Available since v3.1._\n     */\n    function toInt8(int256 value) internal pure returns (int8) {\n        require(value >= type(int8).min && value <= type(int8).max, \"SafeCast: value doesn't fit in 8 bits\");\n        return int8(value);\n    }\n\n    /**\n     * @dev Converts an unsigned uint256 into a signed int256.\n     *\n     * Requirements:\n     *\n     * - input must be less than or equal to maxInt256.\n     *\n     * _Available since v3.0._\n     */\n    function toInt256(uint256 value) internal pure returns (int256) {\n        // Note: Unsafe cast below is okay because `type(int256).max` is guaranteed to be positive\n        require(value <= uint256(type(int256).max), \"SafeCast: value doesn't fit in an int256\");\n        return int256(value);\n    }\n}\n"},"@uniswap/v2-core/contracts/interfaces/IUniswapV2Factory.sol":{"content":"pragma solidity >=0.5.0;\n\ninterface IUniswapV2Factory {\n    event PairCreated(address indexed token0, address indexed token1, address pair, uint);\n\n    function feeTo() external view returns (address);\n    function feeToSetter() external view returns (address);\n\n    function getPair(address tokenA, address tokenB) external view returns (address pair);\n    function allPairs(uint) external view returns (address pair);\n    function allPairsLength() external view returns (uint);\n\n    function createPair(address tokenA, address tokenB) external returns (address pair);\n\n    function setFeeTo(address) external;\n    function setFeeToSetter(address) external;\n}\n"},"@uniswap/v2-periphery/contracts/interfaces/IUniswapV2Router01.sol":{"content":"pragma solidity >=0.6.2;\n\ninterface IUniswapV2Router01 {\n    function factory() external pure returns (address);\n    function WETH() external pure returns (address);\n\n    function addLiquidity(\n        address tokenA,\n        address tokenB,\n        uint amountADesired,\n        uint amountBDesired,\n        uint amountAMin,\n        uint amountBMin,\n        address to,\n        uint deadline\n    ) external returns (uint amountA, uint amountB, uint liquidity);\n    function addLiquidityETH(\n        address token,\n        uint amountTokenDesired,\n        uint amountTokenMin,\n        uint amountETHMin,\n        address to,\n        uint deadline\n    ) external payable returns (uint amountToken, uint amountETH, uint liquidity);\n    function removeLiquidity(\n        address tokenA,\n        address tokenB,\n        uint liquidity,\n        uint amountAMin,\n        uint amountBMin,\n        address to,\n        uint deadline\n    ) external returns (uint amountA, uint amountB);\n    function removeLiquidityETH(\n        address token,\n        uint liquidity,\n        uint amountTokenMin,\n        uint amountETHMin,\n        address to,\n        uint deadline\n    ) external returns (uint amountToken, uint amountETH);\n    function removeLiquidityWithPermit(\n        address tokenA,\n        address tokenB,\n        uint liquidity,\n        uint amountAMin,\n        uint amountBMin,\n        address to,\n        uint deadline,\n        bool approveMax, uint8 v, bytes32 r, bytes32 s\n    ) external returns (uint amountA, uint amountB);\n    function removeLiquidityETHWithPermit(\n        address token,\n        uint liquidity,\n        uint amountTokenMin,\n        uint amountETHMin,\n        address to,\n        uint deadline,\n        bool approveMax, uint8 v, bytes32 r, bytes32 s\n    ) external returns (uint amountToken, uint amountETH);\n    function swapExactTokensForTokens(\n        uint amountIn,\n        uint amountOutMin,\n        address[] calldata path,\n        address to,\n        uint deadline\n    ) external returns (uint[] memory amounts);\n    function swapTokensForExactTokens(\n        uint amountOut,\n        uint amountInMax,\n        address[] calldata path,\n        address to,\n        uint deadline\n    ) external returns (uint[] memory amounts);\n    function swapExactETHForTokens(uint amountOutMin, address[] calldata path, address to, uint deadline)\n        external\n        payable\n        returns (uint[] memory amounts);\n    function swapTokensForExactETH(uint amountOut, uint amountInMax, address[] calldata path, address to, uint deadline)\n        external\n        returns (uint[] memory amounts);\n    function swapExactTokensForETH(uint amountIn, uint amountOutMin, address[] calldata path, address to, uint deadline)\n        external\n        returns (uint[] memory amounts);\n    function swapETHForExactTokens(uint amountOut, address[] calldata path, address to, uint deadline)\n        external\n        payable\n        returns (uint[] memory amounts);\n\n    function quote(uint amountA, uint reserveA, uint reserveB) external pure returns (uint amountB);\n    function getAmountOut(uint amountIn, uint reserveIn, uint reserveOut) external pure returns (uint amountOut);\n    function getAmountIn(uint amountOut, uint reserveIn, uint reserveOut) external pure returns (uint amountIn);\n    function getAmountsOut(uint amountIn, address[] calldata path) external view returns (uint[] memory amounts);\n    function getAmountsIn(uint amountOut, address[] calldata path) external view returns (uint[] memory amounts);\n}\n"},"@uniswap/v2-periphery/contracts/interfaces/IUniswapV2Router02.sol":{"content":"pragma solidity >=0.6.2;\n\nimport './IUniswapV2Router01.sol';\n\ninterface IUniswapV2Router02 is IUniswapV2Router01 {\n    function removeLiquidityETHSupportingFeeOnTransferTokens(\n        address token,\n        uint liquidity,\n        uint amountTokenMin,\n        uint amountETHMin,\n        address to,\n        uint deadline\n    ) external returns (uint amountETH);\n    function removeLiquidityETHWithPermitSupportingFeeOnTransferTokens(\n        address token,\n        uint liquidity,\n        uint amountTokenMin,\n        uint amountETHMin,\n        address to,\n        uint deadline,\n        bool approveMax, uint8 v, bytes32 r, bytes32 s\n    ) external returns (uint amountETH);\n\n    function swapExactTokensForTokensSupportingFeeOnTransferTokens(\n        uint amountIn,\n        uint amountOutMin,\n        address[] calldata path,\n        address to,\n        uint deadline\n    ) external;\n    function swapExactETHForTokensSupportingFeeOnTransferTokens(\n        uint amountOutMin,\n        address[] calldata path,\n        address to,\n        uint deadline\n    ) external payable;\n    function swapExactTokensForETHSupportingFeeOnTransferTokens(\n        uint amountIn,\n        uint amountOutMin,\n        address[] calldata path,\n        address to,\n        uint deadline\n    ) external;\n}\n"},"@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol":{"content":"// SPDX-License-Identifier: GPL-2.0-or-later\npragma solidity >=0.5.0;\n\n/// @title Callback for IUniswapV3PoolActions#swap\n/// @notice Any contract that calls IUniswapV3PoolActions#swap must implement this interface\ninterface IUniswapV3SwapCallback {\n    /// @notice Called to `msg.sender` after executing a swap via IUniswapV3Pool#swap.\n    /// @dev In the implementation you must pay the pool tokens owed for the swap.\n    /// The caller of this method must be checked to be a UniswapV3Pool deployed by the canonical UniswapV3Factory.\n    /// amount0Delta and amount1Delta can both be 0 if no tokens were swapped.\n    /// @param amount0Delta The amount of token0 that was sent (negative) or must be received (positive) by the pool by\n    /// the end of the swap. If positive, the callback must send that amount of token0 to the pool.\n    /// @param amount1Delta The amount of token1 that was sent (negative) or must be received (positive) by the pool by\n    /// the end of the swap. If positive, the callback must send that amount of token1 to the pool.\n    /// @param data Any data passed through by the caller via the IUniswapV3PoolActions#swap call\n    function uniswapV3SwapCallback(\n        int256 amount0Delta,\n        int256 amount1Delta,\n        bytes calldata data\n    ) external;\n}\n"},"@uniswap/v3-core/contracts/interfaces/IUniswapV3Factory.sol":{"content":"// SPDX-License-Identifier: GPL-2.0-or-later\npragma solidity >=0.5.0;\n\n/// @title The interface for the Uniswap V3 Factory\n/// @notice The Uniswap V3 Factory facilitates creation of Uniswap V3 pools and control over the protocol fees\ninterface IUniswapV3Factory {\n    /// @notice Emitted when the owner of the factory is changed\n    /// @param oldOwner The owner before the owner was changed\n    /// @param newOwner The owner after the owner was changed\n    event OwnerChanged(address indexed oldOwner, address indexed newOwner);\n\n    /// @notice Emitted when a pool is created\n    /// @param token0 The first token of the pool by address sort order\n    /// @param token1 The second token of the pool by address sort order\n    /// @param fee The fee collected upon every swap in the pool, denominated in hundredths of a bip\n    /// @param tickSpacing The minimum number of ticks between initialized ticks\n    /// @param pool The address of the created pool\n    event PoolCreated(\n        address indexed token0,\n        address indexed token1,\n        uint24 indexed fee,\n        int24 tickSpacing,\n        address pool\n    );\n\n    /// @notice Emitted when a new fee amount is enabled for pool creation via the factory\n    /// @param fee The enabled fee, denominated in hundredths of a bip\n    /// @param tickSpacing The minimum number of ticks between initialized ticks for pools created with the given fee\n    event FeeAmountEnabled(uint24 indexed fee, int24 indexed tickSpacing);\n\n    /// @notice Returns the current owner of the factory\n    /// @dev Can be changed by the current owner via setOwner\n    /// @return The address of the factory owner\n    function owner() external view returns (address);\n\n    /// @notice Returns the tick spacing for a given fee amount, if enabled, or 0 if not enabled\n    /// @dev A fee amount can never be removed, so this value should be hard coded or cached in the calling context\n    /// @param fee The enabled fee, denominated in hundredths of a bip. Returns 0 in case of unenabled fee\n    /// @return The tick spacing\n    function feeAmountTickSpacing(uint24 fee) external view returns (int24);\n\n    /// @notice Returns the pool address for a given pair of tokens and a fee, or address 0 if it does not exist\n    /// @dev tokenA and tokenB may be passed in either token0/token1 or token1/token0 order\n    /// @param tokenA The contract address of either token0 or token1\n    /// @param tokenB The contract address of the other token\n    /// @param fee The fee collected upon every swap in the pool, denominated in hundredths of a bip\n    /// @return pool The pool address\n    function getPool(\n        address tokenA,\n        address tokenB,\n        uint24 fee\n    ) external view returns (address pool);\n\n    /// @notice Creates a pool for the given two tokens and fee\n    /// @param tokenA One of the two tokens in the desired pool\n    /// @param tokenB The other of the two tokens in the desired pool\n    /// @param fee The desired fee for the pool\n    /// @dev tokenA and tokenB may be passed in either order: token0/token1 or token1/token0. tickSpacing is retrieved\n    /// from the fee. The call will revert if the pool already exists, the fee is invalid, or the token arguments\n    /// are invalid.\n    /// @return pool The address of the newly created pool\n    function createPool(\n        address tokenA,\n        address tokenB,\n        uint24 fee\n    ) external returns (address pool);\n\n    /// @notice Updates the owner of the factory\n    /// @dev Must be called by the current owner\n    /// @param _owner The new owner of the factory\n    function setOwner(address _owner) external;\n\n    /// @notice Enables a fee amount with the given tickSpacing\n    /// @dev Fee amounts may never be removed once enabled\n    /// @param fee The fee amount to enable, denominated in hundredths of a bip (i.e. 1e-6)\n    /// @param tickSpacing The spacing between ticks to be enforced for all pools created with the given fee amount\n    function enableFeeAmount(uint24 fee, int24 tickSpacing) external;\n}\n"},"@uniswap/v3-periphery/contracts/interfaces/IPeripheryImmutableState.sol":{"content":"// SPDX-License-Identifier: GPL-2.0-or-later\npragma solidity >=0.5.0;\n\n/// @title Immutable state\n/// @notice Functions that return immutable state of the router\ninterface IPeripheryImmutableState {\n    /// @return Returns the address of the Uniswap V3 factory\n    function factory() external view returns (address);\n\n    /// @return Returns the address of WETH9\n    function WETH9() external view returns (address);\n}\n"},"@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol":{"content":"// SPDX-License-Identifier: GPL-2.0-or-later\npragma solidity >=0.7.5;\npragma abicoder v2;\n\nimport '@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol';\n\n/// @title Router token swapping functionality\n/// @notice Functions for swapping tokens via Uniswap V3\ninterface ISwapRouter is IUniswapV3SwapCallback {\n    struct ExactInputSingleParams {\n        address tokenIn;\n        address tokenOut;\n        uint24 fee;\n        address recipient;\n        uint256 deadline;\n        uint256 amountIn;\n        uint256 amountOutMinimum;\n        uint160 sqrtPriceLimitX96;\n    }\n\n    /// @notice Swaps `amountIn` of one token for as much as possible of another token\n    /// @param params The parameters necessary for the swap, encoded as `ExactInputSingleParams` in calldata\n    /// @return amountOut The amount of the received token\n    function exactInputSingle(ExactInputSingleParams calldata params) external payable returns (uint256 amountOut);\n\n    struct ExactInputParams {\n        bytes path;\n        address recipient;\n        uint256 deadline;\n        uint256 amountIn;\n        uint256 amountOutMinimum;\n    }\n\n    /// @notice Swaps `amountIn` of one token for as much as possible of another along the specified path\n    /// @param params The parameters necessary for the multi-hop swap, encoded as `ExactInputParams` in calldata\n    /// @return amountOut The amount of the received token\n    function exactInput(ExactInputParams calldata params) external payable returns (uint256 amountOut);\n\n    struct ExactOutputSingleParams {\n        address tokenIn;\n        address tokenOut;\n        uint24 fee;\n        address recipient;\n        uint256 deadline;\n        uint256 amountOut;\n        uint256 amountInMaximum;\n        uint160 sqrtPriceLimitX96;\n    }\n\n    /// @notice Swaps as little as possible of one token for `amountOut` of another token\n    /// @param params The parameters necessary for the swap, encoded as `ExactOutputSingleParams` in calldata\n    /// @return amountIn The amount of the input token\n    function exactOutputSingle(ExactOutputSingleParams calldata params) external payable returns (uint256 amountIn);\n\n    struct ExactOutputParams {\n        bytes path;\n        address recipient;\n        uint256 deadline;\n        uint256 amountOut;\n        uint256 amountInMaximum;\n    }\n\n    /// @notice Swaps as little as possible of one token for `amountOut` of another along the specified path (reversed)\n    /// @param params The parameters necessary for the multi-hop swap, encoded as `ExactOutputParams` in calldata\n    /// @return amountIn The amount of the input token\n    function exactOutput(ExactOutputParams calldata params) external payable returns (uint256 amountIn);\n}\n"},"contracts/connectors/BalancerV2Connector.sol":{"content":"// SPDX-License-Identifier: GPL-3.0-or-later\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n\n// You should have received a copy of the GNU General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\npragma solidity ^0.8.0;\n\nimport '@openzeppelin/contracts/token/ERC20/IERC20.sol';\nimport '@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol';\nimport '@openzeppelin/contracts/utils/math/SafeCast.sol';\n\nimport '@mimic-fi/v2-helpers/contracts/utils/Arrays.sol';\nimport '@mimic-fi/v2-helpers/contracts/math/UncheckedMath.sol';\n\nimport '../interfaces/IBalancerV2Vault.sol';\n\n/**\n * @title BalancerV2Connector\n * @dev Interfaces with Balancer V2 to swap tokens\n */\ncontract BalancerV2Connector {\n    using Arrays for address[];\n    using SafeERC20 for IERC20;\n    using UncheckedMath for int256;\n    using UncheckedMath for uint256;\n\n    // Expected data length for Balancer V2 single swaps: pool ID\n    uint256 private constant ENCODED_DATA_SINGLE_SWAP_LENGTH = 32;\n\n    // Reference to BalancerV2 vault\n    IBalancerV2Vault private immutable balancerV2Vault;\n\n    /**\n     * @dev Initializes the BalancerV2Connector contract\n     * @param _balancerV2Vault Balancer V2 vault reference\n     */\n    constructor(address _balancerV2Vault) {\n        balancerV2Vault = IBalancerV2Vault(_balancerV2Vault);\n    }\n\n    /**\n     * @dev Internal function to swap two tokens through BalancerV2\n     * @param tokenIn Token being sent\n     * @param tokenOut Token being received\n     * @param amountIn Amount of tokenIn being swapped\n     * @param minAmountOut Minimum amount of tokenOut willing to receive\n     * @param data ABI-encoded-packed specifying the list of hop-tokens and pool IDs to use\n     */\n    function _swapBalancerV2(\n        address tokenIn,\n        address tokenOut,\n        uint256 amountIn,\n        uint256 minAmountOut,\n        bytes memory data\n    ) internal returns (uint256 amountOut) {\n        IERC20(tokenIn).safeApprove(address(balancerV2Vault), amountIn);\n        return\n            data.length == ENCODED_DATA_SINGLE_SWAP_LENGTH\n                ? _singleSwapBalancerV2(tokenIn, tokenOut, amountIn, minAmountOut, data)\n                : _batchSwapBalancerV2(tokenIn, tokenOut, amountIn, minAmountOut, data);\n    }\n\n    /**\n     * @dev Internal function to swap two tokens through BalancerV2 using a single hop\n     * @param tokenIn Token being sent\n     * @param tokenOut Token being received\n     * @param amountIn Amount of tokenIn being swapped\n     * @param minAmountOut Minimum amount of tokenOut willing to receive\n     * @param data ABI-encoded-packed to specify the pool ID to be used\n     */\n    function _singleSwapBalancerV2(\n        address tokenIn,\n        address tokenOut,\n        uint256 amountIn,\n        uint256 minAmountOut,\n        bytes memory data\n    ) private returns (uint256 amountOut) {\n        bytes32 poolId = abi.decode(data, (bytes32));\n        _validatePool(poolId, tokenIn, tokenOut);\n\n        IBalancerV2Vault.SingleSwap memory swap;\n        swap.poolId = poolId;\n        swap.kind = IBalancerV2Vault.SwapKind.GIVEN_IN;\n        swap.assetIn = tokenIn;\n        swap.assetOut = tokenOut;\n        swap.amount = amountIn;\n        swap.userData = new bytes(0);\n        return balancerV2Vault.swap(swap, _fundManagement(), minAmountOut, block.timestamp);\n    }\n\n    /**\n     * @dev Internal function to swap two tokens through BalancerV2 using a multi hop\n     * @param tokenIn Token being sent\n     * @param tokenOut Token being received\n     * @param amountIn Amount of tokenIn to be swapped\n     * @param minAmountOut Minimum amount of tokenOut willing to receive\n     * @param data ABI-encoded-packed to specify the list of hop-tokens and pool IDs between tokenIn and tokenOut\n     */\n    function _batchSwapBalancerV2(\n        address tokenIn,\n        address tokenOut,\n        uint256 amountIn,\n        uint256 minAmountOut,\n        bytes memory data\n    ) private returns (uint256 amountOut) {\n        // Decode data and validate pools\n        (address[] memory hopTokens, bytes32[] memory poolIds) = abi.decode(data, (address[], bytes32[]));\n        // No need for checked math since we are simply adding one to a memory array's length\n        require(poolIds.length == hopTokens.length.uncheckedAdd(1), 'INVALID_BALANCER_V2_INPUT_LENGTH');\n\n        address[] memory tokens = Arrays.from(tokenIn, hopTokens, tokenOut);\n        // No need for checked math since we are using it to compute indexes manually, always within boundaries\n        for (uint256 i = 0; i < poolIds.length; i = i.uncheckedAdd(1)) {\n            _validatePool(poolIds[i], tokens[i], tokens[i.uncheckedAdd(1)]);\n        }\n\n        // Build list of swap steps\n        // No need for checked math as we know we are operating safely within boundaries\n        uint256 steps = tokens.length.uncheckedSub(1);\n        IBalancerV2Vault.BatchSwapStep[] memory swaps = new IBalancerV2Vault.BatchSwapStep[](steps);\n        for (uint256 j = 0; j < steps; j = j.uncheckedAdd(1)) {\n            IBalancerV2Vault.BatchSwapStep memory swap = swaps[j];\n            swap.amount = j == 0 ? amountIn : 0;\n            swap.poolId = poolIds[j];\n            swap.assetInIndex = j;\n            swap.assetOutIndex = j.uncheckedAdd(1);\n            swap.userData = new bytes(0);\n        }\n\n        // Build limits values\n        int256[] memory limits = new int256[](tokens.length);\n        limits[0] = SafeCast.toInt256(amountIn);\n        // No need for checked math as we know we are operating safely within boundaries\n        limits[limits.length.uncheckedSub(1)] = SafeCast.toInt256(minAmountOut).uncheckedMul(-1);\n\n        // Swap\n        int256[] memory results = balancerV2Vault.batchSwap(\n            IBalancerV2Vault.SwapKind.GIVEN_IN,\n            swaps,\n            tokens,\n            _fundManagement(),\n            limits,\n            block.timestamp\n        );\n\n        // Validate output\n        // No need for checked math as we know we are operating safely within boundaries\n        int256 intAmountOut = results[results.length.uncheckedSub(1)];\n        require(intAmountOut < 0, 'BALANCER_INVALID_BATCH_AMOUNT_OU');\n        require(SafeCast.toUint256(results[0]) == amountIn, 'BALANCER_INVALID_BATCH_AMOUNT_IN');\n        // No need for checked math as we already checked it is a negative value\n        return uint256(intAmountOut.uncheckedMul(-1));\n    }\n\n    /**\n     * @dev Internal function to build the fund management struct required by Balancer for swaps\n     */\n    function _fundManagement() private view returns (IBalancerV2Vault.FundManagement memory) {\n        return\n            IBalancerV2Vault.FundManagement({\n                sender: address(this),\n                fromInternalBalance: false,\n                recipient: payable(address(this)),\n                toInternalBalance: false\n            });\n    }\n\n    /**\n     * @dev Internal function to validate that there is a pool created for tokenA and tokenB with a requested pool ID\n     * @param poolId Balancer pool ID\n     * @param tokenA One of the tokens in the pool\n     * @param tokenB The other token in the pool\n     */\n    function _validatePool(bytes32 poolId, address tokenA, address tokenB) private view {\n        (address pool, ) = balancerV2Vault.getPool(poolId);\n        require(pool != address(0), 'INVALID_BALANCER_POOL_ID');\n        (address[] memory tokens, , ) = balancerV2Vault.getPoolTokens(poolId);\n        require(tokens.includes(tokenA, tokenB), 'INVALID_BALANCER_POOL_TOKENS');\n    }\n}\n"},"contracts/connectors/HopSwapConnector.sol":{"content":"// SPDX-License-Identifier: GPL-3.0-or-later\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n\n// You should have received a copy of the GNU General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\npragma solidity ^0.8.0;\n\nimport '@openzeppelin/contracts/token/ERC20/IERC20.sol';\nimport '@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol';\n\nimport '../interfaces/IHopSwap.sol';\n\n/**\n * @title HopSwapConnector\n * @dev Interfaces with Hop Swap to swap tokens\n */\ncontract HopSwapConnector {\n    using SafeERC20 for IERC20;\n\n    // Expected data length for Hop swaps: Hop Swap pool address\n    uint256 private constant ENCODED_DATA_SWAP_LENGTH = 32;\n\n    /**\n     * @dev Internal function to swap two tokens through Hop\n     * @param tokenIn Token being sent\n     * @param tokenOut Token being received\n     * @param amountIn Amount of tokenIn being swapped\n     * @param minAmountOut Minimum amount of tokenOut willing to receive\n     * @param data ABI-encoded Hop Swap to be used\n     */\n    function _swapHop(address tokenIn, address tokenOut, uint256 amountIn, uint256 minAmountOut, bytes memory data)\n        internal\n        returns (uint256 amountOut)\n    {\n        require(data.length == ENCODED_DATA_SWAP_LENGTH, 'HOP_INVALID_DATA_LENGTH');\n        address hopSwapAddress = abi.decode(data, (address));\n\n        IHopSwap hopSwap = IHopSwap(hopSwapAddress);\n        uint8 tokenInIndex = hopSwap.getTokenIndex(tokenIn);\n        uint8 tokenOutIndex = hopSwap.getTokenIndex(tokenOut);\n\n        IERC20(tokenIn).safeApprove(hopSwapAddress, amountIn);\n        return hopSwap.swap(tokenInIndex, tokenOutIndex, amountIn, minAmountOut, block.timestamp);\n    }\n}\n"},"contracts/connectors/OneInchV5Connector.sol":{"content":"// SPDX-License-Identifier: GPL-3.0-or-later\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n\n// You should have received a copy of the GNU General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\npragma solidity ^0.8.0;\n\nimport '@openzeppelin/contracts/token/ERC20/IERC20.sol';\nimport '@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol';\nimport '@openzeppelin/contracts/utils/Address.sol';\n\nimport '../interfaces/IOneInchV5AggregationRouter.sol';\n\n/**\n * @title OneInchV5Connector\n * @dev Interfaces with 1inch V5 to swap tokens\n */\ncontract OneInchV5Connector {\n    using SafeERC20 for IERC20;\n\n    // Reference to 1inch aggregation router v5\n    IOneInchV5AggregationRouter private immutable oneInchV5Router;\n\n    /**\n     * @dev Initializes the OneInchV5Connector contract\n     * @param _oneInchV5Router 1inch aggregation router v5 reference\n     */\n    constructor(address _oneInchV5Router) {\n        oneInchV5Router = IOneInchV5AggregationRouter(_oneInchV5Router);\n    }\n\n    /**\n     * @dev Internal function to swap two tokens through 1Inch V5\n     * @param tokenIn Token being sent\n     * @param tokenOut Token being received\n     * @param amountIn Amount of tokenIn being swapped\n     * @param minAmountOut Minimum amount of tokenOut willing to receive\n     * @param data Calldata to be sent to the 1inch aggregation router\n     */\n    function _swapOneInchV5(\n        address tokenIn,\n        address tokenOut,\n        uint256 amountIn,\n        uint256 minAmountOut,\n        bytes memory data\n    ) internal returns (uint256 amountOut) {\n        uint256 preBalanceOut = IERC20(tokenOut).balanceOf(address(this));\n\n        IERC20(tokenIn).safeApprove(address(oneInchV5Router), amountIn);\n        Address.functionCall(address(oneInchV5Router), data, '1INCH_V5_SWAP_FAILED');\n\n        uint256 postBalanceOut = IERC20(tokenOut).balanceOf(address(this));\n        amountOut = postBalanceOut - preBalanceOut;\n        require(amountOut >= minAmountOut, '1INCH_V5_MIN_AMOUNT');\n    }\n}\n"},"contracts/connectors/ParaswapV5Connector.sol":{"content":"// SPDX-License-Identifier: GPL-3.0-or-later\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n\n// You should have received a copy of the GNU General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\npragma solidity ^0.8.0;\n\nimport '@openzeppelin/contracts/token/ERC20/IERC20.sol';\nimport '@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol';\nimport '@openzeppelin/contracts/utils/Address.sol';\n\nimport '../interfaces/IParaswapV5Augustus.sol';\n\n/**\n * @title ParaswapV5Connector\n * @dev Interfaces with Paraswap V5 to swap tokens\n */\ncontract ParaswapV5Connector {\n    using SafeERC20 for IERC20;\n\n    // Reference to Paraswap V5 Augustus swapper\n    IParaswapV5Augustus private immutable paraswapV5Augustus;\n\n    /**\n     * @dev Initializes the ParaswapV5Connector contract\n     * @param _paraswapV5Augustus Paraswap V5 augusts reference\n     */\n    constructor(address _paraswapV5Augustus) {\n        paraswapV5Augustus = IParaswapV5Augustus(_paraswapV5Augustus);\n    }\n\n    /**\n     * @dev Internal function to swap two tokens through Paraswap V5\n     * @param tokenIn Token being sent\n     * @param tokenOut Token being received\n     * @param amountIn Amount of tokenIn being swapped\n     * @param minAmountOut Minimum amount of tokenOut willing to receive\n     * @param data Calldata to be sent to the Augusuts swapper\n     */\n    function _swapParaswapV5(\n        address tokenIn,\n        address tokenOut,\n        uint256 amountIn,\n        uint256 minAmountOut,\n        bytes memory data\n    ) internal returns (uint256 amountOut) {\n        uint256 preBalanceOut = IERC20(tokenOut).balanceOf(address(this));\n\n        address tokenTransferProxy = paraswapV5Augustus.getTokenTransferProxy();\n        IERC20(tokenIn).safeApprove(tokenTransferProxy, amountIn);\n        Address.functionCall(address(paraswapV5Augustus), data, 'PARASWAP_V5_SWAP_FAILED');\n\n        uint256 postBalanceOut = IERC20(tokenOut).balanceOf(address(this));\n        amountOut = postBalanceOut - preBalanceOut;\n        require(amountOut >= minAmountOut, 'PARASWAP_V5_MIN_AMOUNT');\n    }\n}\n"},"contracts/connectors/UniswapV2Connector.sol":{"content":"// SPDX-License-Identifier: GPL-3.0-or-later\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n\n// You should have received a copy of the GNU General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\npragma solidity ^0.8.0;\n\nimport '@openzeppelin/contracts/token/ERC20/IERC20.sol';\nimport '@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol';\nimport '@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol';\n\nimport '@uniswap/v2-core/contracts/interfaces/IUniswapV2Factory.sol';\nimport '@uniswap/v2-periphery/contracts/interfaces/IUniswapV2Router02.sol';\n\nimport '@mimic-fi/v2-helpers/contracts/utils/Arrays.sol';\nimport '@mimic-fi/v2-helpers/contracts/math/UncheckedMath.sol';\n\n/**\n * @title UniswapV2Connector\n * @dev Interfaces with Uniswap V2 to swap tokens\n */\ncontract UniswapV2Connector {\n    using SafeERC20 for IERC20;\n    using UncheckedMath for uint256;\n\n    // Expected data length for Uniswap V2 single swaps: no data expected\n    uint256 private constant ENCODED_DATA_SINGLE_SWAP_LENGTH = 0;\n\n    // Reference to UniswapV2 router\n    IUniswapV2Router02 private immutable uniswapV2Router;\n\n    /**\n     * @dev Initializes the UniswapV2Connector contract\n     * @param _uniswapV2Router Uniswap V2 router reference\n     */\n    constructor(address _uniswapV2Router) {\n        uniswapV2Router = IUniswapV2Router02(_uniswapV2Router);\n    }\n\n    /**\n     * @dev Internal function to swap two tokens through UniswapV2\n     * @param tokenIn Token being sent\n     * @param tokenOut Token being received\n     * @param amountIn Amount of tokenIn being swapped\n     * @param minAmountOut Minimum amount of tokenOut willing to receive\n     * @param data ABI-encoded list of hop-tokens between tokenIn and tokenOut\n     */\n    function _swapUniswapV2(\n        address tokenIn,\n        address tokenOut,\n        uint256 amountIn,\n        uint256 minAmountOut,\n        bytes memory data\n    ) internal returns (uint256 amountOut) {\n        IERC20(tokenIn).safeApprove(address(uniswapV2Router), amountIn);\n        uint256[] memory amounts = data.length == ENCODED_DATA_SINGLE_SWAP_LENGTH\n            ? _singleSwapUniswapV2(tokenIn, tokenOut, amountIn, minAmountOut)\n            : _batchSwapUniswapV2(tokenIn, tokenOut, amountIn, minAmountOut, data);\n        return amounts[amounts.length - 1];\n    }\n\n    /**\n     * @dev Internal function to swap two tokens through UniswapV2 using a single hop\n     * @param tokenIn Token being sent\n     * @param tokenOut Token being received\n     * @param amountIn Amount of tokenIn being swapped\n     * @param minAmountOut Minimum amount of tokenOut willing to receive\n     */\n    function _singleSwapUniswapV2(address tokenIn, address tokenOut, uint256 amountIn, uint256 minAmountOut)\n        private\n        returns (uint256[] memory)\n    {\n        address factory = uniswapV2Router.factory();\n        address[] memory tokens = Arrays.from(tokenIn, tokenOut);\n        _validatePool(factory, tokenIn, tokenOut);\n        return uniswapV2Router.swapExactTokensForTokens(amountIn, minAmountOut, tokens, address(this), block.timestamp);\n    }\n\n    /**\n     * @dev Internal function to swap two tokens through UniswapV2 using a multi hop\n     * @param tokenIn Token being sent\n     * @param tokenOut Token being received\n     * @param amountIn Amount of the first token in the path to be swapped\n     * @param minAmountOut Minimum amount of the last token in the path willing to receive\n     * @param data ABI-encoded-packed list of hop-tokens between tokenIn and tokenOut\n     */\n    function _batchSwapUniswapV2(\n        address tokenIn,\n        address tokenOut,\n        uint256 amountIn,\n        uint256 minAmountOut,\n        bytes memory data\n    ) private returns (uint256[] memory) {\n        address factory = uniswapV2Router.factory();\n        address[] memory hopTokens = abi.decode(data, (address[]));\n        address[] memory tokens = Arrays.from(tokenIn, hopTokens, tokenOut);\n        // No need for checked math since we are using it to compute indexes manually, always within boundaries\n        for (uint256 i = 0; i < tokens.length.uncheckedSub(1); i = i.uncheckedAdd(1)) {\n            _validatePool(factory, tokens[i], tokens[i.uncheckedAdd(1)]);\n        }\n        return uniswapV2Router.swapExactTokensForTokens(amountIn, minAmountOut, tokens, address(this), block.timestamp);\n    }\n\n    /**\n     * @dev Internal function to validate that there is a pool created for tokenA and tokenB\n     * @param factory UniswapV2 factory to check against\n     * @param tokenA First token of the pair\n     * @param tokenB Second token of the pair\n     */\n    function _validatePool(address factory, address tokenA, address tokenB) private view {\n        address pool = IUniswapV2Factory(factory).getPair(tokenA, tokenB);\n        require(pool != address(0), 'INVALID_UNISWAP_POOL');\n    }\n}\n"},"contracts/connectors/UniswapV3Connector.sol":{"content":"// SPDX-License-Identifier: GPL-3.0-or-later\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n\n// You should have received a copy of the GNU General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\npragma solidity ^0.8.0;\n\nimport '@openzeppelin/contracts/token/ERC20/IERC20.sol';\nimport '@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol';\n\nimport '@uniswap/v3-core/contracts/interfaces/IUniswapV3Factory.sol';\nimport '@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol';\nimport '@uniswap/v3-periphery/contracts/interfaces/IPeripheryImmutableState.sol';\n\nimport '@mimic-fi/v2-helpers/contracts/utils/Arrays.sol';\nimport '@mimic-fi/v2-helpers/contracts/utils/Bytes.sol';\nimport '@mimic-fi/v2-helpers/contracts/math/UncheckedMath.sol';\n\n/**\n * @title UniswapV3Connector\n * @dev Interfaces with Uniswap V3 to swap tokens\n */\ncontract UniswapV3Connector {\n    using Bytes for bytes;\n    using SafeERC20 for IERC20;\n    using UncheckedMath for uint256;\n\n    // Expected data length for Uniswap V3 single swaps: fee\n    uint256 private constant ENCODED_DATA_SINGLE_SWAP_LENGTH = 32;\n\n    // Reference to UniswapV3 router\n    ISwapRouter private immutable uniswapV3Router;\n\n    /**\n     * @dev Initializes the UniswapV3Connector contract\n     * @param _uniswapV3Router Uniswap V3 router reference\n     */\n    constructor(address _uniswapV3Router) {\n        uniswapV3Router = ISwapRouter(_uniswapV3Router);\n    }\n\n    /**\n     * @dev Internal function to swap two tokens through UniswapV3\n     * @param tokenIn Token being sent\n     * @param tokenOut Token being received\n     * @param amountIn Amount of tokenIn being swapped\n     * @param minAmountOut Minimum amount of tokenOut willing to receive\n     * @param data ABI-encoded-packed specifying the list of hop-tokens and fees to use\n     */\n    function _swapUniswapV3(\n        address tokenIn,\n        address tokenOut,\n        uint256 amountIn,\n        uint256 minAmountOut,\n        bytes memory data\n    ) internal returns (uint256 amountOut) {\n        IERC20(tokenIn).safeApprove(address(uniswapV3Router), amountIn);\n        return\n            data.length == ENCODED_DATA_SINGLE_SWAP_LENGTH\n                ? _singleSwapUniswapV3(tokenIn, tokenOut, amountIn, minAmountOut, data)\n                : _batchSwapUniswapV3(tokenIn, tokenOut, amountIn, minAmountOut, data);\n    }\n\n    /**\n     * @dev Internal function to swap two tokens through UniswapV3 using a single hop\n     * @param tokenIn Token being sent\n     * @param tokenOut Token being received\n     * @param amountIn Amount of tokenIn being swapped\n     * @param minAmountOut Minimum amount of tokenOut willing to receive\n     * @param data ABI-encoded-packed of the uint24 fee to be used\n     */\n    function _singleSwapUniswapV3(\n        address tokenIn,\n        address tokenOut,\n        uint256 amountIn,\n        uint256 minAmountOut,\n        bytes memory data\n    ) private returns (uint256 amountOut) {\n        uint24 fee = abi.decode(data, (uint24));\n        _validatePool(_uniswapV3Factory(), tokenIn, tokenOut, fee);\n\n        ISwapRouter.ExactInputSingleParams memory input;\n        input.tokenIn = tokenIn;\n        input.tokenOut = tokenOut;\n        input.fee = fee;\n        input.recipient = address(this);\n        input.deadline = block.timestamp;\n        input.amountIn = amountIn;\n        input.amountOutMinimum = minAmountOut;\n        input.sqrtPriceLimitX96 = 0;\n        return uniswapV3Router.exactInputSingle(input);\n    }\n\n    /**\n     * @dev Internal function to swap two tokens through UniswapV3 using a multi hop\n     * @param tokenIn Token being sent\n     * @param tokenOut Token being received\n     * @param amountIn Amount of the first token in the path to be swapped\n     * @param minAmountOut Minimum amount of the last token in the path willing to receive\n     * @param data ABI-encoded-packed list of hop-tokens between tokenIn and tokenOut and list of fees to be used\n     */\n    function _batchSwapUniswapV3(\n        address tokenIn,\n        address tokenOut,\n        uint256 amountIn,\n        uint256 minAmountOut,\n        bytes memory data\n    ) private returns (uint256 amountOut) {\n        (address[] memory hopTokens, uint24[] memory fees) = abi.decode(data, (address[], uint24[]));\n        // No need for checked math since we are simply adding one to a memory array's length\n        require(fees.length == hopTokens.length.uncheckedAdd(1), 'INVALID_UNISWAP_V3_INPUT_LENGTH');\n\n        address factory = _uniswapV3Factory();\n        address[] memory tokens = Arrays.from(tokenIn, hopTokens, tokenOut);\n        // No need for checked math since we are using it to compute indexes manually, always within boundaries\n        for (uint256 i = 0; i < fees.length; i = i.uncheckedAdd(1)) {\n            _validatePool(factory, tokens[i], tokens[i.uncheckedAdd(1)], fees[i]);\n        }\n\n        ISwapRouter.ExactInputParams memory input;\n        input.path = _encodePoolPath(tokens, fees);\n        input.amountIn = amountIn;\n        input.amountOutMinimum = minAmountOut;\n        input.recipient = address(this);\n        input.deadline = block.timestamp;\n        return uniswapV3Router.exactInput(input);\n    }\n\n    /**\n     * @dev Internal function to fetch the Uniswap V3 factory contract address\n     * @return Address of the Uniswap V3 factory contract\n     */\n    function _uniswapV3Factory() private view returns (address) {\n        return IPeripheryImmutableState(address(uniswapV3Router)).factory();\n    }\n\n    /**\n     * @dev Internal function to validate that there is a pool created for tokenA and tokenB with a requested fee\n     * @param factory UniswapV3 factory to check against\n     * @param tokenA One of the tokens in the pool\n     * @param tokenB The other token in the pool\n     * @param fee Fee used by the pool\n     */\n    function _validatePool(address factory, address tokenA, address tokenB, uint24 fee) private view {\n        (address token0, address token1) = tokenA < tokenB ? (tokenA, tokenB) : (tokenB, tokenA);\n        require(IUniswapV3Factory(factory).getPool(token0, token1, fee) != address(0), 'INVALID_UNISWAP_POOL_FEE');\n    }\n\n    /**\n     * @dev Internal function to encode a path of tokens with their corresponding fees\n     * @param tokens List of tokens to be encoded\n     * @param fees List of fees to use for each token pair\n     */\n    function _encodePoolPath(address[] memory tokens, uint24[] memory fees) private pure returns (bytes memory path) {\n        path = new bytes(0);\n        for (uint256 i = 0; i < fees.length; i = i.uncheckedAdd(1)) path = path.concat(tokens[i]).concat(fees[i]);\n        path = path.concat(tokens[fees.length]);\n    }\n}\n"},"contracts/interfaces/IBalancerV2Vault.sol":{"content":"// SPDX-License-Identifier: GPL-3.0-or-later\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n\n// You should have received a copy of the GNU General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\npragma experimental ABIEncoderV2;\npragma solidity ^0.8.0;\n\ninterface IBalancerV2Vault {\n    enum SwapKind {\n        GIVEN_IN,\n        GIVEN_OUT\n    }\n\n    struct SingleSwap {\n        bytes32 poolId;\n        SwapKind kind;\n        address assetIn;\n        address assetOut;\n        uint256 amount;\n        bytes userData;\n    }\n\n    struct BatchSwapStep {\n        bytes32 poolId;\n        uint256 assetInIndex;\n        uint256 assetOutIndex;\n        uint256 amount;\n        bytes userData;\n    }\n\n    struct FundManagement {\n        address sender;\n        bool fromInternalBalance;\n        address payable recipient;\n        bool toInternalBalance;\n    }\n\n    function swap(SingleSwap memory singleSwap, FundManagement memory funds, uint256 limit, uint256 deadline)\n        external\n        payable\n        returns (uint256);\n\n    function batchSwap(\n        SwapKind kind,\n        BatchSwapStep[] memory swaps,\n        address[] memory assets,\n        FundManagement memory funds,\n        int256[] memory limits,\n        uint256 deadline\n    ) external payable returns (int256[] memory);\n\n    function getPool(bytes32 poolId) external view returns (address, uint8);\n\n    function getPoolTokens(bytes32 poolId)\n        external\n        view\n        returns (address[] memory tokens, uint256[] memory balances, uint256 lastChangeBlock);\n}\n"},"contracts/interfaces/IHopSwap.sol":{"content":"// SPDX-License-Identifier: GPL-3.0-or-later\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n\n// You should have received a copy of the GNU General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\npragma solidity >=0.8.0;\n\ninterface IHopSwap {\n    function getTokenIndex(address) external view returns (uint8);\n\n    function swap(uint8 tokenIndexFrom, uint8 tokenIndexTo, uint256 dx, uint256 minDy, uint256 deadline)\n        external\n        returns (uint256);\n}\n"},"contracts/interfaces/IOneInchV5AggregationRouter.sol":{"content":"// SPDX-License-Identifier: GPL-3.0-or-later\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n\n// You should have received a copy of the GNU General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\npragma experimental ABIEncoderV2;\npragma solidity ^0.8.0;\n\nimport '@openzeppelin/contracts/token/ERC20/IERC20.sol';\n\ninterface IAggregationExecutor {\n    /// @notice propagates information about original msg.sender and executes arbitrary data\n    function execute(address msgSender) external payable;\n}\n\ninterface IOneInchV5AggregationRouter {\n    struct SwapDescription {\n        IERC20 srcToken;\n        IERC20 dstToken;\n        address payable srcReceiver;\n        address payable dstReceiver;\n        uint256 amount;\n        uint256 minReturnAmount;\n        uint256 flags;\n    }\n\n    /// @notice Performs a swap, delegating all calls encoded in `data` to `executor`. See tests for usage examples\n    /// @dev router keeps 1 wei of every token on the contract balance for gas optimisations reasons. This affects first swap of every token by leaving 1 wei on the contract.\n    /// @param executor Aggregation executor that executes calls described in `data`\n    /// @param desc Swap description\n    /// @param permit Should contain valid permit that can be used in `IERC20Permit.permit` calls.\n    /// @param data Encoded calls that `caller` should execute in between of swaps\n    /// @return returnAmount Resulting token amount\n    /// @return spentAmount Source token amount\n    function swap(\n        IAggregationExecutor executor,\n        SwapDescription calldata desc,\n        bytes calldata permit,\n        bytes calldata data\n    ) external payable returns (uint256 returnAmount, uint256 spentAmount);\n}\n"},"contracts/interfaces/IParaswapV5Augustus.sol":{"content":"// SPDX-License-Identifier: GPL-3.0-or-later\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n\n// You should have received a copy of the GNU General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\npragma solidity ^0.8.0;\n\ninterface IParaswapV5Augustus {\n    function getTokenTransferProxy() external view returns (address);\n}\n"},"contracts/ISwapConnector.sol":{"content":"// SPDX-License-Identifier: GPL-3.0-or-later\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n\n// You should have received a copy of the GNU General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\npragma solidity >=0.8.0;\n\nimport '@mimic-fi/v2-registry/contracts/implementations/IImplementation.sol';\n\n/**\n * @title ISwapConnector\n * @dev Swap Connector interface to perform token swaps. It must follow the IImplementation interface.\n */\ninterface ISwapConnector is IImplementation {\n    /**\n     * @dev Enum identifying the sources proposed: Uniswap V2, Uniswap V3, Balancer V2, Paraswap V5, 1inch V5, and Hop.\n     */\n    enum Source {\n        UniswapV2,\n        UniswapV3,\n        BalancerV2,\n        ParaswapV5,\n        OneInchV5,\n        Hop\n    }\n\n    /**\n     * @dev Swaps two tokens\n     * @param source Source to execute the requested swap\n     * @param tokenIn Token being sent\n     * @param tokenOut Token being received\n     * @param amountIn Amount of tokenIn being swapped\n     * @param minAmountOut Minimum amount of tokenOut willing to receive\n     * @param data Encoded data to specify different swap parameters depending on the source picked\n     */\n    function swap(\n        uint8 source,\n        address tokenIn,\n        address tokenOut,\n        uint256 amountIn,\n        uint256 minAmountOut,\n        bytes memory data\n    ) external returns (uint256 amountOut);\n}\n"},"contracts/SwapConnector.sol":{"content":"// SPDX-License-Identifier: GPL-3.0-or-later\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n\n// You should have received a copy of the GNU General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\npragma solidity ^0.8.0;\n\nimport '@mimic-fi/v2-registry/contracts/implementations/BaseImplementation.sol';\n\nimport './ISwapConnector.sol';\nimport './connectors/UniswapV2Connector.sol';\nimport './connectors/UniswapV3Connector.sol';\nimport './connectors/BalancerV2Connector.sol';\nimport './connectors/ParaswapV5Connector.sol';\nimport './connectors/OneInchV5Connector.sol';\nimport './connectors/HopSwapConnector.sol';\n\n/**\n * @title SwapConnector\n * @dev Swap Connector implementation that interfaces with Uniswap V2, Uniswap V3, Balancer V2, Paraswap V5, 1inch V5,\n * and Hop.\n *\n * It inherits from BaseImplementation which means it's implementation can be used directly from the Mimic Registry,\n * it does not require initialization.\n *\n * IMPORTANT! As many other implementations in this repo, this contract is intended to be used as a LIBRARY, not\n * a contract. Due to limitations of the Solidity compiler, it's not possible to work with immutable variables in\n * libraries yet. Therefore, we are relying on contracts without storage variables so they can be safely\n * delegate-called if desired.\n */\ncontract SwapConnector is\n    ISwapConnector,\n    BaseImplementation,\n    UniswapV2Connector,\n    UniswapV3Connector,\n    BalancerV2Connector,\n    ParaswapV5Connector,\n    HopSwapConnector,\n    OneInchV5Connector\n{\n    // Namespace under which the Swap Connector is registered in the Mimic Registry\n    bytes32 public constant override NAMESPACE = keccak256('SWAP_CONNECTOR');\n\n    /**\n     * @dev Initializes the SwapConnector contract\n     * @param uniswapV2Router Uniswap V2 router reference\n     * @param uniswapV3Router Uniswap V3 router reference\n     * @param balancerV2Vault Balancer V2 vault reference\n     * @param paraswapV5Augustus Paraswap V5 augustus reference\n     * @param registry Address of the Mimic Registry\n     */\n    constructor(\n        address uniswapV2Router,\n        address uniswapV3Router,\n        address balancerV2Vault,\n        address paraswapV5Augustus,\n        address oneInchV5Router,\n        address registry\n    )\n        UniswapV2Connector(uniswapV2Router)\n        UniswapV3Connector(uniswapV3Router)\n        BalancerV2Connector(balancerV2Vault)\n        ParaswapV5Connector(paraswapV5Augustus)\n        OneInchV5Connector(oneInchV5Router)\n        HopSwapConnector()\n        BaseImplementation(registry)\n    {\n        // solhint-disable-previous-line no-empty-blocks\n    }\n\n    /**\n     * @dev Swaps two tokens\n     * @param source Source to execute the requested swap\n     * @param tokenIn Token being sent\n     * @param tokenOut Token being received\n     * @param amountIn Amount of tokenIn being swapped\n     * @param minAmountOut Minimum amount of tokenOut willing to receive\n     * @param data Encoded data to specify different swap parameters depending on the source picked\n     */\n    function swap(\n        uint8 source,\n        address tokenIn,\n        address tokenOut,\n        uint256 amountIn,\n        uint256 minAmountOut,\n        bytes memory data\n    ) external override returns (uint256 amountOut) {\n        Source s = Source(source);\n        if (s == Source.UniswapV2) return _swapUniswapV2(tokenIn, tokenOut, amountIn, minAmountOut, data);\n        else if (s == Source.UniswapV3) return _swapUniswapV3(tokenIn, tokenOut, amountIn, minAmountOut, data);\n        else if (s == Source.BalancerV2) return _swapBalancerV2(tokenIn, tokenOut, amountIn, minAmountOut, data);\n        else if (s == Source.ParaswapV5) return _swapParaswapV5(tokenIn, tokenOut, amountIn, minAmountOut, data);\n        else if (s == Source.OneInchV5) return _swapOneInchV5(tokenIn, tokenOut, amountIn, minAmountOut, data);\n        else if (s == Source.Hop) return _swapHop(tokenIn, tokenOut, amountIn, minAmountOut, data);\n        else revert('INVALID_SOURCE');\n    }\n}\n"}},"settings":{"optimizer":{"enabled":true,"runs":10000},"outputSelection":{"*":{"*":["abi","evm.bytecode","evm.deployedBytecode","evm.methodIdentifiers","metadata"],"":["ast"]}}}},"output":{"errors":[{"component":"general","errorCode":"1878","formattedMessage":"Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.\n--> @uniswap/v2-core/contracts/interfaces/IUniswapV2Factory.sol\n\n","message":"SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.","severity":"warning","sourceLocation":{"end":-1,"file":"@uniswap/v2-core/contracts/interfaces/IUniswapV2Factory.sol","start":-1},"type":"Warning"},{"component":"general","errorCode":"1878","formattedMessage":"Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.\n--> @uniswap/v2-periphery/contracts/interfaces/IUniswapV2Router01.sol\n\n","message":"SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.","severity":"warning","sourceLocation":{"end":-1,"file":"@uniswap/v2-periphery/contracts/interfaces/IUniswapV2Router01.sol","start":-1},"type":"Warning"},{"component":"general","errorCode":"1878","formattedMessage":"Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.\n--> @uniswap/v2-periphery/contracts/interfaces/IUniswapV2Router02.sol\n\n","message":"SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.","severity":"warning","sourceLocation":{"end":-1,"file":"@uniswap/v2-periphery/contracts/interfaces/IUniswapV2Router02.sol","start":-1},"type":"Warning"}],"sources":{"@mimic-fi/v2-helpers/contracts/auth/IAuthorizer.sol":{"ast":{"absolutePath":"@mimic-fi/v2-helpers/contracts/auth/IAuthorizer.sol","exportedSymbols":{"IAuthorizer":[43]},"id":44,"license":"GPL-3.0-or-later","nodeType":"SourceUnit","nodes":[{"id":1,"literals":["solidity",">=","0.8",".0"],"nodeType":"PragmaDirective","src":"688:24:0"},{"abstract":false,"baseContracts":[],"contractDependencies":[],"contractKind":"interface","documentation":{"id":2,"nodeType":"StructuredDocumentation","src":"714:29:0","text":" @title IAuthorizer"},"fullyImplemented":false,"id":43,"linearizedBaseContracts":[43],"name":"IAuthorizer","nameLocation":"754:11:0","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":3,"nodeType":"StructuredDocumentation","src":"772:80:0","text":" @dev Emitted when an account is authorized to call a function"},"id":9,"name":"Authorized","nameLocation":"863:10:0","nodeType":"EventDefinition","parameters":{"id":8,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5,"indexed":true,"mutability":"mutable","name":"who","nameLocation":"890:3:0","nodeType":"VariableDeclaration","scope":9,"src":"874:19:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4,"name":"address","nodeType":"ElementaryTypeName","src":"874:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7,"indexed":false,"mutability":"mutable","name":"what","nameLocation":"902:4:0","nodeType":"VariableDeclaration","scope":9,"src":"895:11:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":6,"name":"bytes4","nodeType":"ElementaryTypeName","src":"895:6:0","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"873:34:0"},"src":"857:51:0"},{"anonymous":false,"documentation":{"id":10,"nodeType":"StructuredDocumentation","src":"914:82:0","text":" @dev Emitted when an account is unauthorized to call a function"},"id":16,"name":"Unauthorized","nameLocation":"1007:12:0","nodeType":"EventDefinition","parameters":{"id":15,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12,"indexed":true,"mutability":"mutable","name":"who","nameLocation":"1036:3:0","nodeType":"VariableDeclaration","scope":16,"src":"1020:19:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":11,"name":"address","nodeType":"ElementaryTypeName","src":"1020:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":14,"indexed":false,"mutability":"mutable","name":"what","nameLocation":"1048:4:0","nodeType":"VariableDeclaration","scope":16,"src":"1041:11:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":13,"name":"bytes4","nodeType":"ElementaryTypeName","src":"1041:6:0","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"1019:34:0"},"src":"1001:53:0"},{"documentation":{"id":17,"nodeType":"StructuredDocumentation","src":"1060:191:0","text":" @dev Authorizes someone to call a function. Sender must be authorize to do so.\n @param who Address to be authorized\n @param what Function selector to be granted"},"functionSelector":"933f0f3c","id":24,"implemented":false,"kind":"function","modifiers":[],"name":"authorize","nameLocation":"1265:9:0","nodeType":"FunctionDefinition","parameters":{"id":22,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19,"mutability":"mutable","name":"who","nameLocation":"1283:3:0","nodeType":"VariableDeclaration","scope":24,"src":"1275:11:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":18,"name":"address","nodeType":"ElementaryTypeName","src":"1275:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":21,"mutability":"mutable","name":"what","nameLocation":"1295:4:0","nodeType":"VariableDeclaration","scope":24,"src":"1288:11:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":20,"name":"bytes4","nodeType":"ElementaryTypeName","src":"1288:6:0","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"1274:26:0"},"returnParameters":{"id":23,"nodeType":"ParameterList","parameters":[],"src":"1309:0:0"},"scope":43,"src":"1256:54:0","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":25,"nodeType":"StructuredDocumentation","src":"1316:195:0","text":" @dev Unauthorizes someone to call a function. Sender must be authorize to do so.\n @param who Address to be unauthorized\n @param what Function selector to be revoked"},"functionSelector":"6646a436","id":32,"implemented":false,"kind":"function","modifiers":[],"name":"unauthorize","nameLocation":"1525:11:0","nodeType":"FunctionDefinition","parameters":{"id":30,"nodeType":"ParameterList","parameters":[{"constant":false,"id":27,"mutability":"mutable","name":"who","nameLocation":"1545:3:0","nodeType":"VariableDeclaration","scope":32,"src":"1537:11:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":26,"name":"address","nodeType":"ElementaryTypeName","src":"1537:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":29,"mutability":"mutable","name":"what","nameLocation":"1557:4:0","nodeType":"VariableDeclaration","scope":32,"src":"1550:11:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":28,"name":"bytes4","nodeType":"ElementaryTypeName","src":"1550:6:0","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"1536:26:0"},"returnParameters":{"id":31,"nodeType":"ParameterList","parameters":[],"src":"1571:0:0"},"scope":43,"src":"1516:56:0","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":33,"nodeType":"StructuredDocumentation","src":"1578:233:0","text":" @dev Tells whether someone is allowed to call a function or not. It returns true if it's allowed to anyone.\n @param who Address asking permission for\n @param what Function selector asking permission for"},"functionSelector":"d9972b96","id":42,"implemented":false,"kind":"function","modifiers":[],"name":"isAuthorized","nameLocation":"1825:12:0","nodeType":"FunctionDefinition","parameters":{"id":38,"nodeType":"ParameterList","parameters":[{"constant":false,"id":35,"mutability":"mutable","name":"who","nameLocation":"1846:3:0","nodeType":"VariableDeclaration","scope":42,"src":"1838:11:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":34,"name":"address","nodeType":"ElementaryTypeName","src":"1838:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":37,"mutability":"mutable","name":"what","nameLocation":"1858:4:0","nodeType":"VariableDeclaration","scope":42,"src":"1851:11:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":36,"name":"bytes4","nodeType":"ElementaryTypeName","src":"1851:6:0","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"1837:26:0"},"returnParameters":{"id":41,"nodeType":"ParameterList","parameters":[{"constant":false,"id":40,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":42,"src":"1887:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":39,"name":"bool","nodeType":"ElementaryTypeName","src":"1887:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1886:6:0"},"scope":43,"src":"1816:77:0","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":44,"src":"744:1151:0"}],"src":"688:1208:0"},"id":0},"@mimic-fi/v2-helpers/contracts/math/UncheckedMath.sol":{"ast":{"absolutePath":"@mimic-fi/v2-helpers/contracts/math/UncheckedMath.sol","exportedSymbols":{"UncheckedMath":[127]},"id":128,"license":"GPL-3.0-or-later","nodeType":"SourceUnit","nodes":[{"id":45,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"688:23:1"},{"abstract":false,"baseContracts":[],"contractDependencies":[],"contractKind":"library","documentation":{"id":46,"nodeType":"StructuredDocumentation","src":"713:84:1","text":" @title UncheckedMath\n @dev Math library to perform unchecked operations"},"fullyImplemented":true,"id":127,"linearizedBaseContracts":[127],"name":"UncheckedMath","nameLocation":"806:13:1","nodeType":"ContractDefinition","nodes":[{"body":{"id":61,"nodeType":"Block","src":"966:63:1","statements":[{"id":60,"nodeType":"UncheckedBlock","src":"976:47:1","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":58,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":56,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":49,"src":"1007:1:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":57,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":51,"src":"1011:1:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1007:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":55,"id":59,"nodeType":"Return","src":"1000:12:1"}]}]},"documentation":{"id":47,"nodeType":"StructuredDocumentation","src":"826:59:1","text":" @dev Unsafely adds two unsigned integers"},"id":62,"implemented":true,"kind":"function","modifiers":[],"name":"uncheckedAdd","nameLocation":"899:12:1","nodeType":"FunctionDefinition","parameters":{"id":52,"nodeType":"ParameterList","parameters":[{"constant":false,"id":49,"mutability":"mutable","name":"a","nameLocation":"920:1:1","nodeType":"VariableDeclaration","scope":62,"src":"912:9:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":48,"name":"uint256","nodeType":"ElementaryTypeName","src":"912:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":51,"mutability":"mutable","name":"b","nameLocation":"931:1:1","nodeType":"VariableDeclaration","scope":62,"src":"923:9:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":50,"name":"uint256","nodeType":"ElementaryTypeName","src":"923:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"911:22:1"},"returnParameters":{"id":55,"nodeType":"ParameterList","parameters":[{"constant":false,"id":54,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":62,"src":"957:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":53,"name":"uint256","nodeType":"ElementaryTypeName","src":"957:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"956:9:1"},"scope":127,"src":"890:139:1","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":77,"nodeType":"Block","src":"1180:63:1","statements":[{"id":76,"nodeType":"UncheckedBlock","src":"1190:47:1","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":74,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":72,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":65,"src":"1221:1:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":73,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":67,"src":"1225:1:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1221:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":71,"id":75,"nodeType":"Return","src":"1214:12:1"}]}]},"documentation":{"id":63,"nodeType":"StructuredDocumentation","src":"1035:64:1","text":" @dev Unsafely subtracts two unsigned integers"},"id":78,"implemented":true,"kind":"function","modifiers":[],"name":"uncheckedSub","nameLocation":"1113:12:1","nodeType":"FunctionDefinition","parameters":{"id":68,"nodeType":"ParameterList","parameters":[{"constant":false,"id":65,"mutability":"mutable","name":"a","nameLocation":"1134:1:1","nodeType":"VariableDeclaration","scope":78,"src":"1126:9:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":64,"name":"uint256","nodeType":"ElementaryTypeName","src":"1126:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":67,"mutability":"mutable","name":"b","nameLocation":"1145:1:1","nodeType":"VariableDeclaration","scope":78,"src":"1137:9:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":66,"name":"uint256","nodeType":"ElementaryTypeName","src":"1137:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1125:22:1"},"returnParameters":{"id":71,"nodeType":"ParameterList","parameters":[{"constant":false,"id":70,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":78,"src":"1171:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":69,"name":"uint256","nodeType":"ElementaryTypeName","src":"1171:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1170:9:1"},"scope":127,"src":"1104:139:1","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":93,"nodeType":"Block","src":"1395:63:1","statements":[{"id":92,"nodeType":"UncheckedBlock","src":"1405:47:1","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":90,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":88,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":81,"src":"1436:1:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":89,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":83,"src":"1440:1:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1436:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":87,"id":91,"nodeType":"Return","src":"1429:12:1"}]}]},"documentation":{"id":79,"nodeType":"StructuredDocumentation","src":"1249:65:1","text":" @dev Unsafely multiplies two unsigned integers"},"id":94,"implemented":true,"kind":"function","modifiers":[],"name":"uncheckedMul","nameLocation":"1328:12:1","nodeType":"FunctionDefinition","parameters":{"id":84,"nodeType":"ParameterList","parameters":[{"constant":false,"id":81,"mutability":"mutable","name":"a","nameLocation":"1349:1:1","nodeType":"VariableDeclaration","scope":94,"src":"1341:9:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":80,"name":"uint256","nodeType":"ElementaryTypeName","src":"1341:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":83,"mutability":"mutable","name":"b","nameLocation":"1360:1:1","nodeType":"VariableDeclaration","scope":94,"src":"1352:9:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":82,"name":"uint256","nodeType":"ElementaryTypeName","src":"1352:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1340:22:1"},"returnParameters":{"id":87,"nodeType":"ParameterList","parameters":[{"constant":false,"id":86,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":94,"src":"1386:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":85,"name":"uint256","nodeType":"ElementaryTypeName","src":"1386:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1385:9:1"},"scope":127,"src":"1319:139:1","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":109,"nodeType":"Block","src":"1605:63:1","statements":[{"id":108,"nodeType":"UncheckedBlock","src":"1615:47:1","statements":[{"expression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":106,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":104,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":97,"src":"1646:1:1","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":105,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":99,"src":"1650:1:1","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1646:5:1","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":103,"id":107,"nodeType":"Return","src":"1639:12:1"}]}]},"documentation":{"id":95,"nodeType":"StructuredDocumentation","src":"1464:63:1","text":" @dev Unsafely multiplies two signed integers"},"id":110,"implemented":true,"kind":"function","modifiers":[],"name":"uncheckedMul","nameLocation":"1541:12:1","nodeType":"FunctionDefinition","parameters":{"id":100,"nodeType":"ParameterList","parameters":[{"constant":false,"id":97,"mutability":"mutable","name":"a","nameLocation":"1561:1:1","nodeType":"VariableDeclaration","scope":110,"src":"1554:8:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":96,"name":"int256","nodeType":"ElementaryTypeName","src":"1554:6:1","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":99,"mutability":"mutable","name":"b","nameLocation":"1571:1:1","nodeType":"VariableDeclaration","scope":110,"src":"1564:8:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":98,"name":"int256","nodeType":"ElementaryTypeName","src":"1564:6:1","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1553:20:1"},"returnParameters":{"id":103,"nodeType":"ParameterList","parameters":[{"constant":false,"id":102,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":110,"src":"1597:6:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":101,"name":"int256","nodeType":"ElementaryTypeName","src":"1597:6:1","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1596:8:1"},"scope":127,"src":"1532:136:1","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":125,"nodeType":"Block","src":"1817:63:1","statements":[{"id":124,"nodeType":"UncheckedBlock","src":"1827:47:1","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":122,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":120,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":113,"src":"1858:1:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":121,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":115,"src":"1862:1:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1858:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":119,"id":123,"nodeType":"Return","src":"1851:12:1"}]}]},"documentation":{"id":111,"nodeType":"StructuredDocumentation","src":"1674:62:1","text":" @dev Unsafely divides two unsigned integers"},"id":126,"implemented":true,"kind":"function","modifiers":[],"name":"uncheckedDiv","nameLocation":"1750:12:1","nodeType":"FunctionDefinition","parameters":{"id":116,"nodeType":"ParameterList","parameters":[{"constant":false,"id":113,"mutability":"mutable","name":"a","nameLocation":"1771:1:1","nodeType":"VariableDeclaration","scope":126,"src":"1763:9:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":112,"name":"uint256","nodeType":"ElementaryTypeName","src":"1763:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":115,"mutability":"mutable","name":"b","nameLocation":"1782:1:1","nodeType":"VariableDeclaration","scope":126,"src":"1774:9:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":114,"name":"uint256","nodeType":"ElementaryTypeName","src":"1774:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1762:22:1"},"returnParameters":{"id":119,"nodeType":"ParameterList","parameters":[{"constant":false,"id":118,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":126,"src":"1808:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":117,"name":"uint256","nodeType":"ElementaryTypeName","src":"1808:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1807:9:1"},"scope":127,"src":"1741:139:1","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":128,"src":"798:1084:1"}],"src":"688:1195:1"},"id":1},"@mimic-fi/v2-helpers/contracts/utils/Arrays.sol":{"ast":{"absolutePath":"@mimic-fi/v2-helpers/contracts/utils/Arrays.sol","exportedSymbols":{"Arrays":[396],"UncheckedMath":[127]},"id":397,"license":"GPL-3.0-or-later","nodeType":"SourceUnit","nodes":[{"id":129,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"688:23:2"},{"absolutePath":"@mimic-fi/v2-helpers/contracts/math/UncheckedMath.sol","file":"../math/UncheckedMath.sol","id":130,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":397,"sourceUnit":128,"src":"713:35:2","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[],"contractDependencies":[],"contractKind":"library","documentation":{"id":131,"nodeType":"StructuredDocumentation","src":"750:65:2","text":" @title Arrays\n @dev Helper methods to operate arrays"},"fullyImplemented":true,"id":396,"linearizedBaseContracts":[396],"name":"Arrays","nameLocation":"824:6:2","nodeType":"ContractDefinition","nodes":[{"id":134,"libraryName":{"id":132,"name":"UncheckedMath","nodeType":"IdentifierPath","referencedDeclaration":127,"src":"843:13:2"},"nodeType":"UsingForDirective","src":"837:32:2","typeName":{"id":133,"name":"uint256","nodeType":"ElementaryTypeName","src":"861:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},{"body":{"id":194,"nodeType":"Block","src":"1049:267:2","statements":[{"assignments":[148],"declarations":[{"constant":false,"id":148,"mutability":"mutable","name":"containsA","nameLocation":"1064:9:2","nodeType":"VariableDeclaration","scope":194,"src":"1059:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":147,"name":"bool","nodeType":"ElementaryTypeName","src":"1059:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":149,"nodeType":"VariableDeclarationStatement","src":"1059:14:2"},{"assignments":[151],"declarations":[{"constant":false,"id":151,"mutability":"mutable","name":"containsB","nameLocation":"1088:9:2","nodeType":"VariableDeclaration","scope":194,"src":"1083:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":150,"name":"bool","nodeType":"ElementaryTypeName","src":"1083:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":152,"nodeType":"VariableDeclarationStatement","src":"1083:14:2"},{"body":{"id":188,"nodeType":"Block","src":"1166:105:2","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":172,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":168,"name":"arr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":138,"src":"1184:3:2","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":170,"indexExpression":{"id":169,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":154,"src":"1188:1:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1184:6:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":171,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":140,"src":"1194:1:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1184:11:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":177,"nodeType":"IfStatement","src":"1180:33:2","trueBody":{"expression":{"id":175,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":173,"name":"containsA","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":148,"src":"1197:9:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":174,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1209:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"1197:16:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":176,"nodeType":"ExpressionStatement","src":"1197:16:2"}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":182,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":178,"name":"arr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":138,"src":"1231:3:2","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":180,"indexExpression":{"id":179,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":154,"src":"1235:1:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1231:6:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":181,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":142,"src":"1241:1:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1231:11:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":187,"nodeType":"IfStatement","src":"1227:33:2","trueBody":{"expression":{"id":185,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":183,"name":"containsB","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":151,"src":"1244:9:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":184,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1256:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"1244:16:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":186,"nodeType":"ExpressionStatement","src":"1244:16:2"}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":160,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":157,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":154,"src":"1127:1:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":158,"name":"arr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":138,"src":"1131:3:2","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":159,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"1131:10:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1127:14:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":189,"initializationExpression":{"assignments":[154],"declarations":[{"constant":false,"id":154,"mutability":"mutable","name":"i","nameLocation":"1120:1:2","nodeType":"VariableDeclaration","scope":189,"src":"1112:9:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":153,"name":"uint256","nodeType":"ElementaryTypeName","src":"1112:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":156,"initialValue":{"hexValue":"30","id":155,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1124:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"1112:13:2"},"loopExpression":{"expression":{"id":166,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":161,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":154,"src":"1143:1:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"hexValue":"31","id":164,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1162:1:2","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"}],"expression":{"id":162,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":154,"src":"1147:1:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":163,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"uncheckedAdd","nodeType":"MemberAccess","referencedDeclaration":62,"src":"1147:14:2","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":165,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1147:17:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1143:21:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":167,"nodeType":"ExpressionStatement","src":"1143:21:2"},"nodeType":"ForStatement","src":"1107:164:2"},{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":192,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":190,"name":"containsA","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":148,"src":"1287:9:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"id":191,"name":"containsB","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":151,"src":"1300:9:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"1287:22:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":146,"id":193,"nodeType":"Return","src":"1280:29:2"}]},"documentation":{"id":135,"nodeType":"StructuredDocumentation","src":"875:78:2","text":" @dev Tells if an array of addresses includes the given ones"},"id":195,"implemented":true,"kind":"function","modifiers":[],"name":"includes","nameLocation":"967:8:2","nodeType":"FunctionDefinition","parameters":{"id":143,"nodeType":"ParameterList","parameters":[{"constant":false,"id":138,"mutability":"mutable","name":"arr","nameLocation":"993:3:2","nodeType":"VariableDeclaration","scope":195,"src":"976:20:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":136,"name":"address","nodeType":"ElementaryTypeName","src":"976:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":137,"nodeType":"ArrayTypeName","src":"976:9:2","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":140,"mutability":"mutable","name":"a","nameLocation":"1006:1:2","nodeType":"VariableDeclaration","scope":195,"src":"998:9:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":139,"name":"address","nodeType":"ElementaryTypeName","src":"998:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":142,"mutability":"mutable","name":"b","nameLocation":"1017:1:2","nodeType":"VariableDeclaration","scope":195,"src":"1009:9:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":141,"name":"address","nodeType":"ElementaryTypeName","src":"1009:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"975:44:2"},"returnParameters":{"id":146,"nodeType":"ParameterList","parameters":[{"constant":false,"id":145,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":195,"src":"1043:4:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":144,"name":"bool","nodeType":"ElementaryTypeName","src":"1043:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1042:6:2"},"scope":396,"src":"958:358:2","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":226,"nodeType":"Block","src":"1487:88:2","statements":[{"expression":{"id":212,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":206,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":204,"src":"1497:6:2","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"hexValue":"32","id":210,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1520:1:2","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"}],"id":209,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"1506:13:2","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_address_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (address[] memory)"},"typeName":{"baseType":{"id":207,"name":"address","nodeType":"ElementaryTypeName","src":"1510:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":208,"nodeType":"ArrayTypeName","src":"1510:9:2","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}}},"id":211,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1506:16:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"src":"1497:25:2","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":213,"nodeType":"ExpressionStatement","src":"1497:25:2"},{"expression":{"id":218,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":214,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":204,"src":"1532:6:2","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":216,"indexExpression":{"hexValue":"30","id":215,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1539:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"1532:9:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":217,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":198,"src":"1544:1:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1532:13:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":219,"nodeType":"ExpressionStatement","src":"1532:13:2"},{"expression":{"id":224,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":220,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":204,"src":"1555:6:2","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":222,"indexExpression":{"hexValue":"31","id":221,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1562:1:2","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"1555:9:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":223,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":200,"src":"1567:1:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1555:13:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":225,"nodeType":"ExpressionStatement","src":"1555:13:2"}]},"documentation":{"id":196,"nodeType":"StructuredDocumentation","src":"1322:76:2","text":" @dev Builds an array of addresses based on the given ones"},"id":227,"implemented":true,"kind":"function","modifiers":[],"name":"from","nameLocation":"1412:4:2","nodeType":"FunctionDefinition","parameters":{"id":201,"nodeType":"ParameterList","parameters":[{"constant":false,"id":198,"mutability":"mutable","name":"a","nameLocation":"1425:1:2","nodeType":"VariableDeclaration","scope":227,"src":"1417:9:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":197,"name":"address","nodeType":"ElementaryTypeName","src":"1417:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":200,"mutability":"mutable","name":"b","nameLocation":"1436:1:2","nodeType":"VariableDeclaration","scope":227,"src":"1428:9:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":199,"name":"address","nodeType":"ElementaryTypeName","src":"1428:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1416:22:2"},"returnParameters":{"id":205,"nodeType":"ParameterList","parameters":[{"constant":false,"id":204,"mutability":"mutable","name":"result","nameLocation":"1479:6:2","nodeType":"VariableDeclaration","scope":227,"src":"1462:23:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":202,"name":"address","nodeType":"ElementaryTypeName","src":"1462:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":203,"nodeType":"ArrayTypeName","src":"1462:9:2","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"1461:25:2"},"scope":396,"src":"1403:172:2","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":296,"nodeType":"Block","src":"1766:440:2","statements":[{"expression":{"id":251,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":241,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":239,"src":"1870:6:2","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"arguments":[{"hexValue":"32","id":248,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1915:1:2","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"}],"expression":{"expression":{"id":245,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":233,"src":"1893:1:2","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":246,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"1893:8:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":247,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"uncheckedAdd","nodeType":"MemberAccess","referencedDeclaration":62,"src":"1893:21:2","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":249,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1893:24:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":244,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"1879:13:2","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_address_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (address[] memory)"},"typeName":{"baseType":{"id":242,"name":"address","nodeType":"ElementaryTypeName","src":"1883:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":243,"nodeType":"ArrayTypeName","src":"1883:9:2","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}}},"id":250,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1879:39:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"src":"1870:48:2","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":252,"nodeType":"ExpressionStatement","src":"1870:48:2"},{"expression":{"id":257,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":253,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":239,"src":"1928:6:2","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":255,"indexExpression":{"hexValue":"30","id":254,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1935:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"1928:9:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":256,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":230,"src":"1940:1:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1928:13:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":258,"nodeType":"ExpressionStatement","src":"1928:13:2"},{"body":{"expression":{"id":283,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":274,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":239,"src":"2121:6:2","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":279,"indexExpression":{"arguments":[{"hexValue":"31","id":277,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2143:1:2","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"}],"expression":{"id":275,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":260,"src":"2128:1:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":276,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"uncheckedAdd","nodeType":"MemberAccess","referencedDeclaration":62,"src":"2128:14:2","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":278,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2128:17:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2121:25:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"baseExpression":{"id":280,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":233,"src":"2149:1:2","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":282,"indexExpression":{"id":281,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":260,"src":"2151:1:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2149:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2121:32:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":284,"nodeType":"ExpressionStatement","src":"2121:32:2"},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":266,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":263,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":260,"src":"2084:1:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":264,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":233,"src":"2088:1:2","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":265,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"2088:8:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2084:12:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":285,"initializationExpression":{"assignments":[260],"declarations":[{"constant":false,"id":260,"mutability":"mutable","name":"i","nameLocation":"2077:1:2","nodeType":"VariableDeclaration","scope":285,"src":"2069:9:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":259,"name":"uint256","nodeType":"ElementaryTypeName","src":"2069:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":262,"initialValue":{"hexValue":"30","id":261,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2081:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"2069:13:2"},"loopExpression":{"expression":{"id":272,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":267,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":260,"src":"2098:1:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"hexValue":"31","id":270,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2117:1:2","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"}],"expression":{"id":268,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":260,"src":"2102:1:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":269,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"uncheckedAdd","nodeType":"MemberAccess","referencedDeclaration":62,"src":"2102:14:2","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":271,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2102:17:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2098:21:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":273,"nodeType":"ExpressionStatement","src":"2098:21:2"},"nodeType":"ForStatement","src":"2064:89:2"},{"expression":{"id":294,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":286,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":239,"src":"2163:6:2","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":292,"indexExpression":{"arguments":[{"hexValue":"31","id":290,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2192:1:2","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"}],"expression":{"expression":{"id":287,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":233,"src":"2170:1:2","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":288,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"2170:8:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":289,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"uncheckedAdd","nodeType":"MemberAccess","referencedDeclaration":62,"src":"2170:21:2","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":291,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2170:24:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2163:32:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":293,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":235,"src":"2198:1:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2163:36:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":295,"nodeType":"ExpressionStatement","src":"2163:36:2"}]},"documentation":{"id":228,"nodeType":"StructuredDocumentation","src":"1581:76:2","text":" @dev Builds an array of addresses based on the given ones"},"id":297,"implemented":true,"kind":"function","modifiers":[],"name":"from","nameLocation":"1671:4:2","nodeType":"FunctionDefinition","parameters":{"id":236,"nodeType":"ParameterList","parameters":[{"constant":false,"id":230,"mutability":"mutable","name":"a","nameLocation":"1684:1:2","nodeType":"VariableDeclaration","scope":297,"src":"1676:9:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":229,"name":"address","nodeType":"ElementaryTypeName","src":"1676:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":233,"mutability":"mutable","name":"b","nameLocation":"1704:1:2","nodeType":"VariableDeclaration","scope":297,"src":"1687:18:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":231,"name":"address","nodeType":"ElementaryTypeName","src":"1687:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":232,"nodeType":"ArrayTypeName","src":"1687:9:2","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":235,"mutability":"mutable","name":"c","nameLocation":"1715:1:2","nodeType":"VariableDeclaration","scope":297,"src":"1707:9:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":234,"name":"address","nodeType":"ElementaryTypeName","src":"1707:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1675:42:2"},"returnParameters":{"id":240,"nodeType":"ParameterList","parameters":[{"constant":false,"id":239,"mutability":"mutable","name":"result","nameLocation":"1758:6:2","nodeType":"VariableDeclaration","scope":297,"src":"1741:23:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":237,"name":"address","nodeType":"ElementaryTypeName","src":"1741:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":238,"nodeType":"ArrayTypeName","src":"1741:9:2","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"1740:25:2"},"scope":396,"src":"1662:544:2","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":394,"nodeType":"Block","src":"2406:695:2","statements":[{"expression":{"id":326,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":312,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":310,"src":"2505:6:2","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"arguments":[{"hexValue":"31","id":323,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2573:1:2","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"}],"expression":{"arguments":[{"expression":{"id":319,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":306,"src":"2550:1:2","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":320,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"2550:8:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"expression":{"id":316,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":303,"src":"2528:1:2","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":317,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"2528:8:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":318,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"uncheckedAdd","nodeType":"MemberAccess","referencedDeclaration":62,"src":"2528:21:2","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":321,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2528:31:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":322,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"uncheckedAdd","nodeType":"MemberAccess","referencedDeclaration":62,"src":"2528:44:2","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":324,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2528:47:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":315,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"2514:13:2","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_address_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (address[] memory)"},"typeName":{"baseType":{"id":313,"name":"address","nodeType":"ElementaryTypeName","src":"2518:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":314,"nodeType":"ArrayTypeName","src":"2518:9:2","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}}},"id":325,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2514:62:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"src":"2505:71:2","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":327,"nodeType":"ExpressionStatement","src":"2505:71:2"},{"expression":{"id":332,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":328,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":310,"src":"2586:6:2","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":330,"indexExpression":{"hexValue":"30","id":329,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2593:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2586:9:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":331,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":300,"src":"2598:1:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2586:13:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":333,"nodeType":"ExpressionStatement","src":"2586:13:2"},{"body":{"id":360,"nodeType":"Block","src":"2779:57:2","statements":[{"expression":{"id":358,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":349,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":310,"src":"2793:6:2","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":354,"indexExpression":{"arguments":[{"hexValue":"31","id":352,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2815:1:2","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"}],"expression":{"id":350,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":335,"src":"2800:1:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":351,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"uncheckedAdd","nodeType":"MemberAccess","referencedDeclaration":62,"src":"2800:14:2","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":353,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2800:17:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2793:25:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"baseExpression":{"id":355,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":303,"src":"2821:1:2","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":357,"indexExpression":{"id":356,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":335,"src":"2823:1:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2821:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2793:32:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":359,"nodeType":"ExpressionStatement","src":"2793:32:2"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":341,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":338,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":335,"src":"2742:1:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":339,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":303,"src":"2746:1:2","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":340,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"2746:8:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2742:12:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":361,"initializationExpression":{"assignments":[335],"declarations":[{"constant":false,"id":335,"mutability":"mutable","name":"i","nameLocation":"2735:1:2","nodeType":"VariableDeclaration","scope":361,"src":"2727:9:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":334,"name":"uint256","nodeType":"ElementaryTypeName","src":"2727:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":337,"initialValue":{"hexValue":"30","id":336,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2739:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"2727:13:2"},"loopExpression":{"expression":{"id":347,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":342,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":335,"src":"2756:1:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"hexValue":"31","id":345,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2775:1:2","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"}],"expression":{"id":343,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":335,"src":"2760:1:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":344,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"uncheckedAdd","nodeType":"MemberAccess","referencedDeclaration":62,"src":"2760:14:2","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":346,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2760:17:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2756:21:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":348,"nodeType":"ExpressionStatement","src":"2756:21:2"},"nodeType":"ForStatement","src":"2722:114:2"},{"body":{"id":392,"nodeType":"Block","src":"3015:80:2","statements":[{"expression":{"id":390,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":377,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":310,"src":"3029:6:2","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":386,"indexExpression":{"arguments":[{"id":384,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":363,"src":"3074:1:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"hexValue":"31","id":381,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3058:1:2","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"}],"expression":{"expression":{"id":378,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":303,"src":"3036:1:2","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":379,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"3036:8:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":380,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"uncheckedAdd","nodeType":"MemberAccess","referencedDeclaration":62,"src":"3036:21:2","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":382,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3036:24:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":383,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"uncheckedAdd","nodeType":"MemberAccess","referencedDeclaration":62,"src":"3036:37:2","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":385,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3036:40:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"3029:48:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"baseExpression":{"id":387,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":306,"src":"3080:1:2","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":389,"indexExpression":{"id":388,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":363,"src":"3082:1:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3080:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3029:55:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":391,"nodeType":"ExpressionStatement","src":"3029:55:2"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":369,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":366,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":363,"src":"2978:1:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":367,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":306,"src":"2982:1:2","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":368,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"2982:8:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2978:12:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":393,"initializationExpression":{"assignments":[363],"declarations":[{"constant":false,"id":363,"mutability":"mutable","name":"i","nameLocation":"2971:1:2","nodeType":"VariableDeclaration","scope":393,"src":"2963:9:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":362,"name":"uint256","nodeType":"ElementaryTypeName","src":"2963:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":365,"initialValue":{"hexValue":"30","id":364,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2975:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"2963:13:2"},"loopExpression":{"expression":{"id":375,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":370,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":363,"src":"2992:1:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"hexValue":"31","id":373,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3011:1:2","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"}],"expression":{"id":371,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":363,"src":"2996:1:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":372,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"uncheckedAdd","nodeType":"MemberAccess","referencedDeclaration":62,"src":"2996:14:2","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":374,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2996:17:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2992:21:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":376,"nodeType":"ExpressionStatement","src":"2992:21:2"},"nodeType":"ForStatement","src":"2958:137:2"}]},"documentation":{"id":298,"nodeType":"StructuredDocumentation","src":"2212:76:2","text":" @dev Builds an array of addresses based on the given ones"},"id":395,"implemented":true,"kind":"function","modifiers":[],"name":"from","nameLocation":"2302:4:2","nodeType":"FunctionDefinition","parameters":{"id":307,"nodeType":"ParameterList","parameters":[{"constant":false,"id":300,"mutability":"mutable","name":"a","nameLocation":"2315:1:2","nodeType":"VariableDeclaration","scope":395,"src":"2307:9:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":299,"name":"address","nodeType":"ElementaryTypeName","src":"2307:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":303,"mutability":"mutable","name":"b","nameLocation":"2335:1:2","nodeType":"VariableDeclaration","scope":395,"src":"2318:18:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":301,"name":"address","nodeType":"ElementaryTypeName","src":"2318:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":302,"nodeType":"ArrayTypeName","src":"2318:9:2","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":306,"mutability":"mutable","name":"c","nameLocation":"2355:1:2","nodeType":"VariableDeclaration","scope":395,"src":"2338:18:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":304,"name":"address","nodeType":"ElementaryTypeName","src":"2338:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":305,"nodeType":"ArrayTypeName","src":"2338:9:2","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"2306:51:2"},"returnParameters":{"id":311,"nodeType":"ParameterList","parameters":[{"constant":false,"id":310,"mutability":"mutable","name":"result","nameLocation":"2398:6:2","nodeType":"VariableDeclaration","scope":395,"src":"2381:23:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":308,"name":"address","nodeType":"ElementaryTypeName","src":"2381:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":309,"nodeType":"ArrayTypeName","src":"2381:9:2","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"2380:25:2"},"scope":396,"src":"2293:808:2","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":397,"src":"816:2287:2"}],"src":"688:2416:2"},"id":2},"@mimic-fi/v2-helpers/contracts/utils/Bytes.sol":{"ast":{"absolutePath":"@mimic-fi/v2-helpers/contracts/utils/Bytes.sol","exportedSymbols":{"Bytes":[434]},"id":435,"license":"GPL-3.0-or-later","nodeType":"SourceUnit","nodes":[{"id":398,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"688:23:3"},{"abstract":false,"baseContracts":[],"contractDependencies":[],"contractKind":"library","documentation":{"id":399,"nodeType":"StructuredDocumentation","src":"713:77:3","text":" @title Bytes\n @dev Helper methods to operate bytes-related types"},"fullyImplemented":true,"id":434,"linearizedBaseContracts":[434],"name":"Bytes","nameLocation":"799:5:3","nodeType":"ContractDefinition","nodes":[{"body":{"id":415,"nodeType":"Block","src":"967:53:3","statements":[{"expression":{"arguments":[{"id":411,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":402,"src":"1001:4:3","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":412,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":404,"src":"1007:5:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":409,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"984:3:3","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":410,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"encodePacked","nodeType":"MemberAccess","src":"984:16:3","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":413,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"984:29:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":408,"id":414,"nodeType":"Return","src":"977:36:3"}]},"documentation":{"id":400,"nodeType":"StructuredDocumentation","src":"811:64:3","text":" @dev Concatenates an address to a bytes array"},"id":416,"implemented":true,"kind":"function","modifiers":[],"name":"concat","nameLocation":"889:6:3","nodeType":"FunctionDefinition","parameters":{"id":405,"nodeType":"ParameterList","parameters":[{"constant":false,"id":402,"mutability":"mutable","name":"self","nameLocation":"909:4:3","nodeType":"VariableDeclaration","scope":416,"src":"896:17:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":401,"name":"bytes","nodeType":"ElementaryTypeName","src":"896:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":404,"mutability":"mutable","name":"value","nameLocation":"923:5:3","nodeType":"VariableDeclaration","scope":416,"src":"915:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":403,"name":"address","nodeType":"ElementaryTypeName","src":"915:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"895:34:3"},"returnParameters":{"id":408,"nodeType":"ParameterList","parameters":[{"constant":false,"id":407,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":416,"src":"953:12:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":406,"name":"bytes","nodeType":"ElementaryTypeName","src":"953:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"952:14:3"},"scope":434,"src":"880:140:3","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":432,"nodeType":"Block","src":"1180:53:3","statements":[{"expression":{"arguments":[{"id":428,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":419,"src":"1214:4:3","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":429,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":421,"src":"1220:5:3","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint24","typeString":"uint24"}],"expression":{"id":426,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"1197:3:3","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":427,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"encodePacked","nodeType":"MemberAccess","src":"1197:16:3","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":430,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1197:29:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":425,"id":431,"nodeType":"Return","src":"1190:36:3"}]},"documentation":{"id":417,"nodeType":"StructuredDocumentation","src":"1026:63:3","text":" @dev Concatenates an uint24 to a bytes array"},"id":433,"implemented":true,"kind":"function","modifiers":[],"name":"concat","nameLocation":"1103:6:3","nodeType":"FunctionDefinition","parameters":{"id":422,"nodeType":"ParameterList","parameters":[{"constant":false,"id":419,"mutability":"mutable","name":"self","nameLocation":"1123:4:3","nodeType":"VariableDeclaration","scope":433,"src":"1110:17:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":418,"name":"bytes","nodeType":"ElementaryTypeName","src":"1110:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":421,"mutability":"mutable","name":"value","nameLocation":"1136:5:3","nodeType":"VariableDeclaration","scope":433,"src":"1129:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"},"typeName":{"id":420,"name":"uint24","nodeType":"ElementaryTypeName","src":"1129:6:3","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"visibility":"internal"}],"src":"1109:33:3"},"returnParameters":{"id":425,"nodeType":"ParameterList","parameters":[{"constant":false,"id":424,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":433,"src":"1166:12:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":423,"name":"bytes","nodeType":"ElementaryTypeName","src":"1166:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1165:14:3"},"scope":434,"src":"1094:139:3","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":435,"src":"791:444:3"}],"src":"688:548:3"},"id":3},"@mimic-fi/v2-registry/contracts/implementations/BaseImplementation.sol":{"ast":{"absolutePath":"@mimic-fi/v2-registry/contracts/implementations/BaseImplementation.sol","exportedSymbols":{"Address":[1469],"BaseImplementation":[526],"IAuthorizer":[43],"IImplementation":[542],"IRegistry":[603],"Initializable":[754]},"id":527,"license":"GPL-3.0-or-later","nodeType":"SourceUnit","nodes":[{"id":436,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"688:23:4"},{"absolutePath":"@openzeppelin/contracts/proxy/utils/Initializable.sol","file":"@openzeppelin/contracts/proxy/utils/Initializable.sol","id":437,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":527,"sourceUnit":755,"src":"713:63:4","symbolAliases":[],"unitAlias":""},{"absolutePath":"@mimic-fi/v2-registry/contracts/implementations/IImplementation.sol","file":"./IImplementation.sol","id":438,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":527,"sourceUnit":543,"src":"778:31:4","symbolAliases":[],"unitAlias":""},{"absolutePath":"@mimic-fi/v2-registry/contracts/registry/IRegistry.sol","file":"../registry/IRegistry.sol","id":439,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":527,"sourceUnit":604,"src":"810:35:4","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":441,"name":"IImplementation","nodeType":"IdentifierPath","referencedDeclaration":542,"src":"1266:15:4"},"id":442,"nodeType":"InheritanceSpecifier","src":"1266:15:4"}],"contractDependencies":[542],"contractKind":"contract","documentation":{"id":440,"nodeType":"StructuredDocumentation","src":"847:378:4","text":" @title BaseImplementation\n @dev This implementation contract comes with an immutable reference to an implementations registry where it should\n be registered as well (checked during initialization). It allows requesting new instances of other registered\n implementations to as another safety check to make sure valid instances are referenced in case it's needed."},"fullyImplemented":false,"id":526,"linearizedBaseContracts":[526,542],"name":"BaseImplementation","nameLocation":"1244:18:4","nodeType":"ContractDefinition","nodes":[{"baseFunctions":[541],"constant":false,"functionSelector":"7b103999","id":445,"mutability":"immutable","name":"registry","nameLocation":"1374:8:4","nodeType":"VariableDeclaration","overrides":{"id":444,"nodeType":"OverrideSpecifier","overrides":[],"src":"1365:8:4"},"scope":526,"src":"1340:42:4","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":443,"name":"address","nodeType":"ElementaryTypeName","src":"1340:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"public"},{"body":{"id":455,"nodeType":"Block","src":"1580:37:4","statements":[{"expression":{"id":453,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":451,"name":"registry","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":445,"src":"1590:8:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":452,"name":"_registry","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":448,"src":"1601:9:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1590:20:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":454,"nodeType":"ExpressionStatement","src":"1590:20:4"}]},"documentation":{"id":446,"nodeType":"StructuredDocumentation","src":"1389:155:4","text":" @dev Creates a new BaseImplementation\n @param _registry Address of the Mimic Registry where dependencies will be validated against"},"id":456,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":449,"nodeType":"ParameterList","parameters":[{"constant":false,"id":448,"mutability":"mutable","name":"_registry","nameLocation":"1569:9:4","nodeType":"VariableDeclaration","scope":456,"src":"1561:17:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":447,"name":"address","nodeType":"ElementaryTypeName","src":"1561:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1560:19:4"},"returnParameters":{"id":450,"nodeType":"ParameterList","parameters":[],"src":"1580:0:4"},"scope":526,"src":"1549:68:4","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":469,"nodeType":"Block","src":"1950:85:4","statements":[{"expression":{"arguments":[{"arguments":[{"id":464,"name":"dependency","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":459,"src":"1988:10:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":463,"name":"_validateDependency","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":525,"src":"1968:19:4","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_bool_$","typeString":"function (address) view returns (bool)"}},"id":465,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1968:31:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"444550454e44454e43595f4e4f545f53544154454c455353","id":466,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2001:26:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_33e7caeaeb13f3dd7003d49fd2bf0210a3c8ba3a01cca653fef5909dfda34f5b","typeString":"literal_string \"DEPENDENCY_NOT_STATELESS\""},"value":"DEPENDENCY_NOT_STATELESS"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_33e7caeaeb13f3dd7003d49fd2bf0210a3c8ba3a01cca653fef5909dfda34f5b","typeString":"literal_string \"DEPENDENCY_NOT_STATELESS\""}],"id":462,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1960:7:4","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":467,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1960:68:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":468,"nodeType":"ExpressionStatement","src":"1960:68:4"}]},"documentation":{"id":457,"nodeType":"StructuredDocumentation","src":"1623:250:4","text":" @dev Internal function to validate a new dependency that must be registered as stateless.\n It checks the new dependency is registered, not deprecated, and stateless.\n @param dependency New stateless dependency to be set"},"id":470,"implemented":true,"kind":"function","modifiers":[],"name":"_validateStatelessDependency","nameLocation":"1887:28:4","nodeType":"FunctionDefinition","parameters":{"id":460,"nodeType":"ParameterList","parameters":[{"constant":false,"id":459,"mutability":"mutable","name":"dependency","nameLocation":"1924:10:4","nodeType":"VariableDeclaration","scope":470,"src":"1916:18:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":458,"name":"address","nodeType":"ElementaryTypeName","src":"1916:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1915:20:4"},"returnParameters":{"id":461,"nodeType":"ParameterList","parameters":[],"src":"1950:0:4"},"scope":526,"src":"1878:157:4","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":484,"nodeType":"Block","src":"2371:85:4","statements":[{"expression":{"arguments":[{"id":480,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"2389:32:4","subExpression":{"arguments":[{"id":478,"name":"dependency","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":473,"src":"2410:10:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":477,"name":"_validateDependency","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":525,"src":"2390:19:4","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_bool_$","typeString":"function (address) view returns (bool)"}},"id":479,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2390:31:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"444550454e44454e43595f4e4f545f535441544546554c","id":481,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2423:25:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_e8c9c5707c7558388f15b095cd2d761beecde20a447b3260c35b1e715fcae11e","typeString":"literal_string \"DEPENDENCY_NOT_STATEFUL\""},"value":"DEPENDENCY_NOT_STATEFUL"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_e8c9c5707c7558388f15b095cd2d761beecde20a447b3260c35b1e715fcae11e","typeString":"literal_string \"DEPENDENCY_NOT_STATEFUL\""}],"id":476,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2381:7:4","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":482,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2381:68:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":483,"nodeType":"ExpressionStatement","src":"2381:68:4"}]},"documentation":{"id":471,"nodeType":"StructuredDocumentation","src":"2041:254:4","text":" @dev Internal function to validate a new dependency that cannot be registered as stateless.\n It checks the new dependency is registered, not deprecated, and not stateful.\n @param dependency New stateful dependency to be set"},"id":485,"implemented":true,"kind":"function","modifiers":[],"name":"_validateStatefulDependency","nameLocation":"2309:27:4","nodeType":"FunctionDefinition","parameters":{"id":474,"nodeType":"ParameterList","parameters":[{"constant":false,"id":473,"mutability":"mutable","name":"dependency","nameLocation":"2345:10:4","nodeType":"VariableDeclaration","scope":485,"src":"2337:18:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":472,"name":"address","nodeType":"ElementaryTypeName","src":"2337:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2336:20:4"},"returnParameters":{"id":475,"nodeType":"ParameterList","parameters":[],"src":"2371:0:4"},"scope":526,"src":"2300:156:4","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":524,"nodeType":"Block","src":"2782:274:4","statements":[{"assignments":[494,496,498],"declarations":[{"constant":false,"id":494,"mutability":"mutable","name":"stateless","nameLocation":"2798:9:4","nodeType":"VariableDeclaration","scope":524,"src":"2793:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":493,"name":"bool","nodeType":"ElementaryTypeName","src":"2793:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":496,"mutability":"mutable","name":"deprecated","nameLocation":"2814:10:4","nodeType":"VariableDeclaration","scope":524,"src":"2809:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":495,"name":"bool","nodeType":"ElementaryTypeName","src":"2809:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":498,"mutability":"mutable","name":"namespace","nameLocation":"2834:9:4","nodeType":"VariableDeclaration","scope":524,"src":"2826:17:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":497,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2826:7:4","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":505,"initialValue":{"arguments":[{"id":503,"name":"dependency","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":488,"src":"2886:10:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"arguments":[{"id":500,"name":"registry","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":445,"src":"2857:8:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":499,"name":"IRegistry","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":603,"src":"2847:9:4","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IRegistry_$603_$","typeString":"type(contract IRegistry)"}},"id":501,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2847:19:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IRegistry_$603","typeString":"contract IRegistry"}},"id":502,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"implementationData","nodeType":"MemberAccess","referencedDeclaration":576,"src":"2847:38:4","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_bool_$_t_bool_$_t_bytes32_$","typeString":"function (address) view external returns (bool,bool,bytes32)"}},"id":504,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2847:50:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bool_$_t_bytes32_$","typeString":"tuple(bool,bool,bytes32)"}},"nodeType":"VariableDeclarationStatement","src":"2792:105:4"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":512,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":507,"name":"namespace","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":498,"src":"2915:9:4","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":510,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2936:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":509,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2928:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":508,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2928:7:4","typeDescriptions":{}}},"id":511,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2928:10:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"2915:23:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"444550454e44454e43595f4e4f545f52454749535445524544","id":513,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2940:27:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_778fd9d4b718f8239ef06eb57325f48f8e9ee99421da069e57617a6f513bfb7b","typeString":"literal_string \"DEPENDENCY_NOT_REGISTERED\""},"value":"DEPENDENCY_NOT_REGISTERED"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_778fd9d4b718f8239ef06eb57325f48f8e9ee99421da069e57617a6f513bfb7b","typeString":"literal_string \"DEPENDENCY_NOT_REGISTERED\""}],"id":506,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2907:7:4","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":514,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2907:61:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":515,"nodeType":"ExpressionStatement","src":"2907:61:4"},{"expression":{"arguments":[{"id":518,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"2986:11:4","subExpression":{"id":517,"name":"deprecated","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":496,"src":"2987:10:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"444550454e44454e43595f44455052454341544544","id":519,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2999:23:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_df8a3f58698e280c36562d600ce03d49987f51611989025dd75e965cd317041f","typeString":"literal_string \"DEPENDENCY_DEPRECATED\""},"value":"DEPENDENCY_DEPRECATED"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_df8a3f58698e280c36562d600ce03d49987f51611989025dd75e965cd317041f","typeString":"literal_string \"DEPENDENCY_DEPRECATED\""}],"id":516,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2978:7:4","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":520,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2978:45:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":521,"nodeType":"ExpressionStatement","src":"2978:45:4"},{"expression":{"id":522,"name":"stateless","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":494,"src":"3040:9:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":492,"id":523,"nodeType":"Return","src":"3033:16:4"}]},"documentation":{"id":486,"nodeType":"StructuredDocumentation","src":"2462:238:4","text":" @dev Internal function to validate a new dependency. It checks the dependency is registered and not deprecated.\n @param dependency New dependency to be set\n @return Whether the dependency is stateless or not"},"id":525,"implemented":true,"kind":"function","modifiers":[],"name":"_validateDependency","nameLocation":"2714:19:4","nodeType":"FunctionDefinition","parameters":{"id":489,"nodeType":"ParameterList","parameters":[{"constant":false,"id":488,"mutability":"mutable","name":"dependency","nameLocation":"2742:10:4","nodeType":"VariableDeclaration","scope":525,"src":"2734:18:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":487,"name":"address","nodeType":"ElementaryTypeName","src":"2734:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2733:20:4"},"returnParameters":{"id":492,"nodeType":"ParameterList","parameters":[{"constant":false,"id":491,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":525,"src":"2776:4:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":490,"name":"bool","nodeType":"ElementaryTypeName","src":"2776:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2775:6:4"},"scope":526,"src":"2705:351:4","stateMutability":"view","virtual":false,"visibility":"private"}],"scope":527,"src":"1226:1832:4"}],"src":"688:2371:4"},"id":4},"@mimic-fi/v2-registry/contracts/implementations/IImplementation.sol":{"ast":{"absolutePath":"@mimic-fi/v2-registry/contracts/implementations/IImplementation.sol","exportedSymbols":{"IImplementation":[542]},"id":543,"license":"GPL-3.0-or-later","nodeType":"SourceUnit","nodes":[{"id":528,"literals":["solidity",">=","0.8",".0"],"nodeType":"PragmaDirective","src":"688:24:5"},{"abstract":false,"baseContracts":[],"contractDependencies":[],"contractKind":"interface","documentation":{"id":529,"nodeType":"StructuredDocumentation","src":"754:147:5","text":" @title IImplementation\n @dev Implementation interface that must be followed for implementations to be registered in the Mimic Registry"},"fullyImplemented":false,"id":542,"linearizedBaseContracts":[542],"name":"IImplementation","nameLocation":"912:15:5","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":530,"nodeType":"StructuredDocumentation","src":"934:110:5","text":" @dev Tells the namespace under which the implementation is registered in the Mimic Registry"},"functionSelector":"44ba1fca","id":535,"implemented":false,"kind":"function","modifiers":[],"name":"NAMESPACE","nameLocation":"1058:9:5","nodeType":"FunctionDefinition","parameters":{"id":531,"nodeType":"ParameterList","parameters":[],"src":"1067:2:5"},"returnParameters":{"id":534,"nodeType":"ParameterList","parameters":[{"constant":false,"id":533,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":535,"src":"1093:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":532,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1093:7:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1092:9:5"},"scope":542,"src":"1049:53:5","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":536,"nodeType":"StructuredDocumentation","src":"1108:63:5","text":" @dev Tells the address of the Mimic Registry"},"functionSelector":"7b103999","id":541,"implemented":false,"kind":"function","modifiers":[],"name":"registry","nameLocation":"1185:8:5","nodeType":"FunctionDefinition","parameters":{"id":537,"nodeType":"ParameterList","parameters":[],"src":"1193:2:5"},"returnParameters":{"id":540,"nodeType":"ParameterList","parameters":[{"constant":false,"id":539,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":541,"src":"1219:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":538,"name":"address","nodeType":"ElementaryTypeName","src":"1219:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1218:9:5"},"scope":542,"src":"1176:52:5","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":543,"src":"902:328:5"}],"src":"688:543:5"},"id":5},"@mimic-fi/v2-registry/contracts/registry/IRegistry.sol":{"ast":{"absolutePath":"@mimic-fi/v2-registry/contracts/registry/IRegistry.sol","exportedSymbols":{"IAuthorizer":[43],"IRegistry":[603]},"id":604,"license":"GPL-3.0-or-later","nodeType":"SourceUnit","nodes":[{"id":544,"literals":["solidity",">=","0.8",".0"],"nodeType":"PragmaDirective","src":"688:24:6"},{"absolutePath":"@mimic-fi/v2-helpers/contracts/auth/IAuthorizer.sol","file":"@mimic-fi/v2-helpers/contracts/auth/IAuthorizer.sol","id":545,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":604,"sourceUnit":44,"src":"714:61:6","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":547,"name":"IAuthorizer","nodeType":"IdentifierPath","referencedDeclaration":43,"src":"898:11:6"},"id":548,"nodeType":"InheritanceSpecifier","src":"898:11:6"}],"contractDependencies":[43],"contractKind":"interface","documentation":{"id":546,"nodeType":"StructuredDocumentation","src":"777:97:6","text":" @title IRegistry\n @dev Registry interface, it must follow the IAuthorizer interface."},"fullyImplemented":false,"id":603,"linearizedBaseContracts":[603,43],"name":"IRegistry","nameLocation":"885:9:6","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":549,"nodeType":"StructuredDocumentation","src":"916:77:6","text":" @dev Emitted every time a new implementation is registered"},"id":557,"name":"Registered","nameLocation":"1004:10:6","nodeType":"EventDefinition","parameters":{"id":556,"nodeType":"ParameterList","parameters":[{"constant":false,"id":551,"indexed":true,"mutability":"mutable","name":"namespace","nameLocation":"1031:9:6","nodeType":"VariableDeclaration","scope":557,"src":"1015:25:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":550,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1015:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":553,"indexed":true,"mutability":"mutable","name":"implementation","nameLocation":"1058:14:6","nodeType":"VariableDeclaration","scope":557,"src":"1042:30:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":552,"name":"address","nodeType":"ElementaryTypeName","src":"1042:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":555,"indexed":false,"mutability":"mutable","name":"stateless","nameLocation":"1079:9:6","nodeType":"VariableDeclaration","scope":557,"src":"1074:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":554,"name":"bool","nodeType":"ElementaryTypeName","src":"1074:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1014:75:6"},"src":"998:92:6"},{"anonymous":false,"documentation":{"id":558,"nodeType":"StructuredDocumentation","src":"1096:74:6","text":" @dev Emitted every time an implementation is deprecated"},"id":564,"name":"Deprecated","nameLocation":"1181:10:6","nodeType":"EventDefinition","parameters":{"id":563,"nodeType":"ParameterList","parameters":[{"constant":false,"id":560,"indexed":true,"mutability":"mutable","name":"namespace","nameLocation":"1208:9:6","nodeType":"VariableDeclaration","scope":564,"src":"1192:25:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":559,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1192:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":562,"indexed":true,"mutability":"mutable","name":"implementation","nameLocation":"1235:14:6","nodeType":"VariableDeclaration","scope":564,"src":"1219:30:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":561,"name":"address","nodeType":"ElementaryTypeName","src":"1219:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1191:59:6"},"src":"1175:76:6"},{"documentation":{"id":565,"nodeType":"StructuredDocumentation","src":"1257:140:6","text":" @dev Tells the data of an implementation:\n @param implementation Address of the implementation to request it's data"},"functionSelector":"9235dcf8","id":576,"implemented":false,"kind":"function","modifiers":[],"name":"implementationData","nameLocation":"1411:18:6","nodeType":"FunctionDefinition","parameters":{"id":568,"nodeType":"ParameterList","parameters":[{"constant":false,"id":567,"mutability":"mutable","name":"implementation","nameLocation":"1438:14:6","nodeType":"VariableDeclaration","scope":576,"src":"1430:22:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":566,"name":"address","nodeType":"ElementaryTypeName","src":"1430:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1429:24:6"},"returnParameters":{"id":575,"nodeType":"ParameterList","parameters":[{"constant":false,"id":570,"mutability":"mutable","name":"stateless","nameLocation":"1506:9:6","nodeType":"VariableDeclaration","scope":576,"src":"1501:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":569,"name":"bool","nodeType":"ElementaryTypeName","src":"1501:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":572,"mutability":"mutable","name":"deprecated","nameLocation":"1522:10:6","nodeType":"VariableDeclaration","scope":576,"src":"1517:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":571,"name":"bool","nodeType":"ElementaryTypeName","src":"1517:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":574,"mutability":"mutable","name":"namespace","nameLocation":"1542:9:6","nodeType":"VariableDeclaration","scope":576,"src":"1534:17:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":573,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1534:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1500:52:6"},"scope":603,"src":"1402:151:6","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":577,"nodeType":"StructuredDocumentation","src":"1559:240:6","text":" @dev Tells if a specific implementation is registered under a certain namespace and it's not deprecated\n @param namespace Namespace asking for\n @param implementation Address of the implementation to be checked"},"functionSelector":"ca0f8f3b","id":586,"implemented":false,"kind":"function","modifiers":[],"name":"isActive","nameLocation":"1813:8:6","nodeType":"FunctionDefinition","parameters":{"id":582,"nodeType":"ParameterList","parameters":[{"constant":false,"id":579,"mutability":"mutable","name":"namespace","nameLocation":"1830:9:6","nodeType":"VariableDeclaration","scope":586,"src":"1822:17:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":578,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1822:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":581,"mutability":"mutable","name":"implementation","nameLocation":"1849:14:6","nodeType":"VariableDeclaration","scope":586,"src":"1841:22:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":580,"name":"address","nodeType":"ElementaryTypeName","src":"1841:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1821:43:6"},"returnParameters":{"id":585,"nodeType":"ParameterList","parameters":[{"constant":false,"id":584,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":586,"src":"1888:4:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":583,"name":"bool","nodeType":"ElementaryTypeName","src":"1888:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1887:6:6"},"scope":603,"src":"1804:90:6","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":587,"nodeType":"StructuredDocumentation","src":"1900:291:6","text":" @dev Registers a new implementation for a given namespace\n @param namespace Namespace to be used for the implementation\n @param implementation Address of the implementation to be registered\n @param stateless Whether the implementation is stateless or not"},"functionSelector":"678449d4","id":596,"implemented":false,"kind":"function","modifiers":[],"name":"register","nameLocation":"2205:8:6","nodeType":"FunctionDefinition","parameters":{"id":594,"nodeType":"ParameterList","parameters":[{"constant":false,"id":589,"mutability":"mutable","name":"namespace","nameLocation":"2222:9:6","nodeType":"VariableDeclaration","scope":596,"src":"2214:17:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":588,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2214:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":591,"mutability":"mutable","name":"implementation","nameLocation":"2241:14:6","nodeType":"VariableDeclaration","scope":596,"src":"2233:22:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":590,"name":"address","nodeType":"ElementaryTypeName","src":"2233:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":593,"mutability":"mutable","name":"stateless","nameLocation":"2262:9:6","nodeType":"VariableDeclaration","scope":596,"src":"2257:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":592,"name":"bool","nodeType":"ElementaryTypeName","src":"2257:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2213:59:6"},"returnParameters":{"id":595,"nodeType":"ParameterList","parameters":[],"src":"2281:0:6"},"scope":603,"src":"2196:86:6","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":597,"nodeType":"StructuredDocumentation","src":"2288:138:6","text":" @dev Deprecates a registered implementation\n @param implementation Address of the implementation to be deprecated"},"functionSelector":"0753c30c","id":602,"implemented":false,"kind":"function","modifiers":[],"name":"deprecate","nameLocation":"2440:9:6","nodeType":"FunctionDefinition","parameters":{"id":600,"nodeType":"ParameterList","parameters":[{"constant":false,"id":599,"mutability":"mutable","name":"implementation","nameLocation":"2458:14:6","nodeType":"VariableDeclaration","scope":602,"src":"2450:22:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":598,"name":"address","nodeType":"ElementaryTypeName","src":"2450:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2449:24:6"},"returnParameters":{"id":601,"nodeType":"ParameterList","parameters":[],"src":"2482:0:6"},"scope":603,"src":"2431:52:6","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":604,"src":"875:1610:6"}],"src":"688:1798:6"},"id":6},"@openzeppelin/contracts/proxy/utils/Initializable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/proxy/utils/Initializable.sol","exportedSymbols":{"Address":[1469],"Initializable":[754]},"id":755,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":605,"literals":["solidity","^","0.8",".2"],"nodeType":"PragmaDirective","src":"113:23:7"},{"absolutePath":"@openzeppelin/contracts/utils/Address.sol","file":"../../utils/Address.sol","id":606,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":755,"sourceUnit":1470,"src":"138:33:7","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[],"contractDependencies":[],"contractKind":"contract","documentation":{"id":607,"nodeType":"StructuredDocumentation","src":"173:2198:7","text":" @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\n behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\n external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\n function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\n The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\n reused. This mechanism prevents re-execution of each \"step\" but allows the creation of new initialization steps in\n case an upgrade adds a module that needs to be initialized.\n For example:\n [.hljs-theme-light.nopadding]\n ```\n contract MyToken is ERC20Upgradeable {\n     function initialize() initializer public {\n         __ERC20_init(\"MyToken\", \"MTK\");\n     }\n }\n contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\n     function initializeV2() reinitializer(2) public {\n         __ERC20Permit_init(\"MyToken\");\n     }\n }\n ```\n TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\n possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\n CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\n that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\n [CAUTION]\n ====\n Avoid leaving a contract uninitialized.\n An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\n contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\n the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\n [.hljs-theme-light.nopadding]\n ```\n /// @custom:oz-upgrades-unsafe-allow constructor\n constructor() {\n     _disableInitializers();\n }\n ```\n ===="},"fullyImplemented":true,"id":754,"linearizedBaseContracts":[754],"name":"Initializable","nameLocation":"2390:13:7","nodeType":"ContractDefinition","nodes":[{"constant":false,"documentation":{"id":608,"nodeType":"StructuredDocumentation","src":"2410:109:7","text":" @dev Indicates that the contract has been initialized.\n @custom:oz-retyped-from bool"},"id":610,"mutability":"mutable","name":"_initialized","nameLocation":"2538:12:7","nodeType":"VariableDeclaration","scope":754,"src":"2524:26:7","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":609,"name":"uint8","nodeType":"ElementaryTypeName","src":"2524:5:7","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"private"},{"constant":false,"documentation":{"id":611,"nodeType":"StructuredDocumentation","src":"2557:91:7","text":" @dev Indicates that the contract is in the process of being initialized."},"id":613,"mutability":"mutable","name":"_initializing","nameLocation":"2666:13:7","nodeType":"VariableDeclaration","scope":754,"src":"2653:26:7","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":612,"name":"bool","nodeType":"ElementaryTypeName","src":"2653:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"private"},{"anonymous":false,"documentation":{"id":614,"nodeType":"StructuredDocumentation","src":"2686:90:7","text":" @dev Triggered when the contract has been initialized or reinitialized."},"id":618,"name":"Initialized","nameLocation":"2787:11:7","nodeType":"EventDefinition","parameters":{"id":617,"nodeType":"ParameterList","parameters":[{"constant":false,"id":616,"indexed":false,"mutability":"mutable","name":"version","nameLocation":"2805:7:7","nodeType":"VariableDeclaration","scope":618,"src":"2799:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":615,"name":"uint8","nodeType":"ElementaryTypeName","src":"2799:5:7","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"2798:15:7"},"src":"2781:33:7"},{"body":{"id":673,"nodeType":"Block","src":"3090:472:7","statements":[{"assignments":[622],"declarations":[{"constant":false,"id":622,"mutability":"mutable","name":"isTopLevelCall","nameLocation":"3105:14:7","nodeType":"VariableDeclaration","scope":673,"src":"3100:19:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":621,"name":"bool","nodeType":"ElementaryTypeName","src":"3100:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":625,"initialValue":{"id":624,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"3122:14:7","subExpression":{"id":623,"name":"_initializing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":613,"src":"3123:13:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"3100:36:7"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":646,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":631,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":627,"name":"isTopLevelCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":622,"src":"3168:14:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":630,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":628,"name":"_initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":610,"src":"3186:12:7","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"31","id":629,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3201:1:7","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"3186:16:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3168:34:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":632,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3167:36:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":644,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":640,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"3208:34:7","subExpression":{"arguments":[{"arguments":[{"id":637,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"3236:4:7","typeDescriptions":{"typeIdentifier":"t_contract$_Initializable_$754","typeString":"contract Initializable"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Initializable_$754","typeString":"contract Initializable"}],"id":636,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3228:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":635,"name":"address","nodeType":"ElementaryTypeName","src":"3228:7:7","typeDescriptions":{}}},"id":638,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3228:13:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":633,"name":"Address","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1469,"src":"3209:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Address_$1469_$","typeString":"type(library Address)"}},"id":634,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"isContract","nodeType":"MemberAccess","referencedDeclaration":1192,"src":"3209:18:7","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_bool_$","typeString":"function (address) view returns (bool)"}},"id":639,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3209:33:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":643,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":641,"name":"_initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":610,"src":"3246:12:7","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"31","id":642,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3262:1:7","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"3246:17:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3208:55:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":645,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3207:57:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3167:97:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e697469616c697a61626c653a20636f6e747261637420697320616c726561647920696e697469616c697a6564","id":647,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3278:48:7","typeDescriptions":{"typeIdentifier":"t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759","typeString":"literal_string \"Initializable: contract is already initialized\""},"value":"Initializable: contract is already initialized"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759","typeString":"literal_string \"Initializable: contract is already initialized\""}],"id":626,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3146:7:7","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":648,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3146:190:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":649,"nodeType":"ExpressionStatement","src":"3146:190:7"},{"expression":{"id":652,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":650,"name":"_initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":610,"src":"3346:12:7","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"31","id":651,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3361:1:7","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"3346:16:7","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":653,"nodeType":"ExpressionStatement","src":"3346:16:7"},{"condition":{"id":654,"name":"isTopLevelCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":622,"src":"3376:14:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":660,"nodeType":"IfStatement","src":"3372:65:7","trueBody":{"id":659,"nodeType":"Block","src":"3392:45:7","statements":[{"expression":{"id":657,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":655,"name":"_initializing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":613,"src":"3406:13:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":656,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"3422:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"3406:20:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":658,"nodeType":"ExpressionStatement","src":"3406:20:7"}]}},{"id":661,"nodeType":"PlaceholderStatement","src":"3446:1:7"},{"condition":{"id":662,"name":"isTopLevelCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":622,"src":"3461:14:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":672,"nodeType":"IfStatement","src":"3457:99:7","trueBody":{"id":671,"nodeType":"Block","src":"3477:79:7","statements":[{"expression":{"id":665,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":663,"name":"_initializing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":613,"src":"3491:13:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":664,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"3507:5:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"3491:21:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":666,"nodeType":"ExpressionStatement","src":"3491:21:7"},{"eventCall":{"arguments":[{"hexValue":"31","id":668,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3543:1:7","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"}],"id":667,"name":"Initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":618,"src":"3531:11:7","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint8_$returns$__$","typeString":"function (uint8)"}},"id":669,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3531:14:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":670,"nodeType":"EmitStatement","src":"3526:19:7"}]}}]},"documentation":{"id":619,"nodeType":"StructuredDocumentation","src":"2820:242:7","text":" @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\n `onlyInitializing` functions can be used to initialize parent contracts. Equivalent to `reinitializer(1)`."},"id":674,"name":"initializer","nameLocation":"3076:11:7","nodeType":"ModifierDefinition","parameters":{"id":620,"nodeType":"ParameterList","parameters":[],"src":"3087:2:7"},"src":"3067:495:7","virtual":false,"visibility":"internal"},{"body":{"id":706,"nodeType":"Block","src":"4377:255:7","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":685,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":681,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"4395:14:7","subExpression":{"id":680,"name":"_initializing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":613,"src":"4396:13:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":684,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":682,"name":"_initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":610,"src":"4413:12:7","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":683,"name":"version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":677,"src":"4428:7:7","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"4413:22:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"4395:40:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e697469616c697a61626c653a20636f6e747261637420697320616c726561647920696e697469616c697a6564","id":686,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4437:48:7","typeDescriptions":{"typeIdentifier":"t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759","typeString":"literal_string \"Initializable: contract is already initialized\""},"value":"Initializable: contract is already initialized"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759","typeString":"literal_string \"Initializable: contract is already initialized\""}],"id":679,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4387:7:7","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":687,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4387:99:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":688,"nodeType":"ExpressionStatement","src":"4387:99:7"},{"expression":{"id":691,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":689,"name":"_initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":610,"src":"4496:12:7","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":690,"name":"version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":677,"src":"4511:7:7","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"4496:22:7","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":692,"nodeType":"ExpressionStatement","src":"4496:22:7"},{"expression":{"id":695,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":693,"name":"_initializing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":613,"src":"4528:13:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":694,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"4544:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"4528:20:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":696,"nodeType":"ExpressionStatement","src":"4528:20:7"},{"id":697,"nodeType":"PlaceholderStatement","src":"4558:1:7"},{"expression":{"id":700,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":698,"name":"_initializing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":613,"src":"4569:13:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":699,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"4585:5:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"4569:21:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":701,"nodeType":"ExpressionStatement","src":"4569:21:7"},{"eventCall":{"arguments":[{"id":703,"name":"version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":677,"src":"4617:7:7","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint8","typeString":"uint8"}],"id":702,"name":"Initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":618,"src":"4605:11:7","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint8_$returns$__$","typeString":"function (uint8)"}},"id":704,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4605:20:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":705,"nodeType":"EmitStatement","src":"4600:25:7"}]},"documentation":{"id":675,"nodeType":"StructuredDocumentation","src":"3568:766:7","text":" @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\n contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\n used to initialize parent contracts.\n `initializer` is equivalent to `reinitializer(1)`, so a reinitializer may be used after the original\n initialization step. This is essential to configure modules that are added through upgrades and that require\n initialization.\n Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\n a contract, executing them in the right order is up to the developer or operator."},"id":707,"name":"reinitializer","nameLocation":"4348:13:7","nodeType":"ModifierDefinition","parameters":{"id":678,"nodeType":"ParameterList","parameters":[{"constant":false,"id":677,"mutability":"mutable","name":"version","nameLocation":"4368:7:7","nodeType":"VariableDeclaration","scope":707,"src":"4362:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":676,"name":"uint8","nodeType":"ElementaryTypeName","src":"4362:5:7","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"4361:15:7"},"src":"4339:293:7","virtual":false,"visibility":"internal"},{"body":{"id":716,"nodeType":"Block","src":"4870:97:7","statements":[{"expression":{"arguments":[{"id":711,"name":"_initializing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":613,"src":"4888:13:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e697469616c697a61626c653a20636f6e7472616374206973206e6f7420696e697469616c697a696e67","id":712,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4903:45:7","typeDescriptions":{"typeIdentifier":"t_stringliteral_d688db918bb9dd50354922faa108595679886fe9ff08046ad1ffe30aaea55f8b","typeString":"literal_string \"Initializable: contract is not initializing\""},"value":"Initializable: contract is not initializing"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_d688db918bb9dd50354922faa108595679886fe9ff08046ad1ffe30aaea55f8b","typeString":"literal_string \"Initializable: contract is not initializing\""}],"id":710,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4880:7:7","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":713,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4880:69:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":714,"nodeType":"ExpressionStatement","src":"4880:69:7"},{"id":715,"nodeType":"PlaceholderStatement","src":"4959:1:7"}]},"documentation":{"id":708,"nodeType":"StructuredDocumentation","src":"4638:199:7","text":" @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\n {initializer} and {reinitializer} modifiers, directly or indirectly."},"id":717,"name":"onlyInitializing","nameLocation":"4851:16:7","nodeType":"ModifierDefinition","parameters":{"id":709,"nodeType":"ParameterList","parameters":[],"src":"4867:2:7"},"src":"4842:125:7","virtual":false,"visibility":"internal"},{"body":{"id":752,"nodeType":"Block","src":"5415:230:7","statements":[{"expression":{"arguments":[{"id":723,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"5433:14:7","subExpression":{"id":722,"name":"_initializing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":613,"src":"5434:13:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e697469616c697a61626c653a20636f6e747261637420697320696e697469616c697a696e67","id":724,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5449:41:7","typeDescriptions":{"typeIdentifier":"t_stringliteral_a53f5879e7518078ff19b2e3d6b41e757a87364ec6872787feb45bfc41131d1a","typeString":"literal_string \"Initializable: contract is initializing\""},"value":"Initializable: contract is initializing"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_a53f5879e7518078ff19b2e3d6b41e757a87364ec6872787feb45bfc41131d1a","typeString":"literal_string \"Initializable: contract is initializing\""}],"id":721,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5425:7:7","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":725,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5425:66:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":726,"nodeType":"ExpressionStatement","src":"5425:66:7"},{"condition":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":733,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":727,"name":"_initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":610,"src":"5505:12:7","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"arguments":[{"id":730,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5525:5:7","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":729,"name":"uint8","nodeType":"ElementaryTypeName","src":"5525:5:7","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"}],"id":728,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"5520:4:7","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":731,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5520:11:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint8","typeString":"type(uint8)"}},"id":732,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"5520:15:7","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"5505:30:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":751,"nodeType":"IfStatement","src":"5501:138:7","trueBody":{"id":750,"nodeType":"Block","src":"5537:102:7","statements":[{"expression":{"id":740,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":734,"name":"_initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":610,"src":"5551:12:7","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"arguments":[{"id":737,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5571:5:7","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":736,"name":"uint8","nodeType":"ElementaryTypeName","src":"5571:5:7","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"}],"id":735,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"5566:4:7","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":738,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5566:11:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint8","typeString":"type(uint8)"}},"id":739,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"5566:15:7","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"5551:30:7","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":741,"nodeType":"ExpressionStatement","src":"5551:30:7"},{"eventCall":{"arguments":[{"expression":{"arguments":[{"id":745,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5617:5:7","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":744,"name":"uint8","nodeType":"ElementaryTypeName","src":"5617:5:7","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"}],"id":743,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"5612:4:7","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":746,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5612:11:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint8","typeString":"type(uint8)"}},"id":747,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"5612:15:7","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint8","typeString":"uint8"}],"id":742,"name":"Initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":618,"src":"5600:11:7","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint8_$returns$__$","typeString":"function (uint8)"}},"id":748,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5600:28:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":749,"nodeType":"EmitStatement","src":"5595:33:7"}]}}]},"documentation":{"id":718,"nodeType":"StructuredDocumentation","src":"4973:388:7","text":" @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\n Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\n to any version. It is recommended to use this to lock implementation contracts that are designed to be called\n through proxies."},"id":753,"implemented":true,"kind":"function","modifiers":[],"name":"_disableInitializers","nameLocation":"5375:20:7","nodeType":"FunctionDefinition","parameters":{"id":719,"nodeType":"ParameterList","parameters":[],"src":"5395:2:7"},"returnParameters":{"id":720,"nodeType":"ParameterList","parameters":[],"src":"5415:0:7"},"scope":754,"src":"5366:279:7","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":755,"src":"2372:3275:7"}],"src":"113:5535:7"},"id":7},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","exportedSymbols":{"IERC20":[832]},"id":833,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":756,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"106:23:8"},{"abstract":false,"baseContracts":[],"contractDependencies":[],"contractKind":"interface","documentation":{"id":757,"nodeType":"StructuredDocumentation","src":"131:70:8","text":" @dev Interface of the ERC20 standard as defined in the EIP."},"fullyImplemented":false,"id":832,"linearizedBaseContracts":[832],"name":"IERC20","nameLocation":"212:6:8","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":758,"nodeType":"StructuredDocumentation","src":"225:158:8","text":" @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."},"id":766,"name":"Transfer","nameLocation":"394:8:8","nodeType":"EventDefinition","parameters":{"id":765,"nodeType":"ParameterList","parameters":[{"constant":false,"id":760,"indexed":true,"mutability":"mutable","name":"from","nameLocation":"419:4:8","nodeType":"VariableDeclaration","scope":766,"src":"403:20:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":759,"name":"address","nodeType":"ElementaryTypeName","src":"403:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":762,"indexed":true,"mutability":"mutable","name":"to","nameLocation":"441:2:8","nodeType":"VariableDeclaration","scope":766,"src":"425:18:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":761,"name":"address","nodeType":"ElementaryTypeName","src":"425:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":764,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"453:5:8","nodeType":"VariableDeclaration","scope":766,"src":"445:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":763,"name":"uint256","nodeType":"ElementaryTypeName","src":"445:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"402:57:8"},"src":"388:72:8"},{"anonymous":false,"documentation":{"id":767,"nodeType":"StructuredDocumentation","src":"466:148:8","text":" @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."},"id":775,"name":"Approval","nameLocation":"625:8:8","nodeType":"EventDefinition","parameters":{"id":774,"nodeType":"ParameterList","parameters":[{"constant":false,"id":769,"indexed":true,"mutability":"mutable","name":"owner","nameLocation":"650:5:8","nodeType":"VariableDeclaration","scope":775,"src":"634:21:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":768,"name":"address","nodeType":"ElementaryTypeName","src":"634:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":771,"indexed":true,"mutability":"mutable","name":"spender","nameLocation":"673:7:8","nodeType":"VariableDeclaration","scope":775,"src":"657:23:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":770,"name":"address","nodeType":"ElementaryTypeName","src":"657:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":773,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"690:5:8","nodeType":"VariableDeclaration","scope":775,"src":"682:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":772,"name":"uint256","nodeType":"ElementaryTypeName","src":"682:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"633:63:8"},"src":"619:78:8"},{"documentation":{"id":776,"nodeType":"StructuredDocumentation","src":"703:66:8","text":" @dev Returns the amount of tokens in existence."},"functionSelector":"18160ddd","id":781,"implemented":false,"kind":"function","modifiers":[],"name":"totalSupply","nameLocation":"783:11:8","nodeType":"FunctionDefinition","parameters":{"id":777,"nodeType":"ParameterList","parameters":[],"src":"794:2:8"},"returnParameters":{"id":780,"nodeType":"ParameterList","parameters":[{"constant":false,"id":779,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":781,"src":"820:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":778,"name":"uint256","nodeType":"ElementaryTypeName","src":"820:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"819:9:8"},"scope":832,"src":"774:55:8","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":782,"nodeType":"StructuredDocumentation","src":"835:72:8","text":" @dev Returns the amount of tokens owned by `account`."},"functionSelector":"70a08231","id":789,"implemented":false,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"921:9:8","nodeType":"FunctionDefinition","parameters":{"id":785,"nodeType":"ParameterList","parameters":[{"constant":false,"id":784,"mutability":"mutable","name":"account","nameLocation":"939:7:8","nodeType":"VariableDeclaration","scope":789,"src":"931:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":783,"name":"address","nodeType":"ElementaryTypeName","src":"931:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"930:17:8"},"returnParameters":{"id":788,"nodeType":"ParameterList","parameters":[{"constant":false,"id":787,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":789,"src":"971:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":786,"name":"uint256","nodeType":"ElementaryTypeName","src":"971:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"970:9:8"},"scope":832,"src":"912:68:8","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":790,"nodeType":"StructuredDocumentation","src":"986:202:8","text":" @dev Moves `amount` tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."},"functionSelector":"a9059cbb","id":799,"implemented":false,"kind":"function","modifiers":[],"name":"transfer","nameLocation":"1202:8:8","nodeType":"FunctionDefinition","parameters":{"id":795,"nodeType":"ParameterList","parameters":[{"constant":false,"id":792,"mutability":"mutable","name":"to","nameLocation":"1219:2:8","nodeType":"VariableDeclaration","scope":799,"src":"1211:10:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":791,"name":"address","nodeType":"ElementaryTypeName","src":"1211:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":794,"mutability":"mutable","name":"amount","nameLocation":"1231:6:8","nodeType":"VariableDeclaration","scope":799,"src":"1223:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":793,"name":"uint256","nodeType":"ElementaryTypeName","src":"1223:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1210:28:8"},"returnParameters":{"id":798,"nodeType":"ParameterList","parameters":[{"constant":false,"id":797,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":799,"src":"1257:4:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":796,"name":"bool","nodeType":"ElementaryTypeName","src":"1257:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1256:6:8"},"scope":832,"src":"1193:70:8","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":800,"nodeType":"StructuredDocumentation","src":"1269:264:8","text":" @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."},"functionSelector":"dd62ed3e","id":809,"implemented":false,"kind":"function","modifiers":[],"name":"allowance","nameLocation":"1547:9:8","nodeType":"FunctionDefinition","parameters":{"id":805,"nodeType":"ParameterList","parameters":[{"constant":false,"id":802,"mutability":"mutable","name":"owner","nameLocation":"1565:5:8","nodeType":"VariableDeclaration","scope":809,"src":"1557:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":801,"name":"address","nodeType":"ElementaryTypeName","src":"1557:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":804,"mutability":"mutable","name":"spender","nameLocation":"1580:7:8","nodeType":"VariableDeclaration","scope":809,"src":"1572:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":803,"name":"address","nodeType":"ElementaryTypeName","src":"1572:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1556:32:8"},"returnParameters":{"id":808,"nodeType":"ParameterList","parameters":[{"constant":false,"id":807,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":809,"src":"1612:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":806,"name":"uint256","nodeType":"ElementaryTypeName","src":"1612:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1611:9:8"},"scope":832,"src":"1538:83:8","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":810,"nodeType":"StructuredDocumentation","src":"1627:642:8","text":" @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."},"functionSelector":"095ea7b3","id":819,"implemented":false,"kind":"function","modifiers":[],"name":"approve","nameLocation":"2283:7:8","nodeType":"FunctionDefinition","parameters":{"id":815,"nodeType":"ParameterList","parameters":[{"constant":false,"id":812,"mutability":"mutable","name":"spender","nameLocation":"2299:7:8","nodeType":"VariableDeclaration","scope":819,"src":"2291:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":811,"name":"address","nodeType":"ElementaryTypeName","src":"2291:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":814,"mutability":"mutable","name":"amount","nameLocation":"2316:6:8","nodeType":"VariableDeclaration","scope":819,"src":"2308:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":813,"name":"uint256","nodeType":"ElementaryTypeName","src":"2308:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2290:33:8"},"returnParameters":{"id":818,"nodeType":"ParameterList","parameters":[{"constant":false,"id":817,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":819,"src":"2342:4:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":816,"name":"bool","nodeType":"ElementaryTypeName","src":"2342:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2341:6:8"},"scope":832,"src":"2274:74:8","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":820,"nodeType":"StructuredDocumentation","src":"2354:287:8","text":" @dev Moves `amount` tokens from `from` to `to` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."},"functionSelector":"23b872dd","id":831,"implemented":false,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"2655:12:8","nodeType":"FunctionDefinition","parameters":{"id":827,"nodeType":"ParameterList","parameters":[{"constant":false,"id":822,"mutability":"mutable","name":"from","nameLocation":"2685:4:8","nodeType":"VariableDeclaration","scope":831,"src":"2677:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":821,"name":"address","nodeType":"ElementaryTypeName","src":"2677:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":824,"mutability":"mutable","name":"to","nameLocation":"2707:2:8","nodeType":"VariableDeclaration","scope":831,"src":"2699:10:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":823,"name":"address","nodeType":"ElementaryTypeName","src":"2699:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":826,"mutability":"mutable","name":"amount","nameLocation":"2727:6:8","nodeType":"VariableDeclaration","scope":831,"src":"2719:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":825,"name":"uint256","nodeType":"ElementaryTypeName","src":"2719:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2667:72:8"},"returnParameters":{"id":830,"nodeType":"ParameterList","parameters":[{"constant":false,"id":829,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":831,"src":"2758:4:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":828,"name":"bool","nodeType":"ElementaryTypeName","src":"2758:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2757:6:8"},"scope":832,"src":"2646:118:8","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":833,"src":"202:2564:8"}],"src":"106:2661:8"},"id":8},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol","exportedSymbols":{"IERC20":[832],"IERC20Metadata":[857]},"id":858,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":834,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"110:23:9"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"../IERC20.sol","id":835,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":858,"sourceUnit":833,"src":"135:23:9","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":837,"name":"IERC20","nodeType":"IdentifierPath","referencedDeclaration":832,"src":"305:6:9"},"id":838,"nodeType":"InheritanceSpecifier","src":"305:6:9"}],"contractDependencies":[832],"contractKind":"interface","documentation":{"id":836,"nodeType":"StructuredDocumentation","src":"160:116:9","text":" @dev Interface for the optional metadata functions from the ERC20 standard.\n _Available since v4.1._"},"fullyImplemented":false,"id":857,"linearizedBaseContracts":[857,832],"name":"IERC20Metadata","nameLocation":"287:14:9","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":839,"nodeType":"StructuredDocumentation","src":"318:54:9","text":" @dev Returns the name of the token."},"functionSelector":"06fdde03","id":844,"implemented":false,"kind":"function","modifiers":[],"name":"name","nameLocation":"386:4:9","nodeType":"FunctionDefinition","parameters":{"id":840,"nodeType":"ParameterList","parameters":[],"src":"390:2:9"},"returnParameters":{"id":843,"nodeType":"ParameterList","parameters":[{"constant":false,"id":842,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":844,"src":"416:13:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":841,"name":"string","nodeType":"ElementaryTypeName","src":"416:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"415:15:9"},"scope":857,"src":"377:54:9","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":845,"nodeType":"StructuredDocumentation","src":"437:56:9","text":" @dev Returns the symbol of the token."},"functionSelector":"95d89b41","id":850,"implemented":false,"kind":"function","modifiers":[],"name":"symbol","nameLocation":"507:6:9","nodeType":"FunctionDefinition","parameters":{"id":846,"nodeType":"ParameterList","parameters":[],"src":"513:2:9"},"returnParameters":{"id":849,"nodeType":"ParameterList","parameters":[{"constant":false,"id":848,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":850,"src":"539:13:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":847,"name":"string","nodeType":"ElementaryTypeName","src":"539:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"538:15:9"},"scope":857,"src":"498:56:9","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":851,"nodeType":"StructuredDocumentation","src":"560:65:9","text":" @dev Returns the decimals places of the token."},"functionSelector":"313ce567","id":856,"implemented":false,"kind":"function","modifiers":[],"name":"decimals","nameLocation":"639:8:9","nodeType":"FunctionDefinition","parameters":{"id":852,"nodeType":"ParameterList","parameters":[],"src":"647:2:9"},"returnParameters":{"id":855,"nodeType":"ParameterList","parameters":[{"constant":false,"id":854,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":856,"src":"673:5:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":853,"name":"uint8","nodeType":"ElementaryTypeName","src":"673:5:9","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"672:7:9"},"scope":857,"src":"630:50:9","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":858,"src":"277:405:9"}],"src":"110:573:9"},"id":9},"@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol","exportedSymbols":{"IERC20Permit":[893]},"id":894,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":859,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"114:23:10"},{"abstract":false,"baseContracts":[],"contractDependencies":[],"contractKind":"interface","documentation":{"id":860,"nodeType":"StructuredDocumentation","src":"139:480:10","text":" @dev Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\n https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\n Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\n presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't\n need to send a transaction, and thus is not required to hold Ether at all."},"fullyImplemented":false,"id":893,"linearizedBaseContracts":[893],"name":"IERC20Permit","nameLocation":"630:12:10","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":861,"nodeType":"StructuredDocumentation","src":"649:792:10","text":" @dev Sets `value` as the allowance of `spender` over ``owner``'s tokens,\n given ``owner``'s signed approval.\n IMPORTANT: The same issues {IERC20-approve} has related to transaction\n ordering also apply here.\n Emits an {Approval} event.\n Requirements:\n - `spender` cannot be the zero address.\n - `deadline` must be a timestamp in the future.\n - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\n over the EIP712-formatted function arguments.\n - the signature must use ``owner``'s current nonce (see {nonces}).\n For more information on the signature format, see the\n https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\n section]."},"functionSelector":"d505accf","id":878,"implemented":false,"kind":"function","modifiers":[],"name":"permit","nameLocation":"1455:6:10","nodeType":"FunctionDefinition","parameters":{"id":876,"nodeType":"ParameterList","parameters":[{"constant":false,"id":863,"mutability":"mutable","name":"owner","nameLocation":"1479:5:10","nodeType":"VariableDeclaration","scope":878,"src":"1471:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":862,"name":"address","nodeType":"ElementaryTypeName","src":"1471:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":865,"mutability":"mutable","name":"spender","nameLocation":"1502:7:10","nodeType":"VariableDeclaration","scope":878,"src":"1494:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":864,"name":"address","nodeType":"ElementaryTypeName","src":"1494:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":867,"mutability":"mutable","name":"value","nameLocation":"1527:5:10","nodeType":"VariableDeclaration","scope":878,"src":"1519:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":866,"name":"uint256","nodeType":"ElementaryTypeName","src":"1519:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":869,"mutability":"mutable","name":"deadline","nameLocation":"1550:8:10","nodeType":"VariableDeclaration","scope":878,"src":"1542:16:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":868,"name":"uint256","nodeType":"ElementaryTypeName","src":"1542:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":871,"mutability":"mutable","name":"v","nameLocation":"1574:1:10","nodeType":"VariableDeclaration","scope":878,"src":"1568:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":870,"name":"uint8","nodeType":"ElementaryTypeName","src":"1568:5:10","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":873,"mutability":"mutable","name":"r","nameLocation":"1593:1:10","nodeType":"VariableDeclaration","scope":878,"src":"1585:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":872,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1585:7:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":875,"mutability":"mutable","name":"s","nameLocation":"1612:1:10","nodeType":"VariableDeclaration","scope":878,"src":"1604:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":874,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1604:7:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1461:158:10"},"returnParameters":{"id":877,"nodeType":"ParameterList","parameters":[],"src":"1628:0:10"},"scope":893,"src":"1446:183:10","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":879,"nodeType":"StructuredDocumentation","src":"1635:294:10","text":" @dev Returns the current nonce for `owner`. This value must be\n included whenever a signature is generated for {permit}.\n Every successful call to {permit} increases ``owner``'s nonce by one. This\n prevents a signature from being used multiple times."},"functionSelector":"7ecebe00","id":886,"implemented":false,"kind":"function","modifiers":[],"name":"nonces","nameLocation":"1943:6:10","nodeType":"FunctionDefinition","parameters":{"id":882,"nodeType":"ParameterList","parameters":[{"constant":false,"id":881,"mutability":"mutable","name":"owner","nameLocation":"1958:5:10","nodeType":"VariableDeclaration","scope":886,"src":"1950:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":880,"name":"address","nodeType":"ElementaryTypeName","src":"1950:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1949:15:10"},"returnParameters":{"id":885,"nodeType":"ParameterList","parameters":[{"constant":false,"id":884,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":886,"src":"1988:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":883,"name":"uint256","nodeType":"ElementaryTypeName","src":"1988:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1987:9:10"},"scope":893,"src":"1934:63:10","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":887,"nodeType":"StructuredDocumentation","src":"2003:128:10","text":" @dev Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}."},"functionSelector":"3644e515","id":892,"implemented":false,"kind":"function","modifiers":[],"name":"DOMAIN_SEPARATOR","nameLocation":"2198:16:10","nodeType":"FunctionDefinition","parameters":{"id":888,"nodeType":"ParameterList","parameters":[],"src":"2214:2:10"},"returnParameters":{"id":891,"nodeType":"ParameterList","parameters":[{"constant":false,"id":890,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":892,"src":"2240:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":889,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2240:7:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2239:9:10"},"scope":893,"src":"2189:60:10","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":894,"src":"620:1631:10"}],"src":"114:2138:10"},"id":10},"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol","exportedSymbols":{"Address":[1469],"IERC20":[832],"IERC20Permit":[893],"SafeERC20":[1174]},"id":1175,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":895,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"115:23:11"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"../IERC20.sol","id":896,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1175,"sourceUnit":833,"src":"140:23:11","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol","file":"../extensions/draft-IERC20Permit.sol","id":897,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1175,"sourceUnit":894,"src":"164:46:11","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Address.sol","file":"../../../utils/Address.sol","id":898,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1175,"sourceUnit":1470,"src":"211:36:11","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[],"contractDependencies":[],"contractKind":"library","documentation":{"id":899,"nodeType":"StructuredDocumentation","src":"249:457:11","text":" @title SafeERC20\n @dev Wrappers around ERC20 operations that throw on failure (when the token\n contract returns false). Tokens that return no value (and instead revert or\n throw on failure) are also supported, non-reverting calls are assumed to be\n successful.\n To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n which allows you to call the safe operations as `token.safeTransfer(...)`, etc."},"fullyImplemented":true,"id":1174,"linearizedBaseContracts":[1174],"name":"SafeERC20","nameLocation":"715:9:11","nodeType":"ContractDefinition","nodes":[{"id":902,"libraryName":{"id":900,"name":"Address","nodeType":"IdentifierPath","referencedDeclaration":1469,"src":"737:7:11"},"nodeType":"UsingForDirective","src":"731:26:11","typeName":{"id":901,"name":"address","nodeType":"ElementaryTypeName","src":"749:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}},{"body":{"id":924,"nodeType":"Block","src":"865:103:11","statements":[{"expression":{"arguments":[{"id":913,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":905,"src":"895:5:11","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$832","typeString":"contract IERC20"}},{"arguments":[{"expression":{"expression":{"id":916,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":905,"src":"925:5:11","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$832","typeString":"contract IERC20"}},"id":917,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"transfer","nodeType":"MemberAccess","referencedDeclaration":799,"src":"925:14:11","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":918,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"selector","nodeType":"MemberAccess","src":"925:23:11","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},{"id":919,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":907,"src":"950:2:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":920,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":909,"src":"954:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":914,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"902:3:11","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":915,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"encodeWithSelector","nodeType":"MemberAccess","src":"902:22:11","typeDescriptions":{"typeIdentifier":"t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$","typeString":"function (bytes4) pure returns (bytes memory)"}},"id":921,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"902:58:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$832","typeString":"contract IERC20"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":912,"name":"_callOptionalReturn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1173,"src":"875:19:11","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$832_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (contract IERC20,bytes memory)"}},"id":922,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"875:86:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":923,"nodeType":"ExpressionStatement","src":"875:86:11"}]},"id":925,"implemented":true,"kind":"function","modifiers":[],"name":"safeTransfer","nameLocation":"772:12:11","nodeType":"FunctionDefinition","parameters":{"id":910,"nodeType":"ParameterList","parameters":[{"constant":false,"id":905,"mutability":"mutable","name":"token","nameLocation":"801:5:11","nodeType":"VariableDeclaration","scope":925,"src":"794:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$832","typeString":"contract IERC20"},"typeName":{"id":904,"nodeType":"UserDefinedTypeName","pathNode":{"id":903,"name":"IERC20","nodeType":"IdentifierPath","referencedDeclaration":832,"src":"794:6:11"},"referencedDeclaration":832,"src":"794:6:11","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$832","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":907,"mutability":"mutable","name":"to","nameLocation":"824:2:11","nodeType":"VariableDeclaration","scope":925,"src":"816:10:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":906,"name":"address","nodeType":"ElementaryTypeName","src":"816:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":909,"mutability":"mutable","name":"value","nameLocation":"844:5:11","nodeType":"VariableDeclaration","scope":925,"src":"836:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":908,"name":"uint256","nodeType":"ElementaryTypeName","src":"836:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"784:71:11"},"returnParameters":{"id":911,"nodeType":"ParameterList","parameters":[],"src":"865:0:11"},"scope":1174,"src":"763:205:11","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":950,"nodeType":"Block","src":"1102:113:11","statements":[{"expression":{"arguments":[{"id":938,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":928,"src":"1132:5:11","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$832","typeString":"contract IERC20"}},{"arguments":[{"expression":{"expression":{"id":941,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":928,"src":"1162:5:11","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$832","typeString":"contract IERC20"}},"id":942,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"transferFrom","nodeType":"MemberAccess","referencedDeclaration":831,"src":"1162:18:11","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,address,uint256) external returns (bool)"}},"id":943,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"selector","nodeType":"MemberAccess","src":"1162:27:11","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},{"id":944,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":930,"src":"1191:4:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":945,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":932,"src":"1197:2:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":946,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":934,"src":"1201:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":939,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"1139:3:11","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":940,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"encodeWithSelector","nodeType":"MemberAccess","src":"1139:22:11","typeDescriptions":{"typeIdentifier":"t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$","typeString":"function (bytes4) pure returns (bytes memory)"}},"id":947,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1139:68:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$832","typeString":"contract IERC20"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":937,"name":"_callOptionalReturn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1173,"src":"1112:19:11","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$832_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (contract IERC20,bytes memory)"}},"id":948,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1112:96:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":949,"nodeType":"ExpressionStatement","src":"1112:96:11"}]},"id":951,"implemented":true,"kind":"function","modifiers":[],"name":"safeTransferFrom","nameLocation":"983:16:11","nodeType":"FunctionDefinition","parameters":{"id":935,"nodeType":"ParameterList","parameters":[{"constant":false,"id":928,"mutability":"mutable","name":"token","nameLocation":"1016:5:11","nodeType":"VariableDeclaration","scope":951,"src":"1009:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$832","typeString":"contract IERC20"},"typeName":{"id":927,"nodeType":"UserDefinedTypeName","pathNode":{"id":926,"name":"IERC20","nodeType":"IdentifierPath","referencedDeclaration":832,"src":"1009:6:11"},"referencedDeclaration":832,"src":"1009:6:11","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$832","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":930,"mutability":"mutable","name":"from","nameLocation":"1039:4:11","nodeType":"VariableDeclaration","scope":951,"src":"1031:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":929,"name":"address","nodeType":"ElementaryTypeName","src":"1031:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":932,"mutability":"mutable","name":"to","nameLocation":"1061:2:11","nodeType":"VariableDeclaration","scope":951,"src":"1053:10:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":931,"name":"address","nodeType":"ElementaryTypeName","src":"1053:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":934,"mutability":"mutable","name":"value","nameLocation":"1081:5:11","nodeType":"VariableDeclaration","scope":951,"src":"1073:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":933,"name":"uint256","nodeType":"ElementaryTypeName","src":"1073:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"999:93:11"},"returnParameters":{"id":936,"nodeType":"ParameterList","parameters":[],"src":"1102:0:11"},"scope":1174,"src":"974:241:11","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":994,"nodeType":"Block","src":"1581:497:11","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":978,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":965,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":963,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":959,"src":"1830:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":964,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1839:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1830:10:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":966,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1829:12:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":976,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":971,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"1870:4:11","typeDescriptions":{"typeIdentifier":"t_contract$_SafeERC20_$1174","typeString":"library SafeERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_SafeERC20_$1174","typeString":"library SafeERC20"}],"id":970,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1862:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":969,"name":"address","nodeType":"ElementaryTypeName","src":"1862:7:11","typeDescriptions":{}}},"id":972,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1862:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":973,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":957,"src":"1877:7:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":967,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":955,"src":"1846:5:11","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$832","typeString":"contract IERC20"}},"id":968,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"allowance","nodeType":"MemberAccess","referencedDeclaration":809,"src":"1846:15:11","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view external returns (uint256)"}},"id":974,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1846:39:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":975,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1889:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1846:44:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":977,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1845:46:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"1829:62:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5361666545524332303a20617070726f76652066726f6d206e6f6e2d7a65726f20746f206e6f6e2d7a65726f20616c6c6f77616e6365","id":979,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1905:56:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_ef945ddb1bfdc0da870feb4560d868b047642b4ac7f2fb7f8b7c51cb4a411e25","typeString":"literal_string \"SafeERC20: approve from non-zero to non-zero allowance\""},"value":"SafeERC20: approve from non-zero to non-zero allowance"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_ef945ddb1bfdc0da870feb4560d868b047642b4ac7f2fb7f8b7c51cb4a411e25","typeString":"literal_string \"SafeERC20: approve from non-zero to non-zero allowance\""}],"id":962,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1808:7:11","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":980,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1808:163:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":981,"nodeType":"ExpressionStatement","src":"1808:163:11"},{"expression":{"arguments":[{"id":983,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":955,"src":"2001:5:11","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$832","typeString":"contract IERC20"}},{"arguments":[{"expression":{"expression":{"id":986,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":955,"src":"2031:5:11","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$832","typeString":"contract IERC20"}},"id":987,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"approve","nodeType":"MemberAccess","referencedDeclaration":819,"src":"2031:13:11","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":988,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"selector","nodeType":"MemberAccess","src":"2031:22:11","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},{"id":989,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":957,"src":"2055:7:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":990,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":959,"src":"2064:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":984,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"2008:3:11","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":985,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"encodeWithSelector","nodeType":"MemberAccess","src":"2008:22:11","typeDescriptions":{"typeIdentifier":"t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$","typeString":"function (bytes4) pure returns (bytes memory)"}},"id":991,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2008:62:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$832","typeString":"contract IERC20"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":982,"name":"_callOptionalReturn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1173,"src":"1981:19:11","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$832_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (contract IERC20,bytes memory)"}},"id":992,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1981:90:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":993,"nodeType":"ExpressionStatement","src":"1981:90:11"}]},"documentation":{"id":952,"nodeType":"StructuredDocumentation","src":"1221:249:11","text":" @dev Deprecated. This function has issues similar to the ones found in\n {IERC20-approve}, and its usage is discouraged.\n Whenever possible, use {safeIncreaseAllowance} and\n {safeDecreaseAllowance} instead."},"id":995,"implemented":true,"kind":"function","modifiers":[],"name":"safeApprove","nameLocation":"1484:11:11","nodeType":"FunctionDefinition","parameters":{"id":960,"nodeType":"ParameterList","parameters":[{"constant":false,"id":955,"mutability":"mutable","name":"token","nameLocation":"1512:5:11","nodeType":"VariableDeclaration","scope":995,"src":"1505:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$832","typeString":"contract IERC20"},"typeName":{"id":954,"nodeType":"UserDefinedTypeName","pathNode":{"id":953,"name":"IERC20","nodeType":"IdentifierPath","referencedDeclaration":832,"src":"1505:6:11"},"referencedDeclaration":832,"src":"1505:6:11","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$832","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":957,"mutability":"mutable","name":"spender","nameLocation":"1535:7:11","nodeType":"VariableDeclaration","scope":995,"src":"1527:15:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":956,"name":"address","nodeType":"ElementaryTypeName","src":"1527:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":959,"mutability":"mutable","name":"value","nameLocation":"1560:5:11","nodeType":"VariableDeclaration","scope":995,"src":"1552:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":958,"name":"uint256","nodeType":"ElementaryTypeName","src":"1552:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1495:76:11"},"returnParameters":{"id":961,"nodeType":"ParameterList","parameters":[],"src":"1581:0:11"},"scope":1174,"src":"1475:603:11","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1030,"nodeType":"Block","src":"2200:194:11","statements":[{"assignments":[1006],"declarations":[{"constant":false,"id":1006,"mutability":"mutable","name":"newAllowance","nameLocation":"2218:12:11","nodeType":"VariableDeclaration","scope":1030,"src":"2210:20:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1005,"name":"uint256","nodeType":"ElementaryTypeName","src":"2210:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1017,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1016,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":1011,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"2257:4:11","typeDescriptions":{"typeIdentifier":"t_contract$_SafeERC20_$1174","typeString":"library SafeERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_SafeERC20_$1174","typeString":"library SafeERC20"}],"id":1010,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2249:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1009,"name":"address","nodeType":"ElementaryTypeName","src":"2249:7:11","typeDescriptions":{}}},"id":1012,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2249:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1013,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1000,"src":"2264:7:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":1007,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":998,"src":"2233:5:11","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$832","typeString":"contract IERC20"}},"id":1008,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"allowance","nodeType":"MemberAccess","referencedDeclaration":809,"src":"2233:15:11","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view external returns (uint256)"}},"id":1014,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2233:39:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":1015,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1002,"src":"2275:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2233:47:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2210:70:11"},{"expression":{"arguments":[{"id":1019,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":998,"src":"2310:5:11","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$832","typeString":"contract IERC20"}},{"arguments":[{"expression":{"expression":{"id":1022,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":998,"src":"2340:5:11","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$832","typeString":"contract IERC20"}},"id":1023,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"approve","nodeType":"MemberAccess","referencedDeclaration":819,"src":"2340:13:11","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":1024,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"selector","nodeType":"MemberAccess","src":"2340:22:11","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},{"id":1025,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1000,"src":"2364:7:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1026,"name":"newAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1006,"src":"2373:12:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1020,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"2317:3:11","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":1021,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"encodeWithSelector","nodeType":"MemberAccess","src":"2317:22:11","typeDescriptions":{"typeIdentifier":"t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$","typeString":"function (bytes4) pure returns (bytes memory)"}},"id":1027,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2317:69:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$832","typeString":"contract IERC20"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1018,"name":"_callOptionalReturn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1173,"src":"2290:19:11","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$832_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (contract IERC20,bytes memory)"}},"id":1028,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2290:97:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1029,"nodeType":"ExpressionStatement","src":"2290:97:11"}]},"id":1031,"implemented":true,"kind":"function","modifiers":[],"name":"safeIncreaseAllowance","nameLocation":"2093:21:11","nodeType":"FunctionDefinition","parameters":{"id":1003,"nodeType":"ParameterList","parameters":[{"constant":false,"id":998,"mutability":"mutable","name":"token","nameLocation":"2131:5:11","nodeType":"VariableDeclaration","scope":1031,"src":"2124:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$832","typeString":"contract IERC20"},"typeName":{"id":997,"nodeType":"UserDefinedTypeName","pathNode":{"id":996,"name":"IERC20","nodeType":"IdentifierPath","referencedDeclaration":832,"src":"2124:6:11"},"referencedDeclaration":832,"src":"2124:6:11","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$832","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":1000,"mutability":"mutable","name":"spender","nameLocation":"2154:7:11","nodeType":"VariableDeclaration","scope":1031,"src":"2146:15:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":999,"name":"address","nodeType":"ElementaryTypeName","src":"2146:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1002,"mutability":"mutable","name":"value","nameLocation":"2179:5:11","nodeType":"VariableDeclaration","scope":1031,"src":"2171:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1001,"name":"uint256","nodeType":"ElementaryTypeName","src":"2171:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2114:76:11"},"returnParameters":{"id":1004,"nodeType":"ParameterList","parameters":[],"src":"2200:0:11"},"scope":1174,"src":"2084:310:11","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1078,"nodeType":"Block","src":"2516:370:11","statements":[{"id":1077,"nodeType":"UncheckedBlock","src":"2526:354:11","statements":[{"assignments":[1042],"declarations":[{"constant":false,"id":1042,"mutability":"mutable","name":"oldAllowance","nameLocation":"2558:12:11","nodeType":"VariableDeclaration","scope":1077,"src":"2550:20:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1041,"name":"uint256","nodeType":"ElementaryTypeName","src":"2550:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1051,"initialValue":{"arguments":[{"arguments":[{"id":1047,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"2597:4:11","typeDescriptions":{"typeIdentifier":"t_contract$_SafeERC20_$1174","typeString":"library SafeERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_SafeERC20_$1174","typeString":"library SafeERC20"}],"id":1046,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2589:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1045,"name":"address","nodeType":"ElementaryTypeName","src":"2589:7:11","typeDescriptions":{}}},"id":1048,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2589:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1049,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1036,"src":"2604:7:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":1043,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1034,"src":"2573:5:11","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$832","typeString":"contract IERC20"}},"id":1044,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"allowance","nodeType":"MemberAccess","referencedDeclaration":809,"src":"2573:15:11","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view external returns (uint256)"}},"id":1050,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2573:39:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2550:62:11"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1055,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1053,"name":"oldAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1042,"src":"2634:12:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":1054,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1038,"src":"2650:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2634:21:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5361666545524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f","id":1056,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2657:43:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_2c3af60974a758b7e72e108c9bf0943ecc9e4f2e8af4695da5f52fbf57a63d3a","typeString":"literal_string \"SafeERC20: decreased allowance below zero\""},"value":"SafeERC20: decreased allowance below zero"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_2c3af60974a758b7e72e108c9bf0943ecc9e4f2e8af4695da5f52fbf57a63d3a","typeString":"literal_string \"SafeERC20: decreased allowance below zero\""}],"id":1052,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2626:7:11","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1057,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2626:75:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1058,"nodeType":"ExpressionStatement","src":"2626:75:11"},{"assignments":[1060],"declarations":[{"constant":false,"id":1060,"mutability":"mutable","name":"newAllowance","nameLocation":"2723:12:11","nodeType":"VariableDeclaration","scope":1077,"src":"2715:20:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1059,"name":"uint256","nodeType":"ElementaryTypeName","src":"2715:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1064,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1063,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1061,"name":"oldAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1042,"src":"2738:12:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":1062,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1038,"src":"2753:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2738:20:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2715:43:11"},{"expression":{"arguments":[{"id":1066,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1034,"src":"2792:5:11","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$832","typeString":"contract IERC20"}},{"arguments":[{"expression":{"expression":{"id":1069,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1034,"src":"2822:5:11","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$832","typeString":"contract IERC20"}},"id":1070,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"approve","nodeType":"MemberAccess","referencedDeclaration":819,"src":"2822:13:11","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":1071,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"selector","nodeType":"MemberAccess","src":"2822:22:11","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},{"id":1072,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1036,"src":"2846:7:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1073,"name":"newAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1060,"src":"2855:12:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1067,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"2799:3:11","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":1068,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"encodeWithSelector","nodeType":"MemberAccess","src":"2799:22:11","typeDescriptions":{"typeIdentifier":"t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$","typeString":"function (bytes4) pure returns (bytes memory)"}},"id":1074,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2799:69:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$832","typeString":"contract IERC20"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1065,"name":"_callOptionalReturn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1173,"src":"2772:19:11","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$832_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (contract IERC20,bytes memory)"}},"id":1075,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2772:97:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1076,"nodeType":"ExpressionStatement","src":"2772:97:11"}]}]},"id":1079,"implemented":true,"kind":"function","modifiers":[],"name":"safeDecreaseAllowance","nameLocation":"2409:21:11","nodeType":"FunctionDefinition","parameters":{"id":1039,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1034,"mutability":"mutable","name":"token","nameLocation":"2447:5:11","nodeType":"VariableDeclaration","scope":1079,"src":"2440:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$832","typeString":"contract IERC20"},"typeName":{"id":1033,"nodeType":"UserDefinedTypeName","pathNode":{"id":1032,"name":"IERC20","nodeType":"IdentifierPath","referencedDeclaration":832,"src":"2440:6:11"},"referencedDeclaration":832,"src":"2440:6:11","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$832","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":1036,"mutability":"mutable","name":"spender","nameLocation":"2470:7:11","nodeType":"VariableDeclaration","scope":1079,"src":"2462:15:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1035,"name":"address","nodeType":"ElementaryTypeName","src":"2462:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1038,"mutability":"mutable","name":"value","nameLocation":"2495:5:11","nodeType":"VariableDeclaration","scope":1079,"src":"2487:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1037,"name":"uint256","nodeType":"ElementaryTypeName","src":"2487:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2430:76:11"},"returnParameters":{"id":1040,"nodeType":"ParameterList","parameters":[],"src":"2516:0:11"},"scope":1174,"src":"2400:486:11","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1134,"nodeType":"Block","src":"3107:257:11","statements":[{"assignments":[1100],"declarations":[{"constant":false,"id":1100,"mutability":"mutable","name":"nonceBefore","nameLocation":"3125:11:11","nodeType":"VariableDeclaration","scope":1134,"src":"3117:19:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1099,"name":"uint256","nodeType":"ElementaryTypeName","src":"3117:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1105,"initialValue":{"arguments":[{"id":1103,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1084,"src":"3152:5:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":1101,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1082,"src":"3139:5:11","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20Permit_$893","typeString":"contract IERC20Permit"}},"id":1102,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"nonces","nodeType":"MemberAccess","referencedDeclaration":886,"src":"3139:12:11","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view external returns (uint256)"}},"id":1104,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3139:19:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3117:41:11"},{"expression":{"arguments":[{"id":1109,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1084,"src":"3181:5:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1110,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1086,"src":"3188:7:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1111,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1088,"src":"3197:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1112,"name":"deadline","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1090,"src":"3204:8:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1113,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1092,"src":"3214:1:11","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":1114,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1094,"src":"3217:1:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1115,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1096,"src":"3220:1:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":1106,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1082,"src":"3168:5:11","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20Permit_$893","typeString":"contract IERC20Permit"}},"id":1108,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"permit","nodeType":"MemberAccess","referencedDeclaration":878,"src":"3168:12:11","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$__$","typeString":"function (address,address,uint256,uint256,uint8,bytes32,bytes32) external"}},"id":1116,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3168:54:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1117,"nodeType":"ExpressionStatement","src":"3168:54:11"},{"assignments":[1119],"declarations":[{"constant":false,"id":1119,"mutability":"mutable","name":"nonceAfter","nameLocation":"3240:10:11","nodeType":"VariableDeclaration","scope":1134,"src":"3232:18:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1118,"name":"uint256","nodeType":"ElementaryTypeName","src":"3232:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1124,"initialValue":{"arguments":[{"id":1122,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1084,"src":"3266:5:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":1120,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1082,"src":"3253:5:11","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20Permit_$893","typeString":"contract IERC20Permit"}},"id":1121,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"nonces","nodeType":"MemberAccess","referencedDeclaration":886,"src":"3253:12:11","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view external returns (uint256)"}},"id":1123,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3253:19:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3232:40:11"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1130,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1126,"name":"nonceAfter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1119,"src":"3290:10:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1129,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1127,"name":"nonceBefore","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1100,"src":"3304:11:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":1128,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3318:1:11","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"3304:15:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3290:29:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5361666545524332303a207065726d697420646964206e6f742073756363656564","id":1131,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3321:35:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_cde8e927812a7a656f8f04e89ac4f4113d47940dd2125d11fcb8e0bd36bfc59d","typeString":"literal_string \"SafeERC20: permit did not succeed\""},"value":"SafeERC20: permit did not succeed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_cde8e927812a7a656f8f04e89ac4f4113d47940dd2125d11fcb8e0bd36bfc59d","typeString":"literal_string \"SafeERC20: permit did not succeed\""}],"id":1125,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3282:7:11","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1132,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3282:75:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1133,"nodeType":"ExpressionStatement","src":"3282:75:11"}]},"id":1135,"implemented":true,"kind":"function","modifiers":[],"name":"safePermit","nameLocation":"2901:10:11","nodeType":"FunctionDefinition","parameters":{"id":1097,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1082,"mutability":"mutable","name":"token","nameLocation":"2934:5:11","nodeType":"VariableDeclaration","scope":1135,"src":"2921:18:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20Permit_$893","typeString":"contract IERC20Permit"},"typeName":{"id":1081,"nodeType":"UserDefinedTypeName","pathNode":{"id":1080,"name":"IERC20Permit","nodeType":"IdentifierPath","referencedDeclaration":893,"src":"2921:12:11"},"referencedDeclaration":893,"src":"2921:12:11","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20Permit_$893","typeString":"contract IERC20Permit"}},"visibility":"internal"},{"constant":false,"id":1084,"mutability":"mutable","name":"owner","nameLocation":"2957:5:11","nodeType":"VariableDeclaration","scope":1135,"src":"2949:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1083,"name":"address","nodeType":"ElementaryTypeName","src":"2949:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1086,"mutability":"mutable","name":"spender","nameLocation":"2980:7:11","nodeType":"VariableDeclaration","scope":1135,"src":"2972:15:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1085,"name":"address","nodeType":"ElementaryTypeName","src":"2972:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1088,"mutability":"mutable","name":"value","nameLocation":"3005:5:11","nodeType":"VariableDeclaration","scope":1135,"src":"2997:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1087,"name":"uint256","nodeType":"ElementaryTypeName","src":"2997:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1090,"mutability":"mutable","name":"deadline","nameLocation":"3028:8:11","nodeType":"VariableDeclaration","scope":1135,"src":"3020:16:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1089,"name":"uint256","nodeType":"ElementaryTypeName","src":"3020:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1092,"mutability":"mutable","name":"v","nameLocation":"3052:1:11","nodeType":"VariableDeclaration","scope":1135,"src":"3046:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1091,"name":"uint8","nodeType":"ElementaryTypeName","src":"3046:5:11","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":1094,"mutability":"mutable","name":"r","nameLocation":"3071:1:11","nodeType":"VariableDeclaration","scope":1135,"src":"3063:9:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1093,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3063:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1096,"mutability":"mutable","name":"s","nameLocation":"3090:1:11","nodeType":"VariableDeclaration","scope":1135,"src":"3082:9:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1095,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3082:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2911:186:11"},"returnParameters":{"id":1098,"nodeType":"ParameterList","parameters":[],"src":"3107:0:11"},"scope":1174,"src":"2892:472:11","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1172,"nodeType":"Block","src":"3817:636:11","statements":[{"assignments":[1145],"declarations":[{"constant":false,"id":1145,"mutability":"mutable","name":"returndata","nameLocation":"4179:10:11","nodeType":"VariableDeclaration","scope":1172,"src":"4166:23:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1144,"name":"bytes","nodeType":"ElementaryTypeName","src":"4166:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":1154,"initialValue":{"arguments":[{"id":1151,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1141,"src":"4220:4:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564","id":1152,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4226:34:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_47fb62c2c272651d2f0f342bac006756b8ba07f21cc5cb87e0fbb9d50c0c585b","typeString":"literal_string \"SafeERC20: low-level call failed\""},"value":"SafeERC20: low-level call failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_stringliteral_47fb62c2c272651d2f0f342bac006756b8ba07f21cc5cb87e0fbb9d50c0c585b","typeString":"literal_string \"SafeERC20: low-level call failed\""}],"expression":{"arguments":[{"id":1148,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1139,"src":"4200:5:11","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$832","typeString":"contract IERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$832","typeString":"contract IERC20"}],"id":1147,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4192:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1146,"name":"address","nodeType":"ElementaryTypeName","src":"4192:7:11","typeDescriptions":{}}},"id":1149,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4192:14:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1150,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"functionCall","nodeType":"MemberAccess","referencedDeclaration":1263,"src":"4192:27:11","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$bound_to$_t_address_$","typeString":"function (address,bytes memory,string memory) returns (bytes memory)"}},"id":1153,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4192:69:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"4166:95:11"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1158,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1155,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1145,"src":"4275:10:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1156,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"4275:17:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1157,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4295:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4275:21:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1171,"nodeType":"IfStatement","src":"4271:176:11","trueBody":{"id":1170,"nodeType":"Block","src":"4298:149:11","statements":[{"expression":{"arguments":[{"arguments":[{"id":1162,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1145,"src":"4370:10:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"components":[{"id":1164,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4383:4:11","typeDescriptions":{"typeIdentifier":"t_type$_t_bool_$","typeString":"type(bool)"},"typeName":{"id":1163,"name":"bool","nodeType":"ElementaryTypeName","src":"4383:4:11","typeDescriptions":{}}}],"id":1165,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"4382:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_bool_$","typeString":"type(bool)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_type$_t_bool_$","typeString":"type(bool)"}],"expression":{"id":1160,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"4359:3:11","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":1161,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"decode","nodeType":"MemberAccess","src":"4359:10:11","typeDescriptions":{"typeIdentifier":"t_function_abidecode_pure$__$returns$__$","typeString":"function () pure"}},"id":1166,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4359:30:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5361666545524332303a204552433230206f7065726174696f6e20646964206e6f742073756363656564","id":1167,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4391:44:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd","typeString":"literal_string \"SafeERC20: ERC20 operation did not succeed\""},"value":"SafeERC20: ERC20 operation did not succeed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd","typeString":"literal_string \"SafeERC20: ERC20 operation did not succeed\""}],"id":1159,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4351:7:11","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1168,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4351:85:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1169,"nodeType":"ExpressionStatement","src":"4351:85:11"}]}}]},"documentation":{"id":1136,"nodeType":"StructuredDocumentation","src":"3370:372:11","text":" @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants)."},"id":1173,"implemented":true,"kind":"function","modifiers":[],"name":"_callOptionalReturn","nameLocation":"3756:19:11","nodeType":"FunctionDefinition","parameters":{"id":1142,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1139,"mutability":"mutable","name":"token","nameLocation":"3783:5:11","nodeType":"VariableDeclaration","scope":1173,"src":"3776:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$832","typeString":"contract IERC20"},"typeName":{"id":1138,"nodeType":"UserDefinedTypeName","pathNode":{"id":1137,"name":"IERC20","nodeType":"IdentifierPath","referencedDeclaration":832,"src":"3776:6:11"},"referencedDeclaration":832,"src":"3776:6:11","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$832","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":1141,"mutability":"mutable","name":"data","nameLocation":"3803:4:11","nodeType":"VariableDeclaration","scope":1173,"src":"3790:17:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1140,"name":"bytes","nodeType":"ElementaryTypeName","src":"3790:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3775:33:11"},"returnParameters":{"id":1143,"nodeType":"ParameterList","parameters":[],"src":"3817:0:11"},"scope":1174,"src":"3747:706:11","stateMutability":"nonpayable","virtual":false,"visibility":"private"}],"scope":1175,"src":"707:3748:11"}],"src":"115:4341:11"},"id":11},"@openzeppelin/contracts/utils/Address.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Address.sol","exportedSymbols":{"Address":[1469]},"id":1470,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1176,"literals":["solidity","^","0.8",".1"],"nodeType":"PragmaDirective","src":"101:23:12"},{"abstract":false,"baseContracts":[],"contractDependencies":[],"contractKind":"library","documentation":{"id":1177,"nodeType":"StructuredDocumentation","src":"126:67:12","text":" @dev Collection of functions related to the address type"},"fullyImplemented":true,"id":1469,"linearizedBaseContracts":[1469],"name":"Address","nameLocation":"202:7:12","nodeType":"ContractDefinition","nodes":[{"body":{"id":1191,"nodeType":"Block","src":"1241:254:12","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1189,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":1185,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1180,"src":"1465:7:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1186,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"code","nodeType":"MemberAccess","src":"1465:12:12","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1187,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"1465:19:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1188,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1487:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1465:23:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1184,"id":1190,"nodeType":"Return","src":"1458:30:12"}]},"documentation":{"id":1178,"nodeType":"StructuredDocumentation","src":"216:954:12","text":" @dev Returns true if `account` is a contract.\n [IMPORTANT]\n ====\n It is unsafe to assume that an address for which this function returns\n false is an externally-owned account (EOA) and not a contract.\n Among others, `isContract` will return false for the following\n types of addresses:\n  - an externally-owned account\n  - a contract in construction\n  - an address where a contract will be created\n  - an address where a contract lived, but was destroyed\n ====\n [IMPORTANT]\n ====\n You shouldn't rely on `isContract` to protect against flash loan attacks!\n Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n constructor.\n ===="},"id":1192,"implemented":true,"kind":"function","modifiers":[],"name":"isContract","nameLocation":"1184:10:12","nodeType":"FunctionDefinition","parameters":{"id":1181,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1180,"mutability":"mutable","name":"account","nameLocation":"1203:7:12","nodeType":"VariableDeclaration","scope":1192,"src":"1195:15:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1179,"name":"address","nodeType":"ElementaryTypeName","src":"1195:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1194:17:12"},"returnParameters":{"id":1184,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1183,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1192,"src":"1235:4:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1182,"name":"bool","nodeType":"ElementaryTypeName","src":"1235:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1234:6:12"},"scope":1469,"src":"1175:320:12","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":1225,"nodeType":"Block","src":"2483:241:12","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1207,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":1203,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"2509:4:12","typeDescriptions":{"typeIdentifier":"t_contract$_Address_$1469","typeString":"library Address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Address_$1469","typeString":"library Address"}],"id":1202,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2501:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1201,"name":"address","nodeType":"ElementaryTypeName","src":"2501:7:12","typeDescriptions":{}}},"id":1204,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2501:13:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1205,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"balance","nodeType":"MemberAccess","src":"2501:21:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":1206,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1197,"src":"2526:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2501:31:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a20696e73756666696369656e742062616c616e6365","id":1208,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2534:31:12","typeDescriptions":{"typeIdentifier":"t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9","typeString":"literal_string \"Address: insufficient balance\""},"value":"Address: insufficient balance"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9","typeString":"literal_string \"Address: insufficient balance\""}],"id":1200,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2493:7:12","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1209,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2493:73:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1210,"nodeType":"ExpressionStatement","src":"2493:73:12"},{"assignments":[1212,null],"declarations":[{"constant":false,"id":1212,"mutability":"mutable","name":"success","nameLocation":"2583:7:12","nodeType":"VariableDeclaration","scope":1225,"src":"2578:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1211,"name":"bool","nodeType":"ElementaryTypeName","src":"2578:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},null],"id":1219,"initialValue":{"arguments":[{"hexValue":"","id":1217,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2626:2:12","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"id":1213,"name":"recipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1195,"src":"2596:9:12","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"id":1214,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"call","nodeType":"MemberAccess","src":"2596:14:12","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":1216,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"id":1215,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1197,"src":"2618:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"2596:29:12","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":1218,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2596:33:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"2577:52:12"},{"expression":{"arguments":[{"id":1221,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1212,"src":"2647:7:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a20756e61626c6520746f2073656e642076616c75652c20726563697069656e74206d61792068617665207265766572746564","id":1222,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2656:60:12","typeDescriptions":{"typeIdentifier":"t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae","typeString":"literal_string \"Address: unable to send value, recipient may have reverted\""},"value":"Address: unable to send value, recipient may have reverted"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae","typeString":"literal_string \"Address: unable to send value, recipient may have reverted\""}],"id":1220,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2639:7:12","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1223,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2639:78:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1224,"nodeType":"ExpressionStatement","src":"2639:78:12"}]},"documentation":{"id":1193,"nodeType":"StructuredDocumentation","src":"1501:906:12","text":" @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."},"id":1226,"implemented":true,"kind":"function","modifiers":[],"name":"sendValue","nameLocation":"2421:9:12","nodeType":"FunctionDefinition","parameters":{"id":1198,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1195,"mutability":"mutable","name":"recipient","nameLocation":"2447:9:12","nodeType":"VariableDeclaration","scope":1226,"src":"2431:25:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"},"typeName":{"id":1194,"name":"address","nodeType":"ElementaryTypeName","src":"2431:15:12","stateMutability":"payable","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"visibility":"internal"},{"constant":false,"id":1197,"mutability":"mutable","name":"amount","nameLocation":"2466:6:12","nodeType":"VariableDeclaration","scope":1226,"src":"2458:14:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1196,"name":"uint256","nodeType":"ElementaryTypeName","src":"2458:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2430:43:12"},"returnParameters":{"id":1199,"nodeType":"ParameterList","parameters":[],"src":"2483:0:12"},"scope":1469,"src":"2412:312:12","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1242,"nodeType":"Block","src":"3555:84:12","statements":[{"expression":{"arguments":[{"id":1237,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1229,"src":"3585:6:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1238,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1231,"src":"3593:4:12","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"416464726573733a206c6f772d6c6576656c2063616c6c206661696c6564","id":1239,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3599:32:12","typeDescriptions":{"typeIdentifier":"t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df","typeString":"literal_string \"Address: low-level call failed\""},"value":"Address: low-level call failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df","typeString":"literal_string \"Address: low-level call failed\""}],"id":1236,"name":"functionCall","nodeType":"Identifier","overloadedDeclarations":[1243,1263],"referencedDeclaration":1263,"src":"3572:12:12","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,string memory) returns (bytes memory)"}},"id":1240,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3572:60:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1235,"id":1241,"nodeType":"Return","src":"3565:67:12"}]},"documentation":{"id":1227,"nodeType":"StructuredDocumentation","src":"2730:731:12","text":" @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason, it is bubbled up by this\n function (like regular Solidity function calls).\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert.\n _Available since v3.1._"},"id":1243,"implemented":true,"kind":"function","modifiers":[],"name":"functionCall","nameLocation":"3475:12:12","nodeType":"FunctionDefinition","parameters":{"id":1232,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1229,"mutability":"mutable","name":"target","nameLocation":"3496:6:12","nodeType":"VariableDeclaration","scope":1243,"src":"3488:14:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1228,"name":"address","nodeType":"ElementaryTypeName","src":"3488:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1231,"mutability":"mutable","name":"data","nameLocation":"3517:4:12","nodeType":"VariableDeclaration","scope":1243,"src":"3504:17:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1230,"name":"bytes","nodeType":"ElementaryTypeName","src":"3504:5:12","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3487:35:12"},"returnParameters":{"id":1235,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1234,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1243,"src":"3541:12:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1233,"name":"bytes","nodeType":"ElementaryTypeName","src":"3541:5:12","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3540:14:12"},"scope":1469,"src":"3466:173:12","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1262,"nodeType":"Block","src":"4008:76:12","statements":[{"expression":{"arguments":[{"id":1256,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1246,"src":"4047:6:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1257,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1248,"src":"4055:4:12","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"30","id":1258,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4061:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"id":1259,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1250,"src":"4064:12:12","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1255,"name":"functionCallWithValue","nodeType":"Identifier","overloadedDeclarations":[1283,1333],"referencedDeclaration":1333,"src":"4025:21:12","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,uint256,string memory) returns (bytes memory)"}},"id":1260,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4025:52:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1254,"id":1261,"nodeType":"Return","src":"4018:59:12"}]},"documentation":{"id":1244,"nodeType":"StructuredDocumentation","src":"3645:211:12","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"},"id":1263,"implemented":true,"kind":"function","modifiers":[],"name":"functionCall","nameLocation":"3870:12:12","nodeType":"FunctionDefinition","parameters":{"id":1251,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1246,"mutability":"mutable","name":"target","nameLocation":"3900:6:12","nodeType":"VariableDeclaration","scope":1263,"src":"3892:14:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1245,"name":"address","nodeType":"ElementaryTypeName","src":"3892:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1248,"mutability":"mutable","name":"data","nameLocation":"3929:4:12","nodeType":"VariableDeclaration","scope":1263,"src":"3916:17:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1247,"name":"bytes","nodeType":"ElementaryTypeName","src":"3916:5:12","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1250,"mutability":"mutable","name":"errorMessage","nameLocation":"3957:12:12","nodeType":"VariableDeclaration","scope":1263,"src":"3943:26:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1249,"name":"string","nodeType":"ElementaryTypeName","src":"3943:6:12","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3882:93:12"},"returnParameters":{"id":1254,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1253,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1263,"src":"3994:12:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1252,"name":"bytes","nodeType":"ElementaryTypeName","src":"3994:5:12","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3993:14:12"},"scope":1469,"src":"3861:223:12","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1282,"nodeType":"Block","src":"4589:111:12","statements":[{"expression":{"arguments":[{"id":1276,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1266,"src":"4628:6:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1277,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1268,"src":"4636:4:12","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":1278,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1270,"src":"4642:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"416464726573733a206c6f772d6c6576656c2063616c6c20776974682076616c7565206661696c6564","id":1279,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4649:43:12","typeDescriptions":{"typeIdentifier":"t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc","typeString":"literal_string \"Address: low-level call with value failed\""},"value":"Address: low-level call with value failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc","typeString":"literal_string \"Address: low-level call with value failed\""}],"id":1275,"name":"functionCallWithValue","nodeType":"Identifier","overloadedDeclarations":[1283,1333],"referencedDeclaration":1333,"src":"4606:21:12","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,uint256,string memory) returns (bytes memory)"}},"id":1280,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4606:87:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1274,"id":1281,"nodeType":"Return","src":"4599:94:12"}]},"documentation":{"id":1264,"nodeType":"StructuredDocumentation","src":"4090:351:12","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`.\n _Available since v3.1._"},"id":1283,"implemented":true,"kind":"function","modifiers":[],"name":"functionCallWithValue","nameLocation":"4455:21:12","nodeType":"FunctionDefinition","parameters":{"id":1271,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1266,"mutability":"mutable","name":"target","nameLocation":"4494:6:12","nodeType":"VariableDeclaration","scope":1283,"src":"4486:14:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1265,"name":"address","nodeType":"ElementaryTypeName","src":"4486:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1268,"mutability":"mutable","name":"data","nameLocation":"4523:4:12","nodeType":"VariableDeclaration","scope":1283,"src":"4510:17:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1267,"name":"bytes","nodeType":"ElementaryTypeName","src":"4510:5:12","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1270,"mutability":"mutable","name":"value","nameLocation":"4545:5:12","nodeType":"VariableDeclaration","scope":1283,"src":"4537:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1269,"name":"uint256","nodeType":"ElementaryTypeName","src":"4537:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4476:80:12"},"returnParameters":{"id":1274,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1273,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1283,"src":"4575:12:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1272,"name":"bytes","nodeType":"ElementaryTypeName","src":"4575:5:12","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4574:14:12"},"scope":1469,"src":"4446:254:12","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1332,"nodeType":"Block","src":"5127:320:12","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1304,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":1300,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"5153:4:12","typeDescriptions":{"typeIdentifier":"t_contract$_Address_$1469","typeString":"library Address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Address_$1469","typeString":"library Address"}],"id":1299,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5145:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1298,"name":"address","nodeType":"ElementaryTypeName","src":"5145:7:12","typeDescriptions":{}}},"id":1301,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5145:13:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1302,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"balance","nodeType":"MemberAccess","src":"5145:21:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":1303,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1290,"src":"5170:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5145:30:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c","id":1305,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5177:40:12","typeDescriptions":{"typeIdentifier":"t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c","typeString":"literal_string \"Address: insufficient balance for call\""},"value":"Address: insufficient balance for call"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c","typeString":"literal_string \"Address: insufficient balance for call\""}],"id":1297,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5137:7:12","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1306,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5137:81:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1307,"nodeType":"ExpressionStatement","src":"5137:81:12"},{"expression":{"arguments":[{"arguments":[{"id":1310,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1286,"src":"5247:6:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1309,"name":"isContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1192,"src":"5236:10:12","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_bool_$","typeString":"function (address) view returns (bool)"}},"id":1311,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5236:18:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374","id":1312,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5256:31:12","typeDescriptions":{"typeIdentifier":"t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad","typeString":"literal_string \"Address: call to non-contract\""},"value":"Address: call to non-contract"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad","typeString":"literal_string \"Address: call to non-contract\""}],"id":1308,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5228:7:12","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1313,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5228:60:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1314,"nodeType":"ExpressionStatement","src":"5228:60:12"},{"assignments":[1316,1318],"declarations":[{"constant":false,"id":1316,"mutability":"mutable","name":"success","nameLocation":"5305:7:12","nodeType":"VariableDeclaration","scope":1332,"src":"5300:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1315,"name":"bool","nodeType":"ElementaryTypeName","src":"5300:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1318,"mutability":"mutable","name":"returndata","nameLocation":"5327:10:12","nodeType":"VariableDeclaration","scope":1332,"src":"5314:23:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1317,"name":"bytes","nodeType":"ElementaryTypeName","src":"5314:5:12","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":1325,"initialValue":{"arguments":[{"id":1323,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1288,"src":"5367:4:12","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":1319,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1286,"src":"5341:6:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1320,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"call","nodeType":"MemberAccess","src":"5341:11:12","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":1322,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"id":1321,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1290,"src":"5360:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"5341:25:12","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":1324,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5341:31:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"5299:73:12"},{"expression":{"arguments":[{"id":1327,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1316,"src":"5406:7:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":1328,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1318,"src":"5415:10:12","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":1329,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1292,"src":"5427:12:12","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1326,"name":"verifyCallResult","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1468,"src":"5389:16:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (bool,bytes memory,string memory) pure returns (bytes memory)"}},"id":1330,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5389:51:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1296,"id":1331,"nodeType":"Return","src":"5382:58:12"}]},"documentation":{"id":1284,"nodeType":"StructuredDocumentation","src":"4706:237:12","text":" @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n with `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"},"id":1333,"implemented":true,"kind":"function","modifiers":[],"name":"functionCallWithValue","nameLocation":"4957:21:12","nodeType":"FunctionDefinition","parameters":{"id":1293,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1286,"mutability":"mutable","name":"target","nameLocation":"4996:6:12","nodeType":"VariableDeclaration","scope":1333,"src":"4988:14:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1285,"name":"address","nodeType":"ElementaryTypeName","src":"4988:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1288,"mutability":"mutable","name":"data","nameLocation":"5025:4:12","nodeType":"VariableDeclaration","scope":1333,"src":"5012:17:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1287,"name":"bytes","nodeType":"ElementaryTypeName","src":"5012:5:12","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1290,"mutability":"mutable","name":"value","nameLocation":"5047:5:12","nodeType":"VariableDeclaration","scope":1333,"src":"5039:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1289,"name":"uint256","nodeType":"ElementaryTypeName","src":"5039:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1292,"mutability":"mutable","name":"errorMessage","nameLocation":"5076:12:12","nodeType":"VariableDeclaration","scope":1333,"src":"5062:26:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1291,"name":"string","nodeType":"ElementaryTypeName","src":"5062:6:12","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"4978:116:12"},"returnParameters":{"id":1296,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1295,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1333,"src":"5113:12:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1294,"name":"bytes","nodeType":"ElementaryTypeName","src":"5113:5:12","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5112:14:12"},"scope":1469,"src":"4948:499:12","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1349,"nodeType":"Block","src":"5724:97:12","statements":[{"expression":{"arguments":[{"id":1344,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1336,"src":"5760:6:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1345,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1338,"src":"5768:4:12","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"416464726573733a206c6f772d6c6576656c207374617469632063616c6c206661696c6564","id":1346,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5774:39:12","typeDescriptions":{"typeIdentifier":"t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0","typeString":"literal_string \"Address: low-level static call failed\""},"value":"Address: low-level static call failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0","typeString":"literal_string \"Address: low-level static call failed\""}],"id":1343,"name":"functionStaticCall","nodeType":"Identifier","overloadedDeclarations":[1350,1385],"referencedDeclaration":1385,"src":"5741:18:12","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,string memory) view returns (bytes memory)"}},"id":1347,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5741:73:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1342,"id":1348,"nodeType":"Return","src":"5734:80:12"}]},"documentation":{"id":1334,"nodeType":"StructuredDocumentation","src":"5453:166:12","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"},"id":1350,"implemented":true,"kind":"function","modifiers":[],"name":"functionStaticCall","nameLocation":"5633:18:12","nodeType":"FunctionDefinition","parameters":{"id":1339,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1336,"mutability":"mutable","name":"target","nameLocation":"5660:6:12","nodeType":"VariableDeclaration","scope":1350,"src":"5652:14:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1335,"name":"address","nodeType":"ElementaryTypeName","src":"5652:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1338,"mutability":"mutable","name":"data","nameLocation":"5681:4:12","nodeType":"VariableDeclaration","scope":1350,"src":"5668:17:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1337,"name":"bytes","nodeType":"ElementaryTypeName","src":"5668:5:12","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5651:35:12"},"returnParameters":{"id":1342,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1341,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1350,"src":"5710:12:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1340,"name":"bytes","nodeType":"ElementaryTypeName","src":"5710:5:12","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5709:14:12"},"scope":1469,"src":"5624:197:12","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":1384,"nodeType":"Block","src":"6163:228:12","statements":[{"expression":{"arguments":[{"arguments":[{"id":1364,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1353,"src":"6192:6:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1363,"name":"isContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1192,"src":"6181:10:12","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_bool_$","typeString":"function (address) view returns (bool)"}},"id":1365,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6181:18:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a207374617469632063616c6c20746f206e6f6e2d636f6e7472616374","id":1366,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6201:38:12","typeDescriptions":{"typeIdentifier":"t_stringliteral_c79cc78e4f16ce3933a42b84c73868f93bb4a59c031a0acf576679de98c608a9","typeString":"literal_string \"Address: static call to non-contract\""},"value":"Address: static call to non-contract"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_c79cc78e4f16ce3933a42b84c73868f93bb4a59c031a0acf576679de98c608a9","typeString":"literal_string \"Address: static call to non-contract\""}],"id":1362,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"6173:7:12","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1367,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6173:67:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1368,"nodeType":"ExpressionStatement","src":"6173:67:12"},{"assignments":[1370,1372],"declarations":[{"constant":false,"id":1370,"mutability":"mutable","name":"success","nameLocation":"6257:7:12","nodeType":"VariableDeclaration","scope":1384,"src":"6252:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1369,"name":"bool","nodeType":"ElementaryTypeName","src":"6252:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1372,"mutability":"mutable","name":"returndata","nameLocation":"6279:10:12","nodeType":"VariableDeclaration","scope":1384,"src":"6266:23:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1371,"name":"bytes","nodeType":"ElementaryTypeName","src":"6266:5:12","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":1377,"initialValue":{"arguments":[{"id":1375,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1355,"src":"6311:4:12","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":1373,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1353,"src":"6293:6:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1374,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"staticcall","nodeType":"MemberAccess","src":"6293:17:12","typeDescriptions":{"typeIdentifier":"t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) view returns (bool,bytes memory)"}},"id":1376,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6293:23:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"6251:65:12"},{"expression":{"arguments":[{"id":1379,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1370,"src":"6350:7:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":1380,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1372,"src":"6359:10:12","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":1381,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1357,"src":"6371:12:12","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1378,"name":"verifyCallResult","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1468,"src":"6333:16:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (bool,bytes memory,string memory) pure returns (bytes memory)"}},"id":1382,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6333:51:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1361,"id":1383,"nodeType":"Return","src":"6326:58:12"}]},"documentation":{"id":1351,"nodeType":"StructuredDocumentation","src":"5827:173:12","text":" @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"},"id":1385,"implemented":true,"kind":"function","modifiers":[],"name":"functionStaticCall","nameLocation":"6014:18:12","nodeType":"FunctionDefinition","parameters":{"id":1358,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1353,"mutability":"mutable","name":"target","nameLocation":"6050:6:12","nodeType":"VariableDeclaration","scope":1385,"src":"6042:14:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1352,"name":"address","nodeType":"ElementaryTypeName","src":"6042:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1355,"mutability":"mutable","name":"data","nameLocation":"6079:4:12","nodeType":"VariableDeclaration","scope":1385,"src":"6066:17:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1354,"name":"bytes","nodeType":"ElementaryTypeName","src":"6066:5:12","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1357,"mutability":"mutable","name":"errorMessage","nameLocation":"6107:12:12","nodeType":"VariableDeclaration","scope":1385,"src":"6093:26:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1356,"name":"string","nodeType":"ElementaryTypeName","src":"6093:6:12","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"6032:93:12"},"returnParameters":{"id":1361,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1360,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1385,"src":"6149:12:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1359,"name":"bytes","nodeType":"ElementaryTypeName","src":"6149:5:12","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6148:14:12"},"scope":1469,"src":"6005:386:12","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":1401,"nodeType":"Block","src":"6667:101:12","statements":[{"expression":{"arguments":[{"id":1396,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1388,"src":"6705:6:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1397,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1390,"src":"6713:4:12","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564","id":1398,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6719:41:12","typeDescriptions":{"typeIdentifier":"t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398","typeString":"literal_string \"Address: low-level delegate call failed\""},"value":"Address: low-level delegate call failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398","typeString":"literal_string \"Address: low-level delegate call failed\""}],"id":1395,"name":"functionDelegateCall","nodeType":"Identifier","overloadedDeclarations":[1402,1437],"referencedDeclaration":1437,"src":"6684:20:12","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,string memory) returns (bytes memory)"}},"id":1399,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6684:77:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1394,"id":1400,"nodeType":"Return","src":"6677:84:12"}]},"documentation":{"id":1386,"nodeType":"StructuredDocumentation","src":"6397:168:12","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"},"id":1402,"implemented":true,"kind":"function","modifiers":[],"name":"functionDelegateCall","nameLocation":"6579:20:12","nodeType":"FunctionDefinition","parameters":{"id":1391,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1388,"mutability":"mutable","name":"target","nameLocation":"6608:6:12","nodeType":"VariableDeclaration","scope":1402,"src":"6600:14:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1387,"name":"address","nodeType":"ElementaryTypeName","src":"6600:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1390,"mutability":"mutable","name":"data","nameLocation":"6629:4:12","nodeType":"VariableDeclaration","scope":1402,"src":"6616:17:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1389,"name":"bytes","nodeType":"ElementaryTypeName","src":"6616:5:12","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6599:35:12"},"returnParameters":{"id":1394,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1393,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1402,"src":"6653:12:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1392,"name":"bytes","nodeType":"ElementaryTypeName","src":"6653:5:12","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6652:14:12"},"scope":1469,"src":"6570:198:12","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1436,"nodeType":"Block","src":"7109:232:12","statements":[{"expression":{"arguments":[{"arguments":[{"id":1416,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1405,"src":"7138:6:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1415,"name":"isContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1192,"src":"7127:10:12","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_bool_$","typeString":"function (address) view returns (bool)"}},"id":1417,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7127:18:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6e7472616374","id":1418,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7147:40:12","typeDescriptions":{"typeIdentifier":"t_stringliteral_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520","typeString":"literal_string \"Address: delegate call to non-contract\""},"value":"Address: delegate call to non-contract"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520","typeString":"literal_string \"Address: delegate call to non-contract\""}],"id":1414,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"7119:7:12","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1419,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7119:69:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1420,"nodeType":"ExpressionStatement","src":"7119:69:12"},{"assignments":[1422,1424],"declarations":[{"constant":false,"id":1422,"mutability":"mutable","name":"success","nameLocation":"7205:7:12","nodeType":"VariableDeclaration","scope":1436,"src":"7200:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1421,"name":"bool","nodeType":"ElementaryTypeName","src":"7200:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1424,"mutability":"mutable","name":"returndata","nameLocation":"7227:10:12","nodeType":"VariableDeclaration","scope":1436,"src":"7214:23:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1423,"name":"bytes","nodeType":"ElementaryTypeName","src":"7214:5:12","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":1429,"initialValue":{"arguments":[{"id":1427,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1407,"src":"7261:4:12","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":1425,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1405,"src":"7241:6:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1426,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"delegatecall","nodeType":"MemberAccess","src":"7241:19:12","typeDescriptions":{"typeIdentifier":"t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) returns (bool,bytes memory)"}},"id":1428,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7241:25:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"7199:67:12"},{"expression":{"arguments":[{"id":1431,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1422,"src":"7300:7:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":1432,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1424,"src":"7309:10:12","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":1433,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1409,"src":"7321:12:12","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1430,"name":"verifyCallResult","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1468,"src":"7283:16:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (bool,bytes memory,string memory) pure returns (bytes memory)"}},"id":1434,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7283:51:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1413,"id":1435,"nodeType":"Return","src":"7276:58:12"}]},"documentation":{"id":1403,"nodeType":"StructuredDocumentation","src":"6774:175:12","text":" @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"},"id":1437,"implemented":true,"kind":"function","modifiers":[],"name":"functionDelegateCall","nameLocation":"6963:20:12","nodeType":"FunctionDefinition","parameters":{"id":1410,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1405,"mutability":"mutable","name":"target","nameLocation":"7001:6:12","nodeType":"VariableDeclaration","scope":1437,"src":"6993:14:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1404,"name":"address","nodeType":"ElementaryTypeName","src":"6993:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1407,"mutability":"mutable","name":"data","nameLocation":"7030:4:12","nodeType":"VariableDeclaration","scope":1437,"src":"7017:17:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1406,"name":"bytes","nodeType":"ElementaryTypeName","src":"7017:5:12","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1409,"mutability":"mutable","name":"errorMessage","nameLocation":"7058:12:12","nodeType":"VariableDeclaration","scope":1437,"src":"7044:26:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1408,"name":"string","nodeType":"ElementaryTypeName","src":"7044:6:12","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"6983:93:12"},"returnParameters":{"id":1413,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1412,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1437,"src":"7095:12:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1411,"name":"bytes","nodeType":"ElementaryTypeName","src":"7095:5:12","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"7094:14:12"},"scope":1469,"src":"6954:387:12","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1467,"nodeType":"Block","src":"7721:582:12","statements":[{"condition":{"id":1449,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1440,"src":"7735:7:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1465,"nodeType":"Block","src":"7792:505:12","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1456,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1453,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1442,"src":"7876:10:12","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1454,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"7876:17:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1455,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7896:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"7876:21:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1463,"nodeType":"Block","src":"8234:53:12","statements":[{"expression":{"arguments":[{"id":1460,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1444,"src":"8259:12:12","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1459,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[-19,-19],"referencedDeclaration":-19,"src":"8252:6:12","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":1461,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8252:20:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1462,"nodeType":"ExpressionStatement","src":"8252:20:12"}]},"id":1464,"nodeType":"IfStatement","src":"7872:415:12","trueBody":{"id":1458,"nodeType":"Block","src":"7899:329:12","statements":[{"AST":{"nodeType":"YulBlock","src":"8069:145:12","statements":[{"nodeType":"YulVariableDeclaration","src":"8091:40:12","value":{"arguments":[{"name":"returndata","nodeType":"YulIdentifier","src":"8120:10:12"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"8114:5:12"},"nodeType":"YulFunctionCall","src":"8114:17:12"},"variables":[{"name":"returndata_size","nodeType":"YulTypedName","src":"8095:15:12","type":""}]},{"expression":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8163:2:12","type":"","value":"32"},{"name":"returndata","nodeType":"YulIdentifier","src":"8167:10:12"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8159:3:12"},"nodeType":"YulFunctionCall","src":"8159:19:12"},{"name":"returndata_size","nodeType":"YulIdentifier","src":"8180:15:12"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"8152:6:12"},"nodeType":"YulFunctionCall","src":"8152:44:12"},"nodeType":"YulExpressionStatement","src":"8152:44:12"}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"istanbul","externalReferences":[{"declaration":1442,"isOffset":false,"isSlot":false,"src":"8120:10:12","valueSize":1},{"declaration":1442,"isOffset":false,"isSlot":false,"src":"8167:10:12","valueSize":1}],"id":1457,"nodeType":"InlineAssembly","src":"8060:154:12"}]}}]},"id":1466,"nodeType":"IfStatement","src":"7731:566:12","trueBody":{"id":1452,"nodeType":"Block","src":"7744:42:12","statements":[{"expression":{"id":1450,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1442,"src":"7765:10:12","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1448,"id":1451,"nodeType":"Return","src":"7758:17:12"}]}}]},"documentation":{"id":1438,"nodeType":"StructuredDocumentation","src":"7347:209:12","text":" @dev Tool to verifies that a low level call was successful, and revert if it wasn't, either by bubbling the\n revert reason using the provided one.\n _Available since v4.3._"},"id":1468,"implemented":true,"kind":"function","modifiers":[],"name":"verifyCallResult","nameLocation":"7570:16:12","nodeType":"FunctionDefinition","parameters":{"id":1445,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1440,"mutability":"mutable","name":"success","nameLocation":"7601:7:12","nodeType":"VariableDeclaration","scope":1468,"src":"7596:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1439,"name":"bool","nodeType":"ElementaryTypeName","src":"7596:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1442,"mutability":"mutable","name":"returndata","nameLocation":"7631:10:12","nodeType":"VariableDeclaration","scope":1468,"src":"7618:23:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1441,"name":"bytes","nodeType":"ElementaryTypeName","src":"7618:5:12","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1444,"mutability":"mutable","name":"errorMessage","nameLocation":"7665:12:12","nodeType":"VariableDeclaration","scope":1468,"src":"7651:26:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1443,"name":"string","nodeType":"ElementaryTypeName","src":"7651:6:12","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"7586:97:12"},"returnParameters":{"id":1448,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1447,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1468,"src":"7707:12:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1446,"name":"bytes","nodeType":"ElementaryTypeName","src":"7707:5:12","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"7706:14:12"},"scope":1469,"src":"7561:742:12","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":1470,"src":"194:8111:12"}],"src":"101:8205:12"},"id":12},"@openzeppelin/contracts/utils/math/SafeCast.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/math/SafeCast.sol","exportedSymbols":{"SafeCast":[3320]},"id":3321,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1471,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"107:23:13"},{"abstract":false,"baseContracts":[],"contractDependencies":[],"contractKind":"library","documentation":{"id":1472,"nodeType":"StructuredDocumentation","src":"132:709:13","text":" @dev Wrappers over Solidity's uintXX/intXX casting operators with added overflow\n checks.\n Downcasting from uint256/int256 in Solidity does not revert on overflow. This can\n easily result in undesired exploitation or bugs, since developers usually\n assume that overflows raise errors. `SafeCast` restores this intuition by\n reverting the transaction when such an operation overflows.\n Using this library instead of the unchecked operations eliminates an entire\n class of bugs, so it's recommended to use it always.\n Can be combined with {SafeMath} and {SignedSafeMath} to extend it to smaller types, by performing\n all math on `uint256` and `int256` and then downcasting."},"fullyImplemented":true,"id":3320,"linearizedBaseContracts":[3320],"name":"SafeCast","nameLocation":"850:8:13","nodeType":"ContractDefinition","nodes":[{"body":{"id":1496,"nodeType":"Block","src":"1254:126:13","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1487,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1481,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1475,"src":"1272:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":1484,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1286:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint248_$","typeString":"type(uint248)"},"typeName":{"id":1483,"name":"uint248","nodeType":"ElementaryTypeName","src":"1286:7:13","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint248_$","typeString":"type(uint248)"}],"id":1482,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"1281:4:13","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":1485,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1281:13:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint248","typeString":"type(uint248)"}},"id":1486,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"1281:17:13","typeDescriptions":{"typeIdentifier":"t_uint248","typeString":"uint248"}},"src":"1272:26:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203234382062697473","id":1488,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1300:41:13","typeDescriptions":{"typeIdentifier":"t_stringliteral_6ac19bba4607c9b45ff35f54fbc4ca64c29c7457109a16fa180ea77cdbda8593","typeString":"literal_string \"SafeCast: value doesn't fit in 248 bits\""},"value":"SafeCast: value doesn't fit in 248 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_6ac19bba4607c9b45ff35f54fbc4ca64c29c7457109a16fa180ea77cdbda8593","typeString":"literal_string \"SafeCast: value doesn't fit in 248 bits\""}],"id":1480,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1264:7:13","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1489,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1264:78:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1490,"nodeType":"ExpressionStatement","src":"1264:78:13"},{"expression":{"arguments":[{"id":1493,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1475,"src":"1367:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1492,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1359:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint248_$","typeString":"type(uint248)"},"typeName":{"id":1491,"name":"uint248","nodeType":"ElementaryTypeName","src":"1359:7:13","typeDescriptions":{}}},"id":1494,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1359:14:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint248","typeString":"uint248"}},"functionReturnParameters":1479,"id":1495,"nodeType":"Return","src":"1352:21:13"}]},"documentation":{"id":1473,"nodeType":"StructuredDocumentation","src":"865:318:13","text":" @dev Returns the downcasted uint248 from uint256, reverting on\n overflow (when the input is greater than largest uint248).\n Counterpart to Solidity's `uint248` operator.\n Requirements:\n - input must fit into 248 bits\n _Available since v4.7._"},"id":1497,"implemented":true,"kind":"function","modifiers":[],"name":"toUint248","nameLocation":"1197:9:13","nodeType":"FunctionDefinition","parameters":{"id":1476,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1475,"mutability":"mutable","name":"value","nameLocation":"1215:5:13","nodeType":"VariableDeclaration","scope":1497,"src":"1207:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1474,"name":"uint256","nodeType":"ElementaryTypeName","src":"1207:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1206:15:13"},"returnParameters":{"id":1479,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1478,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1497,"src":"1245:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint248","typeString":"uint248"},"typeName":{"id":1477,"name":"uint248","nodeType":"ElementaryTypeName","src":"1245:7:13","typeDescriptions":{"typeIdentifier":"t_uint248","typeString":"uint248"}},"visibility":"internal"}],"src":"1244:9:13"},"scope":3320,"src":"1188:192:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1521,"nodeType":"Block","src":"1775:126:13","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1512,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1506,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1500,"src":"1793:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":1509,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1807:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint240_$","typeString":"type(uint240)"},"typeName":{"id":1508,"name":"uint240","nodeType":"ElementaryTypeName","src":"1807:7:13","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint240_$","typeString":"type(uint240)"}],"id":1507,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"1802:4:13","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":1510,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1802:13:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint240","typeString":"type(uint240)"}},"id":1511,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"1802:17:13","typeDescriptions":{"typeIdentifier":"t_uint240","typeString":"uint240"}},"src":"1793:26:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203234302062697473","id":1513,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1821:41:13","typeDescriptions":{"typeIdentifier":"t_stringliteral_375fa0f6cb9fb5845d214c630920cedf4424913ed6dc32c297d430efa3d61a87","typeString":"literal_string \"SafeCast: value doesn't fit in 240 bits\""},"value":"SafeCast: value doesn't fit in 240 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_375fa0f6cb9fb5845d214c630920cedf4424913ed6dc32c297d430efa3d61a87","typeString":"literal_string \"SafeCast: value doesn't fit in 240 bits\""}],"id":1505,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1785:7:13","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1514,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1785:78:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1515,"nodeType":"ExpressionStatement","src":"1785:78:13"},{"expression":{"arguments":[{"id":1518,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1500,"src":"1888:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1517,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1880:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint240_$","typeString":"type(uint240)"},"typeName":{"id":1516,"name":"uint240","nodeType":"ElementaryTypeName","src":"1880:7:13","typeDescriptions":{}}},"id":1519,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1880:14:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint240","typeString":"uint240"}},"functionReturnParameters":1504,"id":1520,"nodeType":"Return","src":"1873:21:13"}]},"documentation":{"id":1498,"nodeType":"StructuredDocumentation","src":"1386:318:13","text":" @dev Returns the downcasted uint240 from uint256, reverting on\n overflow (when the input is greater than largest uint240).\n Counterpart to Solidity's `uint240` operator.\n Requirements:\n - input must fit into 240 bits\n _Available since v4.7._"},"id":1522,"implemented":true,"kind":"function","modifiers":[],"name":"toUint240","nameLocation":"1718:9:13","nodeType":"FunctionDefinition","parameters":{"id":1501,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1500,"mutability":"mutable","name":"value","nameLocation":"1736:5:13","nodeType":"VariableDeclaration","scope":1522,"src":"1728:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1499,"name":"uint256","nodeType":"ElementaryTypeName","src":"1728:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1727:15:13"},"returnParameters":{"id":1504,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1503,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1522,"src":"1766:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint240","typeString":"uint240"},"typeName":{"id":1502,"name":"uint240","nodeType":"ElementaryTypeName","src":"1766:7:13","typeDescriptions":{"typeIdentifier":"t_uint240","typeString":"uint240"}},"visibility":"internal"}],"src":"1765:9:13"},"scope":3320,"src":"1709:192:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1546,"nodeType":"Block","src":"2296:126:13","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1537,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1531,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1525,"src":"2314:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":1534,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2328:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint232_$","typeString":"type(uint232)"},"typeName":{"id":1533,"name":"uint232","nodeType":"ElementaryTypeName","src":"2328:7:13","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint232_$","typeString":"type(uint232)"}],"id":1532,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"2323:4:13","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":1535,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2323:13:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint232","typeString":"type(uint232)"}},"id":1536,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"2323:17:13","typeDescriptions":{"typeIdentifier":"t_uint232","typeString":"uint232"}},"src":"2314:26:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203233322062697473","id":1538,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2342:41:13","typeDescriptions":{"typeIdentifier":"t_stringliteral_5797fb2c4589bd6a92752ce0eacaac67341e37ab28c96c2284ab897e7ac77957","typeString":"literal_string \"SafeCast: value doesn't fit in 232 bits\""},"value":"SafeCast: value doesn't fit in 232 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_5797fb2c4589bd6a92752ce0eacaac67341e37ab28c96c2284ab897e7ac77957","typeString":"literal_string \"SafeCast: value doesn't fit in 232 bits\""}],"id":1530,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2306:7:13","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1539,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2306:78:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1540,"nodeType":"ExpressionStatement","src":"2306:78:13"},{"expression":{"arguments":[{"id":1543,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1525,"src":"2409:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1542,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2401:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint232_$","typeString":"type(uint232)"},"typeName":{"id":1541,"name":"uint232","nodeType":"ElementaryTypeName","src":"2401:7:13","typeDescriptions":{}}},"id":1544,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2401:14:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint232","typeString":"uint232"}},"functionReturnParameters":1529,"id":1545,"nodeType":"Return","src":"2394:21:13"}]},"documentation":{"id":1523,"nodeType":"StructuredDocumentation","src":"1907:318:13","text":" @dev Returns the downcasted uint232 from uint256, reverting on\n overflow (when the input is greater than largest uint232).\n Counterpart to Solidity's `uint232` operator.\n Requirements:\n - input must fit into 232 bits\n _Available since v4.7._"},"id":1547,"implemented":true,"kind":"function","modifiers":[],"name":"toUint232","nameLocation":"2239:9:13","nodeType":"FunctionDefinition","parameters":{"id":1526,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1525,"mutability":"mutable","name":"value","nameLocation":"2257:5:13","nodeType":"VariableDeclaration","scope":1547,"src":"2249:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1524,"name":"uint256","nodeType":"ElementaryTypeName","src":"2249:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2248:15:13"},"returnParameters":{"id":1529,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1528,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1547,"src":"2287:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint232","typeString":"uint232"},"typeName":{"id":1527,"name":"uint232","nodeType":"ElementaryTypeName","src":"2287:7:13","typeDescriptions":{"typeIdentifier":"t_uint232","typeString":"uint232"}},"visibility":"internal"}],"src":"2286:9:13"},"scope":3320,"src":"2230:192:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1571,"nodeType":"Block","src":"2817:126:13","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1562,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1556,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1550,"src":"2835:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":1559,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2849:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint224_$","typeString":"type(uint224)"},"typeName":{"id":1558,"name":"uint224","nodeType":"ElementaryTypeName","src":"2849:7:13","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint224_$","typeString":"type(uint224)"}],"id":1557,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"2844:4:13","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":1560,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2844:13:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint224","typeString":"type(uint224)"}},"id":1561,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"2844:17:13","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"src":"2835:26:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203232342062697473","id":1563,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2863:41:13","typeDescriptions":{"typeIdentifier":"t_stringliteral_9d2acf551b2466898443b9bc3a403a4d86037386bc5a8960c1bbb0f204e69b79","typeString":"literal_string \"SafeCast: value doesn't fit in 224 bits\""},"value":"SafeCast: value doesn't fit in 224 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_9d2acf551b2466898443b9bc3a403a4d86037386bc5a8960c1bbb0f204e69b79","typeString":"literal_string \"SafeCast: value doesn't fit in 224 bits\""}],"id":1555,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2827:7:13","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1564,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2827:78:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1565,"nodeType":"ExpressionStatement","src":"2827:78:13"},{"expression":{"arguments":[{"id":1568,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1550,"src":"2930:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1567,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2922:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint224_$","typeString":"type(uint224)"},"typeName":{"id":1566,"name":"uint224","nodeType":"ElementaryTypeName","src":"2922:7:13","typeDescriptions":{}}},"id":1569,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2922:14:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"functionReturnParameters":1554,"id":1570,"nodeType":"Return","src":"2915:21:13"}]},"documentation":{"id":1548,"nodeType":"StructuredDocumentation","src":"2428:318:13","text":" @dev Returns the downcasted uint224 from uint256, reverting on\n overflow (when the input is greater than largest uint224).\n Counterpart to Solidity's `uint224` operator.\n Requirements:\n - input must fit into 224 bits\n _Available since v4.2._"},"id":1572,"implemented":true,"kind":"function","modifiers":[],"name":"toUint224","nameLocation":"2760:9:13","nodeType":"FunctionDefinition","parameters":{"id":1551,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1550,"mutability":"mutable","name":"value","nameLocation":"2778:5:13","nodeType":"VariableDeclaration","scope":1572,"src":"2770:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1549,"name":"uint256","nodeType":"ElementaryTypeName","src":"2770:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2769:15:13"},"returnParameters":{"id":1554,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1553,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1572,"src":"2808:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"},"typeName":{"id":1552,"name":"uint224","nodeType":"ElementaryTypeName","src":"2808:7:13","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"visibility":"internal"}],"src":"2807:9:13"},"scope":3320,"src":"2751:192:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1596,"nodeType":"Block","src":"3338:126:13","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1587,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1581,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1575,"src":"3356:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":1584,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3370:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint216_$","typeString":"type(uint216)"},"typeName":{"id":1583,"name":"uint216","nodeType":"ElementaryTypeName","src":"3370:7:13","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint216_$","typeString":"type(uint216)"}],"id":1582,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"3365:4:13","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":1585,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3365:13:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint216","typeString":"type(uint216)"}},"id":1586,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"3365:17:13","typeDescriptions":{"typeIdentifier":"t_uint216","typeString":"uint216"}},"src":"3356:26:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203231362062697473","id":1588,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3384:41:13","typeDescriptions":{"typeIdentifier":"t_stringliteral_8966adc0aad8dc91b207c69c3eb4937e498af8cc706cfe7edd55f3a6ea53488d","typeString":"literal_string \"SafeCast: value doesn't fit in 216 bits\""},"value":"SafeCast: value doesn't fit in 216 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_8966adc0aad8dc91b207c69c3eb4937e498af8cc706cfe7edd55f3a6ea53488d","typeString":"literal_string \"SafeCast: value doesn't fit in 216 bits\""}],"id":1580,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3348:7:13","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1589,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3348:78:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1590,"nodeType":"ExpressionStatement","src":"3348:78:13"},{"expression":{"arguments":[{"id":1593,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1575,"src":"3451:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1592,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3443:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint216_$","typeString":"type(uint216)"},"typeName":{"id":1591,"name":"uint216","nodeType":"ElementaryTypeName","src":"3443:7:13","typeDescriptions":{}}},"id":1594,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3443:14:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint216","typeString":"uint216"}},"functionReturnParameters":1579,"id":1595,"nodeType":"Return","src":"3436:21:13"}]},"documentation":{"id":1573,"nodeType":"StructuredDocumentation","src":"2949:318:13","text":" @dev Returns the downcasted uint216 from uint256, reverting on\n overflow (when the input is greater than largest uint216).\n Counterpart to Solidity's `uint216` operator.\n Requirements:\n - input must fit into 216 bits\n _Available since v4.7._"},"id":1597,"implemented":true,"kind":"function","modifiers":[],"name":"toUint216","nameLocation":"3281:9:13","nodeType":"FunctionDefinition","parameters":{"id":1576,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1575,"mutability":"mutable","name":"value","nameLocation":"3299:5:13","nodeType":"VariableDeclaration","scope":1597,"src":"3291:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1574,"name":"uint256","nodeType":"ElementaryTypeName","src":"3291:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3290:15:13"},"returnParameters":{"id":1579,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1578,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1597,"src":"3329:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint216","typeString":"uint216"},"typeName":{"id":1577,"name":"uint216","nodeType":"ElementaryTypeName","src":"3329:7:13","typeDescriptions":{"typeIdentifier":"t_uint216","typeString":"uint216"}},"visibility":"internal"}],"src":"3328:9:13"},"scope":3320,"src":"3272:192:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1621,"nodeType":"Block","src":"3859:126:13","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1612,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1606,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1600,"src":"3877:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":1609,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3891:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint208_$","typeString":"type(uint208)"},"typeName":{"id":1608,"name":"uint208","nodeType":"ElementaryTypeName","src":"3891:7:13","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint208_$","typeString":"type(uint208)"}],"id":1607,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"3886:4:13","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":1610,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3886:13:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint208","typeString":"type(uint208)"}},"id":1611,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"3886:17:13","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"src":"3877:26:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203230382062697473","id":1613,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3905:41:13","typeDescriptions":{"typeIdentifier":"t_stringliteral_43d81217fa633fa1c6e88855de94fb990f5831ac266b0a90afa660e986ab5e23","typeString":"literal_string \"SafeCast: value doesn't fit in 208 bits\""},"value":"SafeCast: value doesn't fit in 208 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_43d81217fa633fa1c6e88855de94fb990f5831ac266b0a90afa660e986ab5e23","typeString":"literal_string \"SafeCast: value doesn't fit in 208 bits\""}],"id":1605,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3869:7:13","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1614,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3869:78:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1615,"nodeType":"ExpressionStatement","src":"3869:78:13"},{"expression":{"arguments":[{"id":1618,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1600,"src":"3972:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1617,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3964:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint208_$","typeString":"type(uint208)"},"typeName":{"id":1616,"name":"uint208","nodeType":"ElementaryTypeName","src":"3964:7:13","typeDescriptions":{}}},"id":1619,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3964:14:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"functionReturnParameters":1604,"id":1620,"nodeType":"Return","src":"3957:21:13"}]},"documentation":{"id":1598,"nodeType":"StructuredDocumentation","src":"3470:318:13","text":" @dev Returns the downcasted uint208 from uint256, reverting on\n overflow (when the input is greater than largest uint208).\n Counterpart to Solidity's `uint208` operator.\n Requirements:\n - input must fit into 208 bits\n _Available since v4.7._"},"id":1622,"implemented":true,"kind":"function","modifiers":[],"name":"toUint208","nameLocation":"3802:9:13","nodeType":"FunctionDefinition","parameters":{"id":1601,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1600,"mutability":"mutable","name":"value","nameLocation":"3820:5:13","nodeType":"VariableDeclaration","scope":1622,"src":"3812:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1599,"name":"uint256","nodeType":"ElementaryTypeName","src":"3812:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3811:15:13"},"returnParameters":{"id":1604,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1603,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1622,"src":"3850:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"},"typeName":{"id":1602,"name":"uint208","nodeType":"ElementaryTypeName","src":"3850:7:13","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"visibility":"internal"}],"src":"3849:9:13"},"scope":3320,"src":"3793:192:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1646,"nodeType":"Block","src":"4380:126:13","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1637,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1631,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1625,"src":"4398:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":1634,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4412:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint200_$","typeString":"type(uint200)"},"typeName":{"id":1633,"name":"uint200","nodeType":"ElementaryTypeName","src":"4412:7:13","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint200_$","typeString":"type(uint200)"}],"id":1632,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"4407:4:13","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":1635,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4407:13:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint200","typeString":"type(uint200)"}},"id":1636,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"4407:17:13","typeDescriptions":{"typeIdentifier":"t_uint200","typeString":"uint200"}},"src":"4398:26:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203230302062697473","id":1638,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4426:41:13","typeDescriptions":{"typeIdentifier":"t_stringliteral_df8130f294fe2698967ea9ead82c4da9454490567d976d00551e0174e655314c","typeString":"literal_string \"SafeCast: value doesn't fit in 200 bits\""},"value":"SafeCast: value doesn't fit in 200 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_df8130f294fe2698967ea9ead82c4da9454490567d976d00551e0174e655314c","typeString":"literal_string \"SafeCast: value doesn't fit in 200 bits\""}],"id":1630,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4390:7:13","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1639,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4390:78:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1640,"nodeType":"ExpressionStatement","src":"4390:78:13"},{"expression":{"arguments":[{"id":1643,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1625,"src":"4493:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1642,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4485:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint200_$","typeString":"type(uint200)"},"typeName":{"id":1641,"name":"uint200","nodeType":"ElementaryTypeName","src":"4485:7:13","typeDescriptions":{}}},"id":1644,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4485:14:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint200","typeString":"uint200"}},"functionReturnParameters":1629,"id":1645,"nodeType":"Return","src":"4478:21:13"}]},"documentation":{"id":1623,"nodeType":"StructuredDocumentation","src":"3991:318:13","text":" @dev Returns the downcasted uint200 from uint256, reverting on\n overflow (when the input is greater than largest uint200).\n Counterpart to Solidity's `uint200` operator.\n Requirements:\n - input must fit into 200 bits\n _Available since v4.7._"},"id":1647,"implemented":true,"kind":"function","modifiers":[],"name":"toUint200","nameLocation":"4323:9:13","nodeType":"FunctionDefinition","parameters":{"id":1626,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1625,"mutability":"mutable","name":"value","nameLocation":"4341:5:13","nodeType":"VariableDeclaration","scope":1647,"src":"4333:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1624,"name":"uint256","nodeType":"ElementaryTypeName","src":"4333:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4332:15:13"},"returnParameters":{"id":1629,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1628,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1647,"src":"4371:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint200","typeString":"uint200"},"typeName":{"id":1627,"name":"uint200","nodeType":"ElementaryTypeName","src":"4371:7:13","typeDescriptions":{"typeIdentifier":"t_uint200","typeString":"uint200"}},"visibility":"internal"}],"src":"4370:9:13"},"scope":3320,"src":"4314:192:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1671,"nodeType":"Block","src":"4901:126:13","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1662,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1656,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1650,"src":"4919:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":1659,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4933:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint192_$","typeString":"type(uint192)"},"typeName":{"id":1658,"name":"uint192","nodeType":"ElementaryTypeName","src":"4933:7:13","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint192_$","typeString":"type(uint192)"}],"id":1657,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"4928:4:13","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":1660,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4928:13:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint192","typeString":"type(uint192)"}},"id":1661,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"4928:17:13","typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"}},"src":"4919:26:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203139322062697473","id":1663,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4947:41:13","typeDescriptions":{"typeIdentifier":"t_stringliteral_112978800f12a1c4f1eab82789f7b6defd49dc1c17ba270a84ffc28392fb05ae","typeString":"literal_string \"SafeCast: value doesn't fit in 192 bits\""},"value":"SafeCast: value doesn't fit in 192 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_112978800f12a1c4f1eab82789f7b6defd49dc1c17ba270a84ffc28392fb05ae","typeString":"literal_string \"SafeCast: value doesn't fit in 192 bits\""}],"id":1655,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4911:7:13","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1664,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4911:78:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1665,"nodeType":"ExpressionStatement","src":"4911:78:13"},{"expression":{"arguments":[{"id":1668,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1650,"src":"5014:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1667,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5006:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint192_$","typeString":"type(uint192)"},"typeName":{"id":1666,"name":"uint192","nodeType":"ElementaryTypeName","src":"5006:7:13","typeDescriptions":{}}},"id":1669,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5006:14:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"}},"functionReturnParameters":1654,"id":1670,"nodeType":"Return","src":"4999:21:13"}]},"documentation":{"id":1648,"nodeType":"StructuredDocumentation","src":"4512:318:13","text":" @dev Returns the downcasted uint192 from uint256, reverting on\n overflow (when the input is greater than largest uint192).\n Counterpart to Solidity's `uint192` operator.\n Requirements:\n - input must fit into 192 bits\n _Available since v4.7._"},"id":1672,"implemented":true,"kind":"function","modifiers":[],"name":"toUint192","nameLocation":"4844:9:13","nodeType":"FunctionDefinition","parameters":{"id":1651,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1650,"mutability":"mutable","name":"value","nameLocation":"4862:5:13","nodeType":"VariableDeclaration","scope":1672,"src":"4854:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1649,"name":"uint256","nodeType":"ElementaryTypeName","src":"4854:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4853:15:13"},"returnParameters":{"id":1654,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1653,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1672,"src":"4892:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"},"typeName":{"id":1652,"name":"uint192","nodeType":"ElementaryTypeName","src":"4892:7:13","typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"}},"visibility":"internal"}],"src":"4891:9:13"},"scope":3320,"src":"4835:192:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1696,"nodeType":"Block","src":"5422:126:13","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1687,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1681,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1675,"src":"5440:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":1684,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5454:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint184_$","typeString":"type(uint184)"},"typeName":{"id":1683,"name":"uint184","nodeType":"ElementaryTypeName","src":"5454:7:13","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint184_$","typeString":"type(uint184)"}],"id":1682,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"5449:4:13","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":1685,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5449:13:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint184","typeString":"type(uint184)"}},"id":1686,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"5449:17:13","typeDescriptions":{"typeIdentifier":"t_uint184","typeString":"uint184"}},"src":"5440:26:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203138342062697473","id":1688,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5468:41:13","typeDescriptions":{"typeIdentifier":"t_stringliteral_86c53d89b1944d561ecfa42e859033241d1df6ea8d42a57ae02f79d45de4aa75","typeString":"literal_string \"SafeCast: value doesn't fit in 184 bits\""},"value":"SafeCast: value doesn't fit in 184 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_86c53d89b1944d561ecfa42e859033241d1df6ea8d42a57ae02f79d45de4aa75","typeString":"literal_string \"SafeCast: value doesn't fit in 184 bits\""}],"id":1680,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5432:7:13","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1689,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5432:78:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1690,"nodeType":"ExpressionStatement","src":"5432:78:13"},{"expression":{"arguments":[{"id":1693,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1675,"src":"5535:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1692,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5527:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint184_$","typeString":"type(uint184)"},"typeName":{"id":1691,"name":"uint184","nodeType":"ElementaryTypeName","src":"5527:7:13","typeDescriptions":{}}},"id":1694,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5527:14:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint184","typeString":"uint184"}},"functionReturnParameters":1679,"id":1695,"nodeType":"Return","src":"5520:21:13"}]},"documentation":{"id":1673,"nodeType":"StructuredDocumentation","src":"5033:318:13","text":" @dev Returns the downcasted uint184 from uint256, reverting on\n overflow (when the input is greater than largest uint184).\n Counterpart to Solidity's `uint184` operator.\n Requirements:\n - input must fit into 184 bits\n _Available since v4.7._"},"id":1697,"implemented":true,"kind":"function","modifiers":[],"name":"toUint184","nameLocation":"5365:9:13","nodeType":"FunctionDefinition","parameters":{"id":1676,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1675,"mutability":"mutable","name":"value","nameLocation":"5383:5:13","nodeType":"VariableDeclaration","scope":1697,"src":"5375:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1674,"name":"uint256","nodeType":"ElementaryTypeName","src":"5375:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5374:15:13"},"returnParameters":{"id":1679,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1678,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1697,"src":"5413:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint184","typeString":"uint184"},"typeName":{"id":1677,"name":"uint184","nodeType":"ElementaryTypeName","src":"5413:7:13","typeDescriptions":{"typeIdentifier":"t_uint184","typeString":"uint184"}},"visibility":"internal"}],"src":"5412:9:13"},"scope":3320,"src":"5356:192:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1721,"nodeType":"Block","src":"5943:126:13","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1712,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1706,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1700,"src":"5961:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":1709,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5975:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint176_$","typeString":"type(uint176)"},"typeName":{"id":1708,"name":"uint176","nodeType":"ElementaryTypeName","src":"5975:7:13","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint176_$","typeString":"type(uint176)"}],"id":1707,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"5970:4:13","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":1710,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5970:13:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint176","typeString":"type(uint176)"}},"id":1711,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"5970:17:13","typeDescriptions":{"typeIdentifier":"t_uint176","typeString":"uint176"}},"src":"5961:26:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203137362062697473","id":1713,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5989:41:13","typeDescriptions":{"typeIdentifier":"t_stringliteral_4069e970f734339c7841e84a1b26f503bff22b76884c1168dc24e2e6af9b1e30","typeString":"literal_string \"SafeCast: value doesn't fit in 176 bits\""},"value":"SafeCast: value doesn't fit in 176 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_4069e970f734339c7841e84a1b26f503bff22b76884c1168dc24e2e6af9b1e30","typeString":"literal_string \"SafeCast: value doesn't fit in 176 bits\""}],"id":1705,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5953:7:13","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1714,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5953:78:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1715,"nodeType":"ExpressionStatement","src":"5953:78:13"},{"expression":{"arguments":[{"id":1718,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1700,"src":"6056:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1717,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6048:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint176_$","typeString":"type(uint176)"},"typeName":{"id":1716,"name":"uint176","nodeType":"ElementaryTypeName","src":"6048:7:13","typeDescriptions":{}}},"id":1719,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6048:14:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint176","typeString":"uint176"}},"functionReturnParameters":1704,"id":1720,"nodeType":"Return","src":"6041:21:13"}]},"documentation":{"id":1698,"nodeType":"StructuredDocumentation","src":"5554:318:13","text":" @dev Returns the downcasted uint176 from uint256, reverting on\n overflow (when the input is greater than largest uint176).\n Counterpart to Solidity's `uint176` operator.\n Requirements:\n - input must fit into 176 bits\n _Available since v4.7._"},"id":1722,"implemented":true,"kind":"function","modifiers":[],"name":"toUint176","nameLocation":"5886:9:13","nodeType":"FunctionDefinition","parameters":{"id":1701,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1700,"mutability":"mutable","name":"value","nameLocation":"5904:5:13","nodeType":"VariableDeclaration","scope":1722,"src":"5896:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1699,"name":"uint256","nodeType":"ElementaryTypeName","src":"5896:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5895:15:13"},"returnParameters":{"id":1704,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1703,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1722,"src":"5934:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint176","typeString":"uint176"},"typeName":{"id":1702,"name":"uint176","nodeType":"ElementaryTypeName","src":"5934:7:13","typeDescriptions":{"typeIdentifier":"t_uint176","typeString":"uint176"}},"visibility":"internal"}],"src":"5933:9:13"},"scope":3320,"src":"5877:192:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1746,"nodeType":"Block","src":"6464:126:13","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1737,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1731,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1725,"src":"6482:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":1734,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6496:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint168_$","typeString":"type(uint168)"},"typeName":{"id":1733,"name":"uint168","nodeType":"ElementaryTypeName","src":"6496:7:13","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint168_$","typeString":"type(uint168)"}],"id":1732,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"6491:4:13","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":1735,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6491:13:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint168","typeString":"type(uint168)"}},"id":1736,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"6491:17:13","typeDescriptions":{"typeIdentifier":"t_uint168","typeString":"uint168"}},"src":"6482:26:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203136382062697473","id":1738,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6510:41:13","typeDescriptions":{"typeIdentifier":"t_stringliteral_67ef32a3cbe7b34392347d335b0a7ae95c74a34ca40e4efb58f6c9a3154e85a1","typeString":"literal_string \"SafeCast: value doesn't fit in 168 bits\""},"value":"SafeCast: value doesn't fit in 168 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_67ef32a3cbe7b34392347d335b0a7ae95c74a34ca40e4efb58f6c9a3154e85a1","typeString":"literal_string \"SafeCast: value doesn't fit in 168 bits\""}],"id":1730,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"6474:7:13","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1739,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6474:78:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1740,"nodeType":"ExpressionStatement","src":"6474:78:13"},{"expression":{"arguments":[{"id":1743,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1725,"src":"6577:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1742,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6569:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint168_$","typeString":"type(uint168)"},"typeName":{"id":1741,"name":"uint168","nodeType":"ElementaryTypeName","src":"6569:7:13","typeDescriptions":{}}},"id":1744,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6569:14:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint168","typeString":"uint168"}},"functionReturnParameters":1729,"id":1745,"nodeType":"Return","src":"6562:21:13"}]},"documentation":{"id":1723,"nodeType":"StructuredDocumentation","src":"6075:318:13","text":" @dev Returns the downcasted uint168 from uint256, reverting on\n overflow (when the input is greater than largest uint168).\n Counterpart to Solidity's `uint168` operator.\n Requirements:\n - input must fit into 168 bits\n _Available since v4.7._"},"id":1747,"implemented":true,"kind":"function","modifiers":[],"name":"toUint168","nameLocation":"6407:9:13","nodeType":"FunctionDefinition","parameters":{"id":1726,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1725,"mutability":"mutable","name":"value","nameLocation":"6425:5:13","nodeType":"VariableDeclaration","scope":1747,"src":"6417:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1724,"name":"uint256","nodeType":"ElementaryTypeName","src":"6417:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6416:15:13"},"returnParameters":{"id":1729,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1728,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1747,"src":"6455:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint168","typeString":"uint168"},"typeName":{"id":1727,"name":"uint168","nodeType":"ElementaryTypeName","src":"6455:7:13","typeDescriptions":{"typeIdentifier":"t_uint168","typeString":"uint168"}},"visibility":"internal"}],"src":"6454:9:13"},"scope":3320,"src":"6398:192:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1771,"nodeType":"Block","src":"6985:126:13","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1762,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1756,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1750,"src":"7003:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":1759,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7017:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":1758,"name":"uint160","nodeType":"ElementaryTypeName","src":"7017:7:13","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"}],"id":1757,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"7012:4:13","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":1760,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7012:13:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint160","typeString":"type(uint160)"}},"id":1761,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"7012:17:13","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"src":"7003:26:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203136302062697473","id":1763,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7031:41:13","typeDescriptions":{"typeIdentifier":"t_stringliteral_976ecce9083debfe29d3a99b955facf24b8725f1b964d1a5bb4197ffcd60ab9d","typeString":"literal_string \"SafeCast: value doesn't fit in 160 bits\""},"value":"SafeCast: value doesn't fit in 160 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_976ecce9083debfe29d3a99b955facf24b8725f1b964d1a5bb4197ffcd60ab9d","typeString":"literal_string \"SafeCast: value doesn't fit in 160 bits\""}],"id":1755,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"6995:7:13","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1764,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6995:78:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1765,"nodeType":"ExpressionStatement","src":"6995:78:13"},{"expression":{"arguments":[{"id":1768,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1750,"src":"7098:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1767,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7090:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":1766,"name":"uint160","nodeType":"ElementaryTypeName","src":"7090:7:13","typeDescriptions":{}}},"id":1769,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7090:14:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"functionReturnParameters":1754,"id":1770,"nodeType":"Return","src":"7083:21:13"}]},"documentation":{"id":1748,"nodeType":"StructuredDocumentation","src":"6596:318:13","text":" @dev Returns the downcasted uint160 from uint256, reverting on\n overflow (when the input is greater than largest uint160).\n Counterpart to Solidity's `uint160` operator.\n Requirements:\n - input must fit into 160 bits\n _Available since v4.7._"},"id":1772,"implemented":true,"kind":"function","modifiers":[],"name":"toUint160","nameLocation":"6928:9:13","nodeType":"FunctionDefinition","parameters":{"id":1751,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1750,"mutability":"mutable","name":"value","nameLocation":"6946:5:13","nodeType":"VariableDeclaration","scope":1772,"src":"6938:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1749,"name":"uint256","nodeType":"ElementaryTypeName","src":"6938:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6937:15:13"},"returnParameters":{"id":1754,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1753,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1772,"src":"6976:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"},"typeName":{"id":1752,"name":"uint160","nodeType":"ElementaryTypeName","src":"6976:7:13","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"visibility":"internal"}],"src":"6975:9:13"},"scope":3320,"src":"6919:192:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1796,"nodeType":"Block","src":"7506:126:13","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1787,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1781,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1775,"src":"7524:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":1784,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7538:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint152_$","typeString":"type(uint152)"},"typeName":{"id":1783,"name":"uint152","nodeType":"ElementaryTypeName","src":"7538:7:13","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint152_$","typeString":"type(uint152)"}],"id":1782,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"7533:4:13","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":1785,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7533:13:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint152","typeString":"type(uint152)"}},"id":1786,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"7533:17:13","typeDescriptions":{"typeIdentifier":"t_uint152","typeString":"uint152"}},"src":"7524:26:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203135322062697473","id":1788,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7552:41:13","typeDescriptions":{"typeIdentifier":"t_stringliteral_211cad43a2caf5f01e34af51190b8a7b6f3d9c195bd25586ea12242191b97831","typeString":"literal_string \"SafeCast: value doesn't fit in 152 bits\""},"value":"SafeCast: value doesn't fit in 152 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_211cad43a2caf5f01e34af51190b8a7b6f3d9c195bd25586ea12242191b97831","typeString":"literal_string \"SafeCast: value doesn't fit in 152 bits\""}],"id":1780,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"7516:7:13","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1789,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7516:78:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1790,"nodeType":"ExpressionStatement","src":"7516:78:13"},{"expression":{"arguments":[{"id":1793,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1775,"src":"7619:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1792,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7611:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint152_$","typeString":"type(uint152)"},"typeName":{"id":1791,"name":"uint152","nodeType":"ElementaryTypeName","src":"7611:7:13","typeDescriptions":{}}},"id":1794,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7611:14:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint152","typeString":"uint152"}},"functionReturnParameters":1779,"id":1795,"nodeType":"Return","src":"7604:21:13"}]},"documentation":{"id":1773,"nodeType":"StructuredDocumentation","src":"7117:318:13","text":" @dev Returns the downcasted uint152 from uint256, reverting on\n overflow (when the input is greater than largest uint152).\n Counterpart to Solidity's `uint152` operator.\n Requirements:\n - input must fit into 152 bits\n _Available since v4.7._"},"id":1797,"implemented":true,"kind":"function","modifiers":[],"name":"toUint152","nameLocation":"7449:9:13","nodeType":"FunctionDefinition","parameters":{"id":1776,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1775,"mutability":"mutable","name":"value","nameLocation":"7467:5:13","nodeType":"VariableDeclaration","scope":1797,"src":"7459:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1774,"name":"uint256","nodeType":"ElementaryTypeName","src":"7459:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7458:15:13"},"returnParameters":{"id":1779,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1778,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1797,"src":"7497:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint152","typeString":"uint152"},"typeName":{"id":1777,"name":"uint152","nodeType":"ElementaryTypeName","src":"7497:7:13","typeDescriptions":{"typeIdentifier":"t_uint152","typeString":"uint152"}},"visibility":"internal"}],"src":"7496:9:13"},"scope":3320,"src":"7440:192:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1821,"nodeType":"Block","src":"8027:126:13","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1812,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1806,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1800,"src":"8045:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":1809,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8059:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint144_$","typeString":"type(uint144)"},"typeName":{"id":1808,"name":"uint144","nodeType":"ElementaryTypeName","src":"8059:7:13","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint144_$","typeString":"type(uint144)"}],"id":1807,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"8054:4:13","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":1810,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8054:13:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint144","typeString":"type(uint144)"}},"id":1811,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"8054:17:13","typeDescriptions":{"typeIdentifier":"t_uint144","typeString":"uint144"}},"src":"8045:26:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203134342062697473","id":1813,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8073:41:13","typeDescriptions":{"typeIdentifier":"t_stringliteral_17d8c5a6d3b2fd2517ba2e4a2ac70a3367cd362448f8338aaa6edf8bfd812bab","typeString":"literal_string \"SafeCast: value doesn't fit in 144 bits\""},"value":"SafeCast: value doesn't fit in 144 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_17d8c5a6d3b2fd2517ba2e4a2ac70a3367cd362448f8338aaa6edf8bfd812bab","typeString":"literal_string \"SafeCast: value doesn't fit in 144 bits\""}],"id":1805,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"8037:7:13","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1814,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8037:78:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1815,"nodeType":"ExpressionStatement","src":"8037:78:13"},{"expression":{"arguments":[{"id":1818,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1800,"src":"8140:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1817,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8132:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint144_$","typeString":"type(uint144)"},"typeName":{"id":1816,"name":"uint144","nodeType":"ElementaryTypeName","src":"8132:7:13","typeDescriptions":{}}},"id":1819,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8132:14:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint144","typeString":"uint144"}},"functionReturnParameters":1804,"id":1820,"nodeType":"Return","src":"8125:21:13"}]},"documentation":{"id":1798,"nodeType":"StructuredDocumentation","src":"7638:318:13","text":" @dev Returns the downcasted uint144 from uint256, reverting on\n overflow (when the input is greater than largest uint144).\n Counterpart to Solidity's `uint144` operator.\n Requirements:\n - input must fit into 144 bits\n _Available since v4.7._"},"id":1822,"implemented":true,"kind":"function","modifiers":[],"name":"toUint144","nameLocation":"7970:9:13","nodeType":"FunctionDefinition","parameters":{"id":1801,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1800,"mutability":"mutable","name":"value","nameLocation":"7988:5:13","nodeType":"VariableDeclaration","scope":1822,"src":"7980:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1799,"name":"uint256","nodeType":"ElementaryTypeName","src":"7980:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7979:15:13"},"returnParameters":{"id":1804,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1803,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1822,"src":"8018:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint144","typeString":"uint144"},"typeName":{"id":1802,"name":"uint144","nodeType":"ElementaryTypeName","src":"8018:7:13","typeDescriptions":{"typeIdentifier":"t_uint144","typeString":"uint144"}},"visibility":"internal"}],"src":"8017:9:13"},"scope":3320,"src":"7961:192:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1846,"nodeType":"Block","src":"8548:126:13","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1837,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1831,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1825,"src":"8566:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":1834,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8580:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint136_$","typeString":"type(uint136)"},"typeName":{"id":1833,"name":"uint136","nodeType":"ElementaryTypeName","src":"8580:7:13","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint136_$","typeString":"type(uint136)"}],"id":1832,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"8575:4:13","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":1835,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8575:13:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint136","typeString":"type(uint136)"}},"id":1836,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"8575:17:13","typeDescriptions":{"typeIdentifier":"t_uint136","typeString":"uint136"}},"src":"8566:26:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203133362062697473","id":1838,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8594:41:13","typeDescriptions":{"typeIdentifier":"t_stringliteral_8b1f81e2e2913e1cee9dba7bcd9837bbf8a8122edaac4afc578271db3c25a56a","typeString":"literal_string \"SafeCast: value doesn't fit in 136 bits\""},"value":"SafeCast: value doesn't fit in 136 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_8b1f81e2e2913e1cee9dba7bcd9837bbf8a8122edaac4afc578271db3c25a56a","typeString":"literal_string \"SafeCast: value doesn't fit in 136 bits\""}],"id":1830,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"8558:7:13","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1839,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8558:78:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1840,"nodeType":"ExpressionStatement","src":"8558:78:13"},{"expression":{"arguments":[{"id":1843,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1825,"src":"8661:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1842,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8653:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint136_$","typeString":"type(uint136)"},"typeName":{"id":1841,"name":"uint136","nodeType":"ElementaryTypeName","src":"8653:7:13","typeDescriptions":{}}},"id":1844,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8653:14:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint136","typeString":"uint136"}},"functionReturnParameters":1829,"id":1845,"nodeType":"Return","src":"8646:21:13"}]},"documentation":{"id":1823,"nodeType":"StructuredDocumentation","src":"8159:318:13","text":" @dev Returns the downcasted uint136 from uint256, reverting on\n overflow (when the input is greater than largest uint136).\n Counterpart to Solidity's `uint136` operator.\n Requirements:\n - input must fit into 136 bits\n _Available since v4.7._"},"id":1847,"implemented":true,"kind":"function","modifiers":[],"name":"toUint136","nameLocation":"8491:9:13","nodeType":"FunctionDefinition","parameters":{"id":1826,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1825,"mutability":"mutable","name":"value","nameLocation":"8509:5:13","nodeType":"VariableDeclaration","scope":1847,"src":"8501:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1824,"name":"uint256","nodeType":"ElementaryTypeName","src":"8501:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8500:15:13"},"returnParameters":{"id":1829,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1828,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1847,"src":"8539:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint136","typeString":"uint136"},"typeName":{"id":1827,"name":"uint136","nodeType":"ElementaryTypeName","src":"8539:7:13","typeDescriptions":{"typeIdentifier":"t_uint136","typeString":"uint136"}},"visibility":"internal"}],"src":"8538:9:13"},"scope":3320,"src":"8482:192:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1871,"nodeType":"Block","src":"9069:126:13","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1862,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1856,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1850,"src":"9087:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":1859,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9101:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint128_$","typeString":"type(uint128)"},"typeName":{"id":1858,"name":"uint128","nodeType":"ElementaryTypeName","src":"9101:7:13","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint128_$","typeString":"type(uint128)"}],"id":1857,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"9096:4:13","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":1860,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9096:13:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint128","typeString":"type(uint128)"}},"id":1861,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"9096:17:13","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"src":"9087:26:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203132382062697473","id":1863,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9115:41:13","typeDescriptions":{"typeIdentifier":"t_stringliteral_47a1e201974f94d3d1a31c8b08ae18c6966c758bdcd4400020012b98cc55426c","typeString":"literal_string \"SafeCast: value doesn't fit in 128 bits\""},"value":"SafeCast: value doesn't fit in 128 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_47a1e201974f94d3d1a31c8b08ae18c6966c758bdcd4400020012b98cc55426c","typeString":"literal_string \"SafeCast: value doesn't fit in 128 bits\""}],"id":1855,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"9079:7:13","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1864,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9079:78:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1865,"nodeType":"ExpressionStatement","src":"9079:78:13"},{"expression":{"arguments":[{"id":1868,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1850,"src":"9182:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1867,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9174:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint128_$","typeString":"type(uint128)"},"typeName":{"id":1866,"name":"uint128","nodeType":"ElementaryTypeName","src":"9174:7:13","typeDescriptions":{}}},"id":1869,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9174:14:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"functionReturnParameters":1854,"id":1870,"nodeType":"Return","src":"9167:21:13"}]},"documentation":{"id":1848,"nodeType":"StructuredDocumentation","src":"8680:318:13","text":" @dev Returns the downcasted uint128 from uint256, reverting on\n overflow (when the input is greater than largest uint128).\n Counterpart to Solidity's `uint128` operator.\n Requirements:\n - input must fit into 128 bits\n _Available since v2.5._"},"id":1872,"implemented":true,"kind":"function","modifiers":[],"name":"toUint128","nameLocation":"9012:9:13","nodeType":"FunctionDefinition","parameters":{"id":1851,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1850,"mutability":"mutable","name":"value","nameLocation":"9030:5:13","nodeType":"VariableDeclaration","scope":1872,"src":"9022:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1849,"name":"uint256","nodeType":"ElementaryTypeName","src":"9022:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9021:15:13"},"returnParameters":{"id":1854,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1853,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1872,"src":"9060:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":1852,"name":"uint128","nodeType":"ElementaryTypeName","src":"9060:7:13","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"}],"src":"9059:9:13"},"scope":3320,"src":"9003:192:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1896,"nodeType":"Block","src":"9590:126:13","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1887,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1881,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1875,"src":"9608:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":1884,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9622:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint120_$","typeString":"type(uint120)"},"typeName":{"id":1883,"name":"uint120","nodeType":"ElementaryTypeName","src":"9622:7:13","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint120_$","typeString":"type(uint120)"}],"id":1882,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"9617:4:13","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":1885,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9617:13:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint120","typeString":"type(uint120)"}},"id":1886,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"9617:17:13","typeDescriptions":{"typeIdentifier":"t_uint120","typeString":"uint120"}},"src":"9608:26:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203132302062697473","id":1888,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9636:41:13","typeDescriptions":{"typeIdentifier":"t_stringliteral_3c40c26bb27060cce77002ca0c426dcc1bef2d367c195ca2eb24bd8b2cc1bb09","typeString":"literal_string \"SafeCast: value doesn't fit in 120 bits\""},"value":"SafeCast: value doesn't fit in 120 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_3c40c26bb27060cce77002ca0c426dcc1bef2d367c195ca2eb24bd8b2cc1bb09","typeString":"literal_string \"SafeCast: value doesn't fit in 120 bits\""}],"id":1880,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"9600:7:13","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1889,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9600:78:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1890,"nodeType":"ExpressionStatement","src":"9600:78:13"},{"expression":{"arguments":[{"id":1893,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1875,"src":"9703:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1892,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9695:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint120_$","typeString":"type(uint120)"},"typeName":{"id":1891,"name":"uint120","nodeType":"ElementaryTypeName","src":"9695:7:13","typeDescriptions":{}}},"id":1894,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9695:14:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint120","typeString":"uint120"}},"functionReturnParameters":1879,"id":1895,"nodeType":"Return","src":"9688:21:13"}]},"documentation":{"id":1873,"nodeType":"StructuredDocumentation","src":"9201:318:13","text":" @dev Returns the downcasted uint120 from uint256, reverting on\n overflow (when the input is greater than largest uint120).\n Counterpart to Solidity's `uint120` operator.\n Requirements:\n - input must fit into 120 bits\n _Available since v4.7._"},"id":1897,"implemented":true,"kind":"function","modifiers":[],"name":"toUint120","nameLocation":"9533:9:13","nodeType":"FunctionDefinition","parameters":{"id":1876,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1875,"mutability":"mutable","name":"value","nameLocation":"9551:5:13","nodeType":"VariableDeclaration","scope":1897,"src":"9543:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1874,"name":"uint256","nodeType":"ElementaryTypeName","src":"9543:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9542:15:13"},"returnParameters":{"id":1879,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1878,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1897,"src":"9581:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint120","typeString":"uint120"},"typeName":{"id":1877,"name":"uint120","nodeType":"ElementaryTypeName","src":"9581:7:13","typeDescriptions":{"typeIdentifier":"t_uint120","typeString":"uint120"}},"visibility":"internal"}],"src":"9580:9:13"},"scope":3320,"src":"9524:192:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1921,"nodeType":"Block","src":"10111:126:13","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1912,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1906,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1900,"src":"10129:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":1909,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10143:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint112_$","typeString":"type(uint112)"},"typeName":{"id":1908,"name":"uint112","nodeType":"ElementaryTypeName","src":"10143:7:13","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint112_$","typeString":"type(uint112)"}],"id":1907,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"10138:4:13","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":1910,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10138:13:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint112","typeString":"type(uint112)"}},"id":1911,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"10138:17:13","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"src":"10129:26:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203131322062697473","id":1913,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"10157:41:13","typeDescriptions":{"typeIdentifier":"t_stringliteral_45659ae152ef697531e1c1115de07c87af91ac22466c3e76b808821799776efd","typeString":"literal_string \"SafeCast: value doesn't fit in 112 bits\""},"value":"SafeCast: value doesn't fit in 112 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_45659ae152ef697531e1c1115de07c87af91ac22466c3e76b808821799776efd","typeString":"literal_string \"SafeCast: value doesn't fit in 112 bits\""}],"id":1905,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"10121:7:13","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1914,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10121:78:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1915,"nodeType":"ExpressionStatement","src":"10121:78:13"},{"expression":{"arguments":[{"id":1918,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1900,"src":"10224:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1917,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10216:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint112_$","typeString":"type(uint112)"},"typeName":{"id":1916,"name":"uint112","nodeType":"ElementaryTypeName","src":"10216:7:13","typeDescriptions":{}}},"id":1919,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10216:14:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"functionReturnParameters":1904,"id":1920,"nodeType":"Return","src":"10209:21:13"}]},"documentation":{"id":1898,"nodeType":"StructuredDocumentation","src":"9722:318:13","text":" @dev Returns the downcasted uint112 from uint256, reverting on\n overflow (when the input is greater than largest uint112).\n Counterpart to Solidity's `uint112` operator.\n Requirements:\n - input must fit into 112 bits\n _Available since v4.7._"},"id":1922,"implemented":true,"kind":"function","modifiers":[],"name":"toUint112","nameLocation":"10054:9:13","nodeType":"FunctionDefinition","parameters":{"id":1901,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1900,"mutability":"mutable","name":"value","nameLocation":"10072:5:13","nodeType":"VariableDeclaration","scope":1922,"src":"10064:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1899,"name":"uint256","nodeType":"ElementaryTypeName","src":"10064:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10063:15:13"},"returnParameters":{"id":1904,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1903,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1922,"src":"10102:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"},"typeName":{"id":1902,"name":"uint112","nodeType":"ElementaryTypeName","src":"10102:7:13","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"visibility":"internal"}],"src":"10101:9:13"},"scope":3320,"src":"10045:192:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1946,"nodeType":"Block","src":"10632:126:13","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1937,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1931,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1925,"src":"10650:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":1934,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10664:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint104_$","typeString":"type(uint104)"},"typeName":{"id":1933,"name":"uint104","nodeType":"ElementaryTypeName","src":"10664:7:13","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint104_$","typeString":"type(uint104)"}],"id":1932,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"10659:4:13","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":1935,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10659:13:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint104","typeString":"type(uint104)"}},"id":1936,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"10659:17:13","typeDescriptions":{"typeIdentifier":"t_uint104","typeString":"uint104"}},"src":"10650:26:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203130342062697473","id":1938,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"10678:41:13","typeDescriptions":{"typeIdentifier":"t_stringliteral_5d7f3e1b7e9f9a06fded6b093c6fd1473ca0a14cc4bb683db904e803e2482981","typeString":"literal_string \"SafeCast: value doesn't fit in 104 bits\""},"value":"SafeCast: value doesn't fit in 104 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_5d7f3e1b7e9f9a06fded6b093c6fd1473ca0a14cc4bb683db904e803e2482981","typeString":"literal_string \"SafeCast: value doesn't fit in 104 bits\""}],"id":1930,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"10642:7:13","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1939,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10642:78:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1940,"nodeType":"ExpressionStatement","src":"10642:78:13"},{"expression":{"arguments":[{"id":1943,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1925,"src":"10745:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1942,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10737:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint104_$","typeString":"type(uint104)"},"typeName":{"id":1941,"name":"uint104","nodeType":"ElementaryTypeName","src":"10737:7:13","typeDescriptions":{}}},"id":1944,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10737:14:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint104","typeString":"uint104"}},"functionReturnParameters":1929,"id":1945,"nodeType":"Return","src":"10730:21:13"}]},"documentation":{"id":1923,"nodeType":"StructuredDocumentation","src":"10243:318:13","text":" @dev Returns the downcasted uint104 from uint256, reverting on\n overflow (when the input is greater than largest uint104).\n Counterpart to Solidity's `uint104` operator.\n Requirements:\n - input must fit into 104 bits\n _Available since v4.7._"},"id":1947,"implemented":true,"kind":"function","modifiers":[],"name":"toUint104","nameLocation":"10575:9:13","nodeType":"FunctionDefinition","parameters":{"id":1926,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1925,"mutability":"mutable","name":"value","nameLocation":"10593:5:13","nodeType":"VariableDeclaration","scope":1947,"src":"10585:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1924,"name":"uint256","nodeType":"ElementaryTypeName","src":"10585:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10584:15:13"},"returnParameters":{"id":1929,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1928,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1947,"src":"10623:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint104","typeString":"uint104"},"typeName":{"id":1927,"name":"uint104","nodeType":"ElementaryTypeName","src":"10623:7:13","typeDescriptions":{"typeIdentifier":"t_uint104","typeString":"uint104"}},"visibility":"internal"}],"src":"10622:9:13"},"scope":3320,"src":"10566:192:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1971,"nodeType":"Block","src":"11147:123:13","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1962,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1956,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1950,"src":"11165:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":1959,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11179:6:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint96_$","typeString":"type(uint96)"},"typeName":{"id":1958,"name":"uint96","nodeType":"ElementaryTypeName","src":"11179:6:13","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint96_$","typeString":"type(uint96)"}],"id":1957,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"11174:4:13","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":1960,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11174:12:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint96","typeString":"type(uint96)"}},"id":1961,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"11174:16:13","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"src":"11165:25:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e2039362062697473","id":1963,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"11192:40:13","typeDescriptions":{"typeIdentifier":"t_stringliteral_06d20189090e973729391526269baef79c35dd621633195648e5f8309eef9e19","typeString":"literal_string \"SafeCast: value doesn't fit in 96 bits\""},"value":"SafeCast: value doesn't fit in 96 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_06d20189090e973729391526269baef79c35dd621633195648e5f8309eef9e19","typeString":"literal_string \"SafeCast: value doesn't fit in 96 bits\""}],"id":1955,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"11157:7:13","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1964,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11157:76:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1965,"nodeType":"ExpressionStatement","src":"11157:76:13"},{"expression":{"arguments":[{"id":1968,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1950,"src":"11257:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1967,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11250:6:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint96_$","typeString":"type(uint96)"},"typeName":{"id":1966,"name":"uint96","nodeType":"ElementaryTypeName","src":"11250:6:13","typeDescriptions":{}}},"id":1969,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11250:13:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"functionReturnParameters":1954,"id":1970,"nodeType":"Return","src":"11243:20:13"}]},"documentation":{"id":1948,"nodeType":"StructuredDocumentation","src":"10764:314:13","text":" @dev Returns the downcasted uint96 from uint256, reverting on\n overflow (when the input is greater than largest uint96).\n Counterpart to Solidity's `uint96` operator.\n Requirements:\n - input must fit into 96 bits\n _Available since v4.2._"},"id":1972,"implemented":true,"kind":"function","modifiers":[],"name":"toUint96","nameLocation":"11092:8:13","nodeType":"FunctionDefinition","parameters":{"id":1951,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1950,"mutability":"mutable","name":"value","nameLocation":"11109:5:13","nodeType":"VariableDeclaration","scope":1972,"src":"11101:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1949,"name":"uint256","nodeType":"ElementaryTypeName","src":"11101:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11100:15:13"},"returnParameters":{"id":1954,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1953,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1972,"src":"11139:6:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":1952,"name":"uint96","nodeType":"ElementaryTypeName","src":"11139:6:13","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"visibility":"internal"}],"src":"11138:8:13"},"scope":3320,"src":"11083:187:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1996,"nodeType":"Block","src":"11659:123:13","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1987,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1981,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1975,"src":"11677:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":1984,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11691:6:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint88_$","typeString":"type(uint88)"},"typeName":{"id":1983,"name":"uint88","nodeType":"ElementaryTypeName","src":"11691:6:13","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint88_$","typeString":"type(uint88)"}],"id":1982,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"11686:4:13","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":1985,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11686:12:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint88","typeString":"type(uint88)"}},"id":1986,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"11686:16:13","typeDescriptions":{"typeIdentifier":"t_uint88","typeString":"uint88"}},"src":"11677:25:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e2038382062697473","id":1988,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"11704:40:13","typeDescriptions":{"typeIdentifier":"t_stringliteral_ae080bd7a76a46f0a0caf00941bc2cdf6002799ca2813a3af7295019576d715d","typeString":"literal_string \"SafeCast: value doesn't fit in 88 bits\""},"value":"SafeCast: value doesn't fit in 88 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_ae080bd7a76a46f0a0caf00941bc2cdf6002799ca2813a3af7295019576d715d","typeString":"literal_string \"SafeCast: value doesn't fit in 88 bits\""}],"id":1980,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"11669:7:13","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1989,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11669:76:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1990,"nodeType":"ExpressionStatement","src":"11669:76:13"},{"expression":{"arguments":[{"id":1993,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1975,"src":"11769:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1992,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11762:6:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint88_$","typeString":"type(uint88)"},"typeName":{"id":1991,"name":"uint88","nodeType":"ElementaryTypeName","src":"11762:6:13","typeDescriptions":{}}},"id":1994,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11762:13:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint88","typeString":"uint88"}},"functionReturnParameters":1979,"id":1995,"nodeType":"Return","src":"11755:20:13"}]},"documentation":{"id":1973,"nodeType":"StructuredDocumentation","src":"11276:314:13","text":" @dev Returns the downcasted uint88 from uint256, reverting on\n overflow (when the input is greater than largest uint88).\n Counterpart to Solidity's `uint88` operator.\n Requirements:\n - input must fit into 88 bits\n _Available since v4.7._"},"id":1997,"implemented":true,"kind":"function","modifiers":[],"name":"toUint88","nameLocation":"11604:8:13","nodeType":"FunctionDefinition","parameters":{"id":1976,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1975,"mutability":"mutable","name":"value","nameLocation":"11621:5:13","nodeType":"VariableDeclaration","scope":1997,"src":"11613:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1974,"name":"uint256","nodeType":"ElementaryTypeName","src":"11613:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11612:15:13"},"returnParameters":{"id":1979,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1978,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1997,"src":"11651:6:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint88","typeString":"uint88"},"typeName":{"id":1977,"name":"uint88","nodeType":"ElementaryTypeName","src":"11651:6:13","typeDescriptions":{"typeIdentifier":"t_uint88","typeString":"uint88"}},"visibility":"internal"}],"src":"11650:8:13"},"scope":3320,"src":"11595:187:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2021,"nodeType":"Block","src":"12171:123:13","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2012,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2006,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2000,"src":"12189:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":2009,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12203:6:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint80_$","typeString":"type(uint80)"},"typeName":{"id":2008,"name":"uint80","nodeType":"ElementaryTypeName","src":"12203:6:13","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint80_$","typeString":"type(uint80)"}],"id":2007,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"12198:4:13","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":2010,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"12198:12:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint80","typeString":"type(uint80)"}},"id":2011,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"12198:16:13","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"src":"12189:25:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e2038302062697473","id":2013,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"12216:40:13","typeDescriptions":{"typeIdentifier":"t_stringliteral_3cba87c71fade7d3cd7b673c159aab98afc040a5369691a33559d905d20ab5d1","typeString":"literal_string \"SafeCast: value doesn't fit in 80 bits\""},"value":"SafeCast: value doesn't fit in 80 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_3cba87c71fade7d3cd7b673c159aab98afc040a5369691a33559d905d20ab5d1","typeString":"literal_string \"SafeCast: value doesn't fit in 80 bits\""}],"id":2005,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"12181:7:13","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2014,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"12181:76:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2015,"nodeType":"ExpressionStatement","src":"12181:76:13"},{"expression":{"arguments":[{"id":2018,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2000,"src":"12281:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2017,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12274:6:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint80_$","typeString":"type(uint80)"},"typeName":{"id":2016,"name":"uint80","nodeType":"ElementaryTypeName","src":"12274:6:13","typeDescriptions":{}}},"id":2019,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"12274:13:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"functionReturnParameters":2004,"id":2020,"nodeType":"Return","src":"12267:20:13"}]},"documentation":{"id":1998,"nodeType":"StructuredDocumentation","src":"11788:314:13","text":" @dev Returns the downcasted uint80 from uint256, reverting on\n overflow (when the input is greater than largest uint80).\n Counterpart to Solidity's `uint80` operator.\n Requirements:\n - input must fit into 80 bits\n _Available since v4.7._"},"id":2022,"implemented":true,"kind":"function","modifiers":[],"name":"toUint80","nameLocation":"12116:8:13","nodeType":"FunctionDefinition","parameters":{"id":2001,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2000,"mutability":"mutable","name":"value","nameLocation":"12133:5:13","nodeType":"VariableDeclaration","scope":2022,"src":"12125:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1999,"name":"uint256","nodeType":"ElementaryTypeName","src":"12125:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12124:15:13"},"returnParameters":{"id":2004,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2003,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2022,"src":"12163:6:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"},"typeName":{"id":2002,"name":"uint80","nodeType":"ElementaryTypeName","src":"12163:6:13","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"visibility":"internal"}],"src":"12162:8:13"},"scope":3320,"src":"12107:187:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2046,"nodeType":"Block","src":"12683:123:13","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2037,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2031,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2025,"src":"12701:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":2034,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12715:6:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint72_$","typeString":"type(uint72)"},"typeName":{"id":2033,"name":"uint72","nodeType":"ElementaryTypeName","src":"12715:6:13","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint72_$","typeString":"type(uint72)"}],"id":2032,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"12710:4:13","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":2035,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"12710:12:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint72","typeString":"type(uint72)"}},"id":2036,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"12710:16:13","typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"}},"src":"12701:25:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e2037322062697473","id":2038,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"12728:40:13","typeDescriptions":{"typeIdentifier":"t_stringliteral_71584237cc5250b8f417982144a947efe8f4c76feba008ff32ac480e69d60606","typeString":"literal_string \"SafeCast: value doesn't fit in 72 bits\""},"value":"SafeCast: value doesn't fit in 72 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_71584237cc5250b8f417982144a947efe8f4c76feba008ff32ac480e69d60606","typeString":"literal_string \"SafeCast: value doesn't fit in 72 bits\""}],"id":2030,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"12693:7:13","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2039,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"12693:76:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2040,"nodeType":"ExpressionStatement","src":"12693:76:13"},{"expression":{"arguments":[{"id":2043,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2025,"src":"12793:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2042,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12786:6:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint72_$","typeString":"type(uint72)"},"typeName":{"id":2041,"name":"uint72","nodeType":"ElementaryTypeName","src":"12786:6:13","typeDescriptions":{}}},"id":2044,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"12786:13:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"}},"functionReturnParameters":2029,"id":2045,"nodeType":"Return","src":"12779:20:13"}]},"documentation":{"id":2023,"nodeType":"StructuredDocumentation","src":"12300:314:13","text":" @dev Returns the downcasted uint72 from uint256, reverting on\n overflow (when the input is greater than largest uint72).\n Counterpart to Solidity's `uint72` operator.\n Requirements:\n - input must fit into 72 bits\n _Available since v4.7._"},"id":2047,"implemented":true,"kind":"function","modifiers":[],"name":"toUint72","nameLocation":"12628:8:13","nodeType":"FunctionDefinition","parameters":{"id":2026,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2025,"mutability":"mutable","name":"value","nameLocation":"12645:5:13","nodeType":"VariableDeclaration","scope":2047,"src":"12637:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2024,"name":"uint256","nodeType":"ElementaryTypeName","src":"12637:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12636:15:13"},"returnParameters":{"id":2029,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2028,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2047,"src":"12675:6:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"},"typeName":{"id":2027,"name":"uint72","nodeType":"ElementaryTypeName","src":"12675:6:13","typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"}},"visibility":"internal"}],"src":"12674:8:13"},"scope":3320,"src":"12619:187:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2071,"nodeType":"Block","src":"13195:123:13","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2062,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2056,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2050,"src":"13213:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":2059,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13227:6:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"},"typeName":{"id":2058,"name":"uint64","nodeType":"ElementaryTypeName","src":"13227:6:13","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"}],"id":2057,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"13222:4:13","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":2060,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"13222:12:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint64","typeString":"type(uint64)"}},"id":2061,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"13222:16:13","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"src":"13213:25:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e2036342062697473","id":2063,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"13240:40:13","typeDescriptions":{"typeIdentifier":"t_stringliteral_93ae0c6bf6ffaece591a770b1865daa9f65157e541970aa9d8dc5f89a9490939","typeString":"literal_string \"SafeCast: value doesn't fit in 64 bits\""},"value":"SafeCast: value doesn't fit in 64 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_93ae0c6bf6ffaece591a770b1865daa9f65157e541970aa9d8dc5f89a9490939","typeString":"literal_string \"SafeCast: value doesn't fit in 64 bits\""}],"id":2055,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"13205:7:13","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2064,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"13205:76:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2065,"nodeType":"ExpressionStatement","src":"13205:76:13"},{"expression":{"arguments":[{"id":2068,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2050,"src":"13305:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2067,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13298:6:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"},"typeName":{"id":2066,"name":"uint64","nodeType":"ElementaryTypeName","src":"13298:6:13","typeDescriptions":{}}},"id":2069,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"13298:13:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"functionReturnParameters":2054,"id":2070,"nodeType":"Return","src":"13291:20:13"}]},"documentation":{"id":2048,"nodeType":"StructuredDocumentation","src":"12812:314:13","text":" @dev Returns the downcasted uint64 from uint256, reverting on\n overflow (when the input is greater than largest uint64).\n Counterpart to Solidity's `uint64` operator.\n Requirements:\n - input must fit into 64 bits\n _Available since v2.5._"},"id":2072,"implemented":true,"kind":"function","modifiers":[],"name":"toUint64","nameLocation":"13140:8:13","nodeType":"FunctionDefinition","parameters":{"id":2051,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2050,"mutability":"mutable","name":"value","nameLocation":"13157:5:13","nodeType":"VariableDeclaration","scope":2072,"src":"13149:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2049,"name":"uint256","nodeType":"ElementaryTypeName","src":"13149:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13148:15:13"},"returnParameters":{"id":2054,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2053,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2072,"src":"13187:6:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":2052,"name":"uint64","nodeType":"ElementaryTypeName","src":"13187:6:13","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"13186:8:13"},"scope":3320,"src":"13131:187:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2096,"nodeType":"Block","src":"13707:123:13","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2087,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2081,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2075,"src":"13725:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":2084,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13739:6:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint56_$","typeString":"type(uint56)"},"typeName":{"id":2083,"name":"uint56","nodeType":"ElementaryTypeName","src":"13739:6:13","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint56_$","typeString":"type(uint56)"}],"id":2082,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"13734:4:13","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":2085,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"13734:12:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint56","typeString":"type(uint56)"}},"id":2086,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"13734:16:13","typeDescriptions":{"typeIdentifier":"t_uint56","typeString":"uint56"}},"src":"13725:25:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e2035362062697473","id":2088,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"13752:40:13","typeDescriptions":{"typeIdentifier":"t_stringliteral_656ad93b5ff6665bfe05d97d51fad7c02ad79e6c43bef066c042a6900f450bc5","typeString":"literal_string \"SafeCast: value doesn't fit in 56 bits\""},"value":"SafeCast: value doesn't fit in 56 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_656ad93b5ff6665bfe05d97d51fad7c02ad79e6c43bef066c042a6900f450bc5","typeString":"literal_string \"SafeCast: value doesn't fit in 56 bits\""}],"id":2080,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"13717:7:13","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2089,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"13717:76:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2090,"nodeType":"ExpressionStatement","src":"13717:76:13"},{"expression":{"arguments":[{"id":2093,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2075,"src":"13817:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2092,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13810:6:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint56_$","typeString":"type(uint56)"},"typeName":{"id":2091,"name":"uint56","nodeType":"ElementaryTypeName","src":"13810:6:13","typeDescriptions":{}}},"id":2094,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"13810:13:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint56","typeString":"uint56"}},"functionReturnParameters":2079,"id":2095,"nodeType":"Return","src":"13803:20:13"}]},"documentation":{"id":2073,"nodeType":"StructuredDocumentation","src":"13324:314:13","text":" @dev Returns the downcasted uint56 from uint256, reverting on\n overflow (when the input is greater than largest uint56).\n Counterpart to Solidity's `uint56` operator.\n Requirements:\n - input must fit into 56 bits\n _Available since v4.7._"},"id":2097,"implemented":true,"kind":"function","modifiers":[],"name":"toUint56","nameLocation":"13652:8:13","nodeType":"FunctionDefinition","parameters":{"id":2076,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2075,"mutability":"mutable","name":"value","nameLocation":"13669:5:13","nodeType":"VariableDeclaration","scope":2097,"src":"13661:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2074,"name":"uint256","nodeType":"ElementaryTypeName","src":"13661:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13660:15:13"},"returnParameters":{"id":2079,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2078,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2097,"src":"13699:6:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint56","typeString":"uint56"},"typeName":{"id":2077,"name":"uint56","nodeType":"ElementaryTypeName","src":"13699:6:13","typeDescriptions":{"typeIdentifier":"t_uint56","typeString":"uint56"}},"visibility":"internal"}],"src":"13698:8:13"},"scope":3320,"src":"13643:187:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2121,"nodeType":"Block","src":"14219:123:13","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2112,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2106,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2100,"src":"14237:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":2109,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14251:6:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint48_$","typeString":"type(uint48)"},"typeName":{"id":2108,"name":"uint48","nodeType":"ElementaryTypeName","src":"14251:6:13","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint48_$","typeString":"type(uint48)"}],"id":2107,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"14246:4:13","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":2110,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"14246:12:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint48","typeString":"type(uint48)"}},"id":2111,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"14246:16:13","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"src":"14237:25:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e2034382062697473","id":2113,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"14264:40:13","typeDescriptions":{"typeIdentifier":"t_stringliteral_599034f9324dd4e988c6cea5a00a30f53147fec1b01559682f18cd840028f495","typeString":"literal_string \"SafeCast: value doesn't fit in 48 bits\""},"value":"SafeCast: value doesn't fit in 48 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_599034f9324dd4e988c6cea5a00a30f53147fec1b01559682f18cd840028f495","typeString":"literal_string \"SafeCast: value doesn't fit in 48 bits\""}],"id":2105,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"14229:7:13","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2114,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"14229:76:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2115,"nodeType":"ExpressionStatement","src":"14229:76:13"},{"expression":{"arguments":[{"id":2118,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2100,"src":"14329:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2117,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14322:6:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint48_$","typeString":"type(uint48)"},"typeName":{"id":2116,"name":"uint48","nodeType":"ElementaryTypeName","src":"14322:6:13","typeDescriptions":{}}},"id":2119,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"14322:13:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"functionReturnParameters":2104,"id":2120,"nodeType":"Return","src":"14315:20:13"}]},"documentation":{"id":2098,"nodeType":"StructuredDocumentation","src":"13836:314:13","text":" @dev Returns the downcasted uint48 from uint256, reverting on\n overflow (when the input is greater than largest uint48).\n Counterpart to Solidity's `uint48` operator.\n Requirements:\n - input must fit into 48 bits\n _Available since v4.7._"},"id":2122,"implemented":true,"kind":"function","modifiers":[],"name":"toUint48","nameLocation":"14164:8:13","nodeType":"FunctionDefinition","parameters":{"id":2101,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2100,"mutability":"mutable","name":"value","nameLocation":"14181:5:13","nodeType":"VariableDeclaration","scope":2122,"src":"14173:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2099,"name":"uint256","nodeType":"ElementaryTypeName","src":"14173:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14172:15:13"},"returnParameters":{"id":2104,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2103,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2122,"src":"14211:6:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":2102,"name":"uint48","nodeType":"ElementaryTypeName","src":"14211:6:13","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"}],"src":"14210:8:13"},"scope":3320,"src":"14155:187:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2146,"nodeType":"Block","src":"14731:123:13","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2137,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2131,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2125,"src":"14749:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":2134,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14763:6:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint40_$","typeString":"type(uint40)"},"typeName":{"id":2133,"name":"uint40","nodeType":"ElementaryTypeName","src":"14763:6:13","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint40_$","typeString":"type(uint40)"}],"id":2132,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"14758:4:13","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":2135,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"14758:12:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint40","typeString":"type(uint40)"}},"id":2136,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"14758:16:13","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"src":"14749:25:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e2034302062697473","id":2138,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"14776:40:13","typeDescriptions":{"typeIdentifier":"t_stringliteral_b23559c58b98a5d3ed7016699c7171ac8defa5a1d180f9a9ffa60468a5701d37","typeString":"literal_string \"SafeCast: value doesn't fit in 40 bits\""},"value":"SafeCast: value doesn't fit in 40 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_b23559c58b98a5d3ed7016699c7171ac8defa5a1d180f9a9ffa60468a5701d37","typeString":"literal_string \"SafeCast: value doesn't fit in 40 bits\""}],"id":2130,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"14741:7:13","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2139,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"14741:76:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2140,"nodeType":"ExpressionStatement","src":"14741:76:13"},{"expression":{"arguments":[{"id":2143,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2125,"src":"14841:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2142,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14834:6:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint40_$","typeString":"type(uint40)"},"typeName":{"id":2141,"name":"uint40","nodeType":"ElementaryTypeName","src":"14834:6:13","typeDescriptions":{}}},"id":2144,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"14834:13:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"functionReturnParameters":2129,"id":2145,"nodeType":"Return","src":"14827:20:13"}]},"documentation":{"id":2123,"nodeType":"StructuredDocumentation","src":"14348:314:13","text":" @dev Returns the downcasted uint40 from uint256, reverting on\n overflow (when the input is greater than largest uint40).\n Counterpart to Solidity's `uint40` operator.\n Requirements:\n - input must fit into 40 bits\n _Available since v4.7._"},"id":2147,"implemented":true,"kind":"function","modifiers":[],"name":"toUint40","nameLocation":"14676:8:13","nodeType":"FunctionDefinition","parameters":{"id":2126,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2125,"mutability":"mutable","name":"value","nameLocation":"14693:5:13","nodeType":"VariableDeclaration","scope":2147,"src":"14685:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2124,"name":"uint256","nodeType":"ElementaryTypeName","src":"14685:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14684:15:13"},"returnParameters":{"id":2129,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2128,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2147,"src":"14723:6:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"},"typeName":{"id":2127,"name":"uint40","nodeType":"ElementaryTypeName","src":"14723:6:13","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"visibility":"internal"}],"src":"14722:8:13"},"scope":3320,"src":"14667:187:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2171,"nodeType":"Block","src":"15243:123:13","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2162,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2156,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2150,"src":"15261:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":2159,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15275:6:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint32_$","typeString":"type(uint32)"},"typeName":{"id":2158,"name":"uint32","nodeType":"ElementaryTypeName","src":"15275:6:13","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint32_$","typeString":"type(uint32)"}],"id":2157,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"15270:4:13","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":2160,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"15270:12:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint32","typeString":"type(uint32)"}},"id":2161,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"15270:16:13","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"src":"15261:25:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e2033322062697473","id":2163,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"15288:40:13","typeDescriptions":{"typeIdentifier":"t_stringliteral_c907489dafcfb622d3b83f2657a14d6da2f59e0de3116af0d6a80554c1a7cb19","typeString":"literal_string \"SafeCast: value doesn't fit in 32 bits\""},"value":"SafeCast: value doesn't fit in 32 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_c907489dafcfb622d3b83f2657a14d6da2f59e0de3116af0d6a80554c1a7cb19","typeString":"literal_string \"SafeCast: value doesn't fit in 32 bits\""}],"id":2155,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"15253:7:13","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2164,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"15253:76:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2165,"nodeType":"ExpressionStatement","src":"15253:76:13"},{"expression":{"arguments":[{"id":2168,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2150,"src":"15353:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2167,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15346:6:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint32_$","typeString":"type(uint32)"},"typeName":{"id":2166,"name":"uint32","nodeType":"ElementaryTypeName","src":"15346:6:13","typeDescriptions":{}}},"id":2169,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"15346:13:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"functionReturnParameters":2154,"id":2170,"nodeType":"Return","src":"15339:20:13"}]},"documentation":{"id":2148,"nodeType":"StructuredDocumentation","src":"14860:314:13","text":" @dev Returns the downcasted uint32 from uint256, reverting on\n overflow (when the input is greater than largest uint32).\n Counterpart to Solidity's `uint32` operator.\n Requirements:\n - input must fit into 32 bits\n _Available since v2.5._"},"id":2172,"implemented":true,"kind":"function","modifiers":[],"name":"toUint32","nameLocation":"15188:8:13","nodeType":"FunctionDefinition","parameters":{"id":2151,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2150,"mutability":"mutable","name":"value","nameLocation":"15205:5:13","nodeType":"VariableDeclaration","scope":2172,"src":"15197:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2149,"name":"uint256","nodeType":"ElementaryTypeName","src":"15197:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15196:15:13"},"returnParameters":{"id":2154,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2153,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2172,"src":"15235:6:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":2152,"name":"uint32","nodeType":"ElementaryTypeName","src":"15235:6:13","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"15234:8:13"},"scope":3320,"src":"15179:187:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2196,"nodeType":"Block","src":"15755:123:13","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2187,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2181,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2175,"src":"15773:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":2184,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15787:6:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint24_$","typeString":"type(uint24)"},"typeName":{"id":2183,"name":"uint24","nodeType":"ElementaryTypeName","src":"15787:6:13","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint24_$","typeString":"type(uint24)"}],"id":2182,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"15782:4:13","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":2185,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"15782:12:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint24","typeString":"type(uint24)"}},"id":2186,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"15782:16:13","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"src":"15773:25:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e2032342062697473","id":2188,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"15800:40:13","typeDescriptions":{"typeIdentifier":"t_stringliteral_f68b65aaf4574c34e9b9d1442d19636c6608b8c4dbd9331c7245f7915c8b2f55","typeString":"literal_string \"SafeCast: value doesn't fit in 24 bits\""},"value":"SafeCast: value doesn't fit in 24 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_f68b65aaf4574c34e9b9d1442d19636c6608b8c4dbd9331c7245f7915c8b2f55","typeString":"literal_string \"SafeCast: value doesn't fit in 24 bits\""}],"id":2180,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"15765:7:13","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2189,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"15765:76:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2190,"nodeType":"ExpressionStatement","src":"15765:76:13"},{"expression":{"arguments":[{"id":2193,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2175,"src":"15865:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2192,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15858:6:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint24_$","typeString":"type(uint24)"},"typeName":{"id":2191,"name":"uint24","nodeType":"ElementaryTypeName","src":"15858:6:13","typeDescriptions":{}}},"id":2194,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"15858:13:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"functionReturnParameters":2179,"id":2195,"nodeType":"Return","src":"15851:20:13"}]},"documentation":{"id":2173,"nodeType":"StructuredDocumentation","src":"15372:314:13","text":" @dev Returns the downcasted uint24 from uint256, reverting on\n overflow (when the input is greater than largest uint24).\n Counterpart to Solidity's `uint24` operator.\n Requirements:\n - input must fit into 24 bits\n _Available since v4.7._"},"id":2197,"implemented":true,"kind":"function","modifiers":[],"name":"toUint24","nameLocation":"15700:8:13","nodeType":"FunctionDefinition","parameters":{"id":2176,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2175,"mutability":"mutable","name":"value","nameLocation":"15717:5:13","nodeType":"VariableDeclaration","scope":2197,"src":"15709:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2174,"name":"uint256","nodeType":"ElementaryTypeName","src":"15709:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15708:15:13"},"returnParameters":{"id":2179,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2178,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2197,"src":"15747:6:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"},"typeName":{"id":2177,"name":"uint24","nodeType":"ElementaryTypeName","src":"15747:6:13","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"visibility":"internal"}],"src":"15746:8:13"},"scope":3320,"src":"15691:187:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2221,"nodeType":"Block","src":"16267:123:13","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2212,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2206,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2200,"src":"16285:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":2209,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16299:6:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint16_$","typeString":"type(uint16)"},"typeName":{"id":2208,"name":"uint16","nodeType":"ElementaryTypeName","src":"16299:6:13","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint16_$","typeString":"type(uint16)"}],"id":2207,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"16294:4:13","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":2210,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"16294:12:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint16","typeString":"type(uint16)"}},"id":2211,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"16294:16:13","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"src":"16285:25:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e2031362062697473","id":2213,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"16312:40:13","typeDescriptions":{"typeIdentifier":"t_stringliteral_13d3a66f9e0e5c92bbe7743bcd3bdb4695009d5f3a96e5ff49718d715b484033","typeString":"literal_string \"SafeCast: value doesn't fit in 16 bits\""},"value":"SafeCast: value doesn't fit in 16 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_13d3a66f9e0e5c92bbe7743bcd3bdb4695009d5f3a96e5ff49718d715b484033","typeString":"literal_string \"SafeCast: value doesn't fit in 16 bits\""}],"id":2205,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"16277:7:13","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2214,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"16277:76:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2215,"nodeType":"ExpressionStatement","src":"16277:76:13"},{"expression":{"arguments":[{"id":2218,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2200,"src":"16377:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2217,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16370:6:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint16_$","typeString":"type(uint16)"},"typeName":{"id":2216,"name":"uint16","nodeType":"ElementaryTypeName","src":"16370:6:13","typeDescriptions":{}}},"id":2219,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"16370:13:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"functionReturnParameters":2204,"id":2220,"nodeType":"Return","src":"16363:20:13"}]},"documentation":{"id":2198,"nodeType":"StructuredDocumentation","src":"15884:314:13","text":" @dev Returns the downcasted uint16 from uint256, reverting on\n overflow (when the input is greater than largest uint16).\n Counterpart to Solidity's `uint16` operator.\n Requirements:\n - input must fit into 16 bits\n _Available since v2.5._"},"id":2222,"implemented":true,"kind":"function","modifiers":[],"name":"toUint16","nameLocation":"16212:8:13","nodeType":"FunctionDefinition","parameters":{"id":2201,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2200,"mutability":"mutable","name":"value","nameLocation":"16229:5:13","nodeType":"VariableDeclaration","scope":2222,"src":"16221:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2199,"name":"uint256","nodeType":"ElementaryTypeName","src":"16221:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16220:15:13"},"returnParameters":{"id":2204,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2203,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2222,"src":"16259:6:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":2202,"name":"uint16","nodeType":"ElementaryTypeName","src":"16259:6:13","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"}],"src":"16258:8:13"},"scope":3320,"src":"16203:187:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2246,"nodeType":"Block","src":"16773:120:13","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2237,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2231,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2225,"src":"16791:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":2234,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16805:5:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":2233,"name":"uint8","nodeType":"ElementaryTypeName","src":"16805:5:13","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"}],"id":2232,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"16800:4:13","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":2235,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"16800:11:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint8","typeString":"type(uint8)"}},"id":2236,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"16800:15:13","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"16791:24:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e20382062697473","id":2238,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"16817:39:13","typeDescriptions":{"typeIdentifier":"t_stringliteral_2610961ba53259047cd57c60366c5ad0b8aabf5eb4132487619b736715a740d1","typeString":"literal_string \"SafeCast: value doesn't fit in 8 bits\""},"value":"SafeCast: value doesn't fit in 8 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_2610961ba53259047cd57c60366c5ad0b8aabf5eb4132487619b736715a740d1","typeString":"literal_string \"SafeCast: value doesn't fit in 8 bits\""}],"id":2230,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"16783:7:13","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2239,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"16783:74:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2240,"nodeType":"ExpressionStatement","src":"16783:74:13"},{"expression":{"arguments":[{"id":2243,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2225,"src":"16880:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2242,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16874:5:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":2241,"name":"uint8","nodeType":"ElementaryTypeName","src":"16874:5:13","typeDescriptions":{}}},"id":2244,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"16874:12:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"functionReturnParameters":2229,"id":2245,"nodeType":"Return","src":"16867:19:13"}]},"documentation":{"id":2223,"nodeType":"StructuredDocumentation","src":"16396:310:13","text":" @dev Returns the downcasted uint8 from uint256, reverting on\n overflow (when the input is greater than largest uint8).\n Counterpart to Solidity's `uint8` operator.\n Requirements:\n - input must fit into 8 bits\n _Available since v2.5._"},"id":2247,"implemented":true,"kind":"function","modifiers":[],"name":"toUint8","nameLocation":"16720:7:13","nodeType":"FunctionDefinition","parameters":{"id":2226,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2225,"mutability":"mutable","name":"value","nameLocation":"16736:5:13","nodeType":"VariableDeclaration","scope":2247,"src":"16728:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2224,"name":"uint256","nodeType":"ElementaryTypeName","src":"16728:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16727:15:13"},"returnParameters":{"id":2229,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2228,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2247,"src":"16766:5:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":2227,"name":"uint8","nodeType":"ElementaryTypeName","src":"16766:5:13","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"16765:7:13"},"scope":3320,"src":"16711:182:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2267,"nodeType":"Block","src":"17167:103:13","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":2258,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2256,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2250,"src":"17185:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"hexValue":"30","id":2257,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17194:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"17185:10:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c7565206d75737420626520706f736974697665","id":2259,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"17197:34:13","typeDescriptions":{"typeIdentifier":"t_stringliteral_74e6d3a4204092bea305532ded31d3763fc378e46be3884a93ceff08a0761807","typeString":"literal_string \"SafeCast: value must be positive\""},"value":"SafeCast: value must be positive"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_74e6d3a4204092bea305532ded31d3763fc378e46be3884a93ceff08a0761807","typeString":"literal_string \"SafeCast: value must be positive\""}],"id":2255,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"17177:7:13","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2260,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"17177:55:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2261,"nodeType":"ExpressionStatement","src":"17177:55:13"},{"expression":{"arguments":[{"id":2264,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2250,"src":"17257:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":2263,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"17249:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":2262,"name":"uint256","nodeType":"ElementaryTypeName","src":"17249:7:13","typeDescriptions":{}}},"id":2265,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"17249:14:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2254,"id":2266,"nodeType":"Return","src":"17242:21:13"}]},"documentation":{"id":2248,"nodeType":"StructuredDocumentation","src":"16899:198:13","text":" @dev Converts a signed int256 into an unsigned uint256.\n Requirements:\n - input must be greater than or equal to 0.\n _Available since v3.0._"},"id":2268,"implemented":true,"kind":"function","modifiers":[],"name":"toUint256","nameLocation":"17111:9:13","nodeType":"FunctionDefinition","parameters":{"id":2251,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2250,"mutability":"mutable","name":"value","nameLocation":"17128:5:13","nodeType":"VariableDeclaration","scope":2268,"src":"17121:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2249,"name":"int256","nodeType":"ElementaryTypeName","src":"17121:6:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"17120:14:13"},"returnParameters":{"id":2254,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2253,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2268,"src":"17158:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2252,"name":"uint256","nodeType":"ElementaryTypeName","src":"17158:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"17157:9:13"},"scope":3320,"src":"17102:168:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2300,"nodeType":"Block","src":"17694:153:13","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2291,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":2283,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2277,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2271,"src":"17712:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"expression":{"arguments":[{"id":2280,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"17726:6:13","typeDescriptions":{"typeIdentifier":"t_type$_t_int248_$","typeString":"type(int248)"},"typeName":{"id":2279,"name":"int248","nodeType":"ElementaryTypeName","src":"17726:6:13","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_int248_$","typeString":"type(int248)"}],"id":2278,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"17721:4:13","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":2281,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"17721:12:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_int248","typeString":"type(int248)"}},"id":2282,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"min","nodeType":"MemberAccess","src":"17721:16:13","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"src":"17712:25:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":2290,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2284,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2271,"src":"17741:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":2287,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"17755:6:13","typeDescriptions":{"typeIdentifier":"t_type$_t_int248_$","typeString":"type(int248)"},"typeName":{"id":2286,"name":"int248","nodeType":"ElementaryTypeName","src":"17755:6:13","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_int248_$","typeString":"type(int248)"}],"id":2285,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"17750:4:13","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":2288,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"17750:12:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_int248","typeString":"type(int248)"}},"id":2289,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"17750:16:13","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"src":"17741:25:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"17712:54:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203234382062697473","id":2292,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"17768:41:13","typeDescriptions":{"typeIdentifier":"t_stringliteral_6ac19bba4607c9b45ff35f54fbc4ca64c29c7457109a16fa180ea77cdbda8593","typeString":"literal_string \"SafeCast: value doesn't fit in 248 bits\""},"value":"SafeCast: value doesn't fit in 248 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_6ac19bba4607c9b45ff35f54fbc4ca64c29c7457109a16fa180ea77cdbda8593","typeString":"literal_string \"SafeCast: value doesn't fit in 248 bits\""}],"id":2276,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"17704:7:13","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2293,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"17704:106:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2294,"nodeType":"ExpressionStatement","src":"17704:106:13"},{"expression":{"arguments":[{"id":2297,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2271,"src":"17834:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":2296,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"17827:6:13","typeDescriptions":{"typeIdentifier":"t_type$_t_int248_$","typeString":"type(int248)"},"typeName":{"id":2295,"name":"int248","nodeType":"ElementaryTypeName","src":"17827:6:13","typeDescriptions":{}}},"id":2298,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"17827:13:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"functionReturnParameters":2275,"id":2299,"nodeType":"Return","src":"17820:20:13"}]},"documentation":{"id":2269,"nodeType":"StructuredDocumentation","src":"17276:350:13","text":" @dev Returns the downcasted int248 from int256, reverting on\n overflow (when the input is less than smallest int248 or\n greater than largest int248).\n Counterpart to Solidity's `int248` operator.\n Requirements:\n - input must fit into 248 bits\n _Available since v4.7._"},"id":2301,"implemented":true,"kind":"function","modifiers":[],"name":"toInt248","nameLocation":"17640:8:13","nodeType":"FunctionDefinition","parameters":{"id":2272,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2271,"mutability":"mutable","name":"value","nameLocation":"17656:5:13","nodeType":"VariableDeclaration","scope":2301,"src":"17649:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2270,"name":"int256","nodeType":"ElementaryTypeName","src":"17649:6:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"17648:14:13"},"returnParameters":{"id":2275,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2274,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2301,"src":"17686:6:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"},"typeName":{"id":2273,"name":"int248","nodeType":"ElementaryTypeName","src":"17686:6:13","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"visibility":"internal"}],"src":"17685:8:13"},"scope":3320,"src":"17631:216:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2333,"nodeType":"Block","src":"18271:153:13","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2324,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":2316,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2310,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2304,"src":"18289:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"expression":{"arguments":[{"id":2313,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"18303:6:13","typeDescriptions":{"typeIdentifier":"t_type$_t_int240_$","typeString":"type(int240)"},"typeName":{"id":2312,"name":"int240","nodeType":"ElementaryTypeName","src":"18303:6:13","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_int240_$","typeString":"type(int240)"}],"id":2311,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"18298:4:13","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":2314,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"18298:12:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_int240","typeString":"type(int240)"}},"id":2315,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"min","nodeType":"MemberAccess","src":"18298:16:13","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"src":"18289:25:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":2323,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2317,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2304,"src":"18318:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":2320,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"18332:6:13","typeDescriptions":{"typeIdentifier":"t_type$_t_int240_$","typeString":"type(int240)"},"typeName":{"id":2319,"name":"int240","nodeType":"ElementaryTypeName","src":"18332:6:13","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_int240_$","typeString":"type(int240)"}],"id":2318,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"18327:4:13","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":2321,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"18327:12:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_int240","typeString":"type(int240)"}},"id":2322,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"18327:16:13","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"src":"18318:25:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"18289:54:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203234302062697473","id":2325,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"18345:41:13","typeDescriptions":{"typeIdentifier":"t_stringliteral_375fa0f6cb9fb5845d214c630920cedf4424913ed6dc32c297d430efa3d61a87","typeString":"literal_string \"SafeCast: value doesn't fit in 240 bits\""},"value":"SafeCast: value doesn't fit in 240 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_375fa0f6cb9fb5845d214c630920cedf4424913ed6dc32c297d430efa3d61a87","typeString":"literal_string \"SafeCast: value doesn't fit in 240 bits\""}],"id":2309,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"18281:7:13","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2326,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"18281:106:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2327,"nodeType":"ExpressionStatement","src":"18281:106:13"},{"expression":{"arguments":[{"id":2330,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2304,"src":"18411:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":2329,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"18404:6:13","typeDescriptions":{"typeIdentifier":"t_type$_t_int240_$","typeString":"type(int240)"},"typeName":{"id":2328,"name":"int240","nodeType":"ElementaryTypeName","src":"18404:6:13","typeDescriptions":{}}},"id":2331,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"18404:13:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"functionReturnParameters":2308,"id":2332,"nodeType":"Return","src":"18397:20:13"}]},"documentation":{"id":2302,"nodeType":"StructuredDocumentation","src":"17853:350:13","text":" @dev Returns the downcasted int240 from int256, reverting on\n overflow (when the input is less than smallest int240 or\n greater than largest int240).\n Counterpart to Solidity's `int240` operator.\n Requirements:\n - input must fit into 240 bits\n _Available since v4.7._"},"id":2334,"implemented":true,"kind":"function","modifiers":[],"name":"toInt240","nameLocation":"18217:8:13","nodeType":"FunctionDefinition","parameters":{"id":2305,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2304,"mutability":"mutable","name":"value","nameLocation":"18233:5:13","nodeType":"VariableDeclaration","scope":2334,"src":"18226:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2303,"name":"int256","nodeType":"ElementaryTypeName","src":"18226:6:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"18225:14:13"},"returnParameters":{"id":2308,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2307,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2334,"src":"18263:6:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"},"typeName":{"id":2306,"name":"int240","nodeType":"ElementaryTypeName","src":"18263:6:13","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"visibility":"internal"}],"src":"18262:8:13"},"scope":3320,"src":"18208:216:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2366,"nodeType":"Block","src":"18848:153:13","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2357,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":2349,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2343,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2337,"src":"18866:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"expression":{"arguments":[{"id":2346,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"18880:6:13","typeDescriptions":{"typeIdentifier":"t_type$_t_int232_$","typeString":"type(int232)"},"typeName":{"id":2345,"name":"int232","nodeType":"ElementaryTypeName","src":"18880:6:13","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_int232_$","typeString":"type(int232)"}],"id":2344,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"18875:4:13","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":2347,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"18875:12:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_int232","typeString":"type(int232)"}},"id":2348,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"min","nodeType":"MemberAccess","src":"18875:16:13","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"src":"18866:25:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":2356,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2350,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2337,"src":"18895:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":2353,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"18909:6:13","typeDescriptions":{"typeIdentifier":"t_type$_t_int232_$","typeString":"type(int232)"},"typeName":{"id":2352,"name":"int232","nodeType":"ElementaryTypeName","src":"18909:6:13","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_int232_$","typeString":"type(int232)"}],"id":2351,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"18904:4:13","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":2354,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"18904:12:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_int232","typeString":"type(int232)"}},"id":2355,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"18904:16:13","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"src":"18895:25:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"18866:54:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203233322062697473","id":2358,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"18922:41:13","typeDescriptions":{"typeIdentifier":"t_stringliteral_5797fb2c4589bd6a92752ce0eacaac67341e37ab28c96c2284ab897e7ac77957","typeString":"literal_string \"SafeCast: value doesn't fit in 232 bits\""},"value":"SafeCast: value doesn't fit in 232 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_5797fb2c4589bd6a92752ce0eacaac67341e37ab28c96c2284ab897e7ac77957","typeString":"literal_string \"SafeCast: value doesn't fit in 232 bits\""}],"id":2342,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"18858:7:13","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2359,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"18858:106:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2360,"nodeType":"ExpressionStatement","src":"18858:106:13"},{"expression":{"arguments":[{"id":2363,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2337,"src":"18988:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":2362,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"18981:6:13","typeDescriptions":{"typeIdentifier":"t_type$_t_int232_$","typeString":"type(int232)"},"typeName":{"id":2361,"name":"int232","nodeType":"ElementaryTypeName","src":"18981:6:13","typeDescriptions":{}}},"id":2364,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"18981:13:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"functionReturnParameters":2341,"id":2365,"nodeType":"Return","src":"18974:20:13"}]},"documentation":{"id":2335,"nodeType":"StructuredDocumentation","src":"18430:350:13","text":" @dev Returns the downcasted int232 from int256, reverting on\n overflow (when the input is less than smallest int232 or\n greater than largest int232).\n Counterpart to Solidity's `int232` operator.\n Requirements:\n - input must fit into 232 bits\n _Available since v4.7._"},"id":2367,"implemented":true,"kind":"function","modifiers":[],"name":"toInt232","nameLocation":"18794:8:13","nodeType":"FunctionDefinition","parameters":{"id":2338,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2337,"mutability":"mutable","name":"value","nameLocation":"18810:5:13","nodeType":"VariableDeclaration","scope":2367,"src":"18803:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2336,"name":"int256","nodeType":"ElementaryTypeName","src":"18803:6:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"18802:14:13"},"returnParameters":{"id":2341,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2340,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2367,"src":"18840:6:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"},"typeName":{"id":2339,"name":"int232","nodeType":"ElementaryTypeName","src":"18840:6:13","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"visibility":"internal"}],"src":"18839:8:13"},"scope":3320,"src":"18785:216:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2399,"nodeType":"Block","src":"19425:153:13","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2390,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":2382,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2376,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2370,"src":"19443:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"expression":{"arguments":[{"id":2379,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"19457:6:13","typeDescriptions":{"typeIdentifier":"t_type$_t_int224_$","typeString":"type(int224)"},"typeName":{"id":2378,"name":"int224","nodeType":"ElementaryTypeName","src":"19457:6:13","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_int224_$","typeString":"type(int224)"}],"id":2377,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"19452:4:13","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":2380,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"19452:12:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_int224","typeString":"type(int224)"}},"id":2381,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"min","nodeType":"MemberAccess","src":"19452:16:13","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"src":"19443:25:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":2389,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2383,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2370,"src":"19472:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":2386,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"19486:6:13","typeDescriptions":{"typeIdentifier":"t_type$_t_int224_$","typeString":"type(int224)"},"typeName":{"id":2385,"name":"int224","nodeType":"ElementaryTypeName","src":"19486:6:13","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_int224_$","typeString":"type(int224)"}],"id":2384,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"19481:4:13","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":2387,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"19481:12:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_int224","typeString":"type(int224)"}},"id":2388,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"19481:16:13","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"src":"19472:25:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"19443:54:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203232342062697473","id":2391,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"19499:41:13","typeDescriptions":{"typeIdentifier":"t_stringliteral_9d2acf551b2466898443b9bc3a403a4d86037386bc5a8960c1bbb0f204e69b79","typeString":"literal_string \"SafeCast: value doesn't fit in 224 bits\""},"value":"SafeCast: value doesn't fit in 224 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_9d2acf551b2466898443b9bc3a403a4d86037386bc5a8960c1bbb0f204e69b79","typeString":"literal_string \"SafeCast: value doesn't fit in 224 bits\""}],"id":2375,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"19435:7:13","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2392,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"19435:106:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2393,"nodeType":"ExpressionStatement","src":"19435:106:13"},{"expression":{"arguments":[{"id":2396,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2370,"src":"19565:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":2395,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"19558:6:13","typeDescriptions":{"typeIdentifier":"t_type$_t_int224_$","typeString":"type(int224)"},"typeName":{"id":2394,"name":"int224","nodeType":"ElementaryTypeName","src":"19558:6:13","typeDescriptions":{}}},"id":2397,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"19558:13:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"functionReturnParameters":2374,"id":2398,"nodeType":"Return","src":"19551:20:13"}]},"documentation":{"id":2368,"nodeType":"StructuredDocumentation","src":"19007:350:13","text":" @dev Returns the downcasted int224 from int256, reverting on\n overflow (when the input is less than smallest int224 or\n greater than largest int224).\n Counterpart to Solidity's `int224` operator.\n Requirements:\n - input must fit into 224 bits\n _Available since v4.7._"},"id":2400,"implemented":true,"kind":"function","modifiers":[],"name":"toInt224","nameLocation":"19371:8:13","nodeType":"FunctionDefinition","parameters":{"id":2371,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2370,"mutability":"mutable","name":"value","nameLocation":"19387:5:13","nodeType":"VariableDeclaration","scope":2400,"src":"19380:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2369,"name":"int256","nodeType":"ElementaryTypeName","src":"19380:6:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"19379:14:13"},"returnParameters":{"id":2374,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2373,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2400,"src":"19417:6:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"},"typeName":{"id":2372,"name":"int224","nodeType":"ElementaryTypeName","src":"19417:6:13","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"visibility":"internal"}],"src":"19416:8:13"},"scope":3320,"src":"19362:216:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2432,"nodeType":"Block","src":"20002:153:13","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2423,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":2415,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2409,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2403,"src":"20020:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"expression":{"arguments":[{"id":2412,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"20034:6:13","typeDescriptions":{"typeIdentifier":"t_type$_t_int216_$","typeString":"type(int216)"},"typeName":{"id":2411,"name":"int216","nodeType":"ElementaryTypeName","src":"20034:6:13","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_int216_$","typeString":"type(int216)"}],"id":2410,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"20029:4:13","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":2413,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"20029:12:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_int216","typeString":"type(int216)"}},"id":2414,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"min","nodeType":"MemberAccess","src":"20029:16:13","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"src":"20020:25:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":2422,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2416,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2403,"src":"20049:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":2419,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"20063:6:13","typeDescriptions":{"typeIdentifier":"t_type$_t_int216_$","typeString":"type(int216)"},"typeName":{"id":2418,"name":"int216","nodeType":"ElementaryTypeName","src":"20063:6:13","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_int216_$","typeString":"type(int216)"}],"id":2417,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"20058:4:13","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":2420,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"20058:12:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_int216","typeString":"type(int216)"}},"id":2421,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"20058:16:13","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"src":"20049:25:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"20020:54:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203231362062697473","id":2424,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"20076:41:13","typeDescriptions":{"typeIdentifier":"t_stringliteral_8966adc0aad8dc91b207c69c3eb4937e498af8cc706cfe7edd55f3a6ea53488d","typeString":"literal_string \"SafeCast: value doesn't fit in 216 bits\""},"value":"SafeCast: value doesn't fit in 216 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_8966adc0aad8dc91b207c69c3eb4937e498af8cc706cfe7edd55f3a6ea53488d","typeString":"literal_string \"SafeCast: value doesn't fit in 216 bits\""}],"id":2408,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"20012:7:13","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2425,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"20012:106:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2426,"nodeType":"ExpressionStatement","src":"20012:106:13"},{"expression":{"arguments":[{"id":2429,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2403,"src":"20142:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":2428,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"20135:6:13","typeDescriptions":{"typeIdentifier":"t_type$_t_int216_$","typeString":"type(int216)"},"typeName":{"id":2427,"name":"int216","nodeType":"ElementaryTypeName","src":"20135:6:13","typeDescriptions":{}}},"id":2430,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"20135:13:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"functionReturnParameters":2407,"id":2431,"nodeType":"Return","src":"20128:20:13"}]},"documentation":{"id":2401,"nodeType":"StructuredDocumentation","src":"19584:350:13","text":" @dev Returns the downcasted int216 from int256, reverting on\n overflow (when the input is less than smallest int216 or\n greater than largest int216).\n Counterpart to Solidity's `int216` operator.\n Requirements:\n - input must fit into 216 bits\n _Available since v4.7._"},"id":2433,"implemented":true,"kind":"function","modifiers":[],"name":"toInt216","nameLocation":"19948:8:13","nodeType":"FunctionDefinition","parameters":{"id":2404,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2403,"mutability":"mutable","name":"value","nameLocation":"19964:5:13","nodeType":"VariableDeclaration","scope":2433,"src":"19957:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2402,"name":"int256","nodeType":"ElementaryTypeName","src":"19957:6:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"19956:14:13"},"returnParameters":{"id":2407,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2406,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2433,"src":"19994:6:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"},"typeName":{"id":2405,"name":"int216","nodeType":"ElementaryTypeName","src":"19994:6:13","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"visibility":"internal"}],"src":"19993:8:13"},"scope":3320,"src":"19939:216:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2465,"nodeType":"Block","src":"20579:153:13","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2456,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":2448,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2442,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2436,"src":"20597:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"expression":{"arguments":[{"id":2445,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"20611:6:13","typeDescriptions":{"typeIdentifier":"t_type$_t_int208_$","typeString":"type(int208)"},"typeName":{"id":2444,"name":"int208","nodeType":"ElementaryTypeName","src":"20611:6:13","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_int208_$","typeString":"type(int208)"}],"id":2443,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"20606:4:13","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":2446,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"20606:12:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_int208","typeString":"type(int208)"}},"id":2447,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"min","nodeType":"MemberAccess","src":"20606:16:13","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"src":"20597:25:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":2455,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2449,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2436,"src":"20626:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":2452,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"20640:6:13","typeDescriptions":{"typeIdentifier":"t_type$_t_int208_$","typeString":"type(int208)"},"typeName":{"id":2451,"name":"int208","nodeType":"ElementaryTypeName","src":"20640:6:13","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_int208_$","typeString":"type(int208)"}],"id":2450,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"20635:4:13","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":2453,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"20635:12:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_int208","typeString":"type(int208)"}},"id":2454,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"20635:16:13","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"src":"20626:25:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"20597:54:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203230382062697473","id":2457,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"20653:41:13","typeDescriptions":{"typeIdentifier":"t_stringliteral_43d81217fa633fa1c6e88855de94fb990f5831ac266b0a90afa660e986ab5e23","typeString":"literal_string \"SafeCast: value doesn't fit in 208 bits\""},"value":"SafeCast: value doesn't fit in 208 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_43d81217fa633fa1c6e88855de94fb990f5831ac266b0a90afa660e986ab5e23","typeString":"literal_string \"SafeCast: value doesn't fit in 208 bits\""}],"id":2441,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"20589:7:13","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2458,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"20589:106:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2459,"nodeType":"ExpressionStatement","src":"20589:106:13"},{"expression":{"arguments":[{"id":2462,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2436,"src":"20719:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":2461,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"20712:6:13","typeDescriptions":{"typeIdentifier":"t_type$_t_int208_$","typeString":"type(int208)"},"typeName":{"id":2460,"name":"int208","nodeType":"ElementaryTypeName","src":"20712:6:13","typeDescriptions":{}}},"id":2463,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"20712:13:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"functionReturnParameters":2440,"id":2464,"nodeType":"Return","src":"20705:20:13"}]},"documentation":{"id":2434,"nodeType":"StructuredDocumentation","src":"20161:350:13","text":" @dev Returns the downcasted int208 from int256, reverting on\n overflow (when the input is less than smallest int208 or\n greater than largest int208).\n Counterpart to Solidity's `int208` operator.\n Requirements:\n - input must fit into 208 bits\n _Available since v4.7._"},"id":2466,"implemented":true,"kind":"function","modifiers":[],"name":"toInt208","nameLocation":"20525:8:13","nodeType":"FunctionDefinition","parameters":{"id":2437,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2436,"mutability":"mutable","name":"value","nameLocation":"20541:5:13","nodeType":"VariableDeclaration","scope":2466,"src":"20534:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2435,"name":"int256","nodeType":"ElementaryTypeName","src":"20534:6:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"20533:14:13"},"returnParameters":{"id":2440,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2439,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2466,"src":"20571:6:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"},"typeName":{"id":2438,"name":"int208","nodeType":"ElementaryTypeName","src":"20571:6:13","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"visibility":"internal"}],"src":"20570:8:13"},"scope":3320,"src":"20516:216:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2498,"nodeType":"Block","src":"21156:153:13","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2489,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":2481,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2475,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2469,"src":"21174:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"expression":{"arguments":[{"id":2478,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"21188:6:13","typeDescriptions":{"typeIdentifier":"t_type$_t_int200_$","typeString":"type(int200)"},"typeName":{"id":2477,"name":"int200","nodeType":"ElementaryTypeName","src":"21188:6:13","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_int200_$","typeString":"type(int200)"}],"id":2476,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"21183:4:13","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":2479,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"21183:12:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_int200","typeString":"type(int200)"}},"id":2480,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"min","nodeType":"MemberAccess","src":"21183:16:13","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"src":"21174:25:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":2488,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2482,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2469,"src":"21203:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":2485,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"21217:6:13","typeDescriptions":{"typeIdentifier":"t_type$_t_int200_$","typeString":"type(int200)"},"typeName":{"id":2484,"name":"int200","nodeType":"ElementaryTypeName","src":"21217:6:13","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_int200_$","typeString":"type(int200)"}],"id":2483,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"21212:4:13","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":2486,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"21212:12:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_int200","typeString":"type(int200)"}},"id":2487,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"21212:16:13","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"src":"21203:25:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"21174:54:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203230302062697473","id":2490,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"21230:41:13","typeDescriptions":{"typeIdentifier":"t_stringliteral_df8130f294fe2698967ea9ead82c4da9454490567d976d00551e0174e655314c","typeString":"literal_string \"SafeCast: value doesn't fit in 200 bits\""},"value":"SafeCast: value doesn't fit in 200 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_df8130f294fe2698967ea9ead82c4da9454490567d976d00551e0174e655314c","typeString":"literal_string \"SafeCast: value doesn't fit in 200 bits\""}],"id":2474,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"21166:7:13","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2491,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"21166:106:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2492,"nodeType":"ExpressionStatement","src":"21166:106:13"},{"expression":{"arguments":[{"id":2495,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2469,"src":"21296:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":2494,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"21289:6:13","typeDescriptions":{"typeIdentifier":"t_type$_t_int200_$","typeString":"type(int200)"},"typeName":{"id":2493,"name":"int200","nodeType":"ElementaryTypeName","src":"21289:6:13","typeDescriptions":{}}},"id":2496,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"21289:13:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"functionReturnParameters":2473,"id":2497,"nodeType":"Return","src":"21282:20:13"}]},"documentation":{"id":2467,"nodeType":"StructuredDocumentation","src":"20738:350:13","text":" @dev Returns the downcasted int200 from int256, reverting on\n overflow (when the input is less than smallest int200 or\n greater than largest int200).\n Counterpart to Solidity's `int200` operator.\n Requirements:\n - input must fit into 200 bits\n _Available since v4.7._"},"id":2499,"implemented":true,"kind":"function","modifiers":[],"name":"toInt200","nameLocation":"21102:8:13","nodeType":"FunctionDefinition","parameters":{"id":2470,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2469,"mutability":"mutable","name":"value","nameLocation":"21118:5:13","nodeType":"VariableDeclaration","scope":2499,"src":"21111:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2468,"name":"int256","nodeType":"ElementaryTypeName","src":"21111:6:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"21110:14:13"},"returnParameters":{"id":2473,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2472,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2499,"src":"21148:6:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"},"typeName":{"id":2471,"name":"int200","nodeType":"ElementaryTypeName","src":"21148:6:13","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"visibility":"internal"}],"src":"21147:8:13"},"scope":3320,"src":"21093:216:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2531,"nodeType":"Block","src":"21733:153:13","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2522,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":2514,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2508,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2502,"src":"21751:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"expression":{"arguments":[{"id":2511,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"21765:6:13","typeDescriptions":{"typeIdentifier":"t_type$_t_int192_$","typeString":"type(int192)"},"typeName":{"id":2510,"name":"int192","nodeType":"ElementaryTypeName","src":"21765:6:13","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_int192_$","typeString":"type(int192)"}],"id":2509,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"21760:4:13","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":2512,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"21760:12:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_int192","typeString":"type(int192)"}},"id":2513,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"min","nodeType":"MemberAccess","src":"21760:16:13","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"src":"21751:25:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":2521,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2515,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2502,"src":"21780:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":2518,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"21794:6:13","typeDescriptions":{"typeIdentifier":"t_type$_t_int192_$","typeString":"type(int192)"},"typeName":{"id":2517,"name":"int192","nodeType":"ElementaryTypeName","src":"21794:6:13","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_int192_$","typeString":"type(int192)"}],"id":2516,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"21789:4:13","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":2519,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"21789:12:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_int192","typeString":"type(int192)"}},"id":2520,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"21789:16:13","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"src":"21780:25:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"21751:54:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203139322062697473","id":2523,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"21807:41:13","typeDescriptions":{"typeIdentifier":"t_stringliteral_112978800f12a1c4f1eab82789f7b6defd49dc1c17ba270a84ffc28392fb05ae","typeString":"literal_string \"SafeCast: value doesn't fit in 192 bits\""},"value":"SafeCast: value doesn't fit in 192 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_112978800f12a1c4f1eab82789f7b6defd49dc1c17ba270a84ffc28392fb05ae","typeString":"literal_string \"SafeCast: value doesn't fit in 192 bits\""}],"id":2507,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"21743:7:13","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2524,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"21743:106:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2525,"nodeType":"ExpressionStatement","src":"21743:106:13"},{"expression":{"arguments":[{"id":2528,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2502,"src":"21873:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":2527,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"21866:6:13","typeDescriptions":{"typeIdentifier":"t_type$_t_int192_$","typeString":"type(int192)"},"typeName":{"id":2526,"name":"int192","nodeType":"ElementaryTypeName","src":"21866:6:13","typeDescriptions":{}}},"id":2529,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"21866:13:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"functionReturnParameters":2506,"id":2530,"nodeType":"Return","src":"21859:20:13"}]},"documentation":{"id":2500,"nodeType":"StructuredDocumentation","src":"21315:350:13","text":" @dev Returns the downcasted int192 from int256, reverting on\n overflow (when the input is less than smallest int192 or\n greater than largest int192).\n Counterpart to Solidity's `int192` operator.\n Requirements:\n - input must fit into 192 bits\n _Available since v4.7._"},"id":2532,"implemented":true,"kind":"function","modifiers":[],"name":"toInt192","nameLocation":"21679:8:13","nodeType":"FunctionDefinition","parameters":{"id":2503,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2502,"mutability":"mutable","name":"value","nameLocation":"21695:5:13","nodeType":"VariableDeclaration","scope":2532,"src":"21688:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2501,"name":"int256","nodeType":"ElementaryTypeName","src":"21688:6:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"21687:14:13"},"returnParameters":{"id":2506,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2505,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2532,"src":"21725:6:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"},"typeName":{"id":2504,"name":"int192","nodeType":"ElementaryTypeName","src":"21725:6:13","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"visibility":"internal"}],"src":"21724:8:13"},"scope":3320,"src":"21670:216:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2564,"nodeType":"Block","src":"22310:153:13","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2555,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":2547,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2541,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2535,"src":"22328:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"expression":{"arguments":[{"id":2544,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"22342:6:13","typeDescriptions":{"typeIdentifier":"t_type$_t_int184_$","typeString":"type(int184)"},"typeName":{"id":2543,"name":"int184","nodeType":"ElementaryTypeName","src":"22342:6:13","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_int184_$","typeString":"type(int184)"}],"id":2542,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"22337:4:13","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":2545,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"22337:12:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_int184","typeString":"type(int184)"}},"id":2546,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"min","nodeType":"MemberAccess","src":"22337:16:13","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"src":"22328:25:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":2554,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2548,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2535,"src":"22357:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":2551,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"22371:6:13","typeDescriptions":{"typeIdentifier":"t_type$_t_int184_$","typeString":"type(int184)"},"typeName":{"id":2550,"name":"int184","nodeType":"ElementaryTypeName","src":"22371:6:13","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_int184_$","typeString":"type(int184)"}],"id":2549,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"22366:4:13","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":2552,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"22366:12:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_int184","typeString":"type(int184)"}},"id":2553,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"22366:16:13","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"src":"22357:25:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"22328:54:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203138342062697473","id":2556,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"22384:41:13","typeDescriptions":{"typeIdentifier":"t_stringliteral_86c53d89b1944d561ecfa42e859033241d1df6ea8d42a57ae02f79d45de4aa75","typeString":"literal_string \"SafeCast: value doesn't fit in 184 bits\""},"value":"SafeCast: value doesn't fit in 184 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_86c53d89b1944d561ecfa42e859033241d1df6ea8d42a57ae02f79d45de4aa75","typeString":"literal_string \"SafeCast: value doesn't fit in 184 bits\""}],"id":2540,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"22320:7:13","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2557,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"22320:106:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2558,"nodeType":"ExpressionStatement","src":"22320:106:13"},{"expression":{"arguments":[{"id":2561,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2535,"src":"22450:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":2560,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"22443:6:13","typeDescriptions":{"typeIdentifier":"t_type$_t_int184_$","typeString":"type(int184)"},"typeName":{"id":2559,"name":"int184","nodeType":"ElementaryTypeName","src":"22443:6:13","typeDescriptions":{}}},"id":2562,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"22443:13:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"functionReturnParameters":2539,"id":2563,"nodeType":"Return","src":"22436:20:13"}]},"documentation":{"id":2533,"nodeType":"StructuredDocumentation","src":"21892:350:13","text":" @dev Returns the downcasted int184 from int256, reverting on\n overflow (when the input is less than smallest int184 or\n greater than largest int184).\n Counterpart to Solidity's `int184` operator.\n Requirements:\n - input must fit into 184 bits\n _Available since v4.7._"},"id":2565,"implemented":true,"kind":"function","modifiers":[],"name":"toInt184","nameLocation":"22256:8:13","nodeType":"FunctionDefinition","parameters":{"id":2536,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2535,"mutability":"mutable","name":"value","nameLocation":"22272:5:13","nodeType":"VariableDeclaration","scope":2565,"src":"22265:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2534,"name":"int256","nodeType":"ElementaryTypeName","src":"22265:6:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"22264:14:13"},"returnParameters":{"id":2539,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2538,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2565,"src":"22302:6:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"},"typeName":{"id":2537,"name":"int184","nodeType":"ElementaryTypeName","src":"22302:6:13","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"visibility":"internal"}],"src":"22301:8:13"},"scope":3320,"src":"22247:216:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2597,"nodeType":"Block","src":"22887:153:13","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2588,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":2580,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2574,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2568,"src":"22905:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"expression":{"arguments":[{"id":2577,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"22919:6:13","typeDescriptions":{"typeIdentifier":"t_type$_t_int176_$","typeString":"type(int176)"},"typeName":{"id":2576,"name":"int176","nodeType":"ElementaryTypeName","src":"22919:6:13","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_int176_$","typeString":"type(int176)"}],"id":2575,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"22914:4:13","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":2578,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"22914:12:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_int176","typeString":"type(int176)"}},"id":2579,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"min","nodeType":"MemberAccess","src":"22914:16:13","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"src":"22905:25:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":2587,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2581,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2568,"src":"22934:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":2584,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"22948:6:13","typeDescriptions":{"typeIdentifier":"t_type$_t_int176_$","typeString":"type(int176)"},"typeName":{"id":2583,"name":"int176","nodeType":"ElementaryTypeName","src":"22948:6:13","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_int176_$","typeString":"type(int176)"}],"id":2582,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"22943:4:13","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":2585,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"22943:12:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_int176","typeString":"type(int176)"}},"id":2586,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"22943:16:13","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"src":"22934:25:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"22905:54:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203137362062697473","id":2589,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"22961:41:13","typeDescriptions":{"typeIdentifier":"t_stringliteral_4069e970f734339c7841e84a1b26f503bff22b76884c1168dc24e2e6af9b1e30","typeString":"literal_string \"SafeCast: value doesn't fit in 176 bits\""},"value":"SafeCast: value doesn't fit in 176 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_4069e970f734339c7841e84a1b26f503bff22b76884c1168dc24e2e6af9b1e30","typeString":"literal_string \"SafeCast: value doesn't fit in 176 bits\""}],"id":2573,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"22897:7:13","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2590,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"22897:106:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2591,"nodeType":"ExpressionStatement","src":"22897:106:13"},{"expression":{"arguments":[{"id":2594,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2568,"src":"23027:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":2593,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"23020:6:13","typeDescriptions":{"typeIdentifier":"t_type$_t_int176_$","typeString":"type(int176)"},"typeName":{"id":2592,"name":"int176","nodeType":"ElementaryTypeName","src":"23020:6:13","typeDescriptions":{}}},"id":2595,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"23020:13:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"functionReturnParameters":2572,"id":2596,"nodeType":"Return","src":"23013:20:13"}]},"documentation":{"id":2566,"nodeType":"StructuredDocumentation","src":"22469:350:13","text":" @dev Returns the downcasted int176 from int256, reverting on\n overflow (when the input is less than smallest int176 or\n greater than largest int176).\n Counterpart to Solidity's `int176` operator.\n Requirements:\n - input must fit into 176 bits\n _Available since v4.7._"},"id":2598,"implemented":true,"kind":"function","modifiers":[],"name":"toInt176","nameLocation":"22833:8:13","nodeType":"FunctionDefinition","parameters":{"id":2569,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2568,"mutability":"mutable","name":"value","nameLocation":"22849:5:13","nodeType":"VariableDeclaration","scope":2598,"src":"22842:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2567,"name":"int256","nodeType":"ElementaryTypeName","src":"22842:6:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"22841:14:13"},"returnParameters":{"id":2572,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2571,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2598,"src":"22879:6:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"},"typeName":{"id":2570,"name":"int176","nodeType":"ElementaryTypeName","src":"22879:6:13","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"visibility":"internal"}],"src":"22878:8:13"},"scope":3320,"src":"22824:216:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2630,"nodeType":"Block","src":"23464:153:13","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2621,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":2613,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2607,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2601,"src":"23482:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"expression":{"arguments":[{"id":2610,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"23496:6:13","typeDescriptions":{"typeIdentifier":"t_type$_t_int168_$","typeString":"type(int168)"},"typeName":{"id":2609,"name":"int168","nodeType":"ElementaryTypeName","src":"23496:6:13","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_int168_$","typeString":"type(int168)"}],"id":2608,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"23491:4:13","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":2611,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"23491:12:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_int168","typeString":"type(int168)"}},"id":2612,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"min","nodeType":"MemberAccess","src":"23491:16:13","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"src":"23482:25:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":2620,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2614,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2601,"src":"23511:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":2617,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"23525:6:13","typeDescriptions":{"typeIdentifier":"t_type$_t_int168_$","typeString":"type(int168)"},"typeName":{"id":2616,"name":"int168","nodeType":"ElementaryTypeName","src":"23525:6:13","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_int168_$","typeString":"type(int168)"}],"id":2615,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"23520:4:13","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":2618,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"23520:12:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_int168","typeString":"type(int168)"}},"id":2619,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"23520:16:13","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"src":"23511:25:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"23482:54:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203136382062697473","id":2622,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"23538:41:13","typeDescriptions":{"typeIdentifier":"t_stringliteral_67ef32a3cbe7b34392347d335b0a7ae95c74a34ca40e4efb58f6c9a3154e85a1","typeString":"literal_string \"SafeCast: value doesn't fit in 168 bits\""},"value":"SafeCast: value doesn't fit in 168 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_67ef32a3cbe7b34392347d335b0a7ae95c74a34ca40e4efb58f6c9a3154e85a1","typeString":"literal_string \"SafeCast: value doesn't fit in 168 bits\""}],"id":2606,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"23474:7:13","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2623,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"23474:106:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2624,"nodeType":"ExpressionStatement","src":"23474:106:13"},{"expression":{"arguments":[{"id":2627,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2601,"src":"23604:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":2626,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"23597:6:13","typeDescriptions":{"typeIdentifier":"t_type$_t_int168_$","typeString":"type(int168)"},"typeName":{"id":2625,"name":"int168","nodeType":"ElementaryTypeName","src":"23597:6:13","typeDescriptions":{}}},"id":2628,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"23597:13:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"functionReturnParameters":2605,"id":2629,"nodeType":"Return","src":"23590:20:13"}]},"documentation":{"id":2599,"nodeType":"StructuredDocumentation","src":"23046:350:13","text":" @dev Returns the downcasted int168 from int256, reverting on\n overflow (when the input is less than smallest int168 or\n greater than largest int168).\n Counterpart to Solidity's `int168` operator.\n Requirements:\n - input must fit into 168 bits\n _Available since v4.7._"},"id":2631,"implemented":true,"kind":"function","modifiers":[],"name":"toInt168","nameLocation":"23410:8:13","nodeType":"FunctionDefinition","parameters":{"id":2602,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2601,"mutability":"mutable","name":"value","nameLocation":"23426:5:13","nodeType":"VariableDeclaration","scope":2631,"src":"23419:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2600,"name":"int256","nodeType":"ElementaryTypeName","src":"23419:6:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"23418:14:13"},"returnParameters":{"id":2605,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2604,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2631,"src":"23456:6:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"},"typeName":{"id":2603,"name":"int168","nodeType":"ElementaryTypeName","src":"23456:6:13","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"visibility":"internal"}],"src":"23455:8:13"},"scope":3320,"src":"23401:216:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2663,"nodeType":"Block","src":"24041:153:13","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2654,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":2646,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2640,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2634,"src":"24059:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"expression":{"arguments":[{"id":2643,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"24073:6:13","typeDescriptions":{"typeIdentifier":"t_type$_t_int160_$","typeString":"type(int160)"},"typeName":{"id":2642,"name":"int160","nodeType":"ElementaryTypeName","src":"24073:6:13","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_int160_$","typeString":"type(int160)"}],"id":2641,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"24068:4:13","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":2644,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"24068:12:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_int160","typeString":"type(int160)"}},"id":2645,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"min","nodeType":"MemberAccess","src":"24068:16:13","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"src":"24059:25:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":2653,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2647,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2634,"src":"24088:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":2650,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"24102:6:13","typeDescriptions":{"typeIdentifier":"t_type$_t_int160_$","typeString":"type(int160)"},"typeName":{"id":2649,"name":"int160","nodeType":"ElementaryTypeName","src":"24102:6:13","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_int160_$","typeString":"type(int160)"}],"id":2648,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"24097:4:13","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":2651,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"24097:12:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_int160","typeString":"type(int160)"}},"id":2652,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"24097:16:13","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"src":"24088:25:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"24059:54:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203136302062697473","id":2655,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"24115:41:13","typeDescriptions":{"typeIdentifier":"t_stringliteral_976ecce9083debfe29d3a99b955facf24b8725f1b964d1a5bb4197ffcd60ab9d","typeString":"literal_string \"SafeCast: value doesn't fit in 160 bits\""},"value":"SafeCast: value doesn't fit in 160 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_976ecce9083debfe29d3a99b955facf24b8725f1b964d1a5bb4197ffcd60ab9d","typeString":"literal_string \"SafeCast: value doesn't fit in 160 bits\""}],"id":2639,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"24051:7:13","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2656,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"24051:106:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2657,"nodeType":"ExpressionStatement","src":"24051:106:13"},{"expression":{"arguments":[{"id":2660,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2634,"src":"24181:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":2659,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"24174:6:13","typeDescriptions":{"typeIdentifier":"t_type$_t_int160_$","typeString":"type(int160)"},"typeName":{"id":2658,"name":"int160","nodeType":"ElementaryTypeName","src":"24174:6:13","typeDescriptions":{}}},"id":2661,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"24174:13:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"functionReturnParameters":2638,"id":2662,"nodeType":"Return","src":"24167:20:13"}]},"documentation":{"id":2632,"nodeType":"StructuredDocumentation","src":"23623:350:13","text":" @dev Returns the downcasted int160 from int256, reverting on\n overflow (when the input is less than smallest int160 or\n greater than largest int160).\n Counterpart to Solidity's `int160` operator.\n Requirements:\n - input must fit into 160 bits\n _Available since v4.7._"},"id":2664,"implemented":true,"kind":"function","modifiers":[],"name":"toInt160","nameLocation":"23987:8:13","nodeType":"FunctionDefinition","parameters":{"id":2635,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2634,"mutability":"mutable","name":"value","nameLocation":"24003:5:13","nodeType":"VariableDeclaration","scope":2664,"src":"23996:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2633,"name":"int256","nodeType":"ElementaryTypeName","src":"23996:6:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"23995:14:13"},"returnParameters":{"id":2638,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2637,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2664,"src":"24033:6:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"},"typeName":{"id":2636,"name":"int160","nodeType":"ElementaryTypeName","src":"24033:6:13","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"visibility":"internal"}],"src":"24032:8:13"},"scope":3320,"src":"23978:216:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2696,"nodeType":"Block","src":"24618:153:13","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2687,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":2679,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2673,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2667,"src":"24636:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"expression":{"arguments":[{"id":2676,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"24650:6:13","typeDescriptions":{"typeIdentifier":"t_type$_t_int152_$","typeString":"type(int152)"},"typeName":{"id":2675,"name":"int152","nodeType":"ElementaryTypeName","src":"24650:6:13","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_int152_$","typeString":"type(int152)"}],"id":2674,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"24645:4:13","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":2677,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"24645:12:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_int152","typeString":"type(int152)"}},"id":2678,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"min","nodeType":"MemberAccess","src":"24645:16:13","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"src":"24636:25:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":2686,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2680,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2667,"src":"24665:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":2683,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"24679:6:13","typeDescriptions":{"typeIdentifier":"t_type$_t_int152_$","typeString":"type(int152)"},"typeName":{"id":2682,"name":"int152","nodeType":"ElementaryTypeName","src":"24679:6:13","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_int152_$","typeString":"type(int152)"}],"id":2681,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"24674:4:13","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":2684,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"24674:12:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_int152","typeString":"type(int152)"}},"id":2685,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"24674:16:13","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"src":"24665:25:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"24636:54:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203135322062697473","id":2688,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"24692:41:13","typeDescriptions":{"typeIdentifier":"t_stringliteral_211cad43a2caf5f01e34af51190b8a7b6f3d9c195bd25586ea12242191b97831","typeString":"literal_string \"SafeCast: value doesn't fit in 152 bits\""},"value":"SafeCast: value doesn't fit in 152 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_211cad43a2caf5f01e34af51190b8a7b6f3d9c195bd25586ea12242191b97831","typeString":"literal_string \"SafeCast: value doesn't fit in 152 bits\""}],"id":2672,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"24628:7:13","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2689,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"24628:106:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2690,"nodeType":"ExpressionStatement","src":"24628:106:13"},{"expression":{"arguments":[{"id":2693,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2667,"src":"24758:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":2692,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"24751:6:13","typeDescriptions":{"typeIdentifier":"t_type$_t_int152_$","typeString":"type(int152)"},"typeName":{"id":2691,"name":"int152","nodeType":"ElementaryTypeName","src":"24751:6:13","typeDescriptions":{}}},"id":2694,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"24751:13:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"functionReturnParameters":2671,"id":2695,"nodeType":"Return","src":"24744:20:13"}]},"documentation":{"id":2665,"nodeType":"StructuredDocumentation","src":"24200:350:13","text":" @dev Returns the downcasted int152 from int256, reverting on\n overflow (when the input is less than smallest int152 or\n greater than largest int152).\n Counterpart to Solidity's `int152` operator.\n Requirements:\n - input must fit into 152 bits\n _Available since v4.7._"},"id":2697,"implemented":true,"kind":"function","modifiers":[],"name":"toInt152","nameLocation":"24564:8:13","nodeType":"FunctionDefinition","parameters":{"id":2668,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2667,"mutability":"mutable","name":"value","nameLocation":"24580:5:13","nodeType":"VariableDeclaration","scope":2697,"src":"24573:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2666,"name":"int256","nodeType":"ElementaryTypeName","src":"24573:6:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"24572:14:13"},"returnParameters":{"id":2671,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2670,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2697,"src":"24610:6:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"},"typeName":{"id":2669,"name":"int152","nodeType":"ElementaryTypeName","src":"24610:6:13","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"visibility":"internal"}],"src":"24609:8:13"},"scope":3320,"src":"24555:216:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2729,"nodeType":"Block","src":"25195:153:13","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2720,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":2712,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2706,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2700,"src":"25213:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"expression":{"arguments":[{"id":2709,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"25227:6:13","typeDescriptions":{"typeIdentifier":"t_type$_t_int144_$","typeString":"type(int144)"},"typeName":{"id":2708,"name":"int144","nodeType":"ElementaryTypeName","src":"25227:6:13","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_int144_$","typeString":"type(int144)"}],"id":2707,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"25222:4:13","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":2710,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"25222:12:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_int144","typeString":"type(int144)"}},"id":2711,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"min","nodeType":"MemberAccess","src":"25222:16:13","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"src":"25213:25:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":2719,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2713,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2700,"src":"25242:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":2716,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"25256:6:13","typeDescriptions":{"typeIdentifier":"t_type$_t_int144_$","typeString":"type(int144)"},"typeName":{"id":2715,"name":"int144","nodeType":"ElementaryTypeName","src":"25256:6:13","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_int144_$","typeString":"type(int144)"}],"id":2714,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"25251:4:13","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":2717,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"25251:12:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_int144","typeString":"type(int144)"}},"id":2718,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"25251:16:13","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"src":"25242:25:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"25213:54:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203134342062697473","id":2721,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"25269:41:13","typeDescriptions":{"typeIdentifier":"t_stringliteral_17d8c5a6d3b2fd2517ba2e4a2ac70a3367cd362448f8338aaa6edf8bfd812bab","typeString":"literal_string \"SafeCast: value doesn't fit in 144 bits\""},"value":"SafeCast: value doesn't fit in 144 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_17d8c5a6d3b2fd2517ba2e4a2ac70a3367cd362448f8338aaa6edf8bfd812bab","typeString":"literal_string \"SafeCast: value doesn't fit in 144 bits\""}],"id":2705,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"25205:7:13","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2722,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"25205:106:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2723,"nodeType":"ExpressionStatement","src":"25205:106:13"},{"expression":{"arguments":[{"id":2726,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2700,"src":"25335:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":2725,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"25328:6:13","typeDescriptions":{"typeIdentifier":"t_type$_t_int144_$","typeString":"type(int144)"},"typeName":{"id":2724,"name":"int144","nodeType":"ElementaryTypeName","src":"25328:6:13","typeDescriptions":{}}},"id":2727,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"25328:13:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"functionReturnParameters":2704,"id":2728,"nodeType":"Return","src":"25321:20:13"}]},"documentation":{"id":2698,"nodeType":"StructuredDocumentation","src":"24777:350:13","text":" @dev Returns the downcasted int144 from int256, reverting on\n overflow (when the input is less than smallest int144 or\n greater than largest int144).\n Counterpart to Solidity's `int144` operator.\n Requirements:\n - input must fit into 144 bits\n _Available since v4.7._"},"id":2730,"implemented":true,"kind":"function","modifiers":[],"name":"toInt144","nameLocation":"25141:8:13","nodeType":"FunctionDefinition","parameters":{"id":2701,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2700,"mutability":"mutable","name":"value","nameLocation":"25157:5:13","nodeType":"VariableDeclaration","scope":2730,"src":"25150:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2699,"name":"int256","nodeType":"ElementaryTypeName","src":"25150:6:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"25149:14:13"},"returnParameters":{"id":2704,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2703,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2730,"src":"25187:6:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"},"typeName":{"id":2702,"name":"int144","nodeType":"ElementaryTypeName","src":"25187:6:13","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"visibility":"internal"}],"src":"25186:8:13"},"scope":3320,"src":"25132:216:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2762,"nodeType":"Block","src":"25772:153:13","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2753,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":2745,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2739,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2733,"src":"25790:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"expression":{"arguments":[{"id":2742,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"25804:6:13","typeDescriptions":{"typeIdentifier":"t_type$_t_int136_$","typeString":"type(int136)"},"typeName":{"id":2741,"name":"int136","nodeType":"ElementaryTypeName","src":"25804:6:13","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_int136_$","typeString":"type(int136)"}],"id":2740,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"25799:4:13","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":2743,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"25799:12:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_int136","typeString":"type(int136)"}},"id":2744,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"min","nodeType":"MemberAccess","src":"25799:16:13","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"src":"25790:25:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":2752,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2746,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2733,"src":"25819:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":2749,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"25833:6:13","typeDescriptions":{"typeIdentifier":"t_type$_t_int136_$","typeString":"type(int136)"},"typeName":{"id":2748,"name":"int136","nodeType":"ElementaryTypeName","src":"25833:6:13","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_int136_$","typeString":"type(int136)"}],"id":2747,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"25828:4:13","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":2750,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"25828:12:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_int136","typeString":"type(int136)"}},"id":2751,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"25828:16:13","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"src":"25819:25:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"25790:54:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203133362062697473","id":2754,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"25846:41:13","typeDescriptions":{"typeIdentifier":"t_stringliteral_8b1f81e2e2913e1cee9dba7bcd9837bbf8a8122edaac4afc578271db3c25a56a","typeString":"literal_string \"SafeCast: value doesn't fit in 136 bits\""},"value":"SafeCast: value doesn't fit in 136 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_8b1f81e2e2913e1cee9dba7bcd9837bbf8a8122edaac4afc578271db3c25a56a","typeString":"literal_string \"SafeCast: value doesn't fit in 136 bits\""}],"id":2738,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"25782:7:13","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2755,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"25782:106:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2756,"nodeType":"ExpressionStatement","src":"25782:106:13"},{"expression":{"arguments":[{"id":2759,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2733,"src":"25912:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":2758,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"25905:6:13","typeDescriptions":{"typeIdentifier":"t_type$_t_int136_$","typeString":"type(int136)"},"typeName":{"id":2757,"name":"int136","nodeType":"ElementaryTypeName","src":"25905:6:13","typeDescriptions":{}}},"id":2760,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"25905:13:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"functionReturnParameters":2737,"id":2761,"nodeType":"Return","src":"25898:20:13"}]},"documentation":{"id":2731,"nodeType":"StructuredDocumentation","src":"25354:350:13","text":" @dev Returns the downcasted int136 from int256, reverting on\n overflow (when the input is less than smallest int136 or\n greater than largest int136).\n Counterpart to Solidity's `int136` operator.\n Requirements:\n - input must fit into 136 bits\n _Available since v4.7._"},"id":2763,"implemented":true,"kind":"function","modifiers":[],"name":"toInt136","nameLocation":"25718:8:13","nodeType":"FunctionDefinition","parameters":{"id":2734,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2733,"mutability":"mutable","name":"value","nameLocation":"25734:5:13","nodeType":"VariableDeclaration","scope":2763,"src":"25727:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2732,"name":"int256","nodeType":"ElementaryTypeName","src":"25727:6:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"25726:14:13"},"returnParameters":{"id":2737,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2736,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2763,"src":"25764:6:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"},"typeName":{"id":2735,"name":"int136","nodeType":"ElementaryTypeName","src":"25764:6:13","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"visibility":"internal"}],"src":"25763:8:13"},"scope":3320,"src":"25709:216:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2795,"nodeType":"Block","src":"26349:153:13","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2786,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":2778,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2772,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2766,"src":"26367:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"expression":{"arguments":[{"id":2775,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"26381:6:13","typeDescriptions":{"typeIdentifier":"t_type$_t_int128_$","typeString":"type(int128)"},"typeName":{"id":2774,"name":"int128","nodeType":"ElementaryTypeName","src":"26381:6:13","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_int128_$","typeString":"type(int128)"}],"id":2773,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"26376:4:13","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":2776,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"26376:12:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_int128","typeString":"type(int128)"}},"id":2777,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"min","nodeType":"MemberAccess","src":"26376:16:13","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"src":"26367:25:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":2785,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2779,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2766,"src":"26396:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":2782,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"26410:6:13","typeDescriptions":{"typeIdentifier":"t_type$_t_int128_$","typeString":"type(int128)"},"typeName":{"id":2781,"name":"int128","nodeType":"ElementaryTypeName","src":"26410:6:13","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_int128_$","typeString":"type(int128)"}],"id":2780,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"26405:4:13","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":2783,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"26405:12:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_int128","typeString":"type(int128)"}},"id":2784,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"26405:16:13","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"src":"26396:25:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"26367:54:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203132382062697473","id":2787,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"26423:41:13","typeDescriptions":{"typeIdentifier":"t_stringliteral_47a1e201974f94d3d1a31c8b08ae18c6966c758bdcd4400020012b98cc55426c","typeString":"literal_string \"SafeCast: value doesn't fit in 128 bits\""},"value":"SafeCast: value doesn't fit in 128 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_47a1e201974f94d3d1a31c8b08ae18c6966c758bdcd4400020012b98cc55426c","typeString":"literal_string \"SafeCast: value doesn't fit in 128 bits\""}],"id":2771,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"26359:7:13","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2788,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"26359:106:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2789,"nodeType":"ExpressionStatement","src":"26359:106:13"},{"expression":{"arguments":[{"id":2792,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2766,"src":"26489:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":2791,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"26482:6:13","typeDescriptions":{"typeIdentifier":"t_type$_t_int128_$","typeString":"type(int128)"},"typeName":{"id":2790,"name":"int128","nodeType":"ElementaryTypeName","src":"26482:6:13","typeDescriptions":{}}},"id":2793,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"26482:13:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"functionReturnParameters":2770,"id":2794,"nodeType":"Return","src":"26475:20:13"}]},"documentation":{"id":2764,"nodeType":"StructuredDocumentation","src":"25931:350:13","text":" @dev Returns the downcasted int128 from int256, reverting on\n overflow (when the input is less than smallest int128 or\n greater than largest int128).\n Counterpart to Solidity's `int128` operator.\n Requirements:\n - input must fit into 128 bits\n _Available since v3.1._"},"id":2796,"implemented":true,"kind":"function","modifiers":[],"name":"toInt128","nameLocation":"26295:8:13","nodeType":"FunctionDefinition","parameters":{"id":2767,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2766,"mutability":"mutable","name":"value","nameLocation":"26311:5:13","nodeType":"VariableDeclaration","scope":2796,"src":"26304:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2765,"name":"int256","nodeType":"ElementaryTypeName","src":"26304:6:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"26303:14:13"},"returnParameters":{"id":2770,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2769,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2796,"src":"26341:6:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"},"typeName":{"id":2768,"name":"int128","nodeType":"ElementaryTypeName","src":"26341:6:13","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"visibility":"internal"}],"src":"26340:8:13"},"scope":3320,"src":"26286:216:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2828,"nodeType":"Block","src":"26926:153:13","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2819,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":2811,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2805,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2799,"src":"26944:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"expression":{"arguments":[{"id":2808,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"26958:6:13","typeDescriptions":{"typeIdentifier":"t_type$_t_int120_$","typeString":"type(int120)"},"typeName":{"id":2807,"name":"int120","nodeType":"ElementaryTypeName","src":"26958:6:13","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_int120_$","typeString":"type(int120)"}],"id":2806,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"26953:4:13","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":2809,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"26953:12:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_int120","typeString":"type(int120)"}},"id":2810,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"min","nodeType":"MemberAccess","src":"26953:16:13","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"src":"26944:25:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":2818,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2812,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2799,"src":"26973:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":2815,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"26987:6:13","typeDescriptions":{"typeIdentifier":"t_type$_t_int120_$","typeString":"type(int120)"},"typeName":{"id":2814,"name":"int120","nodeType":"ElementaryTypeName","src":"26987:6:13","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_int120_$","typeString":"type(int120)"}],"id":2813,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"26982:4:13","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":2816,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"26982:12:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_int120","typeString":"type(int120)"}},"id":2817,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"26982:16:13","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"src":"26973:25:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"26944:54:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203132302062697473","id":2820,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"27000:41:13","typeDescriptions":{"typeIdentifier":"t_stringliteral_3c40c26bb27060cce77002ca0c426dcc1bef2d367c195ca2eb24bd8b2cc1bb09","typeString":"literal_string \"SafeCast: value doesn't fit in 120 bits\""},"value":"SafeCast: value doesn't fit in 120 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_3c40c26bb27060cce77002ca0c426dcc1bef2d367c195ca2eb24bd8b2cc1bb09","typeString":"literal_string \"SafeCast: value doesn't fit in 120 bits\""}],"id":2804,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"26936:7:13","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2821,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"26936:106:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2822,"nodeType":"ExpressionStatement","src":"26936:106:13"},{"expression":{"arguments":[{"id":2825,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2799,"src":"27066:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":2824,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"27059:6:13","typeDescriptions":{"typeIdentifier":"t_type$_t_int120_$","typeString":"type(int120)"},"typeName":{"id":2823,"name":"int120","nodeType":"ElementaryTypeName","src":"27059:6:13","typeDescriptions":{}}},"id":2826,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"27059:13:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"functionReturnParameters":2803,"id":2827,"nodeType":"Return","src":"27052:20:13"}]},"documentation":{"id":2797,"nodeType":"StructuredDocumentation","src":"26508:350:13","text":" @dev Returns the downcasted int120 from int256, reverting on\n overflow (when the input is less than smallest int120 or\n greater than largest int120).\n Counterpart to Solidity's `int120` operator.\n Requirements:\n - input must fit into 120 bits\n _Available since v4.7._"},"id":2829,"implemented":true,"kind":"function","modifiers":[],"name":"toInt120","nameLocation":"26872:8:13","nodeType":"FunctionDefinition","parameters":{"id":2800,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2799,"mutability":"mutable","name":"value","nameLocation":"26888:5:13","nodeType":"VariableDeclaration","scope":2829,"src":"26881:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2798,"name":"int256","nodeType":"ElementaryTypeName","src":"26881:6:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"26880:14:13"},"returnParameters":{"id":2803,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2802,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2829,"src":"26918:6:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"},"typeName":{"id":2801,"name":"int120","nodeType":"ElementaryTypeName","src":"26918:6:13","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"visibility":"internal"}],"src":"26917:8:13"},"scope":3320,"src":"26863:216:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2861,"nodeType":"Block","src":"27503:153:13","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2852,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":2844,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2838,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2832,"src":"27521:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"expression":{"arguments":[{"id":2841,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"27535:6:13","typeDescriptions":{"typeIdentifier":"t_type$_t_int112_$","typeString":"type(int112)"},"typeName":{"id":2840,"name":"int112","nodeType":"ElementaryTypeName","src":"27535:6:13","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_int112_$","typeString":"type(int112)"}],"id":2839,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"27530:4:13","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":2842,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"27530:12:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_int112","typeString":"type(int112)"}},"id":2843,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"min","nodeType":"MemberAccess","src":"27530:16:13","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"src":"27521:25:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":2851,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2845,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2832,"src":"27550:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":2848,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"27564:6:13","typeDescriptions":{"typeIdentifier":"t_type$_t_int112_$","typeString":"type(int112)"},"typeName":{"id":2847,"name":"int112","nodeType":"ElementaryTypeName","src":"27564:6:13","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_int112_$","typeString":"type(int112)"}],"id":2846,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"27559:4:13","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":2849,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"27559:12:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_int112","typeString":"type(int112)"}},"id":2850,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"27559:16:13","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"src":"27550:25:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"27521:54:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203131322062697473","id":2853,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"27577:41:13","typeDescriptions":{"typeIdentifier":"t_stringliteral_45659ae152ef697531e1c1115de07c87af91ac22466c3e76b808821799776efd","typeString":"literal_string \"SafeCast: value doesn't fit in 112 bits\""},"value":"SafeCast: value doesn't fit in 112 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_45659ae152ef697531e1c1115de07c87af91ac22466c3e76b808821799776efd","typeString":"literal_string \"SafeCast: value doesn't fit in 112 bits\""}],"id":2837,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"27513:7:13","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2854,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"27513:106:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2855,"nodeType":"ExpressionStatement","src":"27513:106:13"},{"expression":{"arguments":[{"id":2858,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2832,"src":"27643:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":2857,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"27636:6:13","typeDescriptions":{"typeIdentifier":"t_type$_t_int112_$","typeString":"type(int112)"},"typeName":{"id":2856,"name":"int112","nodeType":"ElementaryTypeName","src":"27636:6:13","typeDescriptions":{}}},"id":2859,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"27636:13:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"functionReturnParameters":2836,"id":2860,"nodeType":"Return","src":"27629:20:13"}]},"documentation":{"id":2830,"nodeType":"StructuredDocumentation","src":"27085:350:13","text":" @dev Returns the downcasted int112 from int256, reverting on\n overflow (when the input is less than smallest int112 or\n greater than largest int112).\n Counterpart to Solidity's `int112` operator.\n Requirements:\n - input must fit into 112 bits\n _Available since v4.7._"},"id":2862,"implemented":true,"kind":"function","modifiers":[],"name":"toInt112","nameLocation":"27449:8:13","nodeType":"FunctionDefinition","parameters":{"id":2833,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2832,"mutability":"mutable","name":"value","nameLocation":"27465:5:13","nodeType":"VariableDeclaration","scope":2862,"src":"27458:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2831,"name":"int256","nodeType":"ElementaryTypeName","src":"27458:6:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"27457:14:13"},"returnParameters":{"id":2836,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2835,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2862,"src":"27495:6:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"},"typeName":{"id":2834,"name":"int112","nodeType":"ElementaryTypeName","src":"27495:6:13","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"visibility":"internal"}],"src":"27494:8:13"},"scope":3320,"src":"27440:216:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2894,"nodeType":"Block","src":"28080:153:13","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2885,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":2877,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2871,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2865,"src":"28098:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"expression":{"arguments":[{"id":2874,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"28112:6:13","typeDescriptions":{"typeIdentifier":"t_type$_t_int104_$","typeString":"type(int104)"},"typeName":{"id":2873,"name":"int104","nodeType":"ElementaryTypeName","src":"28112:6:13","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_int104_$","typeString":"type(int104)"}],"id":2872,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"28107:4:13","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":2875,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"28107:12:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_int104","typeString":"type(int104)"}},"id":2876,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"min","nodeType":"MemberAccess","src":"28107:16:13","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"src":"28098:25:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":2884,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2878,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2865,"src":"28127:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":2881,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"28141:6:13","typeDescriptions":{"typeIdentifier":"t_type$_t_int104_$","typeString":"type(int104)"},"typeName":{"id":2880,"name":"int104","nodeType":"ElementaryTypeName","src":"28141:6:13","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_int104_$","typeString":"type(int104)"}],"id":2879,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"28136:4:13","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":2882,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"28136:12:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_int104","typeString":"type(int104)"}},"id":2883,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"28136:16:13","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"src":"28127:25:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"28098:54:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203130342062697473","id":2886,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"28154:41:13","typeDescriptions":{"typeIdentifier":"t_stringliteral_5d7f3e1b7e9f9a06fded6b093c6fd1473ca0a14cc4bb683db904e803e2482981","typeString":"literal_string \"SafeCast: value doesn't fit in 104 bits\""},"value":"SafeCast: value doesn't fit in 104 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_5d7f3e1b7e9f9a06fded6b093c6fd1473ca0a14cc4bb683db904e803e2482981","typeString":"literal_string \"SafeCast: value doesn't fit in 104 bits\""}],"id":2870,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"28090:7:13","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2887,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"28090:106:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2888,"nodeType":"ExpressionStatement","src":"28090:106:13"},{"expression":{"arguments":[{"id":2891,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2865,"src":"28220:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":2890,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"28213:6:13","typeDescriptions":{"typeIdentifier":"t_type$_t_int104_$","typeString":"type(int104)"},"typeName":{"id":2889,"name":"int104","nodeType":"ElementaryTypeName","src":"28213:6:13","typeDescriptions":{}}},"id":2892,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"28213:13:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"functionReturnParameters":2869,"id":2893,"nodeType":"Return","src":"28206:20:13"}]},"documentation":{"id":2863,"nodeType":"StructuredDocumentation","src":"27662:350:13","text":" @dev Returns the downcasted int104 from int256, reverting on\n overflow (when the input is less than smallest int104 or\n greater than largest int104).\n Counterpart to Solidity's `int104` operator.\n Requirements:\n - input must fit into 104 bits\n _Available since v4.7._"},"id":2895,"implemented":true,"kind":"function","modifiers":[],"name":"toInt104","nameLocation":"28026:8:13","nodeType":"FunctionDefinition","parameters":{"id":2866,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2865,"mutability":"mutable","name":"value","nameLocation":"28042:5:13","nodeType":"VariableDeclaration","scope":2895,"src":"28035:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2864,"name":"int256","nodeType":"ElementaryTypeName","src":"28035:6:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"28034:14:13"},"returnParameters":{"id":2869,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2868,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2895,"src":"28072:6:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"},"typeName":{"id":2867,"name":"int104","nodeType":"ElementaryTypeName","src":"28072:6:13","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"visibility":"internal"}],"src":"28071:8:13"},"scope":3320,"src":"28017:216:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2927,"nodeType":"Block","src":"28650:149:13","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2918,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":2910,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2904,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2898,"src":"28668:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"expression":{"arguments":[{"id":2907,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"28682:5:13","typeDescriptions":{"typeIdentifier":"t_type$_t_int96_$","typeString":"type(int96)"},"typeName":{"id":2906,"name":"int96","nodeType":"ElementaryTypeName","src":"28682:5:13","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_int96_$","typeString":"type(int96)"}],"id":2905,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"28677:4:13","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":2908,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"28677:11:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_int96","typeString":"type(int96)"}},"id":2909,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"min","nodeType":"MemberAccess","src":"28677:15:13","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"src":"28668:24:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":2917,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2911,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2898,"src":"28696:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":2914,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"28710:5:13","typeDescriptions":{"typeIdentifier":"t_type$_t_int96_$","typeString":"type(int96)"},"typeName":{"id":2913,"name":"int96","nodeType":"ElementaryTypeName","src":"28710:5:13","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_int96_$","typeString":"type(int96)"}],"id":2912,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"28705:4:13","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":2915,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"28705:11:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_int96","typeString":"type(int96)"}},"id":2916,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"28705:15:13","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"src":"28696:24:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"28668:52:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e2039362062697473","id":2919,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"28722:40:13","typeDescriptions":{"typeIdentifier":"t_stringliteral_06d20189090e973729391526269baef79c35dd621633195648e5f8309eef9e19","typeString":"literal_string \"SafeCast: value doesn't fit in 96 bits\""},"value":"SafeCast: value doesn't fit in 96 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_06d20189090e973729391526269baef79c35dd621633195648e5f8309eef9e19","typeString":"literal_string \"SafeCast: value doesn't fit in 96 bits\""}],"id":2903,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"28660:7:13","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2920,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"28660:103:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2921,"nodeType":"ExpressionStatement","src":"28660:103:13"},{"expression":{"arguments":[{"id":2924,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2898,"src":"28786:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":2923,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"28780:5:13","typeDescriptions":{"typeIdentifier":"t_type$_t_int96_$","typeString":"type(int96)"},"typeName":{"id":2922,"name":"int96","nodeType":"ElementaryTypeName","src":"28780:5:13","typeDescriptions":{}}},"id":2925,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"28780:12:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"functionReturnParameters":2902,"id":2926,"nodeType":"Return","src":"28773:19:13"}]},"documentation":{"id":2896,"nodeType":"StructuredDocumentation","src":"28239:345:13","text":" @dev Returns the downcasted int96 from int256, reverting on\n overflow (when the input is less than smallest int96 or\n greater than largest int96).\n Counterpart to Solidity's `int96` operator.\n Requirements:\n - input must fit into 96 bits\n _Available since v4.7._"},"id":2928,"implemented":true,"kind":"function","modifiers":[],"name":"toInt96","nameLocation":"28598:7:13","nodeType":"FunctionDefinition","parameters":{"id":2899,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2898,"mutability":"mutable","name":"value","nameLocation":"28613:5:13","nodeType":"VariableDeclaration","scope":2928,"src":"28606:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2897,"name":"int256","nodeType":"ElementaryTypeName","src":"28606:6:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"28605:14:13"},"returnParameters":{"id":2902,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2901,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2928,"src":"28643:5:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"},"typeName":{"id":2900,"name":"int96","nodeType":"ElementaryTypeName","src":"28643:5:13","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"visibility":"internal"}],"src":"28642:7:13"},"scope":3320,"src":"28589:210:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2960,"nodeType":"Block","src":"29216:149:13","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2951,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":2943,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2937,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2931,"src":"29234:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"expression":{"arguments":[{"id":2940,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"29248:5:13","typeDescriptions":{"typeIdentifier":"t_type$_t_int88_$","typeString":"type(int88)"},"typeName":{"id":2939,"name":"int88","nodeType":"ElementaryTypeName","src":"29248:5:13","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_int88_$","typeString":"type(int88)"}],"id":2938,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"29243:4:13","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":2941,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"29243:11:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_int88","typeString":"type(int88)"}},"id":2942,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"min","nodeType":"MemberAccess","src":"29243:15:13","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"src":"29234:24:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":2950,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2944,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2931,"src":"29262:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":2947,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"29276:5:13","typeDescriptions":{"typeIdentifier":"t_type$_t_int88_$","typeString":"type(int88)"},"typeName":{"id":2946,"name":"int88","nodeType":"ElementaryTypeName","src":"29276:5:13","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_int88_$","typeString":"type(int88)"}],"id":2945,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"29271:4:13","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":2948,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"29271:11:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_int88","typeString":"type(int88)"}},"id":2949,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"29271:15:13","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"src":"29262:24:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"29234:52:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e2038382062697473","id":2952,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"29288:40:13","typeDescriptions":{"typeIdentifier":"t_stringliteral_ae080bd7a76a46f0a0caf00941bc2cdf6002799ca2813a3af7295019576d715d","typeString":"literal_string \"SafeCast: value doesn't fit in 88 bits\""},"value":"SafeCast: value doesn't fit in 88 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_ae080bd7a76a46f0a0caf00941bc2cdf6002799ca2813a3af7295019576d715d","typeString":"literal_string \"SafeCast: value doesn't fit in 88 bits\""}],"id":2936,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"29226:7:13","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2953,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"29226:103:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2954,"nodeType":"ExpressionStatement","src":"29226:103:13"},{"expression":{"arguments":[{"id":2957,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2931,"src":"29352:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":2956,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"29346:5:13","typeDescriptions":{"typeIdentifier":"t_type$_t_int88_$","typeString":"type(int88)"},"typeName":{"id":2955,"name":"int88","nodeType":"ElementaryTypeName","src":"29346:5:13","typeDescriptions":{}}},"id":2958,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"29346:12:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"functionReturnParameters":2935,"id":2959,"nodeType":"Return","src":"29339:19:13"}]},"documentation":{"id":2929,"nodeType":"StructuredDocumentation","src":"28805:345:13","text":" @dev Returns the downcasted int88 from int256, reverting on\n overflow (when the input is less than smallest int88 or\n greater than largest int88).\n Counterpart to Solidity's `int88` operator.\n Requirements:\n - input must fit into 88 bits\n _Available since v4.7._"},"id":2961,"implemented":true,"kind":"function","modifiers":[],"name":"toInt88","nameLocation":"29164:7:13","nodeType":"FunctionDefinition","parameters":{"id":2932,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2931,"mutability":"mutable","name":"value","nameLocation":"29179:5:13","nodeType":"VariableDeclaration","scope":2961,"src":"29172:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2930,"name":"int256","nodeType":"ElementaryTypeName","src":"29172:6:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"29171:14:13"},"returnParameters":{"id":2935,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2934,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2961,"src":"29209:5:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"},"typeName":{"id":2933,"name":"int88","nodeType":"ElementaryTypeName","src":"29209:5:13","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"visibility":"internal"}],"src":"29208:7:13"},"scope":3320,"src":"29155:210:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2993,"nodeType":"Block","src":"29782:149:13","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2984,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":2976,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2970,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2964,"src":"29800:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"expression":{"arguments":[{"id":2973,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"29814:5:13","typeDescriptions":{"typeIdentifier":"t_type$_t_int80_$","typeString":"type(int80)"},"typeName":{"id":2972,"name":"int80","nodeType":"ElementaryTypeName","src":"29814:5:13","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_int80_$","typeString":"type(int80)"}],"id":2971,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"29809:4:13","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":2974,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"29809:11:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_int80","typeString":"type(int80)"}},"id":2975,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"min","nodeType":"MemberAccess","src":"29809:15:13","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"src":"29800:24:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":2983,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2977,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2964,"src":"29828:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":2980,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"29842:5:13","typeDescriptions":{"typeIdentifier":"t_type$_t_int80_$","typeString":"type(int80)"},"typeName":{"id":2979,"name":"int80","nodeType":"ElementaryTypeName","src":"29842:5:13","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_int80_$","typeString":"type(int80)"}],"id":2978,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"29837:4:13","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":2981,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"29837:11:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_int80","typeString":"type(int80)"}},"id":2982,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"29837:15:13","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"src":"29828:24:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"29800:52:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e2038302062697473","id":2985,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"29854:40:13","typeDescriptions":{"typeIdentifier":"t_stringliteral_3cba87c71fade7d3cd7b673c159aab98afc040a5369691a33559d905d20ab5d1","typeString":"literal_string \"SafeCast: value doesn't fit in 80 bits\""},"value":"SafeCast: value doesn't fit in 80 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_3cba87c71fade7d3cd7b673c159aab98afc040a5369691a33559d905d20ab5d1","typeString":"literal_string \"SafeCast: value doesn't fit in 80 bits\""}],"id":2969,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"29792:7:13","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2986,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"29792:103:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2987,"nodeType":"ExpressionStatement","src":"29792:103:13"},{"expression":{"arguments":[{"id":2990,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2964,"src":"29918:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":2989,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"29912:5:13","typeDescriptions":{"typeIdentifier":"t_type$_t_int80_$","typeString":"type(int80)"},"typeName":{"id":2988,"name":"int80","nodeType":"ElementaryTypeName","src":"29912:5:13","typeDescriptions":{}}},"id":2991,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"29912:12:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"functionReturnParameters":2968,"id":2992,"nodeType":"Return","src":"29905:19:13"}]},"documentation":{"id":2962,"nodeType":"StructuredDocumentation","src":"29371:345:13","text":" @dev Returns the downcasted int80 from int256, reverting on\n overflow (when the input is less than smallest int80 or\n greater than largest int80).\n Counterpart to Solidity's `int80` operator.\n Requirements:\n - input must fit into 80 bits\n _Available since v4.7._"},"id":2994,"implemented":true,"kind":"function","modifiers":[],"name":"toInt80","nameLocation":"29730:7:13","nodeType":"FunctionDefinition","parameters":{"id":2965,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2964,"mutability":"mutable","name":"value","nameLocation":"29745:5:13","nodeType":"VariableDeclaration","scope":2994,"src":"29738:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2963,"name":"int256","nodeType":"ElementaryTypeName","src":"29738:6:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"29737:14:13"},"returnParameters":{"id":2968,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2967,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2994,"src":"29775:5:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"},"typeName":{"id":2966,"name":"int80","nodeType":"ElementaryTypeName","src":"29775:5:13","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"visibility":"internal"}],"src":"29774:7:13"},"scope":3320,"src":"29721:210:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3026,"nodeType":"Block","src":"30348:149:13","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3017,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3009,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3003,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2997,"src":"30366:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"expression":{"arguments":[{"id":3006,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"30380:5:13","typeDescriptions":{"typeIdentifier":"t_type$_t_int72_$","typeString":"type(int72)"},"typeName":{"id":3005,"name":"int72","nodeType":"ElementaryTypeName","src":"30380:5:13","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_int72_$","typeString":"type(int72)"}],"id":3004,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"30375:4:13","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":3007,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"30375:11:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_int72","typeString":"type(int72)"}},"id":3008,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"min","nodeType":"MemberAccess","src":"30375:15:13","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"src":"30366:24:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3016,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3010,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2997,"src":"30394:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":3013,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"30408:5:13","typeDescriptions":{"typeIdentifier":"t_type$_t_int72_$","typeString":"type(int72)"},"typeName":{"id":3012,"name":"int72","nodeType":"ElementaryTypeName","src":"30408:5:13","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_int72_$","typeString":"type(int72)"}],"id":3011,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"30403:4:13","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":3014,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"30403:11:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_int72","typeString":"type(int72)"}},"id":3015,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"30403:15:13","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"src":"30394:24:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"30366:52:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e2037322062697473","id":3018,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"30420:40:13","typeDescriptions":{"typeIdentifier":"t_stringliteral_71584237cc5250b8f417982144a947efe8f4c76feba008ff32ac480e69d60606","typeString":"literal_string \"SafeCast: value doesn't fit in 72 bits\""},"value":"SafeCast: value doesn't fit in 72 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_71584237cc5250b8f417982144a947efe8f4c76feba008ff32ac480e69d60606","typeString":"literal_string \"SafeCast: value doesn't fit in 72 bits\""}],"id":3002,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"30358:7:13","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3019,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"30358:103:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3020,"nodeType":"ExpressionStatement","src":"30358:103:13"},{"expression":{"arguments":[{"id":3023,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2997,"src":"30484:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":3022,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"30478:5:13","typeDescriptions":{"typeIdentifier":"t_type$_t_int72_$","typeString":"type(int72)"},"typeName":{"id":3021,"name":"int72","nodeType":"ElementaryTypeName","src":"30478:5:13","typeDescriptions":{}}},"id":3024,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"30478:12:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"functionReturnParameters":3001,"id":3025,"nodeType":"Return","src":"30471:19:13"}]},"documentation":{"id":2995,"nodeType":"StructuredDocumentation","src":"29937:345:13","text":" @dev Returns the downcasted int72 from int256, reverting on\n overflow (when the input is less than smallest int72 or\n greater than largest int72).\n Counterpart to Solidity's `int72` operator.\n Requirements:\n - input must fit into 72 bits\n _Available since v4.7._"},"id":3027,"implemented":true,"kind":"function","modifiers":[],"name":"toInt72","nameLocation":"30296:7:13","nodeType":"FunctionDefinition","parameters":{"id":2998,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2997,"mutability":"mutable","name":"value","nameLocation":"30311:5:13","nodeType":"VariableDeclaration","scope":3027,"src":"30304:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2996,"name":"int256","nodeType":"ElementaryTypeName","src":"30304:6:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"30303:14:13"},"returnParameters":{"id":3001,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3000,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3027,"src":"30341:5:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"},"typeName":{"id":2999,"name":"int72","nodeType":"ElementaryTypeName","src":"30341:5:13","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"visibility":"internal"}],"src":"30340:7:13"},"scope":3320,"src":"30287:210:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3059,"nodeType":"Block","src":"30914:149:13","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3050,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3042,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3036,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3030,"src":"30932:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"expression":{"arguments":[{"id":3039,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"30946:5:13","typeDescriptions":{"typeIdentifier":"t_type$_t_int64_$","typeString":"type(int64)"},"typeName":{"id":3038,"name":"int64","nodeType":"ElementaryTypeName","src":"30946:5:13","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_int64_$","typeString":"type(int64)"}],"id":3037,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"30941:4:13","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":3040,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"30941:11:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_int64","typeString":"type(int64)"}},"id":3041,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"min","nodeType":"MemberAccess","src":"30941:15:13","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"src":"30932:24:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3049,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3043,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3030,"src":"30960:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":3046,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"30974:5:13","typeDescriptions":{"typeIdentifier":"t_type$_t_int64_$","typeString":"type(int64)"},"typeName":{"id":3045,"name":"int64","nodeType":"ElementaryTypeName","src":"30974:5:13","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_int64_$","typeString":"type(int64)"}],"id":3044,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"30969:4:13","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":3047,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"30969:11:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_int64","typeString":"type(int64)"}},"id":3048,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"30969:15:13","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"src":"30960:24:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"30932:52:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e2036342062697473","id":3051,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"30986:40:13","typeDescriptions":{"typeIdentifier":"t_stringliteral_93ae0c6bf6ffaece591a770b1865daa9f65157e541970aa9d8dc5f89a9490939","typeString":"literal_string \"SafeCast: value doesn't fit in 64 bits\""},"value":"SafeCast: value doesn't fit in 64 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_93ae0c6bf6ffaece591a770b1865daa9f65157e541970aa9d8dc5f89a9490939","typeString":"literal_string \"SafeCast: value doesn't fit in 64 bits\""}],"id":3035,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"30924:7:13","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3052,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"30924:103:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3053,"nodeType":"ExpressionStatement","src":"30924:103:13"},{"expression":{"arguments":[{"id":3056,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3030,"src":"31050:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":3055,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"31044:5:13","typeDescriptions":{"typeIdentifier":"t_type$_t_int64_$","typeString":"type(int64)"},"typeName":{"id":3054,"name":"int64","nodeType":"ElementaryTypeName","src":"31044:5:13","typeDescriptions":{}}},"id":3057,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"31044:12:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"functionReturnParameters":3034,"id":3058,"nodeType":"Return","src":"31037:19:13"}]},"documentation":{"id":3028,"nodeType":"StructuredDocumentation","src":"30503:345:13","text":" @dev Returns the downcasted int64 from int256, reverting on\n overflow (when the input is less than smallest int64 or\n greater than largest int64).\n Counterpart to Solidity's `int64` operator.\n Requirements:\n - input must fit into 64 bits\n _Available since v3.1._"},"id":3060,"implemented":true,"kind":"function","modifiers":[],"name":"toInt64","nameLocation":"30862:7:13","nodeType":"FunctionDefinition","parameters":{"id":3031,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3030,"mutability":"mutable","name":"value","nameLocation":"30877:5:13","nodeType":"VariableDeclaration","scope":3060,"src":"30870:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3029,"name":"int256","nodeType":"ElementaryTypeName","src":"30870:6:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"30869:14:13"},"returnParameters":{"id":3034,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3033,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3060,"src":"30907:5:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"},"typeName":{"id":3032,"name":"int64","nodeType":"ElementaryTypeName","src":"30907:5:13","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"visibility":"internal"}],"src":"30906:7:13"},"scope":3320,"src":"30853:210:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3092,"nodeType":"Block","src":"31480:149:13","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3083,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3075,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3069,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3063,"src":"31498:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"expression":{"arguments":[{"id":3072,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"31512:5:13","typeDescriptions":{"typeIdentifier":"t_type$_t_int56_$","typeString":"type(int56)"},"typeName":{"id":3071,"name":"int56","nodeType":"ElementaryTypeName","src":"31512:5:13","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_int56_$","typeString":"type(int56)"}],"id":3070,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"31507:4:13","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":3073,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"31507:11:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_int56","typeString":"type(int56)"}},"id":3074,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"min","nodeType":"MemberAccess","src":"31507:15:13","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"src":"31498:24:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3082,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3076,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3063,"src":"31526:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":3079,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"31540:5:13","typeDescriptions":{"typeIdentifier":"t_type$_t_int56_$","typeString":"type(int56)"},"typeName":{"id":3078,"name":"int56","nodeType":"ElementaryTypeName","src":"31540:5:13","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_int56_$","typeString":"type(int56)"}],"id":3077,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"31535:4:13","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":3080,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"31535:11:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_int56","typeString":"type(int56)"}},"id":3081,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"31535:15:13","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"src":"31526:24:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"31498:52:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e2035362062697473","id":3084,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"31552:40:13","typeDescriptions":{"typeIdentifier":"t_stringliteral_656ad93b5ff6665bfe05d97d51fad7c02ad79e6c43bef066c042a6900f450bc5","typeString":"literal_string \"SafeCast: value doesn't fit in 56 bits\""},"value":"SafeCast: value doesn't fit in 56 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_656ad93b5ff6665bfe05d97d51fad7c02ad79e6c43bef066c042a6900f450bc5","typeString":"literal_string \"SafeCast: value doesn't fit in 56 bits\""}],"id":3068,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"31490:7:13","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3085,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"31490:103:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3086,"nodeType":"ExpressionStatement","src":"31490:103:13"},{"expression":{"arguments":[{"id":3089,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3063,"src":"31616:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":3088,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"31610:5:13","typeDescriptions":{"typeIdentifier":"t_type$_t_int56_$","typeString":"type(int56)"},"typeName":{"id":3087,"name":"int56","nodeType":"ElementaryTypeName","src":"31610:5:13","typeDescriptions":{}}},"id":3090,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"31610:12:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"functionReturnParameters":3067,"id":3091,"nodeType":"Return","src":"31603:19:13"}]},"documentation":{"id":3061,"nodeType":"StructuredDocumentation","src":"31069:345:13","text":" @dev Returns the downcasted int56 from int256, reverting on\n overflow (when the input is less than smallest int56 or\n greater than largest int56).\n Counterpart to Solidity's `int56` operator.\n Requirements:\n - input must fit into 56 bits\n _Available since v4.7._"},"id":3093,"implemented":true,"kind":"function","modifiers":[],"name":"toInt56","nameLocation":"31428:7:13","nodeType":"FunctionDefinition","parameters":{"id":3064,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3063,"mutability":"mutable","name":"value","nameLocation":"31443:5:13","nodeType":"VariableDeclaration","scope":3093,"src":"31436:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3062,"name":"int256","nodeType":"ElementaryTypeName","src":"31436:6:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"31435:14:13"},"returnParameters":{"id":3067,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3066,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3093,"src":"31473:5:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"},"typeName":{"id":3065,"name":"int56","nodeType":"ElementaryTypeName","src":"31473:5:13","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"visibility":"internal"}],"src":"31472:7:13"},"scope":3320,"src":"31419:210:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3125,"nodeType":"Block","src":"32046:149:13","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3116,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3108,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3102,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3096,"src":"32064:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"expression":{"arguments":[{"id":3105,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"32078:5:13","typeDescriptions":{"typeIdentifier":"t_type$_t_int48_$","typeString":"type(int48)"},"typeName":{"id":3104,"name":"int48","nodeType":"ElementaryTypeName","src":"32078:5:13","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_int48_$","typeString":"type(int48)"}],"id":3103,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"32073:4:13","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":3106,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"32073:11:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_int48","typeString":"type(int48)"}},"id":3107,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"min","nodeType":"MemberAccess","src":"32073:15:13","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"src":"32064:24:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3115,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3109,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3096,"src":"32092:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":3112,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"32106:5:13","typeDescriptions":{"typeIdentifier":"t_type$_t_int48_$","typeString":"type(int48)"},"typeName":{"id":3111,"name":"int48","nodeType":"ElementaryTypeName","src":"32106:5:13","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_int48_$","typeString":"type(int48)"}],"id":3110,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"32101:4:13","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":3113,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"32101:11:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_int48","typeString":"type(int48)"}},"id":3114,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"32101:15:13","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"src":"32092:24:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"32064:52:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e2034382062697473","id":3117,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"32118:40:13","typeDescriptions":{"typeIdentifier":"t_stringliteral_599034f9324dd4e988c6cea5a00a30f53147fec1b01559682f18cd840028f495","typeString":"literal_string \"SafeCast: value doesn't fit in 48 bits\""},"value":"SafeCast: value doesn't fit in 48 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_599034f9324dd4e988c6cea5a00a30f53147fec1b01559682f18cd840028f495","typeString":"literal_string \"SafeCast: value doesn't fit in 48 bits\""}],"id":3101,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"32056:7:13","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3118,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"32056:103:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3119,"nodeType":"ExpressionStatement","src":"32056:103:13"},{"expression":{"arguments":[{"id":3122,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3096,"src":"32182:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":3121,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"32176:5:13","typeDescriptions":{"typeIdentifier":"t_type$_t_int48_$","typeString":"type(int48)"},"typeName":{"id":3120,"name":"int48","nodeType":"ElementaryTypeName","src":"32176:5:13","typeDescriptions":{}}},"id":3123,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"32176:12:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"functionReturnParameters":3100,"id":3124,"nodeType":"Return","src":"32169:19:13"}]},"documentation":{"id":3094,"nodeType":"StructuredDocumentation","src":"31635:345:13","text":" @dev Returns the downcasted int48 from int256, reverting on\n overflow (when the input is less than smallest int48 or\n greater than largest int48).\n Counterpart to Solidity's `int48` operator.\n Requirements:\n - input must fit into 48 bits\n _Available since v4.7._"},"id":3126,"implemented":true,"kind":"function","modifiers":[],"name":"toInt48","nameLocation":"31994:7:13","nodeType":"FunctionDefinition","parameters":{"id":3097,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3096,"mutability":"mutable","name":"value","nameLocation":"32009:5:13","nodeType":"VariableDeclaration","scope":3126,"src":"32002:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3095,"name":"int256","nodeType":"ElementaryTypeName","src":"32002:6:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"32001:14:13"},"returnParameters":{"id":3100,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3099,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3126,"src":"32039:5:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"},"typeName":{"id":3098,"name":"int48","nodeType":"ElementaryTypeName","src":"32039:5:13","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"visibility":"internal"}],"src":"32038:7:13"},"scope":3320,"src":"31985:210:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3158,"nodeType":"Block","src":"32612:149:13","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3149,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3141,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3135,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3129,"src":"32630:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"expression":{"arguments":[{"id":3138,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"32644:5:13","typeDescriptions":{"typeIdentifier":"t_type$_t_int40_$","typeString":"type(int40)"},"typeName":{"id":3137,"name":"int40","nodeType":"ElementaryTypeName","src":"32644:5:13","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_int40_$","typeString":"type(int40)"}],"id":3136,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"32639:4:13","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":3139,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"32639:11:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_int40","typeString":"type(int40)"}},"id":3140,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"min","nodeType":"MemberAccess","src":"32639:15:13","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"src":"32630:24:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3148,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3142,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3129,"src":"32658:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":3145,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"32672:5:13","typeDescriptions":{"typeIdentifier":"t_type$_t_int40_$","typeString":"type(int40)"},"typeName":{"id":3144,"name":"int40","nodeType":"ElementaryTypeName","src":"32672:5:13","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_int40_$","typeString":"type(int40)"}],"id":3143,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"32667:4:13","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":3146,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"32667:11:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_int40","typeString":"type(int40)"}},"id":3147,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"32667:15:13","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"src":"32658:24:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"32630:52:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e2034302062697473","id":3150,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"32684:40:13","typeDescriptions":{"typeIdentifier":"t_stringliteral_b23559c58b98a5d3ed7016699c7171ac8defa5a1d180f9a9ffa60468a5701d37","typeString":"literal_string \"SafeCast: value doesn't fit in 40 bits\""},"value":"SafeCast: value doesn't fit in 40 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_b23559c58b98a5d3ed7016699c7171ac8defa5a1d180f9a9ffa60468a5701d37","typeString":"literal_string \"SafeCast: value doesn't fit in 40 bits\""}],"id":3134,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"32622:7:13","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3151,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"32622:103:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3152,"nodeType":"ExpressionStatement","src":"32622:103:13"},{"expression":{"arguments":[{"id":3155,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3129,"src":"32748:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":3154,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"32742:5:13","typeDescriptions":{"typeIdentifier":"t_type$_t_int40_$","typeString":"type(int40)"},"typeName":{"id":3153,"name":"int40","nodeType":"ElementaryTypeName","src":"32742:5:13","typeDescriptions":{}}},"id":3156,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"32742:12:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"functionReturnParameters":3133,"id":3157,"nodeType":"Return","src":"32735:19:13"}]},"documentation":{"id":3127,"nodeType":"StructuredDocumentation","src":"32201:345:13","text":" @dev Returns the downcasted int40 from int256, reverting on\n overflow (when the input is less than smallest int40 or\n greater than largest int40).\n Counterpart to Solidity's `int40` operator.\n Requirements:\n - input must fit into 40 bits\n _Available since v4.7._"},"id":3159,"implemented":true,"kind":"function","modifiers":[],"name":"toInt40","nameLocation":"32560:7:13","nodeType":"FunctionDefinition","parameters":{"id":3130,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3129,"mutability":"mutable","name":"value","nameLocation":"32575:5:13","nodeType":"VariableDeclaration","scope":3159,"src":"32568:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3128,"name":"int256","nodeType":"ElementaryTypeName","src":"32568:6:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"32567:14:13"},"returnParameters":{"id":3133,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3132,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3159,"src":"32605:5:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"},"typeName":{"id":3131,"name":"int40","nodeType":"ElementaryTypeName","src":"32605:5:13","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"visibility":"internal"}],"src":"32604:7:13"},"scope":3320,"src":"32551:210:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3191,"nodeType":"Block","src":"33178:149:13","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3182,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3174,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3168,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3162,"src":"33196:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"expression":{"arguments":[{"id":3171,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"33210:5:13","typeDescriptions":{"typeIdentifier":"t_type$_t_int32_$","typeString":"type(int32)"},"typeName":{"id":3170,"name":"int32","nodeType":"ElementaryTypeName","src":"33210:5:13","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_int32_$","typeString":"type(int32)"}],"id":3169,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"33205:4:13","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":3172,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"33205:11:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_int32","typeString":"type(int32)"}},"id":3173,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"min","nodeType":"MemberAccess","src":"33205:15:13","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"src":"33196:24:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3181,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3175,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3162,"src":"33224:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":3178,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"33238:5:13","typeDescriptions":{"typeIdentifier":"t_type$_t_int32_$","typeString":"type(int32)"},"typeName":{"id":3177,"name":"int32","nodeType":"ElementaryTypeName","src":"33238:5:13","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_int32_$","typeString":"type(int32)"}],"id":3176,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"33233:4:13","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":3179,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"33233:11:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_int32","typeString":"type(int32)"}},"id":3180,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"33233:15:13","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"src":"33224:24:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"33196:52:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e2033322062697473","id":3183,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"33250:40:13","typeDescriptions":{"typeIdentifier":"t_stringliteral_c907489dafcfb622d3b83f2657a14d6da2f59e0de3116af0d6a80554c1a7cb19","typeString":"literal_string \"SafeCast: value doesn't fit in 32 bits\""},"value":"SafeCast: value doesn't fit in 32 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_c907489dafcfb622d3b83f2657a14d6da2f59e0de3116af0d6a80554c1a7cb19","typeString":"literal_string \"SafeCast: value doesn't fit in 32 bits\""}],"id":3167,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"33188:7:13","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3184,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"33188:103:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3185,"nodeType":"ExpressionStatement","src":"33188:103:13"},{"expression":{"arguments":[{"id":3188,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3162,"src":"33314:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":3187,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"33308:5:13","typeDescriptions":{"typeIdentifier":"t_type$_t_int32_$","typeString":"type(int32)"},"typeName":{"id":3186,"name":"int32","nodeType":"ElementaryTypeName","src":"33308:5:13","typeDescriptions":{}}},"id":3189,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"33308:12:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"functionReturnParameters":3166,"id":3190,"nodeType":"Return","src":"33301:19:13"}]},"documentation":{"id":3160,"nodeType":"StructuredDocumentation","src":"32767:345:13","text":" @dev Returns the downcasted int32 from int256, reverting on\n overflow (when the input is less than smallest int32 or\n greater than largest int32).\n Counterpart to Solidity's `int32` operator.\n Requirements:\n - input must fit into 32 bits\n _Available since v3.1._"},"id":3192,"implemented":true,"kind":"function","modifiers":[],"name":"toInt32","nameLocation":"33126:7:13","nodeType":"FunctionDefinition","parameters":{"id":3163,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3162,"mutability":"mutable","name":"value","nameLocation":"33141:5:13","nodeType":"VariableDeclaration","scope":3192,"src":"33134:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3161,"name":"int256","nodeType":"ElementaryTypeName","src":"33134:6:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"33133:14:13"},"returnParameters":{"id":3166,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3165,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3192,"src":"33171:5:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"},"typeName":{"id":3164,"name":"int32","nodeType":"ElementaryTypeName","src":"33171:5:13","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"visibility":"internal"}],"src":"33170:7:13"},"scope":3320,"src":"33117:210:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3224,"nodeType":"Block","src":"33744:149:13","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3215,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3207,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3201,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3195,"src":"33762:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"expression":{"arguments":[{"id":3204,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"33776:5:13","typeDescriptions":{"typeIdentifier":"t_type$_t_int24_$","typeString":"type(int24)"},"typeName":{"id":3203,"name":"int24","nodeType":"ElementaryTypeName","src":"33776:5:13","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_int24_$","typeString":"type(int24)"}],"id":3202,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"33771:4:13","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":3205,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"33771:11:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_int24","typeString":"type(int24)"}},"id":3206,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"min","nodeType":"MemberAccess","src":"33771:15:13","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"src":"33762:24:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3214,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3208,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3195,"src":"33790:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":3211,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"33804:5:13","typeDescriptions":{"typeIdentifier":"t_type$_t_int24_$","typeString":"type(int24)"},"typeName":{"id":3210,"name":"int24","nodeType":"ElementaryTypeName","src":"33804:5:13","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_int24_$","typeString":"type(int24)"}],"id":3209,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"33799:4:13","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":3212,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"33799:11:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_int24","typeString":"type(int24)"}},"id":3213,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"33799:15:13","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"src":"33790:24:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"33762:52:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e2032342062697473","id":3216,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"33816:40:13","typeDescriptions":{"typeIdentifier":"t_stringliteral_f68b65aaf4574c34e9b9d1442d19636c6608b8c4dbd9331c7245f7915c8b2f55","typeString":"literal_string \"SafeCast: value doesn't fit in 24 bits\""},"value":"SafeCast: value doesn't fit in 24 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_f68b65aaf4574c34e9b9d1442d19636c6608b8c4dbd9331c7245f7915c8b2f55","typeString":"literal_string \"SafeCast: value doesn't fit in 24 bits\""}],"id":3200,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"33754:7:13","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3217,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"33754:103:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3218,"nodeType":"ExpressionStatement","src":"33754:103:13"},{"expression":{"arguments":[{"id":3221,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3195,"src":"33880:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":3220,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"33874:5:13","typeDescriptions":{"typeIdentifier":"t_type$_t_int24_$","typeString":"type(int24)"},"typeName":{"id":3219,"name":"int24","nodeType":"ElementaryTypeName","src":"33874:5:13","typeDescriptions":{}}},"id":3222,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"33874:12:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"functionReturnParameters":3199,"id":3223,"nodeType":"Return","src":"33867:19:13"}]},"documentation":{"id":3193,"nodeType":"StructuredDocumentation","src":"33333:345:13","text":" @dev Returns the downcasted int24 from int256, reverting on\n overflow (when the input is less than smallest int24 or\n greater than largest int24).\n Counterpart to Solidity's `int24` operator.\n Requirements:\n - input must fit into 24 bits\n _Available since v4.7._"},"id":3225,"implemented":true,"kind":"function","modifiers":[],"name":"toInt24","nameLocation":"33692:7:13","nodeType":"FunctionDefinition","parameters":{"id":3196,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3195,"mutability":"mutable","name":"value","nameLocation":"33707:5:13","nodeType":"VariableDeclaration","scope":3225,"src":"33700:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3194,"name":"int256","nodeType":"ElementaryTypeName","src":"33700:6:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"33699:14:13"},"returnParameters":{"id":3199,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3198,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3225,"src":"33737:5:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"},"typeName":{"id":3197,"name":"int24","nodeType":"ElementaryTypeName","src":"33737:5:13","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"visibility":"internal"}],"src":"33736:7:13"},"scope":3320,"src":"33683:210:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3257,"nodeType":"Block","src":"34310:149:13","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3248,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3240,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3234,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3228,"src":"34328:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"expression":{"arguments":[{"id":3237,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"34342:5:13","typeDescriptions":{"typeIdentifier":"t_type$_t_int16_$","typeString":"type(int16)"},"typeName":{"id":3236,"name":"int16","nodeType":"ElementaryTypeName","src":"34342:5:13","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_int16_$","typeString":"type(int16)"}],"id":3235,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"34337:4:13","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":3238,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"34337:11:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_int16","typeString":"type(int16)"}},"id":3239,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"min","nodeType":"MemberAccess","src":"34337:15:13","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"src":"34328:24:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3247,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3241,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3228,"src":"34356:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":3244,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"34370:5:13","typeDescriptions":{"typeIdentifier":"t_type$_t_int16_$","typeString":"type(int16)"},"typeName":{"id":3243,"name":"int16","nodeType":"ElementaryTypeName","src":"34370:5:13","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_int16_$","typeString":"type(int16)"}],"id":3242,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"34365:4:13","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":3245,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"34365:11:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_int16","typeString":"type(int16)"}},"id":3246,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"34365:15:13","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"src":"34356:24:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"34328:52:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e2031362062697473","id":3249,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"34382:40:13","typeDescriptions":{"typeIdentifier":"t_stringliteral_13d3a66f9e0e5c92bbe7743bcd3bdb4695009d5f3a96e5ff49718d715b484033","typeString":"literal_string \"SafeCast: value doesn't fit in 16 bits\""},"value":"SafeCast: value doesn't fit in 16 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_13d3a66f9e0e5c92bbe7743bcd3bdb4695009d5f3a96e5ff49718d715b484033","typeString":"literal_string \"SafeCast: value doesn't fit in 16 bits\""}],"id":3233,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"34320:7:13","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3250,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"34320:103:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3251,"nodeType":"ExpressionStatement","src":"34320:103:13"},{"expression":{"arguments":[{"id":3254,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3228,"src":"34446:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":3253,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"34440:5:13","typeDescriptions":{"typeIdentifier":"t_type$_t_int16_$","typeString":"type(int16)"},"typeName":{"id":3252,"name":"int16","nodeType":"ElementaryTypeName","src":"34440:5:13","typeDescriptions":{}}},"id":3255,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"34440:12:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"functionReturnParameters":3232,"id":3256,"nodeType":"Return","src":"34433:19:13"}]},"documentation":{"id":3226,"nodeType":"StructuredDocumentation","src":"33899:345:13","text":" @dev Returns the downcasted int16 from int256, reverting on\n overflow (when the input is less than smallest int16 or\n greater than largest int16).\n Counterpart to Solidity's `int16` operator.\n Requirements:\n - input must fit into 16 bits\n _Available since v3.1._"},"id":3258,"implemented":true,"kind":"function","modifiers":[],"name":"toInt16","nameLocation":"34258:7:13","nodeType":"FunctionDefinition","parameters":{"id":3229,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3228,"mutability":"mutable","name":"value","nameLocation":"34273:5:13","nodeType":"VariableDeclaration","scope":3258,"src":"34266:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3227,"name":"int256","nodeType":"ElementaryTypeName","src":"34266:6:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"34265:14:13"},"returnParameters":{"id":3232,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3231,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3258,"src":"34303:5:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"},"typeName":{"id":3230,"name":"int16","nodeType":"ElementaryTypeName","src":"34303:5:13","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"visibility":"internal"}],"src":"34302:7:13"},"scope":3320,"src":"34249:210:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3290,"nodeType":"Block","src":"34869:145:13","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3281,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3273,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3267,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3261,"src":"34887:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"expression":{"arguments":[{"id":3270,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"34901:4:13","typeDescriptions":{"typeIdentifier":"t_type$_t_int8_$","typeString":"type(int8)"},"typeName":{"id":3269,"name":"int8","nodeType":"ElementaryTypeName","src":"34901:4:13","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_int8_$","typeString":"type(int8)"}],"id":3268,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"34896:4:13","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":3271,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"34896:10:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_int8","typeString":"type(int8)"}},"id":3272,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"min","nodeType":"MemberAccess","src":"34896:14:13","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"src":"34887:23:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3280,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3274,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3261,"src":"34914:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":3277,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"34928:4:13","typeDescriptions":{"typeIdentifier":"t_type$_t_int8_$","typeString":"type(int8)"},"typeName":{"id":3276,"name":"int8","nodeType":"ElementaryTypeName","src":"34928:4:13","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_int8_$","typeString":"type(int8)"}],"id":3275,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"34923:4:13","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":3278,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"34923:10:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_int8","typeString":"type(int8)"}},"id":3279,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"34923:14:13","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"src":"34914:23:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"34887:50:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e20382062697473","id":3282,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"34939:39:13","typeDescriptions":{"typeIdentifier":"t_stringliteral_2610961ba53259047cd57c60366c5ad0b8aabf5eb4132487619b736715a740d1","typeString":"literal_string \"SafeCast: value doesn't fit in 8 bits\""},"value":"SafeCast: value doesn't fit in 8 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_2610961ba53259047cd57c60366c5ad0b8aabf5eb4132487619b736715a740d1","typeString":"literal_string \"SafeCast: value doesn't fit in 8 bits\""}],"id":3266,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"34879:7:13","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3283,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"34879:100:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3284,"nodeType":"ExpressionStatement","src":"34879:100:13"},{"expression":{"arguments":[{"id":3287,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3261,"src":"35001:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":3286,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"34996:4:13","typeDescriptions":{"typeIdentifier":"t_type$_t_int8_$","typeString":"type(int8)"},"typeName":{"id":3285,"name":"int8","nodeType":"ElementaryTypeName","src":"34996:4:13","typeDescriptions":{}}},"id":3288,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"34996:11:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"functionReturnParameters":3265,"id":3289,"nodeType":"Return","src":"34989:18:13"}]},"documentation":{"id":3259,"nodeType":"StructuredDocumentation","src":"34465:340:13","text":" @dev Returns the downcasted int8 from int256, reverting on\n overflow (when the input is less than smallest int8 or\n greater than largest int8).\n Counterpart to Solidity's `int8` operator.\n Requirements:\n - input must fit into 8 bits\n _Available since v3.1._"},"id":3291,"implemented":true,"kind":"function","modifiers":[],"name":"toInt8","nameLocation":"34819:6:13","nodeType":"FunctionDefinition","parameters":{"id":3262,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3261,"mutability":"mutable","name":"value","nameLocation":"34833:5:13","nodeType":"VariableDeclaration","scope":3291,"src":"34826:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3260,"name":"int256","nodeType":"ElementaryTypeName","src":"34826:6:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"34825:14:13"},"returnParameters":{"id":3265,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3264,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3291,"src":"34863:4:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"},"typeName":{"id":3263,"name":"int8","nodeType":"ElementaryTypeName","src":"34863:4:13","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"visibility":"internal"}],"src":"34862:6:13"},"scope":3320,"src":"34810:204:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3318,"nodeType":"Block","src":"35292:233:13","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3309,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3300,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3294,"src":"35409:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"arguments":[{"expression":{"arguments":[{"id":3305,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"35431:6:13","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":3304,"name":"int256","nodeType":"ElementaryTypeName","src":"35431:6:13","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"}],"id":3303,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"35426:4:13","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":3306,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"35426:12:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_int256","typeString":"type(int256)"}},"id":3307,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"35426:16:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":3302,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"35418:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":3301,"name":"uint256","nodeType":"ElementaryTypeName","src":"35418:7:13","typeDescriptions":{}}},"id":3308,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"35418:25:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"35409:34:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e20616e20696e74323536","id":3310,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"35445:42:13","typeDescriptions":{"typeIdentifier":"t_stringliteral_d70dcf21692b3c91b4c5fbb89ed57f464aa42efbe5b0ea96c4acb7c080144227","typeString":"literal_string \"SafeCast: value doesn't fit in an int256\""},"value":"SafeCast: value doesn't fit in an int256"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_d70dcf21692b3c91b4c5fbb89ed57f464aa42efbe5b0ea96c4acb7c080144227","typeString":"literal_string \"SafeCast: value doesn't fit in an int256\""}],"id":3299,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"35401:7:13","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3311,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"35401:87:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3312,"nodeType":"ExpressionStatement","src":"35401:87:13"},{"expression":{"arguments":[{"id":3315,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3294,"src":"35512:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3314,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"35505:6:13","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":3313,"name":"int256","nodeType":"ElementaryTypeName","src":"35505:6:13","typeDescriptions":{}}},"id":3316,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"35505:13:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":3298,"id":3317,"nodeType":"Return","src":"35498:20:13"}]},"documentation":{"id":3292,"nodeType":"StructuredDocumentation","src":"35020:203:13","text":" @dev Converts an unsigned uint256 into a signed int256.\n Requirements:\n - input must be less than or equal to maxInt256.\n _Available since v3.0._"},"id":3319,"implemented":true,"kind":"function","modifiers":[],"name":"toInt256","nameLocation":"35237:8:13","nodeType":"FunctionDefinition","parameters":{"id":3295,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3294,"mutability":"mutable","name":"value","nameLocation":"35254:5:13","nodeType":"VariableDeclaration","scope":3319,"src":"35246:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3293,"name":"uint256","nodeType":"ElementaryTypeName","src":"35246:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"35245:15:13"},"returnParameters":{"id":3298,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3297,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3319,"src":"35284:6:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3296,"name":"int256","nodeType":"ElementaryTypeName","src":"35284:6:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"35283:8:13"},"scope":3320,"src":"35228:297:13","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":3321,"src":"842:34685:13"}],"src":"107:35421:13"},"id":13},"@uniswap/v2-core/contracts/interfaces/IUniswapV2Factory.sol":{"ast":{"absolutePath":"@uniswap/v2-core/contracts/interfaces/IUniswapV2Factory.sol","exportedSymbols":{"IUniswapV2Factory":[3383]},"id":3384,"nodeType":"SourceUnit","nodes":[{"id":3322,"literals":["solidity",">=","0.5",".0"],"nodeType":"PragmaDirective","src":"0:24:14"},{"abstract":false,"baseContracts":[],"contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":3383,"linearizedBaseContracts":[3383],"name":"IUniswapV2Factory","nameLocation":"36:17:14","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"id":3332,"name":"PairCreated","nameLocation":"66:11:14","nodeType":"EventDefinition","parameters":{"id":3331,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3324,"indexed":true,"mutability":"mutable","name":"token0","nameLocation":"94:6:14","nodeType":"VariableDeclaration","scope":3332,"src":"78:22:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3323,"name":"address","nodeType":"ElementaryTypeName","src":"78:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3326,"indexed":true,"mutability":"mutable","name":"token1","nameLocation":"118:6:14","nodeType":"VariableDeclaration","scope":3332,"src":"102:22:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3325,"name":"address","nodeType":"ElementaryTypeName","src":"102:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3328,"indexed":false,"mutability":"mutable","name":"pair","nameLocation":"134:4:14","nodeType":"VariableDeclaration","scope":3332,"src":"126:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3327,"name":"address","nodeType":"ElementaryTypeName","src":"126:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3330,"indexed":false,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3332,"src":"140:4:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3329,"name":"uint","nodeType":"ElementaryTypeName","src":"140:4:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"77:68:14"},"src":"60:86:14"},{"functionSelector":"017e7e58","id":3337,"implemented":false,"kind":"function","modifiers":[],"name":"feeTo","nameLocation":"161:5:14","nodeType":"FunctionDefinition","parameters":{"id":3333,"nodeType":"ParameterList","parameters":[],"src":"166:2:14"},"returnParameters":{"id":3336,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3335,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3337,"src":"192:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3334,"name":"address","nodeType":"ElementaryTypeName","src":"192:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"191:9:14"},"scope":3383,"src":"152:49:14","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"094b7415","id":3342,"implemented":false,"kind":"function","modifiers":[],"name":"feeToSetter","nameLocation":"215:11:14","nodeType":"FunctionDefinition","parameters":{"id":3338,"nodeType":"ParameterList","parameters":[],"src":"226:2:14"},"returnParameters":{"id":3341,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3340,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3342,"src":"252:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3339,"name":"address","nodeType":"ElementaryTypeName","src":"252:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"251:9:14"},"scope":3383,"src":"206:55:14","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"e6a43905","id":3351,"implemented":false,"kind":"function","modifiers":[],"name":"getPair","nameLocation":"276:7:14","nodeType":"FunctionDefinition","parameters":{"id":3347,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3344,"mutability":"mutable","name":"tokenA","nameLocation":"292:6:14","nodeType":"VariableDeclaration","scope":3351,"src":"284:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3343,"name":"address","nodeType":"ElementaryTypeName","src":"284:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3346,"mutability":"mutable","name":"tokenB","nameLocation":"308:6:14","nodeType":"VariableDeclaration","scope":3351,"src":"300:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3345,"name":"address","nodeType":"ElementaryTypeName","src":"300:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"283:32:14"},"returnParameters":{"id":3350,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3349,"mutability":"mutable","name":"pair","nameLocation":"347:4:14","nodeType":"VariableDeclaration","scope":3351,"src":"339:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3348,"name":"address","nodeType":"ElementaryTypeName","src":"339:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"338:14:14"},"scope":3383,"src":"267:86:14","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"1e3dd18b","id":3358,"implemented":false,"kind":"function","modifiers":[],"name":"allPairs","nameLocation":"367:8:14","nodeType":"FunctionDefinition","parameters":{"id":3354,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3353,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3358,"src":"376:4:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3352,"name":"uint","nodeType":"ElementaryTypeName","src":"376:4:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"375:6:14"},"returnParameters":{"id":3357,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3356,"mutability":"mutable","name":"pair","nameLocation":"413:4:14","nodeType":"VariableDeclaration","scope":3358,"src":"405:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3355,"name":"address","nodeType":"ElementaryTypeName","src":"405:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"404:14:14"},"scope":3383,"src":"358:61:14","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"574f2ba3","id":3363,"implemented":false,"kind":"function","modifiers":[],"name":"allPairsLength","nameLocation":"433:14:14","nodeType":"FunctionDefinition","parameters":{"id":3359,"nodeType":"ParameterList","parameters":[],"src":"447:2:14"},"returnParameters":{"id":3362,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3361,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3363,"src":"473:4:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3360,"name":"uint","nodeType":"ElementaryTypeName","src":"473:4:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"472:6:14"},"scope":3383,"src":"424:55:14","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"c9c65396","id":3372,"implemented":false,"kind":"function","modifiers":[],"name":"createPair","nameLocation":"494:10:14","nodeType":"FunctionDefinition","parameters":{"id":3368,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3365,"mutability":"mutable","name":"tokenA","nameLocation":"513:6:14","nodeType":"VariableDeclaration","scope":3372,"src":"505:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3364,"name":"address","nodeType":"ElementaryTypeName","src":"505:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3367,"mutability":"mutable","name":"tokenB","nameLocation":"529:6:14","nodeType":"VariableDeclaration","scope":3372,"src":"521:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3366,"name":"address","nodeType":"ElementaryTypeName","src":"521:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"504:32:14"},"returnParameters":{"id":3371,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3370,"mutability":"mutable","name":"pair","nameLocation":"563:4:14","nodeType":"VariableDeclaration","scope":3372,"src":"555:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3369,"name":"address","nodeType":"ElementaryTypeName","src":"555:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"554:14:14"},"scope":3383,"src":"485:84:14","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"f46901ed","id":3377,"implemented":false,"kind":"function","modifiers":[],"name":"setFeeTo","nameLocation":"584:8:14","nodeType":"FunctionDefinition","parameters":{"id":3375,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3374,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3377,"src":"593:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3373,"name":"address","nodeType":"ElementaryTypeName","src":"593:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"592:9:14"},"returnParameters":{"id":3376,"nodeType":"ParameterList","parameters":[],"src":"610:0:14"},"scope":3383,"src":"575:36:14","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"a2e74af6","id":3382,"implemented":false,"kind":"function","modifiers":[],"name":"setFeeToSetter","nameLocation":"625:14:14","nodeType":"FunctionDefinition","parameters":{"id":3380,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3379,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3382,"src":"640:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3378,"name":"address","nodeType":"ElementaryTypeName","src":"640:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"639:9:14"},"returnParameters":{"id":3381,"nodeType":"ParameterList","parameters":[],"src":"657:0:14"},"scope":3383,"src":"616:42:14","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":3384,"src":"26:634:14"}],"src":"0:661:14"},"id":14},"@uniswap/v2-periphery/contracts/interfaces/IUniswapV2Router01.sol":{"ast":{"absolutePath":"@uniswap/v2-periphery/contracts/interfaces/IUniswapV2Router01.sol","exportedSymbols":{"IUniswapV2Router01":[3691]},"id":3692,"nodeType":"SourceUnit","nodes":[{"id":3385,"literals":["solidity",">=","0.6",".2"],"nodeType":"PragmaDirective","src":"0:24:15"},{"abstract":false,"baseContracts":[],"contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":3691,"linearizedBaseContracts":[3691],"name":"IUniswapV2Router01","nameLocation":"36:18:15","nodeType":"ContractDefinition","nodes":[{"functionSelector":"c45a0155","id":3390,"implemented":false,"kind":"function","modifiers":[],"name":"factory","nameLocation":"70:7:15","nodeType":"FunctionDefinition","parameters":{"id":3386,"nodeType":"ParameterList","parameters":[],"src":"77:2:15"},"returnParameters":{"id":3389,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3388,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3390,"src":"103:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3387,"name":"address","nodeType":"ElementaryTypeName","src":"103:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"102:9:15"},"scope":3691,"src":"61:51:15","stateMutability":"pure","virtual":false,"visibility":"external"},{"functionSelector":"ad5c4648","id":3395,"implemented":false,"kind":"function","modifiers":[],"name":"WETH","nameLocation":"126:4:15","nodeType":"FunctionDefinition","parameters":{"id":3391,"nodeType":"ParameterList","parameters":[],"src":"130:2:15"},"returnParameters":{"id":3394,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3393,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3395,"src":"156:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3392,"name":"address","nodeType":"ElementaryTypeName","src":"156:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"155:9:15"},"scope":3691,"src":"117:48:15","stateMutability":"pure","virtual":false,"visibility":"external"},{"functionSelector":"e8e33700","id":3420,"implemented":false,"kind":"function","modifiers":[],"name":"addLiquidity","nameLocation":"180:12:15","nodeType":"FunctionDefinition","parameters":{"id":3412,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3397,"mutability":"mutable","name":"tokenA","nameLocation":"210:6:15","nodeType":"VariableDeclaration","scope":3420,"src":"202:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3396,"name":"address","nodeType":"ElementaryTypeName","src":"202:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3399,"mutability":"mutable","name":"tokenB","nameLocation":"234:6:15","nodeType":"VariableDeclaration","scope":3420,"src":"226:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3398,"name":"address","nodeType":"ElementaryTypeName","src":"226:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3401,"mutability":"mutable","name":"amountADesired","nameLocation":"255:14:15","nodeType":"VariableDeclaration","scope":3420,"src":"250:19:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3400,"name":"uint","nodeType":"ElementaryTypeName","src":"250:4:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3403,"mutability":"mutable","name":"amountBDesired","nameLocation":"284:14:15","nodeType":"VariableDeclaration","scope":3420,"src":"279:19:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3402,"name":"uint","nodeType":"ElementaryTypeName","src":"279:4:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3405,"mutability":"mutable","name":"amountAMin","nameLocation":"313:10:15","nodeType":"VariableDeclaration","scope":3420,"src":"308:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3404,"name":"uint","nodeType":"ElementaryTypeName","src":"308:4:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3407,"mutability":"mutable","name":"amountBMin","nameLocation":"338:10:15","nodeType":"VariableDeclaration","scope":3420,"src":"333:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3406,"name":"uint","nodeType":"ElementaryTypeName","src":"333:4:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3409,"mutability":"mutable","name":"to","nameLocation":"366:2:15","nodeType":"VariableDeclaration","scope":3420,"src":"358:10:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3408,"name":"address","nodeType":"ElementaryTypeName","src":"358:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3411,"mutability":"mutable","name":"deadline","nameLocation":"383:8:15","nodeType":"VariableDeclaration","scope":3420,"src":"378:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3410,"name":"uint","nodeType":"ElementaryTypeName","src":"378:4:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"192:205:15"},"returnParameters":{"id":3419,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3414,"mutability":"mutable","name":"amountA","nameLocation":"421:7:15","nodeType":"VariableDeclaration","scope":3420,"src":"416:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3413,"name":"uint","nodeType":"ElementaryTypeName","src":"416:4:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3416,"mutability":"mutable","name":"amountB","nameLocation":"435:7:15","nodeType":"VariableDeclaration","scope":3420,"src":"430:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3415,"name":"uint","nodeType":"ElementaryTypeName","src":"430:4:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3418,"mutability":"mutable","name":"liquidity","nameLocation":"449:9:15","nodeType":"VariableDeclaration","scope":3420,"src":"444:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3417,"name":"uint","nodeType":"ElementaryTypeName","src":"444:4:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"415:44:15"},"scope":3691,"src":"171:289:15","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"f305d719","id":3441,"implemented":false,"kind":"function","modifiers":[],"name":"addLiquidityETH","nameLocation":"474:15:15","nodeType":"FunctionDefinition","parameters":{"id":3433,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3422,"mutability":"mutable","name":"token","nameLocation":"507:5:15","nodeType":"VariableDeclaration","scope":3441,"src":"499:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3421,"name":"address","nodeType":"ElementaryTypeName","src":"499:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3424,"mutability":"mutable","name":"amountTokenDesired","nameLocation":"527:18:15","nodeType":"VariableDeclaration","scope":3441,"src":"522:23:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3423,"name":"uint","nodeType":"ElementaryTypeName","src":"522:4:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3426,"mutability":"mutable","name":"amountTokenMin","nameLocation":"560:14:15","nodeType":"VariableDeclaration","scope":3441,"src":"555:19:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3425,"name":"uint","nodeType":"ElementaryTypeName","src":"555:4:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3428,"mutability":"mutable","name":"amountETHMin","nameLocation":"589:12:15","nodeType":"VariableDeclaration","scope":3441,"src":"584:17:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3427,"name":"uint","nodeType":"ElementaryTypeName","src":"584:4:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3430,"mutability":"mutable","name":"to","nameLocation":"619:2:15","nodeType":"VariableDeclaration","scope":3441,"src":"611:10:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3429,"name":"address","nodeType":"ElementaryTypeName","src":"611:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3432,"mutability":"mutable","name":"deadline","nameLocation":"636:8:15","nodeType":"VariableDeclaration","scope":3441,"src":"631:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3431,"name":"uint","nodeType":"ElementaryTypeName","src":"631:4:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"489:161:15"},"returnParameters":{"id":3440,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3435,"mutability":"mutable","name":"amountToken","nameLocation":"682:11:15","nodeType":"VariableDeclaration","scope":3441,"src":"677:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3434,"name":"uint","nodeType":"ElementaryTypeName","src":"677:4:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3437,"mutability":"mutable","name":"amountETH","nameLocation":"700:9:15","nodeType":"VariableDeclaration","scope":3441,"src":"695:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3436,"name":"uint","nodeType":"ElementaryTypeName","src":"695:4:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3439,"mutability":"mutable","name":"liquidity","nameLocation":"716:9:15","nodeType":"VariableDeclaration","scope":3441,"src":"711:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3438,"name":"uint","nodeType":"ElementaryTypeName","src":"711:4:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"676:50:15"},"scope":3691,"src":"465:262:15","stateMutability":"payable","virtual":false,"visibility":"external"},{"functionSelector":"baa2abde","id":3462,"implemented":false,"kind":"function","modifiers":[],"name":"removeLiquidity","nameLocation":"741:15:15","nodeType":"FunctionDefinition","parameters":{"id":3456,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3443,"mutability":"mutable","name":"tokenA","nameLocation":"774:6:15","nodeType":"VariableDeclaration","scope":3462,"src":"766:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3442,"name":"address","nodeType":"ElementaryTypeName","src":"766:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3445,"mutability":"mutable","name":"tokenB","nameLocation":"798:6:15","nodeType":"VariableDeclaration","scope":3462,"src":"790:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3444,"name":"address","nodeType":"ElementaryTypeName","src":"790:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3447,"mutability":"mutable","name":"liquidity","nameLocation":"819:9:15","nodeType":"VariableDeclaration","scope":3462,"src":"814:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3446,"name":"uint","nodeType":"ElementaryTypeName","src":"814:4:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3449,"mutability":"mutable","name":"amountAMin","nameLocation":"843:10:15","nodeType":"VariableDeclaration","scope":3462,"src":"838:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3448,"name":"uint","nodeType":"ElementaryTypeName","src":"838:4:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3451,"mutability":"mutable","name":"amountBMin","nameLocation":"868:10:15","nodeType":"VariableDeclaration","scope":3462,"src":"863:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3450,"name":"uint","nodeType":"ElementaryTypeName","src":"863:4:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3453,"mutability":"mutable","name":"to","nameLocation":"896:2:15","nodeType":"VariableDeclaration","scope":3462,"src":"888:10:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3452,"name":"address","nodeType":"ElementaryTypeName","src":"888:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3455,"mutability":"mutable","name":"deadline","nameLocation":"913:8:15","nodeType":"VariableDeclaration","scope":3462,"src":"908:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3454,"name":"uint","nodeType":"ElementaryTypeName","src":"908:4:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"756:171:15"},"returnParameters":{"id":3461,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3458,"mutability":"mutable","name":"amountA","nameLocation":"951:7:15","nodeType":"VariableDeclaration","scope":3462,"src":"946:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3457,"name":"uint","nodeType":"ElementaryTypeName","src":"946:4:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3460,"mutability":"mutable","name":"amountB","nameLocation":"965:7:15","nodeType":"VariableDeclaration","scope":3462,"src":"960:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3459,"name":"uint","nodeType":"ElementaryTypeName","src":"960:4:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"945:28:15"},"scope":3691,"src":"732:242:15","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"02751cec","id":3481,"implemented":false,"kind":"function","modifiers":[],"name":"removeLiquidityETH","nameLocation":"988:18:15","nodeType":"FunctionDefinition","parameters":{"id":3475,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3464,"mutability":"mutable","name":"token","nameLocation":"1024:5:15","nodeType":"VariableDeclaration","scope":3481,"src":"1016:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3463,"name":"address","nodeType":"ElementaryTypeName","src":"1016:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3466,"mutability":"mutable","name":"liquidity","nameLocation":"1044:9:15","nodeType":"VariableDeclaration","scope":3481,"src":"1039:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3465,"name":"uint","nodeType":"ElementaryTypeName","src":"1039:4:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3468,"mutability":"mutable","name":"amountTokenMin","nameLocation":"1068:14:15","nodeType":"VariableDeclaration","scope":3481,"src":"1063:19:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3467,"name":"uint","nodeType":"ElementaryTypeName","src":"1063:4:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3470,"mutability":"mutable","name":"amountETHMin","nameLocation":"1097:12:15","nodeType":"VariableDeclaration","scope":3481,"src":"1092:17:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3469,"name":"uint","nodeType":"ElementaryTypeName","src":"1092:4:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3472,"mutability":"mutable","name":"to","nameLocation":"1127:2:15","nodeType":"VariableDeclaration","scope":3481,"src":"1119:10:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3471,"name":"address","nodeType":"ElementaryTypeName","src":"1119:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3474,"mutability":"mutable","name":"deadline","nameLocation":"1144:8:15","nodeType":"VariableDeclaration","scope":3481,"src":"1139:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3473,"name":"uint","nodeType":"ElementaryTypeName","src":"1139:4:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1006:152:15"},"returnParameters":{"id":3480,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3477,"mutability":"mutable","name":"amountToken","nameLocation":"1182:11:15","nodeType":"VariableDeclaration","scope":3481,"src":"1177:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3476,"name":"uint","nodeType":"ElementaryTypeName","src":"1177:4:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3479,"mutability":"mutable","name":"amountETH","nameLocation":"1200:9:15","nodeType":"VariableDeclaration","scope":3481,"src":"1195:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3478,"name":"uint","nodeType":"ElementaryTypeName","src":"1195:4:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1176:34:15"},"scope":3691,"src":"979:232:15","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"2195995c","id":3510,"implemented":false,"kind":"function","modifiers":[],"name":"removeLiquidityWithPermit","nameLocation":"1225:25:15","nodeType":"FunctionDefinition","parameters":{"id":3504,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3483,"mutability":"mutable","name":"tokenA","nameLocation":"1268:6:15","nodeType":"VariableDeclaration","scope":3510,"src":"1260:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3482,"name":"address","nodeType":"ElementaryTypeName","src":"1260:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3485,"mutability":"mutable","name":"tokenB","nameLocation":"1292:6:15","nodeType":"VariableDeclaration","scope":3510,"src":"1284:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3484,"name":"address","nodeType":"ElementaryTypeName","src":"1284:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3487,"mutability":"mutable","name":"liquidity","nameLocation":"1313:9:15","nodeType":"VariableDeclaration","scope":3510,"src":"1308:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3486,"name":"uint","nodeType":"ElementaryTypeName","src":"1308:4:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3489,"mutability":"mutable","name":"amountAMin","nameLocation":"1337:10:15","nodeType":"VariableDeclaration","scope":3510,"src":"1332:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3488,"name":"uint","nodeType":"ElementaryTypeName","src":"1332:4:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3491,"mutability":"mutable","name":"amountBMin","nameLocation":"1362:10:15","nodeType":"VariableDeclaration","scope":3510,"src":"1357:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3490,"name":"uint","nodeType":"ElementaryTypeName","src":"1357:4:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3493,"mutability":"mutable","name":"to","nameLocation":"1390:2:15","nodeType":"VariableDeclaration","scope":3510,"src":"1382:10:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3492,"name":"address","nodeType":"ElementaryTypeName","src":"1382:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3495,"mutability":"mutable","name":"deadline","nameLocation":"1407:8:15","nodeType":"VariableDeclaration","scope":3510,"src":"1402:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3494,"name":"uint","nodeType":"ElementaryTypeName","src":"1402:4:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3497,"mutability":"mutable","name":"approveMax","nameLocation":"1430:10:15","nodeType":"VariableDeclaration","scope":3510,"src":"1425:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3496,"name":"bool","nodeType":"ElementaryTypeName","src":"1425:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3499,"mutability":"mutable","name":"v","nameLocation":"1448:1:15","nodeType":"VariableDeclaration","scope":3510,"src":"1442:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":3498,"name":"uint8","nodeType":"ElementaryTypeName","src":"1442:5:15","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":3501,"mutability":"mutable","name":"r","nameLocation":"1459:1:15","nodeType":"VariableDeclaration","scope":3510,"src":"1451:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3500,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1451:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3503,"mutability":"mutable","name":"s","nameLocation":"1470:1:15","nodeType":"VariableDeclaration","scope":3510,"src":"1462:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3502,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1462:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1250:227:15"},"returnParameters":{"id":3509,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3506,"mutability":"mutable","name":"amountA","nameLocation":"1501:7:15","nodeType":"VariableDeclaration","scope":3510,"src":"1496:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3505,"name":"uint","nodeType":"ElementaryTypeName","src":"1496:4:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3508,"mutability":"mutable","name":"amountB","nameLocation":"1515:7:15","nodeType":"VariableDeclaration","scope":3510,"src":"1510:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3507,"name":"uint","nodeType":"ElementaryTypeName","src":"1510:4:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1495:28:15"},"scope":3691,"src":"1216:308:15","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"ded9382a","id":3537,"implemented":false,"kind":"function","modifiers":[],"name":"removeLiquidityETHWithPermit","nameLocation":"1538:28:15","nodeType":"FunctionDefinition","parameters":{"id":3531,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3512,"mutability":"mutable","name":"token","nameLocation":"1584:5:15","nodeType":"VariableDeclaration","scope":3537,"src":"1576:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3511,"name":"address","nodeType":"ElementaryTypeName","src":"1576:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3514,"mutability":"mutable","name":"liquidity","nameLocation":"1604:9:15","nodeType":"VariableDeclaration","scope":3537,"src":"1599:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3513,"name":"uint","nodeType":"ElementaryTypeName","src":"1599:4:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3516,"mutability":"mutable","name":"amountTokenMin","nameLocation":"1628:14:15","nodeType":"VariableDeclaration","scope":3537,"src":"1623:19:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3515,"name":"uint","nodeType":"ElementaryTypeName","src":"1623:4:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3518,"mutability":"mutable","name":"amountETHMin","nameLocation":"1657:12:15","nodeType":"VariableDeclaration","scope":3537,"src":"1652:17:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3517,"name":"uint","nodeType":"ElementaryTypeName","src":"1652:4:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3520,"mutability":"mutable","name":"to","nameLocation":"1687:2:15","nodeType":"VariableDeclaration","scope":3537,"src":"1679:10:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3519,"name":"address","nodeType":"ElementaryTypeName","src":"1679:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3522,"mutability":"mutable","name":"deadline","nameLocation":"1704:8:15","nodeType":"VariableDeclaration","scope":3537,"src":"1699:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3521,"name":"uint","nodeType":"ElementaryTypeName","src":"1699:4:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3524,"mutability":"mutable","name":"approveMax","nameLocation":"1727:10:15","nodeType":"VariableDeclaration","scope":3537,"src":"1722:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3523,"name":"bool","nodeType":"ElementaryTypeName","src":"1722:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3526,"mutability":"mutable","name":"v","nameLocation":"1745:1:15","nodeType":"VariableDeclaration","scope":3537,"src":"1739:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":3525,"name":"uint8","nodeType":"ElementaryTypeName","src":"1739:5:15","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":3528,"mutability":"mutable","name":"r","nameLocation":"1756:1:15","nodeType":"VariableDeclaration","scope":3537,"src":"1748:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3527,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1748:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3530,"mutability":"mutable","name":"s","nameLocation":"1767:1:15","nodeType":"VariableDeclaration","scope":3537,"src":"1759:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3529,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1759:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1566:208:15"},"returnParameters":{"id":3536,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3533,"mutability":"mutable","name":"amountToken","nameLocation":"1798:11:15","nodeType":"VariableDeclaration","scope":3537,"src":"1793:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3532,"name":"uint","nodeType":"ElementaryTypeName","src":"1793:4:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3535,"mutability":"mutable","name":"amountETH","nameLocation":"1816:9:15","nodeType":"VariableDeclaration","scope":3537,"src":"1811:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3534,"name":"uint","nodeType":"ElementaryTypeName","src":"1811:4:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1792:34:15"},"scope":3691,"src":"1529:298:15","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"38ed1739","id":3554,"implemented":false,"kind":"function","modifiers":[],"name":"swapExactTokensForTokens","nameLocation":"1841:24:15","nodeType":"FunctionDefinition","parameters":{"id":3549,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3539,"mutability":"mutable","name":"amountIn","nameLocation":"1880:8:15","nodeType":"VariableDeclaration","scope":3554,"src":"1875:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3538,"name":"uint","nodeType":"ElementaryTypeName","src":"1875:4:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3541,"mutability":"mutable","name":"amountOutMin","nameLocation":"1903:12:15","nodeType":"VariableDeclaration","scope":3554,"src":"1898:17:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3540,"name":"uint","nodeType":"ElementaryTypeName","src":"1898:4:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3544,"mutability":"mutable","name":"path","nameLocation":"1944:4:15","nodeType":"VariableDeclaration","scope":3554,"src":"1925:23:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":3542,"name":"address","nodeType":"ElementaryTypeName","src":"1925:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3543,"nodeType":"ArrayTypeName","src":"1925:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":3546,"mutability":"mutable","name":"to","nameLocation":"1966:2:15","nodeType":"VariableDeclaration","scope":3554,"src":"1958:10:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3545,"name":"address","nodeType":"ElementaryTypeName","src":"1958:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3548,"mutability":"mutable","name":"deadline","nameLocation":"1983:8:15","nodeType":"VariableDeclaration","scope":3554,"src":"1978:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3547,"name":"uint","nodeType":"ElementaryTypeName","src":"1978:4:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1865:132:15"},"returnParameters":{"id":3553,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3552,"mutability":"mutable","name":"amounts","nameLocation":"2030:7:15","nodeType":"VariableDeclaration","scope":3554,"src":"2016:21:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":3550,"name":"uint","nodeType":"ElementaryTypeName","src":"2016:4:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3551,"nodeType":"ArrayTypeName","src":"2016:6:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"2015:23:15"},"scope":3691,"src":"1832:207:15","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"8803dbee","id":3571,"implemented":false,"kind":"function","modifiers":[],"name":"swapTokensForExactTokens","nameLocation":"2053:24:15","nodeType":"FunctionDefinition","parameters":{"id":3566,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3556,"mutability":"mutable","name":"amountOut","nameLocation":"2092:9:15","nodeType":"VariableDeclaration","scope":3571,"src":"2087:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3555,"name":"uint","nodeType":"ElementaryTypeName","src":"2087:4:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3558,"mutability":"mutable","name":"amountInMax","nameLocation":"2116:11:15","nodeType":"VariableDeclaration","scope":3571,"src":"2111:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3557,"name":"uint","nodeType":"ElementaryTypeName","src":"2111:4:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3561,"mutability":"mutable","name":"path","nameLocation":"2156:4:15","nodeType":"VariableDeclaration","scope":3571,"src":"2137:23:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":3559,"name":"address","nodeType":"ElementaryTypeName","src":"2137:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3560,"nodeType":"ArrayTypeName","src":"2137:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":3563,"mutability":"mutable","name":"to","nameLocation":"2178:2:15","nodeType":"VariableDeclaration","scope":3571,"src":"2170:10:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3562,"name":"address","nodeType":"ElementaryTypeName","src":"2170:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3565,"mutability":"mutable","name":"deadline","nameLocation":"2195:8:15","nodeType":"VariableDeclaration","scope":3571,"src":"2190:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3564,"name":"uint","nodeType":"ElementaryTypeName","src":"2190:4:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2077:132:15"},"returnParameters":{"id":3570,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3569,"mutability":"mutable","name":"amounts","nameLocation":"2242:7:15","nodeType":"VariableDeclaration","scope":3571,"src":"2228:21:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":3567,"name":"uint","nodeType":"ElementaryTypeName","src":"2228:4:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3568,"nodeType":"ArrayTypeName","src":"2228:6:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"2227:23:15"},"scope":3691,"src":"2044:207:15","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"7ff36ab5","id":3586,"implemented":false,"kind":"function","modifiers":[],"name":"swapExactETHForTokens","nameLocation":"2265:21:15","nodeType":"FunctionDefinition","parameters":{"id":3581,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3573,"mutability":"mutable","name":"amountOutMin","nameLocation":"2292:12:15","nodeType":"VariableDeclaration","scope":3586,"src":"2287:17:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3572,"name":"uint","nodeType":"ElementaryTypeName","src":"2287:4:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3576,"mutability":"mutable","name":"path","nameLocation":"2325:4:15","nodeType":"VariableDeclaration","scope":3586,"src":"2306:23:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":3574,"name":"address","nodeType":"ElementaryTypeName","src":"2306:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3575,"nodeType":"ArrayTypeName","src":"2306:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":3578,"mutability":"mutable","name":"to","nameLocation":"2339:2:15","nodeType":"VariableDeclaration","scope":3586,"src":"2331:10:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3577,"name":"address","nodeType":"ElementaryTypeName","src":"2331:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3580,"mutability":"mutable","name":"deadline","nameLocation":"2348:8:15","nodeType":"VariableDeclaration","scope":3586,"src":"2343:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3579,"name":"uint","nodeType":"ElementaryTypeName","src":"2343:4:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2286:71:15"},"returnParameters":{"id":3585,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3584,"mutability":"mutable","name":"amounts","nameLocation":"2422:7:15","nodeType":"VariableDeclaration","scope":3586,"src":"2408:21:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":3582,"name":"uint","nodeType":"ElementaryTypeName","src":"2408:4:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3583,"nodeType":"ArrayTypeName","src":"2408:6:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"2407:23:15"},"scope":3691,"src":"2256:175:15","stateMutability":"payable","virtual":false,"visibility":"external"},{"functionSelector":"4a25d94a","id":3603,"implemented":false,"kind":"function","modifiers":[],"name":"swapTokensForExactETH","nameLocation":"2445:21:15","nodeType":"FunctionDefinition","parameters":{"id":3598,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3588,"mutability":"mutable","name":"amountOut","nameLocation":"2472:9:15","nodeType":"VariableDeclaration","scope":3603,"src":"2467:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3587,"name":"uint","nodeType":"ElementaryTypeName","src":"2467:4:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3590,"mutability":"mutable","name":"amountInMax","nameLocation":"2488:11:15","nodeType":"VariableDeclaration","scope":3603,"src":"2483:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3589,"name":"uint","nodeType":"ElementaryTypeName","src":"2483:4:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3593,"mutability":"mutable","name":"path","nameLocation":"2520:4:15","nodeType":"VariableDeclaration","scope":3603,"src":"2501:23:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":3591,"name":"address","nodeType":"ElementaryTypeName","src":"2501:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3592,"nodeType":"ArrayTypeName","src":"2501:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":3595,"mutability":"mutable","name":"to","nameLocation":"2534:2:15","nodeType":"VariableDeclaration","scope":3603,"src":"2526:10:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3594,"name":"address","nodeType":"ElementaryTypeName","src":"2526:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3597,"mutability":"mutable","name":"deadline","nameLocation":"2543:8:15","nodeType":"VariableDeclaration","scope":3603,"src":"2538:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3596,"name":"uint","nodeType":"ElementaryTypeName","src":"2538:4:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2466:86:15"},"returnParameters":{"id":3602,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3601,"mutability":"mutable","name":"amounts","nameLocation":"2601:7:15","nodeType":"VariableDeclaration","scope":3603,"src":"2587:21:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":3599,"name":"uint","nodeType":"ElementaryTypeName","src":"2587:4:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3600,"nodeType":"ArrayTypeName","src":"2587:6:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"2586:23:15"},"scope":3691,"src":"2436:174:15","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"18cbafe5","id":3620,"implemented":false,"kind":"function","modifiers":[],"name":"swapExactTokensForETH","nameLocation":"2624:21:15","nodeType":"FunctionDefinition","parameters":{"id":3615,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3605,"mutability":"mutable","name":"amountIn","nameLocation":"2651:8:15","nodeType":"VariableDeclaration","scope":3620,"src":"2646:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3604,"name":"uint","nodeType":"ElementaryTypeName","src":"2646:4:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3607,"mutability":"mutable","name":"amountOutMin","nameLocation":"2666:12:15","nodeType":"VariableDeclaration","scope":3620,"src":"2661:17:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3606,"name":"uint","nodeType":"ElementaryTypeName","src":"2661:4:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3610,"mutability":"mutable","name":"path","nameLocation":"2699:4:15","nodeType":"VariableDeclaration","scope":3620,"src":"2680:23:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":3608,"name":"address","nodeType":"ElementaryTypeName","src":"2680:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3609,"nodeType":"ArrayTypeName","src":"2680:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":3612,"mutability":"mutable","name":"to","nameLocation":"2713:2:15","nodeType":"VariableDeclaration","scope":3620,"src":"2705:10:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3611,"name":"address","nodeType":"ElementaryTypeName","src":"2705:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3614,"mutability":"mutable","name":"deadline","nameLocation":"2722:8:15","nodeType":"VariableDeclaration","scope":3620,"src":"2717:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3613,"name":"uint","nodeType":"ElementaryTypeName","src":"2717:4:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2645:86:15"},"returnParameters":{"id":3619,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3618,"mutability":"mutable","name":"amounts","nameLocation":"2780:7:15","nodeType":"VariableDeclaration","scope":3620,"src":"2766:21:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":3616,"name":"uint","nodeType":"ElementaryTypeName","src":"2766:4:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3617,"nodeType":"ArrayTypeName","src":"2766:6:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"2765:23:15"},"scope":3691,"src":"2615:174:15","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"fb3bdb41","id":3635,"implemented":false,"kind":"function","modifiers":[],"name":"swapETHForExactTokens","nameLocation":"2803:21:15","nodeType":"FunctionDefinition","parameters":{"id":3630,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3622,"mutability":"mutable","name":"amountOut","nameLocation":"2830:9:15","nodeType":"VariableDeclaration","scope":3635,"src":"2825:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3621,"name":"uint","nodeType":"ElementaryTypeName","src":"2825:4:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3625,"mutability":"mutable","name":"path","nameLocation":"2860:4:15","nodeType":"VariableDeclaration","scope":3635,"src":"2841:23:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":3623,"name":"address","nodeType":"ElementaryTypeName","src":"2841:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3624,"nodeType":"ArrayTypeName","src":"2841:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":3627,"mutability":"mutable","name":"to","nameLocation":"2874:2:15","nodeType":"VariableDeclaration","scope":3635,"src":"2866:10:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3626,"name":"address","nodeType":"ElementaryTypeName","src":"2866:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3629,"mutability":"mutable","name":"deadline","nameLocation":"2883:8:15","nodeType":"VariableDeclaration","scope":3635,"src":"2878:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3628,"name":"uint","nodeType":"ElementaryTypeName","src":"2878:4:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2824:68:15"},"returnParameters":{"id":3634,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3633,"mutability":"mutable","name":"amounts","nameLocation":"2957:7:15","nodeType":"VariableDeclaration","scope":3635,"src":"2943:21:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":3631,"name":"uint","nodeType":"ElementaryTypeName","src":"2943:4:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3632,"nodeType":"ArrayTypeName","src":"2943:6:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"2942:23:15"},"scope":3691,"src":"2794:172:15","stateMutability":"payable","virtual":false,"visibility":"external"},{"functionSelector":"ad615dec","id":3646,"implemented":false,"kind":"function","modifiers":[],"name":"quote","nameLocation":"2981:5:15","nodeType":"FunctionDefinition","parameters":{"id":3642,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3637,"mutability":"mutable","name":"amountA","nameLocation":"2992:7:15","nodeType":"VariableDeclaration","scope":3646,"src":"2987:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3636,"name":"uint","nodeType":"ElementaryTypeName","src":"2987:4:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3639,"mutability":"mutable","name":"reserveA","nameLocation":"3006:8:15","nodeType":"VariableDeclaration","scope":3646,"src":"3001:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3638,"name":"uint","nodeType":"ElementaryTypeName","src":"3001:4:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3641,"mutability":"mutable","name":"reserveB","nameLocation":"3021:8:15","nodeType":"VariableDeclaration","scope":3646,"src":"3016:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3640,"name":"uint","nodeType":"ElementaryTypeName","src":"3016:4:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2986:44:15"},"returnParameters":{"id":3645,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3644,"mutability":"mutable","name":"amountB","nameLocation":"3059:7:15","nodeType":"VariableDeclaration","scope":3646,"src":"3054:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3643,"name":"uint","nodeType":"ElementaryTypeName","src":"3054:4:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3053:14:15"},"scope":3691,"src":"2972:96:15","stateMutability":"pure","virtual":false,"visibility":"external"},{"functionSelector":"054d50d4","id":3657,"implemented":false,"kind":"function","modifiers":[],"name":"getAmountOut","nameLocation":"3082:12:15","nodeType":"FunctionDefinition","parameters":{"id":3653,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3648,"mutability":"mutable","name":"amountIn","nameLocation":"3100:8:15","nodeType":"VariableDeclaration","scope":3657,"src":"3095:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3647,"name":"uint","nodeType":"ElementaryTypeName","src":"3095:4:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3650,"mutability":"mutable","name":"reserveIn","nameLocation":"3115:9:15","nodeType":"VariableDeclaration","scope":3657,"src":"3110:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3649,"name":"uint","nodeType":"ElementaryTypeName","src":"3110:4:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3652,"mutability":"mutable","name":"reserveOut","nameLocation":"3131:10:15","nodeType":"VariableDeclaration","scope":3657,"src":"3126:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3651,"name":"uint","nodeType":"ElementaryTypeName","src":"3126:4:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3094:48:15"},"returnParameters":{"id":3656,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3655,"mutability":"mutable","name":"amountOut","nameLocation":"3171:9:15","nodeType":"VariableDeclaration","scope":3657,"src":"3166:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3654,"name":"uint","nodeType":"ElementaryTypeName","src":"3166:4:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3165:16:15"},"scope":3691,"src":"3073:109:15","stateMutability":"pure","virtual":false,"visibility":"external"},{"functionSelector":"85f8c259","id":3668,"implemented":false,"kind":"function","modifiers":[],"name":"getAmountIn","nameLocation":"3196:11:15","nodeType":"FunctionDefinition","parameters":{"id":3664,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3659,"mutability":"mutable","name":"amountOut","nameLocation":"3213:9:15","nodeType":"VariableDeclaration","scope":3668,"src":"3208:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3658,"name":"uint","nodeType":"ElementaryTypeName","src":"3208:4:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3661,"mutability":"mutable","name":"reserveIn","nameLocation":"3229:9:15","nodeType":"VariableDeclaration","scope":3668,"src":"3224:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3660,"name":"uint","nodeType":"ElementaryTypeName","src":"3224:4:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3663,"mutability":"mutable","name":"reserveOut","nameLocation":"3245:10:15","nodeType":"VariableDeclaration","scope":3668,"src":"3240:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3662,"name":"uint","nodeType":"ElementaryTypeName","src":"3240:4:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3207:49:15"},"returnParameters":{"id":3667,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3666,"mutability":"mutable","name":"amountIn","nameLocation":"3285:8:15","nodeType":"VariableDeclaration","scope":3668,"src":"3280:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3665,"name":"uint","nodeType":"ElementaryTypeName","src":"3280:4:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3279:15:15"},"scope":3691,"src":"3187:108:15","stateMutability":"pure","virtual":false,"visibility":"external"},{"functionSelector":"d06ca61f","id":3679,"implemented":false,"kind":"function","modifiers":[],"name":"getAmountsOut","nameLocation":"3309:13:15","nodeType":"FunctionDefinition","parameters":{"id":3674,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3670,"mutability":"mutable","name":"amountIn","nameLocation":"3328:8:15","nodeType":"VariableDeclaration","scope":3679,"src":"3323:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3669,"name":"uint","nodeType":"ElementaryTypeName","src":"3323:4:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3673,"mutability":"mutable","name":"path","nameLocation":"3357:4:15","nodeType":"VariableDeclaration","scope":3679,"src":"3338:23:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":3671,"name":"address","nodeType":"ElementaryTypeName","src":"3338:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3672,"nodeType":"ArrayTypeName","src":"3338:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"3322:40:15"},"returnParameters":{"id":3678,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3677,"mutability":"mutable","name":"amounts","nameLocation":"3400:7:15","nodeType":"VariableDeclaration","scope":3679,"src":"3386:21:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":3675,"name":"uint","nodeType":"ElementaryTypeName","src":"3386:4:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3676,"nodeType":"ArrayTypeName","src":"3386:6:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"3385:23:15"},"scope":3691,"src":"3300:109:15","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"1f00ca74","id":3690,"implemented":false,"kind":"function","modifiers":[],"name":"getAmountsIn","nameLocation":"3423:12:15","nodeType":"FunctionDefinition","parameters":{"id":3685,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3681,"mutability":"mutable","name":"amountOut","nameLocation":"3441:9:15","nodeType":"VariableDeclaration","scope":3690,"src":"3436:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3680,"name":"uint","nodeType":"ElementaryTypeName","src":"3436:4:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3684,"mutability":"mutable","name":"path","nameLocation":"3471:4:15","nodeType":"VariableDeclaration","scope":3690,"src":"3452:23:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":3682,"name":"address","nodeType":"ElementaryTypeName","src":"3452:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3683,"nodeType":"ArrayTypeName","src":"3452:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"3435:41:15"},"returnParameters":{"id":3689,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3688,"mutability":"mutable","name":"amounts","nameLocation":"3514:7:15","nodeType":"VariableDeclaration","scope":3690,"src":"3500:21:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":3686,"name":"uint","nodeType":"ElementaryTypeName","src":"3500:4:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3687,"nodeType":"ArrayTypeName","src":"3500:6:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"3499:23:15"},"scope":3691,"src":"3414:109:15","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":3692,"src":"26:3499:15"}],"src":"0:3526:15"},"id":15},"@uniswap/v2-periphery/contracts/interfaces/IUniswapV2Router02.sol":{"ast":{"absolutePath":"@uniswap/v2-periphery/contracts/interfaces/IUniswapV2Router02.sol","exportedSymbols":{"IUniswapV2Router01":[3691],"IUniswapV2Router02":[3779]},"id":3780,"nodeType":"SourceUnit","nodes":[{"id":3693,"literals":["solidity",">=","0.6",".2"],"nodeType":"PragmaDirective","src":"0:24:16"},{"absolutePath":"@uniswap/v2-periphery/contracts/interfaces/IUniswapV2Router01.sol","file":"./IUniswapV2Router01.sol","id":3694,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3780,"sourceUnit":3692,"src":"26:34:16","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":3695,"name":"IUniswapV2Router01","nodeType":"IdentifierPath","referencedDeclaration":3691,"src":"94:18:16"},"id":3696,"nodeType":"InheritanceSpecifier","src":"94:18:16"}],"contractDependencies":[3691],"contractKind":"interface","fullyImplemented":false,"id":3779,"linearizedBaseContracts":[3779,3691],"name":"IUniswapV2Router02","nameLocation":"72:18:16","nodeType":"ContractDefinition","nodes":[{"functionSelector":"af2979eb","id":3713,"implemented":false,"kind":"function","modifiers":[],"name":"removeLiquidityETHSupportingFeeOnTransferTokens","nameLocation":"128:47:16","nodeType":"FunctionDefinition","parameters":{"id":3709,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3698,"mutability":"mutable","name":"token","nameLocation":"193:5:16","nodeType":"VariableDeclaration","scope":3713,"src":"185:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3697,"name":"address","nodeType":"ElementaryTypeName","src":"185:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3700,"mutability":"mutable","name":"liquidity","nameLocation":"213:9:16","nodeType":"VariableDeclaration","scope":3713,"src":"208:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3699,"name":"uint","nodeType":"ElementaryTypeName","src":"208:4:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3702,"mutability":"mutable","name":"amountTokenMin","nameLocation":"237:14:16","nodeType":"VariableDeclaration","scope":3713,"src":"232:19:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3701,"name":"uint","nodeType":"ElementaryTypeName","src":"232:4:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3704,"mutability":"mutable","name":"amountETHMin","nameLocation":"266:12:16","nodeType":"VariableDeclaration","scope":3713,"src":"261:17:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3703,"name":"uint","nodeType":"ElementaryTypeName","src":"261:4:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3706,"mutability":"mutable","name":"to","nameLocation":"296:2:16","nodeType":"VariableDeclaration","scope":3713,"src":"288:10:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3705,"name":"address","nodeType":"ElementaryTypeName","src":"288:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3708,"mutability":"mutable","name":"deadline","nameLocation":"313:8:16","nodeType":"VariableDeclaration","scope":3713,"src":"308:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3707,"name":"uint","nodeType":"ElementaryTypeName","src":"308:4:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"175:152:16"},"returnParameters":{"id":3712,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3711,"mutability":"mutable","name":"amountETH","nameLocation":"351:9:16","nodeType":"VariableDeclaration","scope":3713,"src":"346:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3710,"name":"uint","nodeType":"ElementaryTypeName","src":"346:4:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"345:16:16"},"scope":3779,"src":"119:243:16","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"5b0d5984","id":3738,"implemented":false,"kind":"function","modifiers":[],"name":"removeLiquidityETHWithPermitSupportingFeeOnTransferTokens","nameLocation":"376:57:16","nodeType":"FunctionDefinition","parameters":{"id":3734,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3715,"mutability":"mutable","name":"token","nameLocation":"451:5:16","nodeType":"VariableDeclaration","scope":3738,"src":"443:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3714,"name":"address","nodeType":"ElementaryTypeName","src":"443:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3717,"mutability":"mutable","name":"liquidity","nameLocation":"471:9:16","nodeType":"VariableDeclaration","scope":3738,"src":"466:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3716,"name":"uint","nodeType":"ElementaryTypeName","src":"466:4:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3719,"mutability":"mutable","name":"amountTokenMin","nameLocation":"495:14:16","nodeType":"VariableDeclaration","scope":3738,"src":"490:19:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3718,"name":"uint","nodeType":"ElementaryTypeName","src":"490:4:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3721,"mutability":"mutable","name":"amountETHMin","nameLocation":"524:12:16","nodeType":"VariableDeclaration","scope":3738,"src":"519:17:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3720,"name":"uint","nodeType":"ElementaryTypeName","src":"519:4:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3723,"mutability":"mutable","name":"to","nameLocation":"554:2:16","nodeType":"VariableDeclaration","scope":3738,"src":"546:10:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3722,"name":"address","nodeType":"ElementaryTypeName","src":"546:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3725,"mutability":"mutable","name":"deadline","nameLocation":"571:8:16","nodeType":"VariableDeclaration","scope":3738,"src":"566:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3724,"name":"uint","nodeType":"ElementaryTypeName","src":"566:4:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3727,"mutability":"mutable","name":"approveMax","nameLocation":"594:10:16","nodeType":"VariableDeclaration","scope":3738,"src":"589:15:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3726,"name":"bool","nodeType":"ElementaryTypeName","src":"589:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3729,"mutability":"mutable","name":"v","nameLocation":"612:1:16","nodeType":"VariableDeclaration","scope":3738,"src":"606:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":3728,"name":"uint8","nodeType":"ElementaryTypeName","src":"606:5:16","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":3731,"mutability":"mutable","name":"r","nameLocation":"623:1:16","nodeType":"VariableDeclaration","scope":3738,"src":"615:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3730,"name":"bytes32","nodeType":"ElementaryTypeName","src":"615:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3733,"mutability":"mutable","name":"s","nameLocation":"634:1:16","nodeType":"VariableDeclaration","scope":3738,"src":"626:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3732,"name":"bytes32","nodeType":"ElementaryTypeName","src":"626:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"433:208:16"},"returnParameters":{"id":3737,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3736,"mutability":"mutable","name":"amountETH","nameLocation":"665:9:16","nodeType":"VariableDeclaration","scope":3738,"src":"660:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3735,"name":"uint","nodeType":"ElementaryTypeName","src":"660:4:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"659:16:16"},"scope":3779,"src":"367:309:16","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"5c11d795","id":3752,"implemented":false,"kind":"function","modifiers":[],"name":"swapExactTokensForTokensSupportingFeeOnTransferTokens","nameLocation":"691:53:16","nodeType":"FunctionDefinition","parameters":{"id":3750,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3740,"mutability":"mutable","name":"amountIn","nameLocation":"759:8:16","nodeType":"VariableDeclaration","scope":3752,"src":"754:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3739,"name":"uint","nodeType":"ElementaryTypeName","src":"754:4:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3742,"mutability":"mutable","name":"amountOutMin","nameLocation":"782:12:16","nodeType":"VariableDeclaration","scope":3752,"src":"777:17:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3741,"name":"uint","nodeType":"ElementaryTypeName","src":"777:4:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3745,"mutability":"mutable","name":"path","nameLocation":"823:4:16","nodeType":"VariableDeclaration","scope":3752,"src":"804:23:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":3743,"name":"address","nodeType":"ElementaryTypeName","src":"804:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3744,"nodeType":"ArrayTypeName","src":"804:9:16","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":3747,"mutability":"mutable","name":"to","nameLocation":"845:2:16","nodeType":"VariableDeclaration","scope":3752,"src":"837:10:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3746,"name":"address","nodeType":"ElementaryTypeName","src":"837:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3749,"mutability":"mutable","name":"deadline","nameLocation":"862:8:16","nodeType":"VariableDeclaration","scope":3752,"src":"857:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3748,"name":"uint","nodeType":"ElementaryTypeName","src":"857:4:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"744:132:16"},"returnParameters":{"id":3751,"nodeType":"ParameterList","parameters":[],"src":"885:0:16"},"scope":3779,"src":"682:204:16","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"b6f9de95","id":3764,"implemented":false,"kind":"function","modifiers":[],"name":"swapExactETHForTokensSupportingFeeOnTransferTokens","nameLocation":"900:50:16","nodeType":"FunctionDefinition","parameters":{"id":3762,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3754,"mutability":"mutable","name":"amountOutMin","nameLocation":"965:12:16","nodeType":"VariableDeclaration","scope":3764,"src":"960:17:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3753,"name":"uint","nodeType":"ElementaryTypeName","src":"960:4:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3757,"mutability":"mutable","name":"path","nameLocation":"1006:4:16","nodeType":"VariableDeclaration","scope":3764,"src":"987:23:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":3755,"name":"address","nodeType":"ElementaryTypeName","src":"987:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3756,"nodeType":"ArrayTypeName","src":"987:9:16","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":3759,"mutability":"mutable","name":"to","nameLocation":"1028:2:16","nodeType":"VariableDeclaration","scope":3764,"src":"1020:10:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3758,"name":"address","nodeType":"ElementaryTypeName","src":"1020:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3761,"mutability":"mutable","name":"deadline","nameLocation":"1045:8:16","nodeType":"VariableDeclaration","scope":3764,"src":"1040:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3760,"name":"uint","nodeType":"ElementaryTypeName","src":"1040:4:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"950:109:16"},"returnParameters":{"id":3763,"nodeType":"ParameterList","parameters":[],"src":"1076:0:16"},"scope":3779,"src":"891:186:16","stateMutability":"payable","virtual":false,"visibility":"external"},{"functionSelector":"791ac947","id":3778,"implemented":false,"kind":"function","modifiers":[],"name":"swapExactTokensForETHSupportingFeeOnTransferTokens","nameLocation":"1091:50:16","nodeType":"FunctionDefinition","parameters":{"id":3776,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3766,"mutability":"mutable","name":"amountIn","nameLocation":"1156:8:16","nodeType":"VariableDeclaration","scope":3778,"src":"1151:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3765,"name":"uint","nodeType":"ElementaryTypeName","src":"1151:4:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3768,"mutability":"mutable","name":"amountOutMin","nameLocation":"1179:12:16","nodeType":"VariableDeclaration","scope":3778,"src":"1174:17:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3767,"name":"uint","nodeType":"ElementaryTypeName","src":"1174:4:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3771,"mutability":"mutable","name":"path","nameLocation":"1220:4:16","nodeType":"VariableDeclaration","scope":3778,"src":"1201:23:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":3769,"name":"address","nodeType":"ElementaryTypeName","src":"1201:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3770,"nodeType":"ArrayTypeName","src":"1201:9:16","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":3773,"mutability":"mutable","name":"to","nameLocation":"1242:2:16","nodeType":"VariableDeclaration","scope":3778,"src":"1234:10:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3772,"name":"address","nodeType":"ElementaryTypeName","src":"1234:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3775,"mutability":"mutable","name":"deadline","nameLocation":"1259:8:16","nodeType":"VariableDeclaration","scope":3778,"src":"1254:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3774,"name":"uint","nodeType":"ElementaryTypeName","src":"1254:4:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1141:132:16"},"returnParameters":{"id":3777,"nodeType":"ParameterList","parameters":[],"src":"1282:0:16"},"scope":3779,"src":"1082:201:16","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":3780,"src":"62:1223:16"}],"src":"0:1286:16"},"id":16},"@uniswap/v3-core/contracts/interfaces/IUniswapV3Factory.sol":{"ast":{"absolutePath":"@uniswap/v3-core/contracts/interfaces/IUniswapV3Factory.sol","exportedSymbols":{"IUniswapV3Factory":[3862]},"id":3863,"license":"GPL-2.0-or-later","nodeType":"SourceUnit","nodes":[{"id":3781,"literals":["solidity",">=","0.5",".0"],"nodeType":"PragmaDirective","src":"45:24:17"},{"abstract":false,"baseContracts":[],"contractDependencies":[],"contractKind":"interface","documentation":{"id":3782,"nodeType":"StructuredDocumentation","src":"71:163:17","text":"@title The interface for the Uniswap V3 Factory\n @notice The Uniswap V3 Factory facilitates creation of Uniswap V3 pools and control over the protocol fees"},"fullyImplemented":false,"id":3862,"linearizedBaseContracts":[3862],"name":"IUniswapV3Factory","nameLocation":"244:17:17","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":3783,"nodeType":"StructuredDocumentation","src":"268:185:17","text":"@notice Emitted when the owner of the factory is changed\n @param oldOwner The owner before the owner was changed\n @param newOwner The owner after the owner was changed"},"id":3789,"name":"OwnerChanged","nameLocation":"464:12:17","nodeType":"EventDefinition","parameters":{"id":3788,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3785,"indexed":true,"mutability":"mutable","name":"oldOwner","nameLocation":"493:8:17","nodeType":"VariableDeclaration","scope":3789,"src":"477:24:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3784,"name":"address","nodeType":"ElementaryTypeName","src":"477:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3787,"indexed":true,"mutability":"mutable","name":"newOwner","nameLocation":"519:8:17","nodeType":"VariableDeclaration","scope":3789,"src":"503:24:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3786,"name":"address","nodeType":"ElementaryTypeName","src":"503:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"476:52:17"},"src":"458:71:17"},{"anonymous":false,"documentation":{"id":3790,"nodeType":"StructuredDocumentation","src":"535:421:17","text":"@notice Emitted when a pool is created\n @param token0 The first token of the pool by address sort order\n @param token1 The second token of the pool by address sort order\n @param fee The fee collected upon every swap in the pool, denominated in hundredths of a bip\n @param tickSpacing The minimum number of ticks between initialized ticks\n @param pool The address of the created pool"},"id":3802,"name":"PoolCreated","nameLocation":"967:11:17","nodeType":"EventDefinition","parameters":{"id":3801,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3792,"indexed":true,"mutability":"mutable","name":"token0","nameLocation":"1004:6:17","nodeType":"VariableDeclaration","scope":3802,"src":"988:22:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3791,"name":"address","nodeType":"ElementaryTypeName","src":"988:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3794,"indexed":true,"mutability":"mutable","name":"token1","nameLocation":"1036:6:17","nodeType":"VariableDeclaration","scope":3802,"src":"1020:22:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3793,"name":"address","nodeType":"ElementaryTypeName","src":"1020:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3796,"indexed":true,"mutability":"mutable","name":"fee","nameLocation":"1067:3:17","nodeType":"VariableDeclaration","scope":3802,"src":"1052:18:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"},"typeName":{"id":3795,"name":"uint24","nodeType":"ElementaryTypeName","src":"1052:6:17","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"visibility":"internal"},{"constant":false,"id":3798,"indexed":false,"mutability":"mutable","name":"tickSpacing","nameLocation":"1086:11:17","nodeType":"VariableDeclaration","scope":3802,"src":"1080:17:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"},"typeName":{"id":3797,"name":"int24","nodeType":"ElementaryTypeName","src":"1080:5:17","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"visibility":"internal"},{"constant":false,"id":3800,"indexed":false,"mutability":"mutable","name":"pool","nameLocation":"1115:4:17","nodeType":"VariableDeclaration","scope":3802,"src":"1107:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3799,"name":"address","nodeType":"ElementaryTypeName","src":"1107:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"978:147:17"},"src":"961:165:17"},{"anonymous":false,"documentation":{"id":3803,"nodeType":"StructuredDocumentation","src":"1132:275:17","text":"@notice Emitted when a new fee amount is enabled for pool creation via the factory\n @param fee The enabled fee, denominated in hundredths of a bip\n @param tickSpacing The minimum number of ticks between initialized ticks for pools created with the given fee"},"id":3809,"name":"FeeAmountEnabled","nameLocation":"1418:16:17","nodeType":"EventDefinition","parameters":{"id":3808,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3805,"indexed":true,"mutability":"mutable","name":"fee","nameLocation":"1450:3:17","nodeType":"VariableDeclaration","scope":3809,"src":"1435:18:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"},"typeName":{"id":3804,"name":"uint24","nodeType":"ElementaryTypeName","src":"1435:6:17","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"visibility":"internal"},{"constant":false,"id":3807,"indexed":true,"mutability":"mutable","name":"tickSpacing","nameLocation":"1469:11:17","nodeType":"VariableDeclaration","scope":3809,"src":"1455:25:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"},"typeName":{"id":3806,"name":"int24","nodeType":"ElementaryTypeName","src":"1455:5:17","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"visibility":"internal"}],"src":"1434:47:17"},"src":"1412:70:17"},{"documentation":{"id":3810,"nodeType":"StructuredDocumentation","src":"1488:163:17","text":"@notice Returns the current owner of the factory\n @dev Can be changed by the current owner via setOwner\n @return The address of the factory owner"},"functionSelector":"8da5cb5b","id":3815,"implemented":false,"kind":"function","modifiers":[],"name":"owner","nameLocation":"1665:5:17","nodeType":"FunctionDefinition","parameters":{"id":3811,"nodeType":"ParameterList","parameters":[],"src":"1670:2:17"},"returnParameters":{"id":3814,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3813,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3815,"src":"1696:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3812,"name":"address","nodeType":"ElementaryTypeName","src":"1696:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1695:9:17"},"scope":3862,"src":"1656:49:17","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":3816,"nodeType":"StructuredDocumentation","src":"1711:348:17","text":"@notice Returns the tick spacing for a given fee amount, if enabled, or 0 if not enabled\n @dev A fee amount can never be removed, so this value should be hard coded or cached in the calling context\n @param fee The enabled fee, denominated in hundredths of a bip. Returns 0 in case of unenabled fee\n @return The tick spacing"},"functionSelector":"22afcccb","id":3823,"implemented":false,"kind":"function","modifiers":[],"name":"feeAmountTickSpacing","nameLocation":"2073:20:17","nodeType":"FunctionDefinition","parameters":{"id":3819,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3818,"mutability":"mutable","name":"fee","nameLocation":"2101:3:17","nodeType":"VariableDeclaration","scope":3823,"src":"2094:10:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"},"typeName":{"id":3817,"name":"uint24","nodeType":"ElementaryTypeName","src":"2094:6:17","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"visibility":"internal"}],"src":"2093:12:17"},"returnParameters":{"id":3822,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3821,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3823,"src":"2129:5:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"},"typeName":{"id":3820,"name":"int24","nodeType":"ElementaryTypeName","src":"2129:5:17","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"visibility":"internal"}],"src":"2128:7:17"},"scope":3862,"src":"2064:72:17","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":3824,"nodeType":"StructuredDocumentation","src":"2142:471:17","text":"@notice Returns the pool address for a given pair of tokens and a fee, or address 0 if it does not exist\n @dev tokenA and tokenB may be passed in either token0/token1 or token1/token0 order\n @param tokenA The contract address of either token0 or token1\n @param tokenB The contract address of the other token\n @param fee The fee collected upon every swap in the pool, denominated in hundredths of a bip\n @return pool The pool address"},"functionSelector":"1698ee82","id":3835,"implemented":false,"kind":"function","modifiers":[],"name":"getPool","nameLocation":"2627:7:17","nodeType":"FunctionDefinition","parameters":{"id":3831,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3826,"mutability":"mutable","name":"tokenA","nameLocation":"2652:6:17","nodeType":"VariableDeclaration","scope":3835,"src":"2644:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3825,"name":"address","nodeType":"ElementaryTypeName","src":"2644:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3828,"mutability":"mutable","name":"tokenB","nameLocation":"2676:6:17","nodeType":"VariableDeclaration","scope":3835,"src":"2668:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3827,"name":"address","nodeType":"ElementaryTypeName","src":"2668:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3830,"mutability":"mutable","name":"fee","nameLocation":"2699:3:17","nodeType":"VariableDeclaration","scope":3835,"src":"2692:10:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"},"typeName":{"id":3829,"name":"uint24","nodeType":"ElementaryTypeName","src":"2692:6:17","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"visibility":"internal"}],"src":"2634:74:17"},"returnParameters":{"id":3834,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3833,"mutability":"mutable","name":"pool","nameLocation":"2740:4:17","nodeType":"VariableDeclaration","scope":3835,"src":"2732:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3832,"name":"address","nodeType":"ElementaryTypeName","src":"2732:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2731:14:17"},"scope":3862,"src":"2618:128:17","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":3836,"nodeType":"StructuredDocumentation","src":"2752:554:17","text":"@notice Creates a pool for the given two tokens and fee\n @param tokenA One of the two tokens in the desired pool\n @param tokenB The other of the two tokens in the desired pool\n @param fee The desired fee for the pool\n @dev tokenA and tokenB may be passed in either order: token0/token1 or token1/token0. tickSpacing is retrieved\n from the fee. The call will revert if the pool already exists, the fee is invalid, or the token arguments\n are invalid.\n @return pool The address of the newly created pool"},"functionSelector":"a1671295","id":3847,"implemented":false,"kind":"function","modifiers":[],"name":"createPool","nameLocation":"3320:10:17","nodeType":"FunctionDefinition","parameters":{"id":3843,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3838,"mutability":"mutable","name":"tokenA","nameLocation":"3348:6:17","nodeType":"VariableDeclaration","scope":3847,"src":"3340:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3837,"name":"address","nodeType":"ElementaryTypeName","src":"3340:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3840,"mutability":"mutable","name":"tokenB","nameLocation":"3372:6:17","nodeType":"VariableDeclaration","scope":3847,"src":"3364:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3839,"name":"address","nodeType":"ElementaryTypeName","src":"3364:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3842,"mutability":"mutable","name":"fee","nameLocation":"3395:3:17","nodeType":"VariableDeclaration","scope":3847,"src":"3388:10:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"},"typeName":{"id":3841,"name":"uint24","nodeType":"ElementaryTypeName","src":"3388:6:17","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"visibility":"internal"}],"src":"3330:74:17"},"returnParameters":{"id":3846,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3845,"mutability":"mutable","name":"pool","nameLocation":"3431:4:17","nodeType":"VariableDeclaration","scope":3847,"src":"3423:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3844,"name":"address","nodeType":"ElementaryTypeName","src":"3423:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3422:14:17"},"scope":3862,"src":"3311:126:17","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":3848,"nodeType":"StructuredDocumentation","src":"3443:144:17","text":"@notice Updates the owner of the factory\n @dev Must be called by the current owner\n @param _owner The new owner of the factory"},"functionSelector":"13af4035","id":3853,"implemented":false,"kind":"function","modifiers":[],"name":"setOwner","nameLocation":"3601:8:17","nodeType":"FunctionDefinition","parameters":{"id":3851,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3850,"mutability":"mutable","name":"_owner","nameLocation":"3618:6:17","nodeType":"VariableDeclaration","scope":3853,"src":"3610:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3849,"name":"address","nodeType":"ElementaryTypeName","src":"3610:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3609:16:17"},"returnParameters":{"id":3852,"nodeType":"ParameterList","parameters":[],"src":"3634:0:17"},"scope":3862,"src":"3592:43:17","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":3854,"nodeType":"StructuredDocumentation","src":"3641:326:17","text":"@notice Enables a fee amount with the given tickSpacing\n @dev Fee amounts may never be removed once enabled\n @param fee The fee amount to enable, denominated in hundredths of a bip (i.e. 1e-6)\n @param tickSpacing The spacing between ticks to be enforced for all pools created with the given fee amount"},"functionSelector":"8a7c195f","id":3861,"implemented":false,"kind":"function","modifiers":[],"name":"enableFeeAmount","nameLocation":"3981:15:17","nodeType":"FunctionDefinition","parameters":{"id":3859,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3856,"mutability":"mutable","name":"fee","nameLocation":"4004:3:17","nodeType":"VariableDeclaration","scope":3861,"src":"3997:10:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"},"typeName":{"id":3855,"name":"uint24","nodeType":"ElementaryTypeName","src":"3997:6:17","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"visibility":"internal"},{"constant":false,"id":3858,"mutability":"mutable","name":"tickSpacing","nameLocation":"4015:11:17","nodeType":"VariableDeclaration","scope":3861,"src":"4009:17:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"},"typeName":{"id":3857,"name":"int24","nodeType":"ElementaryTypeName","src":"4009:5:17","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"visibility":"internal"}],"src":"3996:31:17"},"returnParameters":{"id":3860,"nodeType":"ParameterList","parameters":[],"src":"4036:0:17"},"scope":3862,"src":"3972:65:17","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":3863,"src":"234:3805:17"}],"src":"45:3995:17"},"id":17},"@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol":{"ast":{"absolutePath":"@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol","exportedSymbols":{"IUniswapV3SwapCallback":[3876]},"id":3877,"license":"GPL-2.0-or-later","nodeType":"SourceUnit","nodes":[{"id":3864,"literals":["solidity",">=","0.5",".0"],"nodeType":"PragmaDirective","src":"45:24:18"},{"abstract":false,"baseContracts":[],"contractDependencies":[],"contractKind":"interface","documentation":{"id":3865,"nodeType":"StructuredDocumentation","src":"71:144:18","text":"@title Callback for IUniswapV3PoolActions#swap\n @notice Any contract that calls IUniswapV3PoolActions#swap must implement this interface"},"fullyImplemented":false,"id":3876,"linearizedBaseContracts":[3876],"name":"IUniswapV3SwapCallback","nameLocation":"225:22:18","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":3866,"nodeType":"StructuredDocumentation","src":"254:898:18","text":"@notice Called to `msg.sender` after executing a swap via IUniswapV3Pool#swap.\n @dev In the implementation you must pay the pool tokens owed for the swap.\n The caller of this method must be checked to be a UniswapV3Pool deployed by the canonical UniswapV3Factory.\n amount0Delta and amount1Delta can both be 0 if no tokens were swapped.\n @param amount0Delta The amount of token0 that was sent (negative) or must be received (positive) by the pool by\n the end of the swap. If positive, the callback must send that amount of token0 to the pool.\n @param amount1Delta The amount of token1 that was sent (negative) or must be received (positive) by the pool by\n the end of the swap. If positive, the callback must send that amount of token1 to the pool.\n @param data Any data passed through by the caller via the IUniswapV3PoolActions#swap call"},"functionSelector":"fa461e33","id":3875,"implemented":false,"kind":"function","modifiers":[],"name":"uniswapV3SwapCallback","nameLocation":"1166:21:18","nodeType":"FunctionDefinition","parameters":{"id":3873,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3868,"mutability":"mutable","name":"amount0Delta","nameLocation":"1204:12:18","nodeType":"VariableDeclaration","scope":3875,"src":"1197:19:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3867,"name":"int256","nodeType":"ElementaryTypeName","src":"1197:6:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":3870,"mutability":"mutable","name":"amount1Delta","nameLocation":"1233:12:18","nodeType":"VariableDeclaration","scope":3875,"src":"1226:19:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3869,"name":"int256","nodeType":"ElementaryTypeName","src":"1226:6:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":3872,"mutability":"mutable","name":"data","nameLocation":"1270:4:18","nodeType":"VariableDeclaration","scope":3875,"src":"1255:19:18","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":3871,"name":"bytes","nodeType":"ElementaryTypeName","src":"1255:5:18","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1187:93:18"},"returnParameters":{"id":3874,"nodeType":"ParameterList","parameters":[],"src":"1289:0:18"},"scope":3876,"src":"1157:133:18","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":3877,"src":"215:1077:18"}],"src":"45:1248:18"},"id":18},"@uniswap/v3-periphery/contracts/interfaces/IPeripheryImmutableState.sol":{"ast":{"absolutePath":"@uniswap/v3-periphery/contracts/interfaces/IPeripheryImmutableState.sol","exportedSymbols":{"IPeripheryImmutableState":[3892]},"id":3893,"license":"GPL-2.0-or-later","nodeType":"SourceUnit","nodes":[{"id":3878,"literals":["solidity",">=","0.5",".0"],"nodeType":"PragmaDirective","src":"45:24:19"},{"abstract":false,"baseContracts":[],"contractDependencies":[],"contractKind":"interface","documentation":{"id":3879,"nodeType":"StructuredDocumentation","src":"71:91:19","text":"@title Immutable state\n @notice Functions that return immutable state of the router"},"fullyImplemented":false,"id":3892,"linearizedBaseContracts":[3892],"name":"IPeripheryImmutableState","nameLocation":"172:24:19","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":3880,"nodeType":"StructuredDocumentation","src":"203:57:19","text":"@return Returns the address of the Uniswap V3 factory"},"functionSelector":"c45a0155","id":3885,"implemented":false,"kind":"function","modifiers":[],"name":"factory","nameLocation":"274:7:19","nodeType":"FunctionDefinition","parameters":{"id":3881,"nodeType":"ParameterList","parameters":[],"src":"281:2:19"},"returnParameters":{"id":3884,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3883,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3885,"src":"307:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3882,"name":"address","nodeType":"ElementaryTypeName","src":"307:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"306:9:19"},"scope":3892,"src":"265:51:19","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":3886,"nodeType":"StructuredDocumentation","src":"322:40:19","text":"@return Returns the address of WETH9"},"functionSelector":"4aa4a4fc","id":3891,"implemented":false,"kind":"function","modifiers":[],"name":"WETH9","nameLocation":"376:5:19","nodeType":"FunctionDefinition","parameters":{"id":3887,"nodeType":"ParameterList","parameters":[],"src":"381:2:19"},"returnParameters":{"id":3890,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3889,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3891,"src":"407:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3888,"name":"address","nodeType":"ElementaryTypeName","src":"407:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"406:9:19"},"scope":3892,"src":"367:49:19","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":3893,"src":"162:256:19"}],"src":"45:374:19"},"id":19},"@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol":{"ast":{"absolutePath":"@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol","exportedSymbols":{"ISwapRouter":[3992],"IUniswapV3SwapCallback":[3876]},"id":3993,"license":"GPL-2.0-or-later","nodeType":"SourceUnit","nodes":[{"id":3894,"literals":["solidity",">=","0.7",".5"],"nodeType":"PragmaDirective","src":"45:24:20"},{"id":3895,"literals":["abicoder","v2"],"nodeType":"PragmaDirective","src":"70:19:20"},{"absolutePath":"@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol","file":"@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol","id":3896,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3993,"sourceUnit":3877,"src":"91:83:20","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":3898,"name":"IUniswapV3SwapCallback","nodeType":"IdentifierPath","referencedDeclaration":3876,"src":"305:22:20"},"id":3899,"nodeType":"InheritanceSpecifier","src":"305:22:20"}],"contractDependencies":[3876],"contractKind":"interface","documentation":{"id":3897,"nodeType":"StructuredDocumentation","src":"176:104:20","text":"@title Router token swapping functionality\n @notice Functions for swapping tokens via Uniswap V3"},"fullyImplemented":false,"id":3992,"linearizedBaseContracts":[3992,3876],"name":"ISwapRouter","nameLocation":"290:11:20","nodeType":"ContractDefinition","nodes":[{"canonicalName":"ISwapRouter.ExactInputSingleParams","id":3916,"members":[{"constant":false,"id":3901,"mutability":"mutable","name":"tokenIn","nameLocation":"382:7:20","nodeType":"VariableDeclaration","scope":3916,"src":"374:15:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3900,"name":"address","nodeType":"ElementaryTypeName","src":"374:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3903,"mutability":"mutable","name":"tokenOut","nameLocation":"407:8:20","nodeType":"VariableDeclaration","scope":3916,"src":"399:16:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3902,"name":"address","nodeType":"ElementaryTypeName","src":"399:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3905,"mutability":"mutable","name":"fee","nameLocation":"432:3:20","nodeType":"VariableDeclaration","scope":3916,"src":"425:10:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"},"typeName":{"id":3904,"name":"uint24","nodeType":"ElementaryTypeName","src":"425:6:20","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"visibility":"internal"},{"constant":false,"id":3907,"mutability":"mutable","name":"recipient","nameLocation":"453:9:20","nodeType":"VariableDeclaration","scope":3916,"src":"445:17:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3906,"name":"address","nodeType":"ElementaryTypeName","src":"445:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3909,"mutability":"mutable","name":"deadline","nameLocation":"480:8:20","nodeType":"VariableDeclaration","scope":3916,"src":"472:16:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3908,"name":"uint256","nodeType":"ElementaryTypeName","src":"472:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3911,"mutability":"mutable","name":"amountIn","nameLocation":"506:8:20","nodeType":"VariableDeclaration","scope":3916,"src":"498:16:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3910,"name":"uint256","nodeType":"ElementaryTypeName","src":"498:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3913,"mutability":"mutable","name":"amountOutMinimum","nameLocation":"532:16:20","nodeType":"VariableDeclaration","scope":3916,"src":"524:24:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3912,"name":"uint256","nodeType":"ElementaryTypeName","src":"524:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3915,"mutability":"mutable","name":"sqrtPriceLimitX96","nameLocation":"566:17:20","nodeType":"VariableDeclaration","scope":3916,"src":"558:25:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"},"typeName":{"id":3914,"name":"uint160","nodeType":"ElementaryTypeName","src":"558:7:20","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"visibility":"internal"}],"name":"ExactInputSingleParams","nameLocation":"341:22:20","nodeType":"StructDefinition","scope":3992,"src":"334:256:20","visibility":"public"},{"documentation":{"id":3917,"nodeType":"StructuredDocumentation","src":"596:250:20","text":"@notice Swaps `amountIn` of one token for as much as possible of another token\n @param params The parameters necessary for the swap, encoded as `ExactInputSingleParams` in calldata\n @return amountOut The amount of the received token"},"functionSelector":"414bf389","id":3925,"implemented":false,"kind":"function","modifiers":[],"name":"exactInputSingle","nameLocation":"860:16:20","nodeType":"FunctionDefinition","parameters":{"id":3921,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3920,"mutability":"mutable","name":"params","nameLocation":"909:6:20","nodeType":"VariableDeclaration","scope":3925,"src":"877:38:20","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_ExactInputSingleParams_$3916_calldata_ptr","typeString":"struct ISwapRouter.ExactInputSingleParams"},"typeName":{"id":3919,"nodeType":"UserDefinedTypeName","pathNode":{"id":3918,"name":"ExactInputSingleParams","nodeType":"IdentifierPath","referencedDeclaration":3916,"src":"877:22:20"},"referencedDeclaration":3916,"src":"877:22:20","typeDescriptions":{"typeIdentifier":"t_struct$_ExactInputSingleParams_$3916_storage_ptr","typeString":"struct ISwapRouter.ExactInputSingleParams"}},"visibility":"internal"}],"src":"876:40:20"},"returnParameters":{"id":3924,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3923,"mutability":"mutable","name":"amountOut","nameLocation":"951:9:20","nodeType":"VariableDeclaration","scope":3925,"src":"943:17:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3922,"name":"uint256","nodeType":"ElementaryTypeName","src":"943:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"942:19:20"},"scope":3992,"src":"851:111:20","stateMutability":"payable","virtual":false,"visibility":"external"},{"canonicalName":"ISwapRouter.ExactInputParams","id":3936,"members":[{"constant":false,"id":3927,"mutability":"mutable","name":"path","nameLocation":"1008:4:20","nodeType":"VariableDeclaration","scope":3936,"src":"1002:10:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":3926,"name":"bytes","nodeType":"ElementaryTypeName","src":"1002:5:20","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":3929,"mutability":"mutable","name":"recipient","nameLocation":"1030:9:20","nodeType":"VariableDeclaration","scope":3936,"src":"1022:17:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3928,"name":"address","nodeType":"ElementaryTypeName","src":"1022:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3931,"mutability":"mutable","name":"deadline","nameLocation":"1057:8:20","nodeType":"VariableDeclaration","scope":3936,"src":"1049:16:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3930,"name":"uint256","nodeType":"ElementaryTypeName","src":"1049:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3933,"mutability":"mutable","name":"amountIn","nameLocation":"1083:8:20","nodeType":"VariableDeclaration","scope":3936,"src":"1075:16:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3932,"name":"uint256","nodeType":"ElementaryTypeName","src":"1075:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3935,"mutability":"mutable","name":"amountOutMinimum","nameLocation":"1109:16:20","nodeType":"VariableDeclaration","scope":3936,"src":"1101:24:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3934,"name":"uint256","nodeType":"ElementaryTypeName","src":"1101:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"ExactInputParams","nameLocation":"975:16:20","nodeType":"StructDefinition","scope":3992,"src":"968:164:20","visibility":"public"},{"documentation":{"id":3937,"nodeType":"StructuredDocumentation","src":"1138:273:20","text":"@notice Swaps `amountIn` of one token for as much as possible of another along the specified path\n @param params The parameters necessary for the multi-hop swap, encoded as `ExactInputParams` in calldata\n @return amountOut The amount of the received token"},"functionSelector":"c04b8d59","id":3945,"implemented":false,"kind":"function","modifiers":[],"name":"exactInput","nameLocation":"1425:10:20","nodeType":"FunctionDefinition","parameters":{"id":3941,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3940,"mutability":"mutable","name":"params","nameLocation":"1462:6:20","nodeType":"VariableDeclaration","scope":3945,"src":"1436:32:20","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_ExactInputParams_$3936_calldata_ptr","typeString":"struct ISwapRouter.ExactInputParams"},"typeName":{"id":3939,"nodeType":"UserDefinedTypeName","pathNode":{"id":3938,"name":"ExactInputParams","nodeType":"IdentifierPath","referencedDeclaration":3936,"src":"1436:16:20"},"referencedDeclaration":3936,"src":"1436:16:20","typeDescriptions":{"typeIdentifier":"t_struct$_ExactInputParams_$3936_storage_ptr","typeString":"struct ISwapRouter.ExactInputParams"}},"visibility":"internal"}],"src":"1435:34:20"},"returnParameters":{"id":3944,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3943,"mutability":"mutable","name":"amountOut","nameLocation":"1504:9:20","nodeType":"VariableDeclaration","scope":3945,"src":"1496:17:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3942,"name":"uint256","nodeType":"ElementaryTypeName","src":"1496:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1495:19:20"},"scope":3992,"src":"1416:99:20","stateMutability":"payable","virtual":false,"visibility":"external"},{"canonicalName":"ISwapRouter.ExactOutputSingleParams","id":3962,"members":[{"constant":false,"id":3947,"mutability":"mutable","name":"tokenIn","nameLocation":"1570:7:20","nodeType":"VariableDeclaration","scope":3962,"src":"1562:15:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3946,"name":"address","nodeType":"ElementaryTypeName","src":"1562:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3949,"mutability":"mutable","name":"tokenOut","nameLocation":"1595:8:20","nodeType":"VariableDeclaration","scope":3962,"src":"1587:16:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3948,"name":"address","nodeType":"ElementaryTypeName","src":"1587:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3951,"mutability":"mutable","name":"fee","nameLocation":"1620:3:20","nodeType":"VariableDeclaration","scope":3962,"src":"1613:10:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"},"typeName":{"id":3950,"name":"uint24","nodeType":"ElementaryTypeName","src":"1613:6:20","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"visibility":"internal"},{"constant":false,"id":3953,"mutability":"mutable","name":"recipient","nameLocation":"1641:9:20","nodeType":"VariableDeclaration","scope":3962,"src":"1633:17:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3952,"name":"address","nodeType":"ElementaryTypeName","src":"1633:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3955,"mutability":"mutable","name":"deadline","nameLocation":"1668:8:20","nodeType":"VariableDeclaration","scope":3962,"src":"1660:16:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3954,"name":"uint256","nodeType":"ElementaryTypeName","src":"1660:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3957,"mutability":"mutable","name":"amountOut","nameLocation":"1694:9:20","nodeType":"VariableDeclaration","scope":3962,"src":"1686:17:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3956,"name":"uint256","nodeType":"ElementaryTypeName","src":"1686:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3959,"mutability":"mutable","name":"amountInMaximum","nameLocation":"1721:15:20","nodeType":"VariableDeclaration","scope":3962,"src":"1713:23:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3958,"name":"uint256","nodeType":"ElementaryTypeName","src":"1713:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3961,"mutability":"mutable","name":"sqrtPriceLimitX96","nameLocation":"1754:17:20","nodeType":"VariableDeclaration","scope":3962,"src":"1746:25:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"},"typeName":{"id":3960,"name":"uint160","nodeType":"ElementaryTypeName","src":"1746:7:20","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"visibility":"internal"}],"name":"ExactOutputSingleParams","nameLocation":"1528:23:20","nodeType":"StructDefinition","scope":3992,"src":"1521:257:20","visibility":"public"},{"documentation":{"id":3963,"nodeType":"StructuredDocumentation","src":"1784:250:20","text":"@notice Swaps as little as possible of one token for `amountOut` of another token\n @param params The parameters necessary for the swap, encoded as `ExactOutputSingleParams` in calldata\n @return amountIn The amount of the input token"},"functionSelector":"db3e2198","id":3971,"implemented":false,"kind":"function","modifiers":[],"name":"exactOutputSingle","nameLocation":"2048:17:20","nodeType":"FunctionDefinition","parameters":{"id":3967,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3966,"mutability":"mutable","name":"params","nameLocation":"2099:6:20","nodeType":"VariableDeclaration","scope":3971,"src":"2066:39:20","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_ExactOutputSingleParams_$3962_calldata_ptr","typeString":"struct ISwapRouter.ExactOutputSingleParams"},"typeName":{"id":3965,"nodeType":"UserDefinedTypeName","pathNode":{"id":3964,"name":"ExactOutputSingleParams","nodeType":"IdentifierPath","referencedDeclaration":3962,"src":"2066:23:20"},"referencedDeclaration":3962,"src":"2066:23:20","typeDescriptions":{"typeIdentifier":"t_struct$_ExactOutputSingleParams_$3962_storage_ptr","typeString":"struct ISwapRouter.ExactOutputSingleParams"}},"visibility":"internal"}],"src":"2065:41:20"},"returnParameters":{"id":3970,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3969,"mutability":"mutable","name":"amountIn","nameLocation":"2141:8:20","nodeType":"VariableDeclaration","scope":3971,"src":"2133:16:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3968,"name":"uint256","nodeType":"ElementaryTypeName","src":"2133:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2132:18:20"},"scope":3992,"src":"2039:112:20","stateMutability":"payable","virtual":false,"visibility":"external"},{"canonicalName":"ISwapRouter.ExactOutputParams","id":3982,"members":[{"constant":false,"id":3973,"mutability":"mutable","name":"path","nameLocation":"2198:4:20","nodeType":"VariableDeclaration","scope":3982,"src":"2192:10:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":3972,"name":"bytes","nodeType":"ElementaryTypeName","src":"2192:5:20","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":3975,"mutability":"mutable","name":"recipient","nameLocation":"2220:9:20","nodeType":"VariableDeclaration","scope":3982,"src":"2212:17:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3974,"name":"address","nodeType":"ElementaryTypeName","src":"2212:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3977,"mutability":"mutable","name":"deadline","nameLocation":"2247:8:20","nodeType":"VariableDeclaration","scope":3982,"src":"2239:16:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3976,"name":"uint256","nodeType":"ElementaryTypeName","src":"2239:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3979,"mutability":"mutable","name":"amountOut","nameLocation":"2273:9:20","nodeType":"VariableDeclaration","scope":3982,"src":"2265:17:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3978,"name":"uint256","nodeType":"ElementaryTypeName","src":"2265:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3981,"mutability":"mutable","name":"amountInMaximum","nameLocation":"2300:15:20","nodeType":"VariableDeclaration","scope":3982,"src":"2292:23:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3980,"name":"uint256","nodeType":"ElementaryTypeName","src":"2292:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"ExactOutputParams","nameLocation":"2164:17:20","nodeType":"StructDefinition","scope":3992,"src":"2157:165:20","visibility":"public"},{"documentation":{"id":3983,"nodeType":"StructuredDocumentation","src":"2328:284:20","text":"@notice Swaps as little as possible of one token for `amountOut` of another along the specified path (reversed)\n @param params The parameters necessary for the multi-hop swap, encoded as `ExactOutputParams` in calldata\n @return amountIn The amount of the input token"},"functionSelector":"f28c0498","id":3991,"implemented":false,"kind":"function","modifiers":[],"name":"exactOutput","nameLocation":"2626:11:20","nodeType":"FunctionDefinition","parameters":{"id":3987,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3986,"mutability":"mutable","name":"params","nameLocation":"2665:6:20","nodeType":"VariableDeclaration","scope":3991,"src":"2638:33:20","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_ExactOutputParams_$3982_calldata_ptr","typeString":"struct ISwapRouter.ExactOutputParams"},"typeName":{"id":3985,"nodeType":"UserDefinedTypeName","pathNode":{"id":3984,"name":"ExactOutputParams","nodeType":"IdentifierPath","referencedDeclaration":3982,"src":"2638:17:20"},"referencedDeclaration":3982,"src":"2638:17:20","typeDescriptions":{"typeIdentifier":"t_struct$_ExactOutputParams_$3982_storage_ptr","typeString":"struct ISwapRouter.ExactOutputParams"}},"visibility":"internal"}],"src":"2637:35:20"},"returnParameters":{"id":3990,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3989,"mutability":"mutable","name":"amountIn","nameLocation":"2707:8:20","nodeType":"VariableDeclaration","scope":3991,"src":"2699:16:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3988,"name":"uint256","nodeType":"ElementaryTypeName","src":"2699:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2698:18:20"},"scope":3992,"src":"2617:100:20","stateMutability":"payable","virtual":false,"visibility":"external"}],"scope":3993,"src":"280:2439:20"}],"src":"45:2675:20"},"id":20},"contracts/ISwapConnector.sol":{"ast":{"absolutePath":"contracts/ISwapConnector.sol","exportedSymbols":{"IImplementation":[542],"ISwapConnector":[4024]},"id":4025,"license":"GPL-3.0-or-later","nodeType":"SourceUnit","nodes":[{"id":3994,"literals":["solidity",">=","0.8",".0"],"nodeType":"PragmaDirective","src":"688:24:21"},{"absolutePath":"@mimic-fi/v2-registry/contracts/implementations/IImplementation.sol","file":"@mimic-fi/v2-registry/contracts/implementations/IImplementation.sol","id":3995,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4025,"sourceUnit":543,"src":"714:77:21","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":3997,"name":"IImplementation","nodeType":"IdentifierPath","referencedDeclaration":542,"src":"957:15:21"},"id":3998,"nodeType":"InheritanceSpecifier","src":"957:15:21"}],"contractDependencies":[542],"contractKind":"interface","documentation":{"id":3996,"nodeType":"StructuredDocumentation","src":"793:135:21","text":" @title ISwapConnector\n @dev Swap Connector interface to perform token swaps. It must follow the IImplementation interface."},"fullyImplemented":false,"id":4024,"linearizedBaseContracts":[4024,542],"name":"ISwapConnector","nameLocation":"939:14:21","nodeType":"ContractDefinition","nodes":[{"canonicalName":"ISwapConnector.Source","id":4005,"members":[{"id":3999,"name":"UniswapV2","nameLocation":"1137:9:21","nodeType":"EnumValue","src":"1137:9:21"},{"id":4000,"name":"UniswapV3","nameLocation":"1156:9:21","nodeType":"EnumValue","src":"1156:9:21"},{"id":4001,"name":"BalancerV2","nameLocation":"1175:10:21","nodeType":"EnumValue","src":"1175:10:21"},{"id":4002,"name":"ParaswapV5","nameLocation":"1195:10:21","nodeType":"EnumValue","src":"1195:10:21"},{"id":4003,"name":"OneInchV5","nameLocation":"1215:9:21","nodeType":"EnumValue","src":"1215:9:21"},{"id":4004,"name":"Hop","nameLocation":"1234:3:21","nodeType":"EnumValue","src":"1234:3:21"}],"name":"Source","nameLocation":"1120:6:21","nodeType":"EnumDefinition","src":"1115:128:21"},{"documentation":{"id":4006,"nodeType":"StructuredDocumentation","src":"1249:409:21","text":" @dev Swaps two tokens\n @param source Source to execute the requested swap\n @param tokenIn Token being sent\n @param tokenOut Token being received\n @param amountIn Amount of tokenIn being swapped\n @param minAmountOut Minimum amount of tokenOut willing to receive\n @param data Encoded data to specify different swap parameters depending on the source picked"},"functionSelector":"a231a780","id":4023,"implemented":false,"kind":"function","modifiers":[],"name":"swap","nameLocation":"1672:4:21","nodeType":"FunctionDefinition","parameters":{"id":4019,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4008,"mutability":"mutable","name":"source","nameLocation":"1692:6:21","nodeType":"VariableDeclaration","scope":4023,"src":"1686:12:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":4007,"name":"uint8","nodeType":"ElementaryTypeName","src":"1686:5:21","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":4010,"mutability":"mutable","name":"tokenIn","nameLocation":"1716:7:21","nodeType":"VariableDeclaration","scope":4023,"src":"1708:15:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4009,"name":"address","nodeType":"ElementaryTypeName","src":"1708:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4012,"mutability":"mutable","name":"tokenOut","nameLocation":"1741:8:21","nodeType":"VariableDeclaration","scope":4023,"src":"1733:16:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4011,"name":"address","nodeType":"ElementaryTypeName","src":"1733:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4014,"mutability":"mutable","name":"amountIn","nameLocation":"1767:8:21","nodeType":"VariableDeclaration","scope":4023,"src":"1759:16:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4013,"name":"uint256","nodeType":"ElementaryTypeName","src":"1759:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4016,"mutability":"mutable","name":"minAmountOut","nameLocation":"1793:12:21","nodeType":"VariableDeclaration","scope":4023,"src":"1785:20:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4015,"name":"uint256","nodeType":"ElementaryTypeName","src":"1785:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4018,"mutability":"mutable","name":"data","nameLocation":"1828:4:21","nodeType":"VariableDeclaration","scope":4023,"src":"1815:17:21","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4017,"name":"bytes","nodeType":"ElementaryTypeName","src":"1815:5:21","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1676:162:21"},"returnParameters":{"id":4022,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4021,"mutability":"mutable","name":"amountOut","nameLocation":"1865:9:21","nodeType":"VariableDeclaration","scope":4023,"src":"1857:17:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4020,"name":"uint256","nodeType":"ElementaryTypeName","src":"1857:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1856:19:21"},"scope":4024,"src":"1663:213:21","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":4025,"src":"929:949:21"}],"src":"688:1191:21"},"id":21},"contracts/SwapConnector.sol":{"ast":{"absolutePath":"contracts/SwapConnector.sol","exportedSymbols":{"Address":[1469],"Arrays":[396],"BalancerV2Connector":[4734],"BaseImplementation":[526],"Bytes":[434],"HopSwapConnector":[4822],"IAggregationExecutor":[5901],"IAuthorizer":[43],"IBalancerV2Vault":[5865],"IERC20":[832],"IERC20Metadata":[857],"IERC20Permit":[893],"IHopSwap":[5890],"IImplementation":[542],"IOneInchV5AggregationRouter":[5937],"IParaswapV5Augustus":[5945],"IPeripheryImmutableState":[3892],"IRegistry":[603],"ISwapConnector":[4024],"ISwapRouter":[3992],"IUniswapV2Factory":[3383],"IUniswapV2Router01":[3691],"IUniswapV2Router02":[3779],"IUniswapV3Factory":[3862],"IUniswapV3SwapCallback":[3876],"Initializable":[754],"OneInchV5Connector":[4926],"ParaswapV5Connector":[5033],"SafeCast":[3320],"SafeERC20":[1174],"SwapConnector":[4204],"UncheckedMath":[127],"UniswapV2Connector":[5308],"UniswapV3Connector":[5763]},"id":4205,"license":"GPL-3.0-or-later","nodeType":"SourceUnit","nodes":[{"id":4026,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"688:23:22"},{"absolutePath":"@mimic-fi/v2-registry/contracts/implementations/BaseImplementation.sol","file":"@mimic-fi/v2-registry/contracts/implementations/BaseImplementation.sol","id":4027,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4205,"sourceUnit":527,"src":"713:80:22","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/ISwapConnector.sol","file":"./ISwapConnector.sol","id":4028,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4205,"sourceUnit":4025,"src":"795:30:22","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/connectors/UniswapV2Connector.sol","file":"./connectors/UniswapV2Connector.sol","id":4029,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4205,"sourceUnit":5309,"src":"826:45:22","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/connectors/UniswapV3Connector.sol","file":"./connectors/UniswapV3Connector.sol","id":4030,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4205,"sourceUnit":5764,"src":"872:45:22","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/connectors/BalancerV2Connector.sol","file":"./connectors/BalancerV2Connector.sol","id":4031,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4205,"sourceUnit":4735,"src":"918:46:22","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/connectors/ParaswapV5Connector.sol","file":"./connectors/ParaswapV5Connector.sol","id":4032,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4205,"sourceUnit":5034,"src":"965:46:22","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/connectors/OneInchV5Connector.sol","file":"./connectors/OneInchV5Connector.sol","id":4033,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4205,"sourceUnit":4927,"src":"1012:45:22","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/connectors/HopSwapConnector.sol","file":"./connectors/HopSwapConnector.sol","id":4034,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4205,"sourceUnit":4823,"src":"1058:43:22","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":4036,"name":"ISwapConnector","nodeType":"IdentifierPath","referencedDeclaration":4024,"src":"1821:14:22"},"id":4037,"nodeType":"InheritanceSpecifier","src":"1821:14:22"},{"baseName":{"id":4038,"name":"BaseImplementation","nodeType":"IdentifierPath","referencedDeclaration":526,"src":"1841:18:22"},"id":4039,"nodeType":"InheritanceSpecifier","src":"1841:18:22"},{"baseName":{"id":4040,"name":"UniswapV2Connector","nodeType":"IdentifierPath","referencedDeclaration":5308,"src":"1865:18:22"},"id":4041,"nodeType":"InheritanceSpecifier","src":"1865:18:22"},{"baseName":{"id":4042,"name":"UniswapV3Connector","nodeType":"IdentifierPath","referencedDeclaration":5763,"src":"1889:18:22"},"id":4043,"nodeType":"InheritanceSpecifier","src":"1889:18:22"},{"baseName":{"id":4044,"name":"BalancerV2Connector","nodeType":"IdentifierPath","referencedDeclaration":4734,"src":"1913:19:22"},"id":4045,"nodeType":"InheritanceSpecifier","src":"1913:19:22"},{"baseName":{"id":4046,"name":"ParaswapV5Connector","nodeType":"IdentifierPath","referencedDeclaration":5033,"src":"1938:19:22"},"id":4047,"nodeType":"InheritanceSpecifier","src":"1938:19:22"},{"baseName":{"id":4048,"name":"HopSwapConnector","nodeType":"IdentifierPath","referencedDeclaration":4822,"src":"1963:16:22"},"id":4049,"nodeType":"InheritanceSpecifier","src":"1963:16:22"},{"baseName":{"id":4050,"name":"OneInchV5Connector","nodeType":"IdentifierPath","referencedDeclaration":4926,"src":"1985:18:22"},"id":4051,"nodeType":"InheritanceSpecifier","src":"1985:18:22"}],"contractDependencies":[526,542,4024,4734,4822,4926,5033,5308,5763],"contractKind":"contract","documentation":{"id":4035,"nodeType":"StructuredDocumentation","src":"1103:687:22","text":" @title SwapConnector\n @dev Swap Connector implementation that interfaces with Uniswap V2, Uniswap V3, Balancer V2, Paraswap V5, 1inch V5,\n and Hop.\n It inherits from BaseImplementation which means it's implementation can be used directly from the Mimic Registry,\n it does not require initialization.\n IMPORTANT! As many other implementations in this repo, this contract is intended to be used as a LIBRARY, not\n a contract. Due to limitations of the Solidity compiler, it's not possible to work with immutable variables in\n libraries yet. Therefore, we are relying on contracts without storage variables so they can be safely\n delegate-called if desired."},"fullyImplemented":true,"id":4204,"linearizedBaseContracts":[4204,4926,4822,5033,4734,5763,5308,526,4024,542],"name":"SwapConnector","nameLocation":"1800:13:22","nodeType":"ContractDefinition","nodes":[{"baseFunctions":[535],"constant":true,"functionSelector":"44ba1fca","id":4057,"mutability":"constant","name":"NAMESPACE","nameLocation":"2127:9:22","nodeType":"VariableDeclaration","overrides":{"id":4053,"nodeType":"OverrideSpecifier","overrides":[],"src":"2118:8:22"},"scope":4204,"src":"2094:72:22","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4052,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2094:7:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"arguments":[{"hexValue":"535741505f434f4e4e4543544f52","id":4055,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2149:16:22","typeDescriptions":{"typeIdentifier":"t_stringliteral_3689005aec026df754d93d88502592c01be0cfc074fb2a14f1cd3f426b51aa18","typeString":"literal_string \"SWAP_CONNECTOR\""},"value":"SWAP_CONNECTOR"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_3689005aec026df754d93d88502592c01be0cfc074fb2a14f1cd3f426b51aa18","typeString":"literal_string \"SWAP_CONNECTOR\""}],"id":4054,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"2139:9:22","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":4056,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2139:27:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"public"},{"body":{"id":4093,"nodeType":"Block","src":"3036:64:22","statements":[]},"documentation":{"id":4058,"nodeType":"StructuredDocumentation","src":"2173:353:22","text":" @dev Initializes the SwapConnector contract\n @param uniswapV2Router Uniswap V2 router reference\n @param uniswapV3Router Uniswap V3 router reference\n @param balancerV2Vault Balancer V2 vault reference\n @param paraswapV5Augustus Paraswap V5 augustus reference\n @param registry Address of the Mimic Registry"},"id":4094,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[{"id":4073,"name":"uniswapV2Router","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4060,"src":"2770:15:22","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":4074,"modifierName":{"id":4072,"name":"UniswapV2Connector","nodeType":"IdentifierPath","referencedDeclaration":5308,"src":"2751:18:22"},"nodeType":"ModifierInvocation","src":"2751:35:22"},{"arguments":[{"id":4076,"name":"uniswapV3Router","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4062,"src":"2814:15:22","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":4077,"modifierName":{"id":4075,"name":"UniswapV3Connector","nodeType":"IdentifierPath","referencedDeclaration":5763,"src":"2795:18:22"},"nodeType":"ModifierInvocation","src":"2795:35:22"},{"arguments":[{"id":4079,"name":"balancerV2Vault","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4064,"src":"2859:15:22","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":4080,"modifierName":{"id":4078,"name":"BalancerV2Connector","nodeType":"IdentifierPath","referencedDeclaration":4734,"src":"2839:19:22"},"nodeType":"ModifierInvocation","src":"2839:36:22"},{"arguments":[{"id":4082,"name":"paraswapV5Augustus","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4066,"src":"2904:18:22","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":4083,"modifierName":{"id":4081,"name":"ParaswapV5Connector","nodeType":"IdentifierPath","referencedDeclaration":5033,"src":"2884:19:22"},"nodeType":"ModifierInvocation","src":"2884:39:22"},{"arguments":[{"id":4085,"name":"oneInchV5Router","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4068,"src":"2951:15:22","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":4086,"modifierName":{"id":4084,"name":"OneInchV5Connector","nodeType":"IdentifierPath","referencedDeclaration":4926,"src":"2932:18:22"},"nodeType":"ModifierInvocation","src":"2932:35:22"},{"arguments":[],"id":4088,"modifierName":{"id":4087,"name":"HopSwapConnector","nodeType":"IdentifierPath","referencedDeclaration":4822,"src":"2976:16:22"},"nodeType":"ModifierInvocation","src":"2976:18:22"},{"arguments":[{"id":4090,"name":"registry","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4070,"src":"3022:8:22","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":4091,"modifierName":{"id":4089,"name":"BaseImplementation","nodeType":"IdentifierPath","referencedDeclaration":526,"src":"3003:18:22"},"nodeType":"ModifierInvocation","src":"3003:28:22"}],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":4071,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4060,"mutability":"mutable","name":"uniswapV2Router","nameLocation":"2560:15:22","nodeType":"VariableDeclaration","scope":4094,"src":"2552:23:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4059,"name":"address","nodeType":"ElementaryTypeName","src":"2552:7:22","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4062,"mutability":"mutable","name":"uniswapV3Router","nameLocation":"2593:15:22","nodeType":"VariableDeclaration","scope":4094,"src":"2585:23:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4061,"name":"address","nodeType":"ElementaryTypeName","src":"2585:7:22","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4064,"mutability":"mutable","name":"balancerV2Vault","nameLocation":"2626:15:22","nodeType":"VariableDeclaration","scope":4094,"src":"2618:23:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4063,"name":"address","nodeType":"ElementaryTypeName","src":"2618:7:22","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4066,"mutability":"mutable","name":"paraswapV5Augustus","nameLocation":"2659:18:22","nodeType":"VariableDeclaration","scope":4094,"src":"2651:26:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4065,"name":"address","nodeType":"ElementaryTypeName","src":"2651:7:22","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4068,"mutability":"mutable","name":"oneInchV5Router","nameLocation":"2695:15:22","nodeType":"VariableDeclaration","scope":4094,"src":"2687:23:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4067,"name":"address","nodeType":"ElementaryTypeName","src":"2687:7:22","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4070,"mutability":"mutable","name":"registry","nameLocation":"2728:8:22","nodeType":"VariableDeclaration","scope":4094,"src":"2720:16:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4069,"name":"address","nodeType":"ElementaryTypeName","src":"2720:7:22","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2542:200:22"},"returnParameters":{"id":4092,"nodeType":"ParameterList","parameters":[],"src":"3036:0:22"},"scope":4204,"src":"2531:569:22","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"baseFunctions":[4023],"body":{"id":4202,"nodeType":"Block","src":"3742:740:22","statements":[{"assignments":[4115],"declarations":[{"constant":false,"id":4115,"mutability":"mutable","name":"s","nameLocation":"3759:1:22","nodeType":"VariableDeclaration","scope":4202,"src":"3752:8:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Source_$4005","typeString":"enum ISwapConnector.Source"},"typeName":{"id":4114,"nodeType":"UserDefinedTypeName","pathNode":{"id":4113,"name":"Source","nodeType":"IdentifierPath","referencedDeclaration":4005,"src":"3752:6:22"},"referencedDeclaration":4005,"src":"3752:6:22","typeDescriptions":{"typeIdentifier":"t_enum$_Source_$4005","typeString":"enum ISwapConnector.Source"}},"visibility":"internal"}],"id":4119,"initialValue":{"arguments":[{"id":4117,"name":"source","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4097,"src":"3770:6:22","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint8","typeString":"uint8"}],"id":4116,"name":"Source","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4005,"src":"3763:6:22","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Source_$4005_$","typeString":"type(enum ISwapConnector.Source)"}},"id":4118,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3763:14:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_enum$_Source_$4005","typeString":"enum ISwapConnector.Source"}},"nodeType":"VariableDeclarationStatement","src":"3752:25:22"},{"condition":{"commonType":{"typeIdentifier":"t_enum$_Source_$4005","typeString":"enum ISwapConnector.Source"},"id":4123,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4120,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4115,"src":"3791:1:22","typeDescriptions":{"typeIdentifier":"t_enum$_Source_$4005","typeString":"enum ISwapConnector.Source"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":4121,"name":"Source","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4005,"src":"3796:6:22","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Source_$4005_$","typeString":"type(enum ISwapConnector.Source)"}},"id":4122,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"UniswapV2","nodeType":"MemberAccess","referencedDeclaration":3999,"src":"3796:16:22","typeDescriptions":{"typeIdentifier":"t_enum$_Source_$4005","typeString":"enum ISwapConnector.Source"}},"src":"3791:21:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_enum$_Source_$4005","typeString":"enum ISwapConnector.Source"},"id":4135,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4132,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4115,"src":"3903:1:22","typeDescriptions":{"typeIdentifier":"t_enum$_Source_$4005","typeString":"enum ISwapConnector.Source"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":4133,"name":"Source","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4005,"src":"3908:6:22","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Source_$4005_$","typeString":"type(enum ISwapConnector.Source)"}},"id":4134,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"UniswapV3","nodeType":"MemberAccess","referencedDeclaration":4000,"src":"3908:16:22","typeDescriptions":{"typeIdentifier":"t_enum$_Source_$4005","typeString":"enum ISwapConnector.Source"}},"src":"3903:21:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_enum$_Source_$4005","typeString":"enum ISwapConnector.Source"},"id":4147,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4144,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4115,"src":"4015:1:22","typeDescriptions":{"typeIdentifier":"t_enum$_Source_$4005","typeString":"enum ISwapConnector.Source"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":4145,"name":"Source","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4005,"src":"4020:6:22","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Source_$4005_$","typeString":"type(enum ISwapConnector.Source)"}},"id":4146,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"BalancerV2","nodeType":"MemberAccess","referencedDeclaration":4001,"src":"4020:17:22","typeDescriptions":{"typeIdentifier":"t_enum$_Source_$4005","typeString":"enum ISwapConnector.Source"}},"src":"4015:22:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_enum$_Source_$4005","typeString":"enum ISwapConnector.Source"},"id":4159,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4156,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4115,"src":"4129:1:22","typeDescriptions":{"typeIdentifier":"t_enum$_Source_$4005","typeString":"enum ISwapConnector.Source"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":4157,"name":"Source","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4005,"src":"4134:6:22","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Source_$4005_$","typeString":"type(enum ISwapConnector.Source)"}},"id":4158,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"ParaswapV5","nodeType":"MemberAccess","referencedDeclaration":4002,"src":"4134:17:22","typeDescriptions":{"typeIdentifier":"t_enum$_Source_$4005","typeString":"enum ISwapConnector.Source"}},"src":"4129:22:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_enum$_Source_$4005","typeString":"enum ISwapConnector.Source"},"id":4171,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4168,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4115,"src":"4243:1:22","typeDescriptions":{"typeIdentifier":"t_enum$_Source_$4005","typeString":"enum ISwapConnector.Source"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":4169,"name":"Source","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4005,"src":"4248:6:22","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Source_$4005_$","typeString":"type(enum ISwapConnector.Source)"}},"id":4170,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"OneInchV5","nodeType":"MemberAccess","referencedDeclaration":4003,"src":"4248:16:22","typeDescriptions":{"typeIdentifier":"t_enum$_Source_$4005","typeString":"enum ISwapConnector.Source"}},"src":"4243:21:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_enum$_Source_$4005","typeString":"enum ISwapConnector.Source"},"id":4183,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4180,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4115,"src":"4355:1:22","typeDescriptions":{"typeIdentifier":"t_enum$_Source_$4005","typeString":"enum ISwapConnector.Source"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":4181,"name":"Source","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4005,"src":"4360:6:22","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Source_$4005_$","typeString":"type(enum ISwapConnector.Source)"}},"id":4182,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"Hop","nodeType":"MemberAccess","referencedDeclaration":4004,"src":"4360:10:22","typeDescriptions":{"typeIdentifier":"t_enum$_Source_$4005","typeString":"enum ISwapConnector.Source"}},"src":"4355:15:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"expression":{"arguments":[{"hexValue":"494e56414c49445f534f55524345","id":4193,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4458:16:22","typeDescriptions":{"typeIdentifier":"t_stringliteral_4c4756d62952d105f77979d4c1b28506a71eed0131395424dfb3a5ae68650cc3","typeString":"literal_string \"INVALID_SOURCE\""},"value":"INVALID_SOURCE"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_4c4756d62952d105f77979d4c1b28506a71eed0131395424dfb3a5ae68650cc3","typeString":"literal_string \"INVALID_SOURCE\""}],"id":4192,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[-19,-19],"referencedDeclaration":-19,"src":"4451:6:22","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":4194,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4451:24:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4195,"nodeType":"ExpressionStatement","src":"4451:24:22"},"id":4196,"nodeType":"IfStatement","src":"4351:124:22","trueBody":{"expression":{"arguments":[{"id":4185,"name":"tokenIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4099,"src":"4388:7:22","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4186,"name":"tokenOut","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4101,"src":"4397:8:22","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4187,"name":"amountIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4103,"src":"4407:8:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4188,"name":"minAmountOut","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4105,"src":"4417:12:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4189,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4107,"src":"4431:4:22","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":4184,"name":"_swapHop","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4821,"src":"4379:8:22","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_uint256_$","typeString":"function (address,address,uint256,uint256,bytes memory) returns (uint256)"}},"id":4190,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4379:57:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4112,"id":4191,"nodeType":"Return","src":"4372:64:22"}},"id":4197,"nodeType":"IfStatement","src":"4239:236:22","trueBody":{"expression":{"arguments":[{"id":4173,"name":"tokenIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4099,"src":"4288:7:22","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4174,"name":"tokenOut","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4101,"src":"4297:8:22","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4175,"name":"amountIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4103,"src":"4307:8:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4176,"name":"minAmountOut","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4105,"src":"4317:12:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4177,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4107,"src":"4331:4:22","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":4172,"name":"_swapOneInchV5","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4925,"src":"4273:14:22","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_uint256_$","typeString":"function (address,address,uint256,uint256,bytes memory) returns (uint256)"}},"id":4178,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4273:63:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4112,"id":4179,"nodeType":"Return","src":"4266:70:22"}},"id":4198,"nodeType":"IfStatement","src":"4125:350:22","trueBody":{"expression":{"arguments":[{"id":4161,"name":"tokenIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4099,"src":"4176:7:22","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4162,"name":"tokenOut","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4101,"src":"4185:8:22","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4163,"name":"amountIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4103,"src":"4195:8:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4164,"name":"minAmountOut","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4105,"src":"4205:12:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4165,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4107,"src":"4219:4:22","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":4160,"name":"_swapParaswapV5","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5032,"src":"4160:15:22","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_uint256_$","typeString":"function (address,address,uint256,uint256,bytes memory) returns (uint256)"}},"id":4166,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4160:64:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4112,"id":4167,"nodeType":"Return","src":"4153:71:22"}},"id":4199,"nodeType":"IfStatement","src":"4011:464:22","trueBody":{"expression":{"arguments":[{"id":4149,"name":"tokenIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4099,"src":"4062:7:22","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4150,"name":"tokenOut","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4101,"src":"4071:8:22","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4151,"name":"amountIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4103,"src":"4081:8:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4152,"name":"minAmountOut","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4105,"src":"4091:12:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4153,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4107,"src":"4105:4:22","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":4148,"name":"_swapBalancerV2","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294,"src":"4046:15:22","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_uint256_$","typeString":"function (address,address,uint256,uint256,bytes memory) returns (uint256)"}},"id":4154,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4046:64:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4112,"id":4155,"nodeType":"Return","src":"4039:71:22"}},"id":4200,"nodeType":"IfStatement","src":"3899:576:22","trueBody":{"expression":{"arguments":[{"id":4137,"name":"tokenIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4099,"src":"3948:7:22","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4138,"name":"tokenOut","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4101,"src":"3957:8:22","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4139,"name":"amountIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4103,"src":"3967:8:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4140,"name":"minAmountOut","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4105,"src":"3977:12:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4141,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4107,"src":"3991:4:22","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":4136,"name":"_swapUniswapV3","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5396,"src":"3933:14:22","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_uint256_$","typeString":"function (address,address,uint256,uint256,bytes memory) returns (uint256)"}},"id":4142,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3933:63:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4112,"id":4143,"nodeType":"Return","src":"3926:70:22"}},"id":4201,"nodeType":"IfStatement","src":"3787:688:22","trueBody":{"expression":{"arguments":[{"id":4125,"name":"tokenIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4099,"src":"3836:7:22","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4126,"name":"tokenOut","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4101,"src":"3845:8:22","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4127,"name":"amountIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4103,"src":"3855:8:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4128,"name":"minAmountOut","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4105,"src":"3865:12:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4129,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4107,"src":"3879:4:22","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":4124,"name":"_swapUniswapV2","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5128,"src":"3821:14:22","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_uint256_$","typeString":"function (address,address,uint256,uint256,bytes memory) returns (uint256)"}},"id":4130,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3821:63:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4112,"id":4131,"nodeType":"Return","src":"3814:70:22"}}]},"documentation":{"id":4095,"nodeType":"StructuredDocumentation","src":"3106:409:22","text":" @dev Swaps two tokens\n @param source Source to execute the requested swap\n @param tokenIn Token being sent\n @param tokenOut Token being received\n @param amountIn Amount of tokenIn being swapped\n @param minAmountOut Minimum amount of tokenOut willing to receive\n @param data Encoded data to specify different swap parameters depending on the source picked"},"functionSelector":"a231a780","id":4203,"implemented":true,"kind":"function","modifiers":[],"name":"swap","nameLocation":"3529:4:22","nodeType":"FunctionDefinition","overrides":{"id":4109,"nodeType":"OverrideSpecifier","overrides":[],"src":"3705:8:22"},"parameters":{"id":4108,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4097,"mutability":"mutable","name":"source","nameLocation":"3549:6:22","nodeType":"VariableDeclaration","scope":4203,"src":"3543:12:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":4096,"name":"uint8","nodeType":"ElementaryTypeName","src":"3543:5:22","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":4099,"mutability":"mutable","name":"tokenIn","nameLocation":"3573:7:22","nodeType":"VariableDeclaration","scope":4203,"src":"3565:15:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4098,"name":"address","nodeType":"ElementaryTypeName","src":"3565:7:22","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4101,"mutability":"mutable","name":"tokenOut","nameLocation":"3598:8:22","nodeType":"VariableDeclaration","scope":4203,"src":"3590:16:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4100,"name":"address","nodeType":"ElementaryTypeName","src":"3590:7:22","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4103,"mutability":"mutable","name":"amountIn","nameLocation":"3624:8:22","nodeType":"VariableDeclaration","scope":4203,"src":"3616:16:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4102,"name":"uint256","nodeType":"ElementaryTypeName","src":"3616:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4105,"mutability":"mutable","name":"minAmountOut","nameLocation":"3650:12:22","nodeType":"VariableDeclaration","scope":4203,"src":"3642:20:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4104,"name":"uint256","nodeType":"ElementaryTypeName","src":"3642:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4107,"mutability":"mutable","name":"data","nameLocation":"3685:4:22","nodeType":"VariableDeclaration","scope":4203,"src":"3672:17:22","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4106,"name":"bytes","nodeType":"ElementaryTypeName","src":"3672:5:22","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3533:162:22"},"returnParameters":{"id":4112,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4111,"mutability":"mutable","name":"amountOut","nameLocation":"3731:9:22","nodeType":"VariableDeclaration","scope":4203,"src":"3723:17:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4110,"name":"uint256","nodeType":"ElementaryTypeName","src":"3723:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3722:19:22"},"scope":4204,"src":"3520:962:22","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":4205,"src":"1791:2693:22"}],"src":"688:3797:22"},"id":22},"contracts/connectors/BalancerV2Connector.sol":{"ast":{"absolutePath":"contracts/connectors/BalancerV2Connector.sol","exportedSymbols":{"Address":[1469],"Arrays":[396],"BalancerV2Connector":[4734],"IBalancerV2Vault":[5865],"IERC20":[832],"IERC20Permit":[893],"SafeCast":[3320],"SafeERC20":[1174],"UncheckedMath":[127]},"id":4735,"license":"GPL-3.0-or-later","nodeType":"SourceUnit","nodes":[{"id":4206,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"688:23:23"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"@openzeppelin/contracts/token/ERC20/IERC20.sol","id":4207,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4735,"sourceUnit":833,"src":"713:56:23","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol","file":"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol","id":4208,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4735,"sourceUnit":1175,"src":"770:65:23","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/math/SafeCast.sol","file":"@openzeppelin/contracts/utils/math/SafeCast.sol","id":4209,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4735,"sourceUnit":3321,"src":"836:57:23","symbolAliases":[],"unitAlias":""},{"absolutePath":"@mimic-fi/v2-helpers/contracts/utils/Arrays.sol","file":"@mimic-fi/v2-helpers/contracts/utils/Arrays.sol","id":4210,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4735,"sourceUnit":397,"src":"895:57:23","symbolAliases":[],"unitAlias":""},{"absolutePath":"@mimic-fi/v2-helpers/contracts/math/UncheckedMath.sol","file":"@mimic-fi/v2-helpers/contracts/math/UncheckedMath.sol","id":4211,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4735,"sourceUnit":128,"src":"953:63:23","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/interfaces/IBalancerV2Vault.sol","file":"../interfaces/IBalancerV2Vault.sol","id":4212,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4735,"sourceUnit":5866,"src":"1018:44:23","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[],"contractDependencies":[],"contractKind":"contract","documentation":{"id":4213,"nodeType":"StructuredDocumentation","src":"1064:88:23","text":" @title BalancerV2Connector\n @dev Interfaces with Balancer V2 to swap tokens"},"fullyImplemented":true,"id":4734,"linearizedBaseContracts":[4734],"name":"BalancerV2Connector","nameLocation":"1162:19:23","nodeType":"ContractDefinition","nodes":[{"id":4217,"libraryName":{"id":4214,"name":"Arrays","nodeType":"IdentifierPath","referencedDeclaration":396,"src":"1194:6:23"},"nodeType":"UsingForDirective","src":"1188:27:23","typeName":{"baseType":{"id":4215,"name":"address","nodeType":"ElementaryTypeName","src":"1205:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":4216,"nodeType":"ArrayTypeName","src":"1205:9:23","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}}},{"id":4221,"libraryName":{"id":4218,"name":"SafeERC20","nodeType":"IdentifierPath","referencedDeclaration":1174,"src":"1226:9:23"},"nodeType":"UsingForDirective","src":"1220:27:23","typeName":{"id":4220,"nodeType":"UserDefinedTypeName","pathNode":{"id":4219,"name":"IERC20","nodeType":"IdentifierPath","referencedDeclaration":832,"src":"1240:6:23"},"referencedDeclaration":832,"src":"1240:6:23","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$832","typeString":"contract IERC20"}}},{"id":4224,"libraryName":{"id":4222,"name":"UncheckedMath","nodeType":"IdentifierPath","referencedDeclaration":127,"src":"1258:13:23"},"nodeType":"UsingForDirective","src":"1252:31:23","typeName":{"id":4223,"name":"int256","nodeType":"ElementaryTypeName","src":"1276:6:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}},{"id":4227,"libraryName":{"id":4225,"name":"UncheckedMath","nodeType":"IdentifierPath","referencedDeclaration":127,"src":"1294:13:23"},"nodeType":"UsingForDirective","src":"1288:32:23","typeName":{"id":4226,"name":"uint256","nodeType":"ElementaryTypeName","src":"1312:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},{"constant":true,"id":4230,"mutability":"constant","name":"ENCODED_DATA_SINGLE_SWAP_LENGTH","nameLocation":"1417:31:23","nodeType":"VariableDeclaration","scope":4734,"src":"1392:61:23","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4228,"name":"uint256","nodeType":"ElementaryTypeName","src":"1392:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"3332","id":4229,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1451:2:23","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"visibility":"private"},{"constant":false,"id":4233,"mutability":"immutable","name":"balancerV2Vault","nameLocation":"1532:15:23","nodeType":"VariableDeclaration","scope":4734,"src":"1497:50:23","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IBalancerV2Vault_$5865","typeString":"contract IBalancerV2Vault"},"typeName":{"id":4232,"nodeType":"UserDefinedTypeName","pathNode":{"id":4231,"name":"IBalancerV2Vault","nodeType":"IdentifierPath","referencedDeclaration":5865,"src":"1497:16:23"},"referencedDeclaration":5865,"src":"1497:16:23","typeDescriptions":{"typeIdentifier":"t_contract$_IBalancerV2Vault_$5865","typeString":"contract IBalancerV2Vault"}},"visibility":"private"},{"body":{"id":4245,"nodeType":"Block","src":"1724:69:23","statements":[{"expression":{"id":4243,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4239,"name":"balancerV2Vault","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4233,"src":"1734:15:23","typeDescriptions":{"typeIdentifier":"t_contract$_IBalancerV2Vault_$5865","typeString":"contract IBalancerV2Vault"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":4241,"name":"_balancerV2Vault","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4236,"src":"1769:16:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":4240,"name":"IBalancerV2Vault","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5865,"src":"1752:16:23","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IBalancerV2Vault_$5865_$","typeString":"type(contract IBalancerV2Vault)"}},"id":4242,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1752:34:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IBalancerV2Vault_$5865","typeString":"contract IBalancerV2Vault"}},"src":"1734:52:23","typeDescriptions":{"typeIdentifier":"t_contract$_IBalancerV2Vault_$5865","typeString":"contract IBalancerV2Vault"}},"id":4244,"nodeType":"ExpressionStatement","src":"1734:52:23"}]},"documentation":{"id":4234,"nodeType":"StructuredDocumentation","src":"1554:127:23","text":" @dev Initializes the BalancerV2Connector contract\n @param _balancerV2Vault Balancer V2 vault reference"},"id":4246,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":4237,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4236,"mutability":"mutable","name":"_balancerV2Vault","nameLocation":"1706:16:23","nodeType":"VariableDeclaration","scope":4246,"src":"1698:24:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4235,"name":"address","nodeType":"ElementaryTypeName","src":"1698:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1697:26:23"},"returnParameters":{"id":4238,"nodeType":"ParameterList","parameters":[],"src":"1724:0:23"},"scope":4734,"src":"1686:107:23","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":4293,"nodeType":"Block","src":"2388:332:23","statements":[{"expression":{"arguments":[{"arguments":[{"id":4268,"name":"balancerV2Vault","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4233,"src":"2434:15:23","typeDescriptions":{"typeIdentifier":"t_contract$_IBalancerV2Vault_$5865","typeString":"contract IBalancerV2Vault"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IBalancerV2Vault_$5865","typeString":"contract IBalancerV2Vault"}],"id":4267,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2426:7:23","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4266,"name":"address","nodeType":"ElementaryTypeName","src":"2426:7:23","typeDescriptions":{}}},"id":4269,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2426:24:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4270,"name":"amountIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4253,"src":"2452:8:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"id":4263,"name":"tokenIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4249,"src":"2405:7:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":4262,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":832,"src":"2398:6:23","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$832_$","typeString":"type(contract IERC20)"}},"id":4264,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2398:15:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$832","typeString":"contract IERC20"}},"id":4265,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"safeApprove","nodeType":"MemberAccess","referencedDeclaration":995,"src":"2398:27:23","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$832_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$832_$","typeString":"function (contract IERC20,address,uint256)"}},"id":4271,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2398:63:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4272,"nodeType":"ExpressionStatement","src":"2398:63:23"},{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4276,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":4273,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4257,"src":"2490:4:23","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4274,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"2490:11:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":4275,"name":"ENCODED_DATA_SINGLE_SWAP_LENGTH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4230,"src":"2505:31:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2490:46:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"arguments":[{"id":4285,"name":"tokenIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4249,"src":"2665:7:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4286,"name":"tokenOut","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4251,"src":"2674:8:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4287,"name":"amountIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4253,"src":"2684:8:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4288,"name":"minAmountOut","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4255,"src":"2694:12:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4289,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4257,"src":"2708:4:23","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":4284,"name":"_batchSwapBalancerV2","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4661,"src":"2644:20:23","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_uint256_$","typeString":"function (address,address,uint256,uint256,bytes memory) returns (uint256)"}},"id":4290,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2644:69:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4291,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"2490:223:23","trueExpression":{"arguments":[{"id":4278,"name":"tokenIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4249,"src":"2577:7:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4279,"name":"tokenOut","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4251,"src":"2586:8:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4280,"name":"amountIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4253,"src":"2596:8:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4281,"name":"minAmountOut","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4255,"src":"2606:12:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4282,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4257,"src":"2620:4:23","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":4277,"name":"_singleSwapBalancerV2","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4384,"src":"2555:21:23","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_uint256_$","typeString":"function (address,address,uint256,uint256,bytes memory) returns (uint256)"}},"id":4283,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2555:70:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4261,"id":4292,"nodeType":"Return","src":"2471:242:23"}]},"documentation":{"id":4247,"nodeType":"StructuredDocumentation","src":"1799:382:23","text":" @dev Internal function to swap two tokens through BalancerV2\n @param tokenIn Token being sent\n @param tokenOut Token being received\n @param amountIn Amount of tokenIn being swapped\n @param minAmountOut Minimum amount of tokenOut willing to receive\n @param data ABI-encoded-packed specifying the list of hop-tokens and pool IDs to use"},"id":4294,"implemented":true,"kind":"function","modifiers":[],"name":"_swapBalancerV2","nameLocation":"2195:15:23","nodeType":"FunctionDefinition","parameters":{"id":4258,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4249,"mutability":"mutable","name":"tokenIn","nameLocation":"2228:7:23","nodeType":"VariableDeclaration","scope":4294,"src":"2220:15:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4248,"name":"address","nodeType":"ElementaryTypeName","src":"2220:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4251,"mutability":"mutable","name":"tokenOut","nameLocation":"2253:8:23","nodeType":"VariableDeclaration","scope":4294,"src":"2245:16:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4250,"name":"address","nodeType":"ElementaryTypeName","src":"2245:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4253,"mutability":"mutable","name":"amountIn","nameLocation":"2279:8:23","nodeType":"VariableDeclaration","scope":4294,"src":"2271:16:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4252,"name":"uint256","nodeType":"ElementaryTypeName","src":"2271:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4255,"mutability":"mutable","name":"minAmountOut","nameLocation":"2305:12:23","nodeType":"VariableDeclaration","scope":4294,"src":"2297:20:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4254,"name":"uint256","nodeType":"ElementaryTypeName","src":"2297:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4257,"mutability":"mutable","name":"data","nameLocation":"2340:4:23","nodeType":"VariableDeclaration","scope":4294,"src":"2327:17:23","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4256,"name":"bytes","nodeType":"ElementaryTypeName","src":"2327:5:23","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2210:140:23"},"returnParameters":{"id":4261,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4260,"mutability":"mutable","name":"amountOut","nameLocation":"2377:9:23","nodeType":"VariableDeclaration","scope":4294,"src":"2369:17:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4259,"name":"uint256","nodeType":"ElementaryTypeName","src":"2369:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2368:19:23"},"scope":4734,"src":"2186:534:23","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":4383,"nodeType":"Block","src":"3319:476:23","statements":[{"assignments":[4311],"declarations":[{"constant":false,"id":4311,"mutability":"mutable","name":"poolId","nameLocation":"3337:6:23","nodeType":"VariableDeclaration","scope":4383,"src":"3329:14:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4310,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3329:7:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":4319,"initialValue":{"arguments":[{"id":4314,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4305,"src":"3357:4:23","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"components":[{"id":4316,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3364:7:23","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":4315,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3364:7:23","typeDescriptions":{}}}],"id":4317,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"3363:9:23","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"}],"expression":{"id":4312,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"3346:3:23","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":4313,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"decode","nodeType":"MemberAccess","src":"3346:10:23","typeDescriptions":{"typeIdentifier":"t_function_abidecode_pure$__$returns$__$","typeString":"function () pure"}},"id":4318,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3346:27:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"3329:44:23"},{"expression":{"arguments":[{"id":4321,"name":"poolId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4311,"src":"3397:6:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":4322,"name":"tokenIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4297,"src":"3405:7:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4323,"name":"tokenOut","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4299,"src":"3414:8:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":4320,"name":"_validatePool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4733,"src":"3383:13:23","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_address_$_t_address_$returns$__$","typeString":"function (bytes32,address,address) view"}},"id":4324,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3383:40:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4325,"nodeType":"ExpressionStatement","src":"3383:40:23"},{"assignments":[4330],"declarations":[{"constant":false,"id":4330,"mutability":"mutable","name":"swap","nameLocation":"3469:4:23","nodeType":"VariableDeclaration","scope":4383,"src":"3434:39:23","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_SingleSwap_$5783_memory_ptr","typeString":"struct IBalancerV2Vault.SingleSwap"},"typeName":{"id":4329,"nodeType":"UserDefinedTypeName","pathNode":{"id":4328,"name":"IBalancerV2Vault.SingleSwap","nodeType":"IdentifierPath","referencedDeclaration":5783,"src":"3434:27:23"},"referencedDeclaration":5783,"src":"3434:27:23","typeDescriptions":{"typeIdentifier":"t_struct$_SingleSwap_$5783_storage_ptr","typeString":"struct IBalancerV2Vault.SingleSwap"}},"visibility":"internal"}],"id":4331,"nodeType":"VariableDeclarationStatement","src":"3434:39:23"},{"expression":{"id":4336,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":4332,"name":"swap","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4330,"src":"3483:4:23","typeDescriptions":{"typeIdentifier":"t_struct$_SingleSwap_$5783_memory_ptr","typeString":"struct IBalancerV2Vault.SingleSwap memory"}},"id":4334,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"poolId","nodeType":"MemberAccess","referencedDeclaration":5771,"src":"3483:11:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":4335,"name":"poolId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4311,"src":"3497:6:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"3483:20:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":4337,"nodeType":"ExpressionStatement","src":"3483:20:23"},{"expression":{"id":4344,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":4338,"name":"swap","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4330,"src":"3513:4:23","typeDescriptions":{"typeIdentifier":"t_struct$_SingleSwap_$5783_memory_ptr","typeString":"struct IBalancerV2Vault.SingleSwap memory"}},"id":4340,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"kind","nodeType":"MemberAccess","referencedDeclaration":5774,"src":"3513:9:23","typeDescriptions":{"typeIdentifier":"t_enum$_SwapKind_$5769","typeString":"enum IBalancerV2Vault.SwapKind"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"expression":{"id":4341,"name":"IBalancerV2Vault","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5865,"src":"3525:16:23","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IBalancerV2Vault_$5865_$","typeString":"type(contract IBalancerV2Vault)"}},"id":4342,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"SwapKind","nodeType":"MemberAccess","referencedDeclaration":5769,"src":"3525:25:23","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_SwapKind_$5769_$","typeString":"type(enum IBalancerV2Vault.SwapKind)"}},"id":4343,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"GIVEN_IN","nodeType":"MemberAccess","referencedDeclaration":5767,"src":"3525:34:23","typeDescriptions":{"typeIdentifier":"t_enum$_SwapKind_$5769","typeString":"enum IBalancerV2Vault.SwapKind"}},"src":"3513:46:23","typeDescriptions":{"typeIdentifier":"t_enum$_SwapKind_$5769","typeString":"enum IBalancerV2Vault.SwapKind"}},"id":4345,"nodeType":"ExpressionStatement","src":"3513:46:23"},{"expression":{"id":4350,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":4346,"name":"swap","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4330,"src":"3569:4:23","typeDescriptions":{"typeIdentifier":"t_struct$_SingleSwap_$5783_memory_ptr","typeString":"struct IBalancerV2Vault.SingleSwap memory"}},"id":4348,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"assetIn","nodeType":"MemberAccess","referencedDeclaration":5776,"src":"3569:12:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":4349,"name":"tokenIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4297,"src":"3584:7:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3569:22:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":4351,"nodeType":"ExpressionStatement","src":"3569:22:23"},{"expression":{"id":4356,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":4352,"name":"swap","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4330,"src":"3601:4:23","typeDescriptions":{"typeIdentifier":"t_struct$_SingleSwap_$5783_memory_ptr","typeString":"struct IBalancerV2Vault.SingleSwap memory"}},"id":4354,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"assetOut","nodeType":"MemberAccess","referencedDeclaration":5778,"src":"3601:13:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":4355,"name":"tokenOut","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4299,"src":"3617:8:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3601:24:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":4357,"nodeType":"ExpressionStatement","src":"3601:24:23"},{"expression":{"id":4362,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":4358,"name":"swap","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4330,"src":"3635:4:23","typeDescriptions":{"typeIdentifier":"t_struct$_SingleSwap_$5783_memory_ptr","typeString":"struct IBalancerV2Vault.SingleSwap memory"}},"id":4360,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"amount","nodeType":"MemberAccess","referencedDeclaration":5780,"src":"3635:11:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":4361,"name":"amountIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4301,"src":"3649:8:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3635:22:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4363,"nodeType":"ExpressionStatement","src":"3635:22:23"},{"expression":{"id":4371,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":4364,"name":"swap","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4330,"src":"3667:4:23","typeDescriptions":{"typeIdentifier":"t_struct$_SingleSwap_$5783_memory_ptr","typeString":"struct IBalancerV2Vault.SingleSwap memory"}},"id":4366,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"userData","nodeType":"MemberAccess","referencedDeclaration":5782,"src":"3667:13:23","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"hexValue":"30","id":4369,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3693:1:23","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":4368,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"3683:9:23","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint256) pure returns (bytes memory)"},"typeName":{"id":4367,"name":"bytes","nodeType":"ElementaryTypeName","src":"3687:5:23","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}}},"id":4370,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3683:12:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"src":"3667:28:23","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4372,"nodeType":"ExpressionStatement","src":"3667:28:23"},{"expression":{"arguments":[{"id":4375,"name":"swap","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4330,"src":"3733:4:23","typeDescriptions":{"typeIdentifier":"t_struct$_SingleSwap_$5783_memory_ptr","typeString":"struct IBalancerV2Vault.SingleSwap memory"}},{"arguments":[],"expression":{"argumentTypes":[],"id":4376,"name":"_fundManagement","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4686,"src":"3739:15:23","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_struct$_FundManagement_$5803_memory_ptr_$","typeString":"function () view returns (struct IBalancerV2Vault.FundManagement memory)"}},"id":4377,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3739:17:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_FundManagement_$5803_memory_ptr","typeString":"struct IBalancerV2Vault.FundManagement memory"}},{"id":4378,"name":"minAmountOut","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4303,"src":"3758:12:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":4379,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"3772:5:23","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":4380,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"timestamp","nodeType":"MemberAccess","src":"3772:15:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_SingleSwap_$5783_memory_ptr","typeString":"struct IBalancerV2Vault.SingleSwap memory"},{"typeIdentifier":"t_struct$_FundManagement_$5803_memory_ptr","typeString":"struct IBalancerV2Vault.FundManagement memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":4373,"name":"balancerV2Vault","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4233,"src":"3712:15:23","typeDescriptions":{"typeIdentifier":"t_contract$_IBalancerV2Vault_$5865","typeString":"contract IBalancerV2Vault"}},"id":4374,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"swap","nodeType":"MemberAccess","referencedDeclaration":5818,"src":"3712:20:23","typeDescriptions":{"typeIdentifier":"t_function_external_payable$_t_struct$_SingleSwap_$5783_memory_ptr_$_t_struct$_FundManagement_$5803_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (struct IBalancerV2Vault.SingleSwap memory,struct IBalancerV2Vault.FundManagement memory,uint256,uint256) payable external returns (uint256)"}},"id":4381,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3712:76:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4309,"id":4382,"nodeType":"Return","src":"3705:83:23"}]},"documentation":{"id":4295,"nodeType":"StructuredDocumentation","src":"2726:381:23","text":" @dev Internal function to swap two tokens through BalancerV2 using a single hop\n @param tokenIn Token being sent\n @param tokenOut Token being received\n @param amountIn Amount of tokenIn being swapped\n @param minAmountOut Minimum amount of tokenOut willing to receive\n @param data ABI-encoded-packed to specify the pool ID to be used"},"id":4384,"implemented":true,"kind":"function","modifiers":[],"name":"_singleSwapBalancerV2","nameLocation":"3121:21:23","nodeType":"FunctionDefinition","parameters":{"id":4306,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4297,"mutability":"mutable","name":"tokenIn","nameLocation":"3160:7:23","nodeType":"VariableDeclaration","scope":4384,"src":"3152:15:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4296,"name":"address","nodeType":"ElementaryTypeName","src":"3152:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4299,"mutability":"mutable","name":"tokenOut","nameLocation":"3185:8:23","nodeType":"VariableDeclaration","scope":4384,"src":"3177:16:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4298,"name":"address","nodeType":"ElementaryTypeName","src":"3177:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4301,"mutability":"mutable","name":"amountIn","nameLocation":"3211:8:23","nodeType":"VariableDeclaration","scope":4384,"src":"3203:16:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4300,"name":"uint256","nodeType":"ElementaryTypeName","src":"3203:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4303,"mutability":"mutable","name":"minAmountOut","nameLocation":"3237:12:23","nodeType":"VariableDeclaration","scope":4384,"src":"3229:20:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4302,"name":"uint256","nodeType":"ElementaryTypeName","src":"3229:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4305,"mutability":"mutable","name":"data","nameLocation":"3272:4:23","nodeType":"VariableDeclaration","scope":4384,"src":"3259:17:23","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4304,"name":"bytes","nodeType":"ElementaryTypeName","src":"3259:5:23","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3142:140:23"},"returnParameters":{"id":4309,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4308,"mutability":"mutable","name":"amountOut","nameLocation":"3308:9:23","nodeType":"VariableDeclaration","scope":4384,"src":"3300:17:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4307,"name":"uint256","nodeType":"ElementaryTypeName","src":"3300:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3299:19:23"},"scope":4734,"src":"3112:683:23","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":4660,"nodeType":"Block","src":"4434:2421:23","statements":[{"assignments":[4404,4407],"declarations":[{"constant":false,"id":4404,"mutability":"mutable","name":"hopTokens","nameLocation":"4504:9:23","nodeType":"VariableDeclaration","scope":4660,"src":"4487:26:23","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":4402,"name":"address","nodeType":"ElementaryTypeName","src":"4487:7:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":4403,"nodeType":"ArrayTypeName","src":"4487:9:23","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":4407,"mutability":"mutable","name":"poolIds","nameLocation":"4532:7:23","nodeType":"VariableDeclaration","scope":4660,"src":"4515:24:23","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":4405,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4515:7:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":4406,"nodeType":"ArrayTypeName","src":"4515:9:23","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"id":4419,"initialValue":{"arguments":[{"id":4410,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4395,"src":"4554:4:23","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"components":[{"baseExpression":{"id":4412,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4561:7:23","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4411,"name":"address","nodeType":"ElementaryTypeName","src":"4561:7:23","typeDescriptions":{}}},"id":4413,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"IndexAccess","src":"4561:9:23","typeDescriptions":{"typeIdentifier":"t_type$_t_array$_t_address_$dyn_memory_ptr_$","typeString":"type(address[] memory)"}},{"baseExpression":{"id":4415,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4572:7:23","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":4414,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4572:7:23","typeDescriptions":{}}},"id":4416,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"IndexAccess","src":"4572:9:23","typeDescriptions":{"typeIdentifier":"t_type$_t_array$_t_bytes32_$dyn_memory_ptr_$","typeString":"type(bytes32[] memory)"}}],"id":4417,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"4560:22:23","typeDescriptions":{"typeIdentifier":"t_tuple$_t_type$_t_array$_t_address_$dyn_memory_ptr_$_$_t_type$_t_array$_t_bytes32_$dyn_memory_ptr_$_$","typeString":"tuple(type(address[] memory),type(bytes32[] memory))"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_tuple$_t_type$_t_array$_t_address_$dyn_memory_ptr_$_$_t_type$_t_array$_t_bytes32_$dyn_memory_ptr_$_$","typeString":"tuple(type(address[] memory),type(bytes32[] memory))"}],"expression":{"id":4408,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"4543:3:23","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":4409,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"decode","nodeType":"MemberAccess","src":"4543:10:23","typeDescriptions":{"typeIdentifier":"t_function_abidecode_pure$__$returns$__$","typeString":"function () pure"}},"id":4418,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4543:40:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_array$_t_address_$dyn_memory_ptr_$_t_array$_t_bytes32_$dyn_memory_ptr_$","typeString":"tuple(address[] memory,bytes32[] memory)"}},"nodeType":"VariableDeclarationStatement","src":"4486:97:23"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4428,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":4421,"name":"poolIds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4407,"src":"4695:7:23","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":4422,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"4695:14:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"31","id":4426,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4743:1:23","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"}],"expression":{"expression":{"id":4423,"name":"hopTokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4404,"src":"4713:9:23","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":4424,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"4713:16:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4425,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"uncheckedAdd","nodeType":"MemberAccess","referencedDeclaration":62,"src":"4713:29:23","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":4427,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4713:32:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4695:50:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"494e56414c49445f42414c414e4345525f56325f494e5055545f4c454e475448","id":4429,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4747:34:23","typeDescriptions":{"typeIdentifier":"t_stringliteral_e40c26701b18ead1b939f999c70ae24cebfc5e0c2f0c824ccb75645cabcd8b92","typeString":"literal_string \"INVALID_BALANCER_V2_INPUT_LENGTH\""},"value":"INVALID_BALANCER_V2_INPUT_LENGTH"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_e40c26701b18ead1b939f999c70ae24cebfc5e0c2f0c824ccb75645cabcd8b92","typeString":"literal_string \"INVALID_BALANCER_V2_INPUT_LENGTH\""}],"id":4420,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4687:7:23","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4430,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4687:95:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4431,"nodeType":"ExpressionStatement","src":"4687:95:23"},{"assignments":[4436],"declarations":[{"constant":false,"id":4436,"mutability":"mutable","name":"tokens","nameLocation":"4810:6:23","nodeType":"VariableDeclaration","scope":4660,"src":"4793:23:23","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":4434,"name":"address","nodeType":"ElementaryTypeName","src":"4793:7:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":4435,"nodeType":"ArrayTypeName","src":"4793:9:23","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"id":4443,"initialValue":{"arguments":[{"id":4439,"name":"tokenIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4387,"src":"4831:7:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4440,"name":"hopTokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4404,"src":"4840:9:23","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},{"id":4441,"name":"tokenOut","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4389,"src":"4851:8:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":4437,"name":"Arrays","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":396,"src":"4819:6:23","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Arrays_$396_$","typeString":"type(library Arrays)"}},"id":4438,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"from","nodeType":"MemberAccess","referencedDeclaration":297,"src":"4819:11:23","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_address_$_t_array$_t_address_$dyn_memory_ptr_$_t_address_$returns$_t_array$_t_address_$dyn_memory_ptr_$","typeString":"function (address,address[] memory,address) pure returns (address[] memory)"}},"id":4442,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4819:41:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"nodeType":"VariableDeclarationStatement","src":"4793:67:23"},{"body":{"id":4474,"nodeType":"Block","src":"5045:88:23","statements":[{"expression":{"arguments":[{"baseExpression":{"id":4460,"name":"poolIds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4407,"src":"5073:7:23","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":4462,"indexExpression":{"id":4461,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4445,"src":"5081:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5073:10:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"baseExpression":{"id":4463,"name":"tokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4436,"src":"5085:6:23","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":4465,"indexExpression":{"id":4464,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4445,"src":"5092:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5085:9:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"baseExpression":{"id":4466,"name":"tokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4436,"src":"5096:6:23","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":4471,"indexExpression":{"arguments":[{"hexValue":"31","id":4469,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5118:1:23","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"}],"expression":{"id":4467,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4445,"src":"5103:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4468,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"uncheckedAdd","nodeType":"MemberAccess","referencedDeclaration":62,"src":"5103:14:23","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":4470,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5103:17:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5096:25:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":4459,"name":"_validatePool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4733,"src":"5059:13:23","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_address_$_t_address_$returns$__$","typeString":"function (bytes32,address,address) view"}},"id":4472,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5059:63:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4473,"nodeType":"ExpressionStatement","src":"5059:63:23"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4451,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4448,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4445,"src":"5002:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":4449,"name":"poolIds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4407,"src":"5006:7:23","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":4450,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"5006:14:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5002:18:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4475,"initializationExpression":{"assignments":[4445],"declarations":[{"constant":false,"id":4445,"mutability":"mutable","name":"i","nameLocation":"4995:1:23","nodeType":"VariableDeclaration","scope":4475,"src":"4987:9:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4444,"name":"uint256","nodeType":"ElementaryTypeName","src":"4987:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4447,"initialValue":{"hexValue":"30","id":4446,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4999:1:23","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"4987:13:23"},"loopExpression":{"expression":{"id":4457,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4452,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4445,"src":"5022:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"hexValue":"31","id":4455,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5041:1:23","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"}],"expression":{"id":4453,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4445,"src":"5026:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4454,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"uncheckedAdd","nodeType":"MemberAccess","referencedDeclaration":62,"src":"5026:14:23","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":4456,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5026:17:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5022:21:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4458,"nodeType":"ExpressionStatement","src":"5022:21:23"},"nodeType":"ForStatement","src":"4982:151:23"},{"assignments":[4477],"declarations":[{"constant":false,"id":4477,"mutability":"mutable","name":"steps","nameLocation":"5276:5:23","nodeType":"VariableDeclaration","scope":4660,"src":"5268:13:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4476,"name":"uint256","nodeType":"ElementaryTypeName","src":"5268:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4483,"initialValue":{"arguments":[{"hexValue":"31","id":4481,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5311:1:23","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"}],"expression":{"expression":{"id":4478,"name":"tokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4436,"src":"5284:6:23","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":4479,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"5284:13:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4480,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"uncheckedSub","nodeType":"MemberAccess","referencedDeclaration":78,"src":"5284:26:23","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":4482,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5284:29:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5268:45:23"},{"assignments":[4489],"declarations":[{"constant":false,"id":4489,"mutability":"mutable","name":"swaps","nameLocation":"5363:5:23","nodeType":"VariableDeclaration","scope":4660,"src":"5323:45:23","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_BatchSwapStep_$5794_memory_ptr_$dyn_memory_ptr","typeString":"struct IBalancerV2Vault.BatchSwapStep[]"},"typeName":{"baseType":{"id":4487,"nodeType":"UserDefinedTypeName","pathNode":{"id":4486,"name":"IBalancerV2Vault.BatchSwapStep","nodeType":"IdentifierPath","referencedDeclaration":5794,"src":"5323:30:23"},"referencedDeclaration":5794,"src":"5323:30:23","typeDescriptions":{"typeIdentifier":"t_struct$_BatchSwapStep_$5794_storage_ptr","typeString":"struct IBalancerV2Vault.BatchSwapStep"}},"id":4488,"nodeType":"ArrayTypeName","src":"5323:32:23","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_BatchSwapStep_$5794_storage_$dyn_storage_ptr","typeString":"struct IBalancerV2Vault.BatchSwapStep[]"}},"visibility":"internal"}],"id":4496,"initialValue":{"arguments":[{"id":4494,"name":"steps","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4477,"src":"5408:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4493,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"5371:36:23","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_struct$_BatchSwapStep_$5794_memory_ptr_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (struct IBalancerV2Vault.BatchSwapStep memory[] memory)"},"typeName":{"baseType":{"id":4491,"nodeType":"UserDefinedTypeName","pathNode":{"id":4490,"name":"IBalancerV2Vault.BatchSwapStep","nodeType":"IdentifierPath","referencedDeclaration":5794,"src":"5375:30:23"},"referencedDeclaration":5794,"src":"5375:30:23","typeDescriptions":{"typeIdentifier":"t_struct$_BatchSwapStep_$5794_storage_ptr","typeString":"struct IBalancerV2Vault.BatchSwapStep"}},"id":4492,"nodeType":"ArrayTypeName","src":"5375:32:23","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_BatchSwapStep_$5794_storage_$dyn_storage_ptr","typeString":"struct IBalancerV2Vault.BatchSwapStep[]"}}},"id":4495,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5371:43:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_BatchSwapStep_$5794_memory_ptr_$dyn_memory_ptr","typeString":"struct IBalancerV2Vault.BatchSwapStep memory[] memory"}},"nodeType":"VariableDeclarationStatement","src":"5323:91:23"},{"body":{"id":4563,"nodeType":"Block","src":"5478:294:23","statements":[{"assignments":[4515],"declarations":[{"constant":false,"id":4515,"mutability":"mutable","name":"swap","nameLocation":"5530:4:23","nodeType":"VariableDeclaration","scope":4563,"src":"5492:42:23","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_BatchSwapStep_$5794_memory_ptr","typeString":"struct IBalancerV2Vault.BatchSwapStep"},"typeName":{"id":4514,"nodeType":"UserDefinedTypeName","pathNode":{"id":4513,"name":"IBalancerV2Vault.BatchSwapStep","nodeType":"IdentifierPath","referencedDeclaration":5794,"src":"5492:30:23"},"referencedDeclaration":5794,"src":"5492:30:23","typeDescriptions":{"typeIdentifier":"t_struct$_BatchSwapStep_$5794_storage_ptr","typeString":"struct IBalancerV2Vault.BatchSwapStep"}},"visibility":"internal"}],"id":4519,"initialValue":{"baseExpression":{"id":4516,"name":"swaps","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4489,"src":"5537:5:23","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_BatchSwapStep_$5794_memory_ptr_$dyn_memory_ptr","typeString":"struct IBalancerV2Vault.BatchSwapStep memory[] memory"}},"id":4518,"indexExpression":{"id":4517,"name":"j","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4498,"src":"5543:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5537:8:23","typeDescriptions":{"typeIdentifier":"t_struct$_BatchSwapStep_$5794_memory_ptr","typeString":"struct IBalancerV2Vault.BatchSwapStep memory"}},"nodeType":"VariableDeclarationStatement","src":"5492:53:23"},{"expression":{"id":4529,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":4520,"name":"swap","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4515,"src":"5559:4:23","typeDescriptions":{"typeIdentifier":"t_struct$_BatchSwapStep_$5794_memory_ptr","typeString":"struct IBalancerV2Vault.BatchSwapStep memory"}},"id":4522,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"amount","nodeType":"MemberAccess","referencedDeclaration":5791,"src":"5559:11:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4525,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4523,"name":"j","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4498,"src":"5573:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":4524,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5578:1:23","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5573:6:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"30","id":4527,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5593:1:23","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"id":4528,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"5573:21:23","trueExpression":{"id":4526,"name":"amountIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4391,"src":"5582:8:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5559:35:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4530,"nodeType":"ExpressionStatement","src":"5559:35:23"},{"expression":{"id":4537,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":4531,"name":"swap","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4515,"src":"5608:4:23","typeDescriptions":{"typeIdentifier":"t_struct$_BatchSwapStep_$5794_memory_ptr","typeString":"struct IBalancerV2Vault.BatchSwapStep memory"}},"id":4533,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"poolId","nodeType":"MemberAccess","referencedDeclaration":5785,"src":"5608:11:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"baseExpression":{"id":4534,"name":"poolIds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4407,"src":"5622:7:23","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":4536,"indexExpression":{"id":4535,"name":"j","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4498,"src":"5630:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5622:10:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"5608:24:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":4538,"nodeType":"ExpressionStatement","src":"5608:24:23"},{"expression":{"id":4543,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":4539,"name":"swap","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4515,"src":"5646:4:23","typeDescriptions":{"typeIdentifier":"t_struct$_BatchSwapStep_$5794_memory_ptr","typeString":"struct IBalancerV2Vault.BatchSwapStep memory"}},"id":4541,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"assetInIndex","nodeType":"MemberAccess","referencedDeclaration":5787,"src":"5646:17:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":4542,"name":"j","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4498,"src":"5666:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5646:21:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4544,"nodeType":"ExpressionStatement","src":"5646:21:23"},{"expression":{"id":4552,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":4545,"name":"swap","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4515,"src":"5681:4:23","typeDescriptions":{"typeIdentifier":"t_struct$_BatchSwapStep_$5794_memory_ptr","typeString":"struct IBalancerV2Vault.BatchSwapStep memory"}},"id":4547,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"assetOutIndex","nodeType":"MemberAccess","referencedDeclaration":5789,"src":"5681:18:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"hexValue":"31","id":4550,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5717:1:23","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"}],"expression":{"id":4548,"name":"j","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4498,"src":"5702:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4549,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"uncheckedAdd","nodeType":"MemberAccess","referencedDeclaration":62,"src":"5702:14:23","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":4551,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5702:17:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5681:38:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4553,"nodeType":"ExpressionStatement","src":"5681:38:23"},{"expression":{"id":4561,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":4554,"name":"swap","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4515,"src":"5733:4:23","typeDescriptions":{"typeIdentifier":"t_struct$_BatchSwapStep_$5794_memory_ptr","typeString":"struct IBalancerV2Vault.BatchSwapStep memory"}},"id":4556,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"userData","nodeType":"MemberAccess","referencedDeclaration":5793,"src":"5733:13:23","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"hexValue":"30","id":4559,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5759:1:23","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":4558,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"5749:9:23","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint256) pure returns (bytes memory)"},"typeName":{"id":4557,"name":"bytes","nodeType":"ElementaryTypeName","src":"5753:5:23","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}}},"id":4560,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5749:12:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"src":"5733:28:23","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4562,"nodeType":"ExpressionStatement","src":"5733:28:23"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4503,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4501,"name":"j","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4498,"src":"5444:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":4502,"name":"steps","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4477,"src":"5448:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5444:9:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4564,"initializationExpression":{"assignments":[4498],"declarations":[{"constant":false,"id":4498,"mutability":"mutable","name":"j","nameLocation":"5437:1:23","nodeType":"VariableDeclaration","scope":4564,"src":"5429:9:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4497,"name":"uint256","nodeType":"ElementaryTypeName","src":"5429:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4500,"initialValue":{"hexValue":"30","id":4499,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5441:1:23","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"5429:13:23"},"loopExpression":{"expression":{"id":4509,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4504,"name":"j","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4498,"src":"5455:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"hexValue":"31","id":4507,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5474:1:23","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"}],"expression":{"id":4505,"name":"j","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4498,"src":"5459:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4506,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"uncheckedAdd","nodeType":"MemberAccess","referencedDeclaration":62,"src":"5459:14:23","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":4508,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5459:17:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5455:21:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4510,"nodeType":"ExpressionStatement","src":"5455:21:23"},"nodeType":"ForStatement","src":"5424:348:23"},{"assignments":[4569],"declarations":[{"constant":false,"id":4569,"mutability":"mutable","name":"limits","nameLocation":"5829:6:23","nodeType":"VariableDeclaration","scope":4660,"src":"5813:22:23","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_memory_ptr","typeString":"int256[]"},"typeName":{"baseType":{"id":4567,"name":"int256","nodeType":"ElementaryTypeName","src":"5813:6:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":4568,"nodeType":"ArrayTypeName","src":"5813:8:23","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_storage_ptr","typeString":"int256[]"}},"visibility":"internal"}],"id":4576,"initialValue":{"arguments":[{"expression":{"id":4573,"name":"tokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4436,"src":"5851:6:23","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":4574,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"5851:13:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4572,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"5838:12:23","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_int256_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (int256[] memory)"},"typeName":{"baseType":{"id":4570,"name":"int256","nodeType":"ElementaryTypeName","src":"5842:6:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":4571,"nodeType":"ArrayTypeName","src":"5842:8:23","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_storage_ptr","typeString":"int256[]"}}},"id":4575,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5838:27:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_memory_ptr","typeString":"int256[] memory"}},"nodeType":"VariableDeclarationStatement","src":"5813:52:23"},{"expression":{"id":4584,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":4577,"name":"limits","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4569,"src":"5875:6:23","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_memory_ptr","typeString":"int256[] memory"}},"id":4579,"indexExpression":{"hexValue":"30","id":4578,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5882:1:23","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"5875:9:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":4582,"name":"amountIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4391,"src":"5905:8:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":4580,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3320,"src":"5887:8:23","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$3320_$","typeString":"type(library SafeCast)"}},"id":4581,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"toInt256","nodeType":"MemberAccess","referencedDeclaration":3319,"src":"5887:17:23","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_int256_$","typeString":"function (uint256) pure returns (int256)"}},"id":4583,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5887:27:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"5875:39:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":4585,"nodeType":"ExpressionStatement","src":"5875:39:23"},{"expression":{"id":4601,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":4586,"name":"limits","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4569,"src":"6013:6:23","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_memory_ptr","typeString":"int256[] memory"}},"id":4592,"indexExpression":{"arguments":[{"hexValue":"31","id":4590,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6047:1:23","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"}],"expression":{"expression":{"id":4587,"name":"limits","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4569,"src":"6020:6:23","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_memory_ptr","typeString":"int256[] memory"}},"id":4588,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"6020:13:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4589,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"uncheckedSub","nodeType":"MemberAccess","referencedDeclaration":78,"src":"6020:26:23","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":4591,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6020:29:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"6013:37:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":4599,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"-","prefix":true,"src":"6098:2:23","subExpression":{"hexValue":"31","id":4598,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6099:1:23","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"typeDescriptions":{"typeIdentifier":"t_rational_minus_1_by_1","typeString":"int_const -1"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_minus_1_by_1","typeString":"int_const -1"}],"expression":{"arguments":[{"id":4595,"name":"minAmountOut","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4393,"src":"6071:12:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":4593,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3320,"src":"6053:8:23","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$3320_$","typeString":"type(library SafeCast)"}},"id":4594,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"toInt256","nodeType":"MemberAccess","referencedDeclaration":3319,"src":"6053:17:23","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_int256_$","typeString":"function (uint256) pure returns (int256)"}},"id":4596,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6053:31:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":4597,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"uncheckedMul","nodeType":"MemberAccess","referencedDeclaration":110,"src":"6053:44:23","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_int256_$_t_int256_$returns$_t_int256_$bound_to$_t_int256_$","typeString":"function (int256,int256) pure returns (int256)"}},"id":4600,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6053:48:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"6013:88:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":4602,"nodeType":"ExpressionStatement","src":"6013:88:23"},{"assignments":[4607],"declarations":[{"constant":false,"id":4607,"mutability":"mutable","name":"results","nameLocation":"6144:7:23","nodeType":"VariableDeclaration","scope":4660,"src":"6128:23:23","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_memory_ptr","typeString":"int256[]"},"typeName":{"baseType":{"id":4605,"name":"int256","nodeType":"ElementaryTypeName","src":"6128:6:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":4606,"nodeType":"ArrayTypeName","src":"6128:8:23","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_storage_ptr","typeString":"int256[]"}},"visibility":"internal"}],"id":4621,"initialValue":{"arguments":[{"expression":{"expression":{"id":4610,"name":"IBalancerV2Vault","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5865,"src":"6193:16:23","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IBalancerV2Vault_$5865_$","typeString":"type(contract IBalancerV2Vault)"}},"id":4611,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"SwapKind","nodeType":"MemberAccess","referencedDeclaration":5769,"src":"6193:25:23","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_SwapKind_$5769_$","typeString":"type(enum IBalancerV2Vault.SwapKind)"}},"id":4612,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"GIVEN_IN","nodeType":"MemberAccess","referencedDeclaration":5767,"src":"6193:34:23","typeDescriptions":{"typeIdentifier":"t_enum$_SwapKind_$5769","typeString":"enum IBalancerV2Vault.SwapKind"}},{"id":4613,"name":"swaps","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4489,"src":"6241:5:23","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_BatchSwapStep_$5794_memory_ptr_$dyn_memory_ptr","typeString":"struct IBalancerV2Vault.BatchSwapStep memory[] memory"}},{"id":4614,"name":"tokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4436,"src":"6260:6:23","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},{"arguments":[],"expression":{"argumentTypes":[],"id":4615,"name":"_fundManagement","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4686,"src":"6280:15:23","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_struct$_FundManagement_$5803_memory_ptr_$","typeString":"function () view returns (struct IBalancerV2Vault.FundManagement memory)"}},"id":4616,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6280:17:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_FundManagement_$5803_memory_ptr","typeString":"struct IBalancerV2Vault.FundManagement memory"}},{"id":4617,"name":"limits","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4569,"src":"6311:6:23","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_memory_ptr","typeString":"int256[] memory"}},{"expression":{"id":4618,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"6331:5:23","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":4619,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"timestamp","nodeType":"MemberAccess","src":"6331:15:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_SwapKind_$5769","typeString":"enum IBalancerV2Vault.SwapKind"},{"typeIdentifier":"t_array$_t_struct$_BatchSwapStep_$5794_memory_ptr_$dyn_memory_ptr","typeString":"struct IBalancerV2Vault.BatchSwapStep memory[] memory"},{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"},{"typeIdentifier":"t_struct$_FundManagement_$5803_memory_ptr","typeString":"struct IBalancerV2Vault.FundManagement memory"},{"typeIdentifier":"t_array$_t_int256_$dyn_memory_ptr","typeString":"int256[] memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":4608,"name":"balancerV2Vault","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4233,"src":"6154:15:23","typeDescriptions":{"typeIdentifier":"t_contract$_IBalancerV2Vault_$5865","typeString":"contract IBalancerV2Vault"}},"id":4609,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"batchSwap","nodeType":"MemberAccess","referencedDeclaration":5842,"src":"6154:25:23","typeDescriptions":{"typeIdentifier":"t_function_external_payable$_t_enum$_SwapKind_$5769_$_t_array$_t_struct$_BatchSwapStep_$5794_memory_ptr_$dyn_memory_ptr_$_t_array$_t_address_$dyn_memory_ptr_$_t_struct$_FundManagement_$5803_memory_ptr_$_t_array$_t_int256_$dyn_memory_ptr_$_t_uint256_$returns$_t_array$_t_int256_$dyn_memory_ptr_$","typeString":"function (enum IBalancerV2Vault.SwapKind,struct IBalancerV2Vault.BatchSwapStep memory[] memory,address[] memory,struct IBalancerV2Vault.FundManagement memory,int256[] memory,uint256) payable external returns (int256[] memory)"}},"id":4620,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6154:202:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_memory_ptr","typeString":"int256[] memory"}},"nodeType":"VariableDeclarationStatement","src":"6128:228:23"},{"assignments":[4623],"declarations":[{"constant":false,"id":4623,"mutability":"mutable","name":"intAmountOut","nameLocation":"6490:12:23","nodeType":"VariableDeclaration","scope":4660,"src":"6483:19:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4622,"name":"int256","nodeType":"ElementaryTypeName","src":"6483:6:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":4631,"initialValue":{"baseExpression":{"id":4624,"name":"results","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4607,"src":"6505:7:23","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_memory_ptr","typeString":"int256[] memory"}},"id":4630,"indexExpression":{"arguments":[{"hexValue":"31","id":4628,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6541:1:23","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"}],"expression":{"expression":{"id":4625,"name":"results","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4607,"src":"6513:7:23","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_memory_ptr","typeString":"int256[] memory"}},"id":4626,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"6513:14:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4627,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"uncheckedSub","nodeType":"MemberAccess","referencedDeclaration":78,"src":"6513:27:23","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":4629,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6513:30:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6505:39:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"VariableDeclarationStatement","src":"6483:61:23"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4635,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4633,"name":"intAmountOut","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4623,"src":"6562:12:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"30","id":4634,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6577:1:23","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6562:16:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"42414c414e4345525f494e56414c49445f42415443485f414d4f554e545f4f55","id":4636,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6580:34:23","typeDescriptions":{"typeIdentifier":"t_stringliteral_7d53102d364230849b66935ee94d95d6509cab71f6498d129b923063a4d51836","typeString":"literal_string \"BALANCER_INVALID_BATCH_AMOUNT_OU\""},"value":"BALANCER_INVALID_BATCH_AMOUNT_OU"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_7d53102d364230849b66935ee94d95d6509cab71f6498d129b923063a4d51836","typeString":"literal_string \"BALANCER_INVALID_BATCH_AMOUNT_OU\""}],"id":4632,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"6554:7:23","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4637,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6554:61:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4638,"nodeType":"ExpressionStatement","src":"6554:61:23"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4647,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"baseExpression":{"id":4642,"name":"results","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4607,"src":"6652:7:23","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_memory_ptr","typeString":"int256[] memory"}},"id":4644,"indexExpression":{"hexValue":"30","id":4643,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6660:1:23","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6652:10:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"expression":{"id":4640,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3320,"src":"6633:8:23","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$3320_$","typeString":"type(library SafeCast)"}},"id":4641,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"toUint256","nodeType":"MemberAccess","referencedDeclaration":2268,"src":"6633:18:23","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_int256_$returns$_t_uint256_$","typeString":"function (int256) pure returns (uint256)"}},"id":4645,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6633:30:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":4646,"name":"amountIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4391,"src":"6667:8:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6633:42:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"42414c414e4345525f494e56414c49445f42415443485f414d4f554e545f494e","id":4648,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6677:34:23","typeDescriptions":{"typeIdentifier":"t_stringliteral_0932a94ff52ccbad8aa0d10631f5a1d64f1bc3a1b4af2eb31a63fa91d9514653","typeString":"literal_string \"BALANCER_INVALID_BATCH_AMOUNT_IN\""},"value":"BALANCER_INVALID_BATCH_AMOUNT_IN"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_0932a94ff52ccbad8aa0d10631f5a1d64f1bc3a1b4af2eb31a63fa91d9514653","typeString":"literal_string \"BALANCER_INVALID_BATCH_AMOUNT_IN\""}],"id":4639,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"6625:7:23","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4649,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6625:87:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4650,"nodeType":"ExpressionStatement","src":"6625:87:23"},{"expression":{"arguments":[{"arguments":[{"id":4656,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"-","prefix":true,"src":"6844:2:23","subExpression":{"hexValue":"31","id":4655,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6845:1:23","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"typeDescriptions":{"typeIdentifier":"t_rational_minus_1_by_1","typeString":"int_const -1"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_minus_1_by_1","typeString":"int_const -1"}],"expression":{"id":4653,"name":"intAmountOut","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4623,"src":"6818:12:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":4654,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"uncheckedMul","nodeType":"MemberAccess","referencedDeclaration":110,"src":"6818:25:23","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_int256_$_t_int256_$returns$_t_int256_$bound_to$_t_int256_$","typeString":"function (int256,int256) pure returns (int256)"}},"id":4657,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6818:29:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4652,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6810:7:23","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":4651,"name":"uint256","nodeType":"ElementaryTypeName","src":"6810:7:23","typeDescriptions":{}}},"id":4658,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6810:38:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4399,"id":4659,"nodeType":"Return","src":"6803:45:23"}]},"documentation":{"id":4385,"nodeType":"StructuredDocumentation","src":"3801:422:23","text":" @dev Internal function to swap two tokens through BalancerV2 using a multi hop\n @param tokenIn Token being sent\n @param tokenOut Token being received\n @param amountIn Amount of tokenIn to be swapped\n @param minAmountOut Minimum amount of tokenOut willing to receive\n @param data ABI-encoded-packed to specify the list of hop-tokens and pool IDs between tokenIn and tokenOut"},"id":4661,"implemented":true,"kind":"function","modifiers":[],"name":"_batchSwapBalancerV2","nameLocation":"4237:20:23","nodeType":"FunctionDefinition","parameters":{"id":4396,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4387,"mutability":"mutable","name":"tokenIn","nameLocation":"4275:7:23","nodeType":"VariableDeclaration","scope":4661,"src":"4267:15:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4386,"name":"address","nodeType":"ElementaryTypeName","src":"4267:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4389,"mutability":"mutable","name":"tokenOut","nameLocation":"4300:8:23","nodeType":"VariableDeclaration","scope":4661,"src":"4292:16:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4388,"name":"address","nodeType":"ElementaryTypeName","src":"4292:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4391,"mutability":"mutable","name":"amountIn","nameLocation":"4326:8:23","nodeType":"VariableDeclaration","scope":4661,"src":"4318:16:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4390,"name":"uint256","nodeType":"ElementaryTypeName","src":"4318:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4393,"mutability":"mutable","name":"minAmountOut","nameLocation":"4352:12:23","nodeType":"VariableDeclaration","scope":4661,"src":"4344:20:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4392,"name":"uint256","nodeType":"ElementaryTypeName","src":"4344:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4395,"mutability":"mutable","name":"data","nameLocation":"4387:4:23","nodeType":"VariableDeclaration","scope":4661,"src":"4374:17:23","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4394,"name":"bytes","nodeType":"ElementaryTypeName","src":"4374:5:23","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4257:140:23"},"returnParameters":{"id":4399,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4398,"mutability":"mutable","name":"amountOut","nameLocation":"4423:9:23","nodeType":"VariableDeclaration","scope":4661,"src":"4415:17:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4397,"name":"uint256","nodeType":"ElementaryTypeName","src":"4415:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4414:19:23"},"scope":4734,"src":"4228:2627:23","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":4685,"nodeType":"Block","src":"7063:259:23","statements":[{"expression":{"arguments":[{"arguments":[{"id":4672,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"7158:4:23","typeDescriptions":{"typeIdentifier":"t_contract$_BalancerV2Connector_$4734","typeString":"contract BalancerV2Connector"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_BalancerV2Connector_$4734","typeString":"contract BalancerV2Connector"}],"id":4671,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7150:7:23","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4670,"name":"address","nodeType":"ElementaryTypeName","src":"7150:7:23","typeDescriptions":{}}},"id":4673,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7150:13:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"hexValue":"66616c7365","id":4674,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"7202:5:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"arguments":[{"arguments":[{"id":4679,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"7252:4:23","typeDescriptions":{"typeIdentifier":"t_contract$_BalancerV2Connector_$4734","typeString":"contract BalancerV2Connector"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_BalancerV2Connector_$4734","typeString":"contract BalancerV2Connector"}],"id":4678,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7244:7:23","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4677,"name":"address","nodeType":"ElementaryTypeName","src":"7244:7:23","typeDescriptions":{}}},"id":4680,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7244:13:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":4676,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7236:8:23","typeDescriptions":{"typeIdentifier":"t_type$_t_address_payable_$","typeString":"type(address payable)"},"typeName":{"id":4675,"name":"address","nodeType":"ElementaryTypeName","src":"7236:8:23","stateMutability":"payable","typeDescriptions":{}}},"id":4681,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7236:22:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},{"hexValue":"66616c7365","id":4682,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"7295:5:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_address_payable","typeString":"address payable"},{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4668,"name":"IBalancerV2Vault","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5865,"src":"7092:16:23","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IBalancerV2Vault_$5865_$","typeString":"type(contract IBalancerV2Vault)"}},"id":4669,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"FundManagement","nodeType":"MemberAccess","referencedDeclaration":5803,"src":"7092:31:23","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_FundManagement_$5803_storage_ptr_$","typeString":"type(struct IBalancerV2Vault.FundManagement storage pointer)"}},"id":4683,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"names":["sender","fromInternalBalance","recipient","toInternalBalance"],"nodeType":"FunctionCall","src":"7092:223:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_FundManagement_$5803_memory_ptr","typeString":"struct IBalancerV2Vault.FundManagement memory"}},"functionReturnParameters":4667,"id":4684,"nodeType":"Return","src":"7073:242:23"}]},"documentation":{"id":4662,"nodeType":"StructuredDocumentation","src":"6861:108:23","text":" @dev Internal function to build the fund management struct required by Balancer for swaps"},"id":4686,"implemented":true,"kind":"function","modifiers":[],"name":"_fundManagement","nameLocation":"6983:15:23","nodeType":"FunctionDefinition","parameters":{"id":4663,"nodeType":"ParameterList","parameters":[],"src":"6998:2:23"},"returnParameters":{"id":4667,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4666,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4686,"src":"7023:38:23","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_FundManagement_$5803_memory_ptr","typeString":"struct IBalancerV2Vault.FundManagement"},"typeName":{"id":4665,"nodeType":"UserDefinedTypeName","pathNode":{"id":4664,"name":"IBalancerV2Vault.FundManagement","nodeType":"IdentifierPath","referencedDeclaration":5803,"src":"7023:31:23"},"referencedDeclaration":5803,"src":"7023:31:23","typeDescriptions":{"typeIdentifier":"t_struct$_FundManagement_$5803_storage_ptr","typeString":"struct IBalancerV2Vault.FundManagement"}},"visibility":"internal"}],"src":"7022:40:23"},"scope":4734,"src":"6974:348:23","stateMutability":"view","virtual":false,"visibility":"private"},{"body":{"id":4732,"nodeType":"Block","src":"7684:293:23","statements":[{"assignments":[4697,null],"declarations":[{"constant":false,"id":4697,"mutability":"mutable","name":"pool","nameLocation":"7703:4:23","nodeType":"VariableDeclaration","scope":4732,"src":"7695:12:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4696,"name":"address","nodeType":"ElementaryTypeName","src":"7695:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},null],"id":4702,"initialValue":{"arguments":[{"id":4700,"name":"poolId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4689,"src":"7737:6:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":4698,"name":"balancerV2Vault","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4233,"src":"7713:15:23","typeDescriptions":{"typeIdentifier":"t_contract$_IBalancerV2Vault_$5865","typeString":"contract IBalancerV2Vault"}},"id":4699,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"getPool","nodeType":"MemberAccess","referencedDeclaration":5851,"src":"7713:23:23","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_bytes32_$returns$_t_address_$_t_uint8_$","typeString":"function (bytes32) view external returns (address,uint8)"}},"id":4701,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7713:31:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_uint8_$","typeString":"tuple(address,uint8)"}},"nodeType":"VariableDeclarationStatement","src":"7694:50:23"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":4709,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4704,"name":"pool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4697,"src":"7762:4:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":4707,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7778:1:23","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":4706,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7770:7:23","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4705,"name":"address","nodeType":"ElementaryTypeName","src":"7770:7:23","typeDescriptions":{}}},"id":4708,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7770:10:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7762:18:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"494e56414c49445f42414c414e4345525f504f4f4c5f4944","id":4710,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7782:26:23","typeDescriptions":{"typeIdentifier":"t_stringliteral_66cbe35eb6666c92304a8cb76d93a701850dd3d2002f6d45447de944a39de107","typeString":"literal_string \"INVALID_BALANCER_POOL_ID\""},"value":"INVALID_BALANCER_POOL_ID"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_66cbe35eb6666c92304a8cb76d93a701850dd3d2002f6d45447de944a39de107","typeString":"literal_string \"INVALID_BALANCER_POOL_ID\""}],"id":4703,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"7754:7:23","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4711,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7754:55:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4712,"nodeType":"ExpressionStatement","src":"7754:55:23"},{"assignments":[4717,null,null],"declarations":[{"constant":false,"id":4717,"mutability":"mutable","name":"tokens","nameLocation":"7837:6:23","nodeType":"VariableDeclaration","scope":4732,"src":"7820:23:23","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":4715,"name":"address","nodeType":"ElementaryTypeName","src":"7820:7:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":4716,"nodeType":"ArrayTypeName","src":"7820:9:23","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},null,null],"id":4722,"initialValue":{"arguments":[{"id":4720,"name":"poolId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4689,"src":"7881:6:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":4718,"name":"balancerV2Vault","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4233,"src":"7851:15:23","typeDescriptions":{"typeIdentifier":"t_contract$_IBalancerV2Vault_$5865","typeString":"contract IBalancerV2Vault"}},"id":4719,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"getPoolTokens","nodeType":"MemberAccess","referencedDeclaration":5864,"src":"7851:29:23","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_bytes32_$returns$_t_array$_t_address_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$","typeString":"function (bytes32) view external returns (address[] memory,uint256[] memory,uint256)"}},"id":4721,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7851:37:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_array$_t_address_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$","typeString":"tuple(address[] memory,uint256[] memory,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"7819:69:23"},{"expression":{"arguments":[{"arguments":[{"id":4726,"name":"tokenA","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4691,"src":"7922:6:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4727,"name":"tokenB","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4693,"src":"7930:6:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":4724,"name":"tokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4717,"src":"7906:6:23","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":4725,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"includes","nodeType":"MemberAccess","referencedDeclaration":195,"src":"7906:15:23","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_address_$dyn_memory_ptr_$_t_address_$_t_address_$returns$_t_bool_$bound_to$_t_array$_t_address_$dyn_memory_ptr_$","typeString":"function (address[] memory,address,address) pure returns (bool)"}},"id":4728,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7906:31:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"494e56414c49445f42414c414e4345525f504f4f4c5f544f4b454e53","id":4729,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7939:30:23","typeDescriptions":{"typeIdentifier":"t_stringliteral_316b7cdf461641c0913c2eef4903d44fb8ebf510c9c6a5d8e9dc1df97827889d","typeString":"literal_string \"INVALID_BALANCER_POOL_TOKENS\""},"value":"INVALID_BALANCER_POOL_TOKENS"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_316b7cdf461641c0913c2eef4903d44fb8ebf510c9c6a5d8e9dc1df97827889d","typeString":"literal_string \"INVALID_BALANCER_POOL_TOKENS\""}],"id":4723,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"7898:7:23","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4730,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7898:72:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4731,"nodeType":"ExpressionStatement","src":"7898:72:23"}]},"documentation":{"id":4687,"nodeType":"StructuredDocumentation","src":"7328:267:23","text":" @dev Internal function to validate that there is a pool created for tokenA and tokenB with a requested pool ID\n @param poolId Balancer pool ID\n @param tokenA One of the tokens in the pool\n @param tokenB The other token in the pool"},"id":4733,"implemented":true,"kind":"function","modifiers":[],"name":"_validatePool","nameLocation":"7609:13:23","nodeType":"FunctionDefinition","parameters":{"id":4694,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4689,"mutability":"mutable","name":"poolId","nameLocation":"7631:6:23","nodeType":"VariableDeclaration","scope":4733,"src":"7623:14:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4688,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7623:7:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":4691,"mutability":"mutable","name":"tokenA","nameLocation":"7647:6:23","nodeType":"VariableDeclaration","scope":4733,"src":"7639:14:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4690,"name":"address","nodeType":"ElementaryTypeName","src":"7639:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4693,"mutability":"mutable","name":"tokenB","nameLocation":"7663:6:23","nodeType":"VariableDeclaration","scope":4733,"src":"7655:14:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4692,"name":"address","nodeType":"ElementaryTypeName","src":"7655:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"7622:48:23"},"returnParameters":{"id":4695,"nodeType":"ParameterList","parameters":[],"src":"7684:0:23"},"scope":4734,"src":"7600:377:23","stateMutability":"view","virtual":false,"visibility":"private"}],"scope":4735,"src":"1153:6826:23"}],"src":"688:7292:23"},"id":23},"contracts/connectors/HopSwapConnector.sol":{"ast":{"absolutePath":"contracts/connectors/HopSwapConnector.sol","exportedSymbols":{"Address":[1469],"HopSwapConnector":[4822],"IERC20":[832],"IERC20Permit":[893],"IHopSwap":[5890],"SafeERC20":[1174]},"id":4823,"license":"GPL-3.0-or-later","nodeType":"SourceUnit","nodes":[{"id":4736,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"688:23:24"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"@openzeppelin/contracts/token/ERC20/IERC20.sol","id":4737,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4823,"sourceUnit":833,"src":"713:56:24","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol","file":"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol","id":4738,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4823,"sourceUnit":1175,"src":"770:65:24","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/interfaces/IHopSwap.sol","file":"../interfaces/IHopSwap.sol","id":4739,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4823,"sourceUnit":5891,"src":"837:36:24","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[],"contractDependencies":[],"contractKind":"contract","documentation":{"id":4740,"nodeType":"StructuredDocumentation","src":"875:82:24","text":" @title HopSwapConnector\n @dev Interfaces with Hop Swap to swap tokens"},"fullyImplemented":true,"id":4822,"linearizedBaseContracts":[4822],"name":"HopSwapConnector","nameLocation":"967:16:24","nodeType":"ContractDefinition","nodes":[{"id":4744,"libraryName":{"id":4741,"name":"SafeERC20","nodeType":"IdentifierPath","referencedDeclaration":1174,"src":"996:9:24"},"nodeType":"UsingForDirective","src":"990:27:24","typeName":{"id":4743,"nodeType":"UserDefinedTypeName","pathNode":{"id":4742,"name":"IERC20","nodeType":"IdentifierPath","referencedDeclaration":832,"src":"1010:6:24"},"referencedDeclaration":832,"src":"1010:6:24","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$832","typeString":"contract IERC20"}}},{"constant":true,"id":4747,"mutability":"constant","name":"ENCODED_DATA_SWAP_LENGTH","nameLocation":"1113:24:24","nodeType":"VariableDeclaration","scope":4822,"src":"1088:54:24","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4745,"name":"uint256","nodeType":"ElementaryTypeName","src":"1088:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"3332","id":4746,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1140:2:24","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"visibility":"private"},{"body":{"id":4820,"nodeType":"Block","src":"1657:495:24","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4767,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":4764,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4758,"src":"1675:4:24","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4765,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"1675:11:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":4766,"name":"ENCODED_DATA_SWAP_LENGTH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4747,"src":"1690:24:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1675:39:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"484f505f494e56414c49445f444154415f4c454e475448","id":4768,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1716:25:24","typeDescriptions":{"typeIdentifier":"t_stringliteral_e3360c1aa242a694a0a30f9b3474b7c9673cb4d060b27b23ff6dffb88815edc4","typeString":"literal_string \"HOP_INVALID_DATA_LENGTH\""},"value":"HOP_INVALID_DATA_LENGTH"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_e3360c1aa242a694a0a30f9b3474b7c9673cb4d060b27b23ff6dffb88815edc4","typeString":"literal_string \"HOP_INVALID_DATA_LENGTH\""}],"id":4763,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1667:7:24","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4769,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1667:75:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4770,"nodeType":"ExpressionStatement","src":"1667:75:24"},{"assignments":[4772],"declarations":[{"constant":false,"id":4772,"mutability":"mutable","name":"hopSwapAddress","nameLocation":"1760:14:24","nodeType":"VariableDeclaration","scope":4820,"src":"1752:22:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4771,"name":"address","nodeType":"ElementaryTypeName","src":"1752:7:24","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":4780,"initialValue":{"arguments":[{"id":4775,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4758,"src":"1788:4:24","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"components":[{"id":4777,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1795:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4776,"name":"address","nodeType":"ElementaryTypeName","src":"1795:7:24","typeDescriptions":{}}}],"id":4778,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"1794:9:24","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"}],"expression":{"id":4773,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"1777:3:24","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":4774,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"decode","nodeType":"MemberAccess","src":"1777:10:24","typeDescriptions":{"typeIdentifier":"t_function_abidecode_pure$__$returns$__$","typeString":"function () pure"}},"id":4779,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1777:27:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"nodeType":"VariableDeclarationStatement","src":"1752:52:24"},{"assignments":[4783],"declarations":[{"constant":false,"id":4783,"mutability":"mutable","name":"hopSwap","nameLocation":"1824:7:24","nodeType":"VariableDeclaration","scope":4820,"src":"1815:16:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IHopSwap_$5890","typeString":"contract IHopSwap"},"typeName":{"id":4782,"nodeType":"UserDefinedTypeName","pathNode":{"id":4781,"name":"IHopSwap","nodeType":"IdentifierPath","referencedDeclaration":5890,"src":"1815:8:24"},"referencedDeclaration":5890,"src":"1815:8:24","typeDescriptions":{"typeIdentifier":"t_contract$_IHopSwap_$5890","typeString":"contract IHopSwap"}},"visibility":"internal"}],"id":4787,"initialValue":{"arguments":[{"id":4785,"name":"hopSwapAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4772,"src":"1843:14:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":4784,"name":"IHopSwap","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5890,"src":"1834:8:24","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IHopSwap_$5890_$","typeString":"type(contract IHopSwap)"}},"id":4786,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1834:24:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IHopSwap_$5890","typeString":"contract IHopSwap"}},"nodeType":"VariableDeclarationStatement","src":"1815:43:24"},{"assignments":[4789],"declarations":[{"constant":false,"id":4789,"mutability":"mutable","name":"tokenInIndex","nameLocation":"1874:12:24","nodeType":"VariableDeclaration","scope":4820,"src":"1868:18:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":4788,"name":"uint8","nodeType":"ElementaryTypeName","src":"1868:5:24","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":4794,"initialValue":{"arguments":[{"id":4792,"name":"tokenIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4750,"src":"1911:7:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":4790,"name":"hopSwap","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4783,"src":"1889:7:24","typeDescriptions":{"typeIdentifier":"t_contract$_IHopSwap_$5890","typeString":"contract IHopSwap"}},"id":4791,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"getTokenIndex","nodeType":"MemberAccess","referencedDeclaration":5874,"src":"1889:21:24","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_uint8_$","typeString":"function (address) view external returns (uint8)"}},"id":4793,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1889:30:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"VariableDeclarationStatement","src":"1868:51:24"},{"assignments":[4796],"declarations":[{"constant":false,"id":4796,"mutability":"mutable","name":"tokenOutIndex","nameLocation":"1935:13:24","nodeType":"VariableDeclaration","scope":4820,"src":"1929:19:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":4795,"name":"uint8","nodeType":"ElementaryTypeName","src":"1929:5:24","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":4801,"initialValue":{"arguments":[{"id":4799,"name":"tokenOut","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4752,"src":"1973:8:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":4797,"name":"hopSwap","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4783,"src":"1951:7:24","typeDescriptions":{"typeIdentifier":"t_contract$_IHopSwap_$5890","typeString":"contract IHopSwap"}},"id":4798,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"getTokenIndex","nodeType":"MemberAccess","referencedDeclaration":5874,"src":"1951:21:24","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_uint8_$","typeString":"function (address) view external returns (uint8)"}},"id":4800,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1951:31:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"VariableDeclarationStatement","src":"1929:53:24"},{"expression":{"arguments":[{"id":4806,"name":"hopSwapAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4772,"src":"2021:14:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4807,"name":"amountIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4754,"src":"2037:8:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"id":4803,"name":"tokenIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4750,"src":"2000:7:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":4802,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":832,"src":"1993:6:24","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$832_$","typeString":"type(contract IERC20)"}},"id":4804,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1993:15:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$832","typeString":"contract IERC20"}},"id":4805,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"safeApprove","nodeType":"MemberAccess","referencedDeclaration":995,"src":"1993:27:24","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$832_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$832_$","typeString":"function (contract IERC20,address,uint256)"}},"id":4808,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1993:53:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4809,"nodeType":"ExpressionStatement","src":"1993:53:24"},{"expression":{"arguments":[{"id":4812,"name":"tokenInIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4789,"src":"2076:12:24","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":4813,"name":"tokenOutIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4796,"src":"2090:13:24","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":4814,"name":"amountIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4754,"src":"2105:8:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4815,"name":"minAmountOut","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4756,"src":"2115:12:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":4816,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"2129:5:24","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":4817,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"timestamp","nodeType":"MemberAccess","src":"2129:15:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":4810,"name":"hopSwap","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4783,"src":"2063:7:24","typeDescriptions":{"typeIdentifier":"t_contract$_IHopSwap_$5890","typeString":"contract IHopSwap"}},"id":4811,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"swap","nodeType":"MemberAccess","referencedDeclaration":5889,"src":"2063:12:24","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_uint8_$_t_uint8_$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint8,uint8,uint256,uint256,uint256) external returns (uint256)"}},"id":4818,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2063:82:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4762,"id":4819,"nodeType":"Return","src":"2056:89:24"}]},"documentation":{"id":4748,"nodeType":"StructuredDocumentation","src":"1149:334:24","text":" @dev Internal function to swap two tokens through Hop\n @param tokenIn Token being sent\n @param tokenOut Token being received\n @param amountIn Amount of tokenIn being swapped\n @param minAmountOut Minimum amount of tokenOut willing to receive\n @param data ABI-encoded Hop Swap to be used"},"id":4821,"implemented":true,"kind":"function","modifiers":[],"name":"_swapHop","nameLocation":"1497:8:24","nodeType":"FunctionDefinition","parameters":{"id":4759,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4750,"mutability":"mutable","name":"tokenIn","nameLocation":"1514:7:24","nodeType":"VariableDeclaration","scope":4821,"src":"1506:15:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4749,"name":"address","nodeType":"ElementaryTypeName","src":"1506:7:24","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4752,"mutability":"mutable","name":"tokenOut","nameLocation":"1531:8:24","nodeType":"VariableDeclaration","scope":4821,"src":"1523:16:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4751,"name":"address","nodeType":"ElementaryTypeName","src":"1523:7:24","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4754,"mutability":"mutable","name":"amountIn","nameLocation":"1549:8:24","nodeType":"VariableDeclaration","scope":4821,"src":"1541:16:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4753,"name":"uint256","nodeType":"ElementaryTypeName","src":"1541:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4756,"mutability":"mutable","name":"minAmountOut","nameLocation":"1567:12:24","nodeType":"VariableDeclaration","scope":4821,"src":"1559:20:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4755,"name":"uint256","nodeType":"ElementaryTypeName","src":"1559:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4758,"mutability":"mutable","name":"data","nameLocation":"1594:4:24","nodeType":"VariableDeclaration","scope":4821,"src":"1581:17:24","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4757,"name":"bytes","nodeType":"ElementaryTypeName","src":"1581:5:24","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1505:94:24"},"returnParameters":{"id":4762,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4761,"mutability":"mutable","name":"amountOut","nameLocation":"1642:9:24","nodeType":"VariableDeclaration","scope":4821,"src":"1634:17:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4760,"name":"uint256","nodeType":"ElementaryTypeName","src":"1634:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1633:19:24"},"scope":4822,"src":"1488:664:24","stateMutability":"nonpayable","virtual":false,"visibility":"internal"}],"scope":4823,"src":"958:1196:24"}],"src":"688:1467:24"},"id":24},"contracts/connectors/OneInchV5Connector.sol":{"ast":{"absolutePath":"contracts/connectors/OneInchV5Connector.sol","exportedSymbols":{"Address":[1469],"IAggregationExecutor":[5901],"IERC20":[832],"IERC20Permit":[893],"IOneInchV5AggregationRouter":[5937],"OneInchV5Connector":[4926],"SafeERC20":[1174]},"id":4927,"license":"GPL-3.0-or-later","nodeType":"SourceUnit","nodes":[{"id":4824,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"688:23:25"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"@openzeppelin/contracts/token/ERC20/IERC20.sol","id":4825,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4927,"sourceUnit":833,"src":"713:56:25","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol","file":"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol","id":4826,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4927,"sourceUnit":1175,"src":"770:65:25","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Address.sol","file":"@openzeppelin/contracts/utils/Address.sol","id":4827,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4927,"sourceUnit":1470,"src":"836:51:25","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/interfaces/IOneInchV5AggregationRouter.sol","file":"../interfaces/IOneInchV5AggregationRouter.sol","id":4828,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4927,"sourceUnit":5938,"src":"889:55:25","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[],"contractDependencies":[],"contractKind":"contract","documentation":{"id":4829,"nodeType":"StructuredDocumentation","src":"946:84:25","text":" @title OneInchV5Connector\n @dev Interfaces with 1inch V5 to swap tokens"},"fullyImplemented":true,"id":4926,"linearizedBaseContracts":[4926],"name":"OneInchV5Connector","nameLocation":"1040:18:25","nodeType":"ContractDefinition","nodes":[{"id":4833,"libraryName":{"id":4830,"name":"SafeERC20","nodeType":"IdentifierPath","referencedDeclaration":1174,"src":"1071:9:25"},"nodeType":"UsingForDirective","src":"1065:27:25","typeName":{"id":4832,"nodeType":"UserDefinedTypeName","pathNode":{"id":4831,"name":"IERC20","nodeType":"IdentifierPath","referencedDeclaration":832,"src":"1085:6:25"},"referencedDeclaration":832,"src":"1085:6:25","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$832","typeString":"contract IERC20"}}},{"constant":false,"id":4836,"mutability":"immutable","name":"oneInchV5Router","nameLocation":"1192:15:25","nodeType":"VariableDeclaration","scope":4926,"src":"1146:61:25","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IOneInchV5AggregationRouter_$5937","typeString":"contract IOneInchV5AggregationRouter"},"typeName":{"id":4835,"nodeType":"UserDefinedTypeName","pathNode":{"id":4834,"name":"IOneInchV5AggregationRouter","nodeType":"IdentifierPath","referencedDeclaration":5937,"src":"1146:27:25"},"referencedDeclaration":5937,"src":"1146:27:25","typeDescriptions":{"typeIdentifier":"t_contract$_IOneInchV5AggregationRouter_$5937","typeString":"contract IOneInchV5AggregationRouter"}},"visibility":"private"},{"body":{"id":4848,"nodeType":"Block","src":"1393:80:25","statements":[{"expression":{"id":4846,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4842,"name":"oneInchV5Router","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4836,"src":"1403:15:25","typeDescriptions":{"typeIdentifier":"t_contract$_IOneInchV5AggregationRouter_$5937","typeString":"contract IOneInchV5AggregationRouter"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":4844,"name":"_oneInchV5Router","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4839,"src":"1449:16:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":4843,"name":"IOneInchV5AggregationRouter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5937,"src":"1421:27:25","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IOneInchV5AggregationRouter_$5937_$","typeString":"type(contract IOneInchV5AggregationRouter)"}},"id":4845,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1421:45:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IOneInchV5AggregationRouter_$5937","typeString":"contract IOneInchV5AggregationRouter"}},"src":"1403:63:25","typeDescriptions":{"typeIdentifier":"t_contract$_IOneInchV5AggregationRouter_$5937","typeString":"contract IOneInchV5AggregationRouter"}},"id":4847,"nodeType":"ExpressionStatement","src":"1403:63:25"}]},"documentation":{"id":4837,"nodeType":"StructuredDocumentation","src":"1214:136:25","text":" @dev Initializes the OneInchV5Connector contract\n @param _oneInchV5Router 1inch aggregation router v5 reference"},"id":4849,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":4840,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4839,"mutability":"mutable","name":"_oneInchV5Router","nameLocation":"1375:16:25","nodeType":"VariableDeclaration","scope":4849,"src":"1367:24:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4838,"name":"address","nodeType":"ElementaryTypeName","src":"1367:7:25","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1366:26:25"},"returnParameters":{"id":4841,"nodeType":"ParameterList","parameters":[],"src":"1393:0:25"},"scope":4926,"src":"1355:118:25","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":4924,"nodeType":"Block","src":"2044:438:25","statements":[{"assignments":[4866],"declarations":[{"constant":false,"id":4866,"mutability":"mutable","name":"preBalanceOut","nameLocation":"2062:13:25","nodeType":"VariableDeclaration","scope":4924,"src":"2054:21:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4865,"name":"uint256","nodeType":"ElementaryTypeName","src":"2054:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4876,"initialValue":{"arguments":[{"arguments":[{"id":4873,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"2113:4:25","typeDescriptions":{"typeIdentifier":"t_contract$_OneInchV5Connector_$4926","typeString":"contract OneInchV5Connector"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_OneInchV5Connector_$4926","typeString":"contract OneInchV5Connector"}],"id":4872,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2105:7:25","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4871,"name":"address","nodeType":"ElementaryTypeName","src":"2105:7:25","typeDescriptions":{}}},"id":4874,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2105:13:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"arguments":[{"id":4868,"name":"tokenOut","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4854,"src":"2085:8:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":4867,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":832,"src":"2078:6:25","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$832_$","typeString":"type(contract IERC20)"}},"id":4869,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2078:16:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$832","typeString":"contract IERC20"}},"id":4870,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"balanceOf","nodeType":"MemberAccess","referencedDeclaration":789,"src":"2078:26:25","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view external returns (uint256)"}},"id":4875,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2078:41:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2054:65:25"},{"expression":{"arguments":[{"arguments":[{"id":4883,"name":"oneInchV5Router","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4836,"src":"2166:15:25","typeDescriptions":{"typeIdentifier":"t_contract$_IOneInchV5AggregationRouter_$5937","typeString":"contract IOneInchV5AggregationRouter"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IOneInchV5AggregationRouter_$5937","typeString":"contract IOneInchV5AggregationRouter"}],"id":4882,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2158:7:25","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4881,"name":"address","nodeType":"ElementaryTypeName","src":"2158:7:25","typeDescriptions":{}}},"id":4884,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2158:24:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4885,"name":"amountIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4856,"src":"2184:8:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"id":4878,"name":"tokenIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4852,"src":"2137:7:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":4877,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":832,"src":"2130:6:25","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$832_$","typeString":"type(contract IERC20)"}},"id":4879,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2130:15:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$832","typeString":"contract IERC20"}},"id":4880,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"safeApprove","nodeType":"MemberAccess","referencedDeclaration":995,"src":"2130:27:25","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$832_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$832_$","typeString":"function (contract IERC20,address,uint256)"}},"id":4886,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2130:63:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4887,"nodeType":"ExpressionStatement","src":"2130:63:25"},{"expression":{"arguments":[{"arguments":[{"id":4893,"name":"oneInchV5Router","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4836,"src":"2232:15:25","typeDescriptions":{"typeIdentifier":"t_contract$_IOneInchV5AggregationRouter_$5937","typeString":"contract IOneInchV5AggregationRouter"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IOneInchV5AggregationRouter_$5937","typeString":"contract IOneInchV5AggregationRouter"}],"id":4892,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2224:7:25","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4891,"name":"address","nodeType":"ElementaryTypeName","src":"2224:7:25","typeDescriptions":{}}},"id":4894,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2224:24:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4895,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4860,"src":"2250:4:25","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"31494e43485f56355f535741505f4641494c4544","id":4896,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2256:22:25","typeDescriptions":{"typeIdentifier":"t_stringliteral_8dc599fe2b653378dc33d2a2281a449a5e51feec01603b0593ca74ffbf408a9c","typeString":"literal_string \"1INCH_V5_SWAP_FAILED\""},"value":"1INCH_V5_SWAP_FAILED"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_stringliteral_8dc599fe2b653378dc33d2a2281a449a5e51feec01603b0593ca74ffbf408a9c","typeString":"literal_string \"1INCH_V5_SWAP_FAILED\""}],"expression":{"id":4888,"name":"Address","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1469,"src":"2203:7:25","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Address_$1469_$","typeString":"type(library Address)"}},"id":4890,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"functionCall","nodeType":"MemberAccess","referencedDeclaration":1263,"src":"2203:20:25","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,string memory) returns (bytes memory)"}},"id":4897,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2203:76:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4898,"nodeType":"ExpressionStatement","src":"2203:76:25"},{"assignments":[4900],"declarations":[{"constant":false,"id":4900,"mutability":"mutable","name":"postBalanceOut","nameLocation":"2298:14:25","nodeType":"VariableDeclaration","scope":4924,"src":"2290:22:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4899,"name":"uint256","nodeType":"ElementaryTypeName","src":"2290:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4910,"initialValue":{"arguments":[{"arguments":[{"id":4907,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"2350:4:25","typeDescriptions":{"typeIdentifier":"t_contract$_OneInchV5Connector_$4926","typeString":"contract OneInchV5Connector"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_OneInchV5Connector_$4926","typeString":"contract OneInchV5Connector"}],"id":4906,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2342:7:25","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4905,"name":"address","nodeType":"ElementaryTypeName","src":"2342:7:25","typeDescriptions":{}}},"id":4908,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2342:13:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"arguments":[{"id":4902,"name":"tokenOut","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4854,"src":"2322:8:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":4901,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":832,"src":"2315:6:25","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$832_$","typeString":"type(contract IERC20)"}},"id":4903,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2315:16:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$832","typeString":"contract IERC20"}},"id":4904,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"balanceOf","nodeType":"MemberAccess","referencedDeclaration":789,"src":"2315:26:25","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view external returns (uint256)"}},"id":4909,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2315:41:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2290:66:25"},{"expression":{"id":4915,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4911,"name":"amountOut","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4863,"src":"2366:9:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4914,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4912,"name":"postBalanceOut","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4900,"src":"2378:14:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":4913,"name":"preBalanceOut","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4866,"src":"2395:13:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2378:30:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2366:42:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4916,"nodeType":"ExpressionStatement","src":"2366:42:25"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4920,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4918,"name":"amountOut","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4863,"src":"2426:9:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":4919,"name":"minAmountOut","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4858,"src":"2439:12:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2426:25:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"31494e43485f56355f4d494e5f414d4f554e54","id":4921,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2453:21:25","typeDescriptions":{"typeIdentifier":"t_stringliteral_250825b91a441035041aa19c47dca116183d1965aa3af31049d8bb22daeaca26","typeString":"literal_string \"1INCH_V5_MIN_AMOUNT\""},"value":"1INCH_V5_MIN_AMOUNT"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_250825b91a441035041aa19c47dca116183d1965aa3af31049d8bb22daeaca26","typeString":"literal_string \"1INCH_V5_MIN_AMOUNT\""}],"id":4917,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2418:7:25","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4922,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2418:57:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4923,"nodeType":"ExpressionStatement","src":"2418:57:25"}]},"documentation":{"id":4850,"nodeType":"StructuredDocumentation","src":"1479:359:25","text":" @dev Internal function to swap two tokens through 1Inch V5\n @param tokenIn Token being sent\n @param tokenOut Token being received\n @param amountIn Amount of tokenIn being swapped\n @param minAmountOut Minimum amount of tokenOut willing to receive\n @param data Calldata to be sent to the 1inch aggregation router"},"id":4925,"implemented":true,"kind":"function","modifiers":[],"name":"_swapOneInchV5","nameLocation":"1852:14:25","nodeType":"FunctionDefinition","parameters":{"id":4861,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4852,"mutability":"mutable","name":"tokenIn","nameLocation":"1884:7:25","nodeType":"VariableDeclaration","scope":4925,"src":"1876:15:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4851,"name":"address","nodeType":"ElementaryTypeName","src":"1876:7:25","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4854,"mutability":"mutable","name":"tokenOut","nameLocation":"1909:8:25","nodeType":"VariableDeclaration","scope":4925,"src":"1901:16:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4853,"name":"address","nodeType":"ElementaryTypeName","src":"1901:7:25","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4856,"mutability":"mutable","name":"amountIn","nameLocation":"1935:8:25","nodeType":"VariableDeclaration","scope":4925,"src":"1927:16:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4855,"name":"uint256","nodeType":"ElementaryTypeName","src":"1927:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4858,"mutability":"mutable","name":"minAmountOut","nameLocation":"1961:12:25","nodeType":"VariableDeclaration","scope":4925,"src":"1953:20:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4857,"name":"uint256","nodeType":"ElementaryTypeName","src":"1953:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4860,"mutability":"mutable","name":"data","nameLocation":"1996:4:25","nodeType":"VariableDeclaration","scope":4925,"src":"1983:17:25","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4859,"name":"bytes","nodeType":"ElementaryTypeName","src":"1983:5:25","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1866:140:25"},"returnParameters":{"id":4864,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4863,"mutability":"mutable","name":"amountOut","nameLocation":"2033:9:25","nodeType":"VariableDeclaration","scope":4925,"src":"2025:17:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4862,"name":"uint256","nodeType":"ElementaryTypeName","src":"2025:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2024:19:25"},"scope":4926,"src":"1843:639:25","stateMutability":"nonpayable","virtual":false,"visibility":"internal"}],"scope":4927,"src":"1031:1453:25"}],"src":"688:1797:25"},"id":25},"contracts/connectors/ParaswapV5Connector.sol":{"ast":{"absolutePath":"contracts/connectors/ParaswapV5Connector.sol","exportedSymbols":{"Address":[1469],"IERC20":[832],"IERC20Permit":[893],"IParaswapV5Augustus":[5945],"ParaswapV5Connector":[5033],"SafeERC20":[1174]},"id":5034,"license":"GPL-3.0-or-later","nodeType":"SourceUnit","nodes":[{"id":4928,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"688:23:26"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"@openzeppelin/contracts/token/ERC20/IERC20.sol","id":4929,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":5034,"sourceUnit":833,"src":"713:56:26","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol","file":"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol","id":4930,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":5034,"sourceUnit":1175,"src":"770:65:26","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Address.sol","file":"@openzeppelin/contracts/utils/Address.sol","id":4931,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":5034,"sourceUnit":1470,"src":"836:51:26","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/interfaces/IParaswapV5Augustus.sol","file":"../interfaces/IParaswapV5Augustus.sol","id":4932,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":5034,"sourceUnit":5946,"src":"889:47:26","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[],"contractDependencies":[],"contractKind":"contract","documentation":{"id":4933,"nodeType":"StructuredDocumentation","src":"938:88:26","text":" @title ParaswapV5Connector\n @dev Interfaces with Paraswap V5 to swap tokens"},"fullyImplemented":true,"id":5033,"linearizedBaseContracts":[5033],"name":"ParaswapV5Connector","nameLocation":"1036:19:26","nodeType":"ContractDefinition","nodes":[{"id":4937,"libraryName":{"id":4934,"name":"SafeERC20","nodeType":"IdentifierPath","referencedDeclaration":1174,"src":"1068:9:26"},"nodeType":"UsingForDirective","src":"1062:27:26","typeName":{"id":4936,"nodeType":"UserDefinedTypeName","pathNode":{"id":4935,"name":"IERC20","nodeType":"IdentifierPath","referencedDeclaration":832,"src":"1082:6:26"},"referencedDeclaration":832,"src":"1082:6:26","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$832","typeString":"contract IERC20"}}},{"constant":false,"id":4940,"mutability":"immutable","name":"paraswapV5Augustus","nameLocation":"1182:18:26","nodeType":"VariableDeclaration","scope":5033,"src":"1144:56:26","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IParaswapV5Augustus_$5945","typeString":"contract IParaswapV5Augustus"},"typeName":{"id":4939,"nodeType":"UserDefinedTypeName","pathNode":{"id":4938,"name":"IParaswapV5Augustus","nodeType":"IdentifierPath","referencedDeclaration":5945,"src":"1144:19:26"},"referencedDeclaration":5945,"src":"1144:19:26","typeDescriptions":{"typeIdentifier":"t_contract$_IParaswapV5Augustus_$5945","typeString":"contract IParaswapV5Augustus"}},"visibility":"private"},{"body":{"id":4952,"nodeType":"Block","src":"1385:78:26","statements":[{"expression":{"id":4950,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4946,"name":"paraswapV5Augustus","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4940,"src":"1395:18:26","typeDescriptions":{"typeIdentifier":"t_contract$_IParaswapV5Augustus_$5945","typeString":"contract IParaswapV5Augustus"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":4948,"name":"_paraswapV5Augustus","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4943,"src":"1436:19:26","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":4947,"name":"IParaswapV5Augustus","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5945,"src":"1416:19:26","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IParaswapV5Augustus_$5945_$","typeString":"type(contract IParaswapV5Augustus)"}},"id":4949,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1416:40:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IParaswapV5Augustus_$5945","typeString":"contract IParaswapV5Augustus"}},"src":"1395:61:26","typeDescriptions":{"typeIdentifier":"t_contract$_IParaswapV5Augustus_$5945","typeString":"contract IParaswapV5Augustus"}},"id":4951,"nodeType":"ExpressionStatement","src":"1395:61:26"}]},"documentation":{"id":4941,"nodeType":"StructuredDocumentation","src":"1207:132:26","text":" @dev Initializes the ParaswapV5Connector contract\n @param _paraswapV5Augustus Paraswap V5 augusts reference"},"id":4953,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":4944,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4943,"mutability":"mutable","name":"_paraswapV5Augustus","nameLocation":"1364:19:26","nodeType":"VariableDeclaration","scope":4953,"src":"1356:27:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4942,"name":"address","nodeType":"ElementaryTypeName","src":"1356:7:26","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1355:29:26"},"returnParameters":{"id":4945,"nodeType":"ParameterList","parameters":[],"src":"1385:0:26"},"scope":5033,"src":"1344:119:26","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":5031,"nodeType":"Block","src":"2030:522:26","statements":[{"assignments":[4970],"declarations":[{"constant":false,"id":4970,"mutability":"mutable","name":"preBalanceOut","nameLocation":"2048:13:26","nodeType":"VariableDeclaration","scope":5031,"src":"2040:21:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4969,"name":"uint256","nodeType":"ElementaryTypeName","src":"2040:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4980,"initialValue":{"arguments":[{"arguments":[{"id":4977,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"2099:4:26","typeDescriptions":{"typeIdentifier":"t_contract$_ParaswapV5Connector_$5033","typeString":"contract ParaswapV5Connector"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_ParaswapV5Connector_$5033","typeString":"contract ParaswapV5Connector"}],"id":4976,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2091:7:26","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4975,"name":"address","nodeType":"ElementaryTypeName","src":"2091:7:26","typeDescriptions":{}}},"id":4978,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2091:13:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"arguments":[{"id":4972,"name":"tokenOut","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4958,"src":"2071:8:26","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":4971,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":832,"src":"2064:6:26","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$832_$","typeString":"type(contract IERC20)"}},"id":4973,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2064:16:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$832","typeString":"contract IERC20"}},"id":4974,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"balanceOf","nodeType":"MemberAccess","referencedDeclaration":789,"src":"2064:26:26","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view external returns (uint256)"}},"id":4979,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2064:41:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2040:65:26"},{"assignments":[4982],"declarations":[{"constant":false,"id":4982,"mutability":"mutable","name":"tokenTransferProxy","nameLocation":"2124:18:26","nodeType":"VariableDeclaration","scope":5031,"src":"2116:26:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4981,"name":"address","nodeType":"ElementaryTypeName","src":"2116:7:26","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":4986,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":4983,"name":"paraswapV5Augustus","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4940,"src":"2145:18:26","typeDescriptions":{"typeIdentifier":"t_contract$_IParaswapV5Augustus_$5945","typeString":"contract IParaswapV5Augustus"}},"id":4984,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"getTokenTransferProxy","nodeType":"MemberAccess","referencedDeclaration":5944,"src":"2145:40:26","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_address_$","typeString":"function () view external returns (address)"}},"id":4985,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2145:42:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"2116:71:26"},{"expression":{"arguments":[{"id":4991,"name":"tokenTransferProxy","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4982,"src":"2225:18:26","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4992,"name":"amountIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4960,"src":"2245:8:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"id":4988,"name":"tokenIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4956,"src":"2204:7:26","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":4987,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":832,"src":"2197:6:26","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$832_$","typeString":"type(contract IERC20)"}},"id":4989,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2197:15:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$832","typeString":"contract IERC20"}},"id":4990,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"safeApprove","nodeType":"MemberAccess","referencedDeclaration":995,"src":"2197:27:26","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$832_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$832_$","typeString":"function (contract IERC20,address,uint256)"}},"id":4993,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2197:57:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4994,"nodeType":"ExpressionStatement","src":"2197:57:26"},{"expression":{"arguments":[{"arguments":[{"id":5000,"name":"paraswapV5Augustus","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4940,"src":"2293:18:26","typeDescriptions":{"typeIdentifier":"t_contract$_IParaswapV5Augustus_$5945","typeString":"contract IParaswapV5Augustus"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IParaswapV5Augustus_$5945","typeString":"contract IParaswapV5Augustus"}],"id":4999,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2285:7:26","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4998,"name":"address","nodeType":"ElementaryTypeName","src":"2285:7:26","typeDescriptions":{}}},"id":5001,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2285:27:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":5002,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4964,"src":"2314:4:26","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"50415241535741505f56355f535741505f4641494c4544","id":5003,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2320:25:26","typeDescriptions":{"typeIdentifier":"t_stringliteral_d21a0a324b209d8d1f786576febb42656741dc55ad603875bdd38ab3a4d132a6","typeString":"literal_string \"PARASWAP_V5_SWAP_FAILED\""},"value":"PARASWAP_V5_SWAP_FAILED"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_stringliteral_d21a0a324b209d8d1f786576febb42656741dc55ad603875bdd38ab3a4d132a6","typeString":"literal_string \"PARASWAP_V5_SWAP_FAILED\""}],"expression":{"id":4995,"name":"Address","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1469,"src":"2264:7:26","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Address_$1469_$","typeString":"type(library Address)"}},"id":4997,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"functionCall","nodeType":"MemberAccess","referencedDeclaration":1263,"src":"2264:20:26","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,string memory) returns (bytes memory)"}},"id":5004,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2264:82:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":5005,"nodeType":"ExpressionStatement","src":"2264:82:26"},{"assignments":[5007],"declarations":[{"constant":false,"id":5007,"mutability":"mutable","name":"postBalanceOut","nameLocation":"2365:14:26","nodeType":"VariableDeclaration","scope":5031,"src":"2357:22:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5006,"name":"uint256","nodeType":"ElementaryTypeName","src":"2357:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5017,"initialValue":{"arguments":[{"arguments":[{"id":5014,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"2417:4:26","typeDescriptions":{"typeIdentifier":"t_contract$_ParaswapV5Connector_$5033","typeString":"contract ParaswapV5Connector"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_ParaswapV5Connector_$5033","typeString":"contract ParaswapV5Connector"}],"id":5013,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2409:7:26","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":5012,"name":"address","nodeType":"ElementaryTypeName","src":"2409:7:26","typeDescriptions":{}}},"id":5015,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2409:13:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"arguments":[{"id":5009,"name":"tokenOut","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4958,"src":"2389:8:26","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":5008,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":832,"src":"2382:6:26","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$832_$","typeString":"type(contract IERC20)"}},"id":5010,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2382:16:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$832","typeString":"contract IERC20"}},"id":5011,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"balanceOf","nodeType":"MemberAccess","referencedDeclaration":789,"src":"2382:26:26","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view external returns (uint256)"}},"id":5016,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2382:41:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2357:66:26"},{"expression":{"id":5022,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5018,"name":"amountOut","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4967,"src":"2433:9:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5021,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5019,"name":"postBalanceOut","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5007,"src":"2445:14:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":5020,"name":"preBalanceOut","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4970,"src":"2462:13:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2445:30:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2433:42:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5023,"nodeType":"ExpressionStatement","src":"2433:42:26"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5027,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5025,"name":"amountOut","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4967,"src":"2493:9:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":5026,"name":"minAmountOut","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4962,"src":"2506:12:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2493:25:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"50415241535741505f56355f4d494e5f414d4f554e54","id":5028,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2520:24:26","typeDescriptions":{"typeIdentifier":"t_stringliteral_893d73b372bd066c89d4a33be85bdd8036ae33c71f36d2c1583a20b63f7fcf27","typeString":"literal_string \"PARASWAP_V5_MIN_AMOUNT\""},"value":"PARASWAP_V5_MIN_AMOUNT"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_893d73b372bd066c89d4a33be85bdd8036ae33c71f36d2c1583a20b63f7fcf27","typeString":"literal_string \"PARASWAP_V5_MIN_AMOUNT\""}],"id":5024,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2485:7:26","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5029,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2485:60:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5030,"nodeType":"ExpressionStatement","src":"2485:60:26"}]},"documentation":{"id":4954,"nodeType":"StructuredDocumentation","src":"1469:354:26","text":" @dev Internal function to swap two tokens through Paraswap V5\n @param tokenIn Token being sent\n @param tokenOut Token being received\n @param amountIn Amount of tokenIn being swapped\n @param minAmountOut Minimum amount of tokenOut willing to receive\n @param data Calldata to be sent to the Augusuts swapper"},"id":5032,"implemented":true,"kind":"function","modifiers":[],"name":"_swapParaswapV5","nameLocation":"1837:15:26","nodeType":"FunctionDefinition","parameters":{"id":4965,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4956,"mutability":"mutable","name":"tokenIn","nameLocation":"1870:7:26","nodeType":"VariableDeclaration","scope":5032,"src":"1862:15:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4955,"name":"address","nodeType":"ElementaryTypeName","src":"1862:7:26","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4958,"mutability":"mutable","name":"tokenOut","nameLocation":"1895:8:26","nodeType":"VariableDeclaration","scope":5032,"src":"1887:16:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4957,"name":"address","nodeType":"ElementaryTypeName","src":"1887:7:26","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4960,"mutability":"mutable","name":"amountIn","nameLocation":"1921:8:26","nodeType":"VariableDeclaration","scope":5032,"src":"1913:16:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4959,"name":"uint256","nodeType":"ElementaryTypeName","src":"1913:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4962,"mutability":"mutable","name":"minAmountOut","nameLocation":"1947:12:26","nodeType":"VariableDeclaration","scope":5032,"src":"1939:20:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4961,"name":"uint256","nodeType":"ElementaryTypeName","src":"1939:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4964,"mutability":"mutable","name":"data","nameLocation":"1982:4:26","nodeType":"VariableDeclaration","scope":5032,"src":"1969:17:26","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4963,"name":"bytes","nodeType":"ElementaryTypeName","src":"1969:5:26","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1852:140:26"},"returnParameters":{"id":4968,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4967,"mutability":"mutable","name":"amountOut","nameLocation":"2019:9:26","nodeType":"VariableDeclaration","scope":5032,"src":"2011:17:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4966,"name":"uint256","nodeType":"ElementaryTypeName","src":"2011:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2010:19:26"},"scope":5033,"src":"1828:724:26","stateMutability":"nonpayable","virtual":false,"visibility":"internal"}],"scope":5034,"src":"1027:1527:26"}],"src":"688:1867:26"},"id":26},"contracts/connectors/UniswapV2Connector.sol":{"ast":{"absolutePath":"contracts/connectors/UniswapV2Connector.sol","exportedSymbols":{"Address":[1469],"Arrays":[396],"IERC20":[832],"IERC20Metadata":[857],"IERC20Permit":[893],"IUniswapV2Factory":[3383],"IUniswapV2Router01":[3691],"IUniswapV2Router02":[3779],"SafeERC20":[1174],"UncheckedMath":[127],"UniswapV2Connector":[5308]},"id":5309,"license":"GPL-3.0-or-later","nodeType":"SourceUnit","nodes":[{"id":5035,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"688:23:27"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"@openzeppelin/contracts/token/ERC20/IERC20.sol","id":5036,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":5309,"sourceUnit":833,"src":"713:56:27","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol","file":"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol","id":5037,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":5309,"sourceUnit":858,"src":"770:75:27","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol","file":"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol","id":5038,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":5309,"sourceUnit":1175,"src":"846:65:27","symbolAliases":[],"unitAlias":""},{"absolutePath":"@uniswap/v2-core/contracts/interfaces/IUniswapV2Factory.sol","file":"@uniswap/v2-core/contracts/interfaces/IUniswapV2Factory.sol","id":5039,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":5309,"sourceUnit":3384,"src":"913:69:27","symbolAliases":[],"unitAlias":""},{"absolutePath":"@uniswap/v2-periphery/contracts/interfaces/IUniswapV2Router02.sol","file":"@uniswap/v2-periphery/contracts/interfaces/IUniswapV2Router02.sol","id":5040,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":5309,"sourceUnit":3780,"src":"983:75:27","symbolAliases":[],"unitAlias":""},{"absolutePath":"@mimic-fi/v2-helpers/contracts/utils/Arrays.sol","file":"@mimic-fi/v2-helpers/contracts/utils/Arrays.sol","id":5041,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":5309,"sourceUnit":397,"src":"1060:57:27","symbolAliases":[],"unitAlias":""},{"absolutePath":"@mimic-fi/v2-helpers/contracts/math/UncheckedMath.sol","file":"@mimic-fi/v2-helpers/contracts/math/UncheckedMath.sol","id":5042,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":5309,"sourceUnit":128,"src":"1118:63:27","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[],"contractDependencies":[],"contractKind":"contract","documentation":{"id":5043,"nodeType":"StructuredDocumentation","src":"1183:86:27","text":" @title UniswapV2Connector\n @dev Interfaces with Uniswap V2 to swap tokens"},"fullyImplemented":true,"id":5308,"linearizedBaseContracts":[5308],"name":"UniswapV2Connector","nameLocation":"1279:18:27","nodeType":"ContractDefinition","nodes":[{"id":5047,"libraryName":{"id":5044,"name":"SafeERC20","nodeType":"IdentifierPath","referencedDeclaration":1174,"src":"1310:9:27"},"nodeType":"UsingForDirective","src":"1304:27:27","typeName":{"id":5046,"nodeType":"UserDefinedTypeName","pathNode":{"id":5045,"name":"IERC20","nodeType":"IdentifierPath","referencedDeclaration":832,"src":"1324:6:27"},"referencedDeclaration":832,"src":"1324:6:27","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$832","typeString":"contract IERC20"}}},{"id":5050,"libraryName":{"id":5048,"name":"UncheckedMath","nodeType":"IdentifierPath","referencedDeclaration":127,"src":"1342:13:27"},"nodeType":"UsingForDirective","src":"1336:32:27","typeName":{"id":5049,"name":"uint256","nodeType":"ElementaryTypeName","src":"1360:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},{"constant":true,"id":5053,"mutability":"constant","name":"ENCODED_DATA_SINGLE_SWAP_LENGTH","nameLocation":"1473:31:27","nodeType":"VariableDeclaration","scope":5308,"src":"1448:60:27","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5051,"name":"uint256","nodeType":"ElementaryTypeName","src":"1448:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30","id":5052,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1507:1:27","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"visibility":"private"},{"constant":false,"id":5056,"mutability":"immutable","name":"uniswapV2Router","nameLocation":"1589:15:27","nodeType":"VariableDeclaration","scope":5308,"src":"1552:52:27","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IUniswapV2Router02_$3779","typeString":"contract IUniswapV2Router02"},"typeName":{"id":5055,"nodeType":"UserDefinedTypeName","pathNode":{"id":5054,"name":"IUniswapV2Router02","nodeType":"IdentifierPath","referencedDeclaration":3779,"src":"1552:18:27"},"referencedDeclaration":3779,"src":"1552:18:27","typeDescriptions":{"typeIdentifier":"t_contract$_IUniswapV2Router02_$3779","typeString":"contract IUniswapV2Router02"}},"visibility":"private"},{"body":{"id":5068,"nodeType":"Block","src":"1780:71:27","statements":[{"expression":{"id":5066,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5062,"name":"uniswapV2Router","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5056,"src":"1790:15:27","typeDescriptions":{"typeIdentifier":"t_contract$_IUniswapV2Router02_$3779","typeString":"contract IUniswapV2Router02"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5064,"name":"_uniswapV2Router","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5059,"src":"1827:16:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":5063,"name":"IUniswapV2Router02","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3779,"src":"1808:18:27","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IUniswapV2Router02_$3779_$","typeString":"type(contract IUniswapV2Router02)"}},"id":5065,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1808:36:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IUniswapV2Router02_$3779","typeString":"contract IUniswapV2Router02"}},"src":"1790:54:27","typeDescriptions":{"typeIdentifier":"t_contract$_IUniswapV2Router02_$3779","typeString":"contract IUniswapV2Router02"}},"id":5067,"nodeType":"ExpressionStatement","src":"1790:54:27"}]},"documentation":{"id":5057,"nodeType":"StructuredDocumentation","src":"1611:126:27","text":" @dev Initializes the UniswapV2Connector contract\n @param _uniswapV2Router Uniswap V2 router reference"},"id":5069,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":5060,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5059,"mutability":"mutable","name":"_uniswapV2Router","nameLocation":"1762:16:27","nodeType":"VariableDeclaration","scope":5069,"src":"1754:24:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5058,"name":"address","nodeType":"ElementaryTypeName","src":"1754:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1753:26:27"},"returnParameters":{"id":5061,"nodeType":"ParameterList","parameters":[],"src":"1780:0:27"},"scope":5308,"src":"1742:109:27","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":5127,"nodeType":"Block","src":"2431:368:27","statements":[{"expression":{"arguments":[{"arguments":[{"id":5091,"name":"uniswapV2Router","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5056,"src":"2477:15:27","typeDescriptions":{"typeIdentifier":"t_contract$_IUniswapV2Router02_$3779","typeString":"contract IUniswapV2Router02"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IUniswapV2Router02_$3779","typeString":"contract IUniswapV2Router02"}],"id":5090,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2469:7:27","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":5089,"name":"address","nodeType":"ElementaryTypeName","src":"2469:7:27","typeDescriptions":{}}},"id":5092,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2469:24:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":5093,"name":"amountIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5076,"src":"2495:8:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"id":5086,"name":"tokenIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5072,"src":"2448:7:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":5085,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":832,"src":"2441:6:27","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$832_$","typeString":"type(contract IERC20)"}},"id":5087,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2441:15:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$832","typeString":"contract IERC20"}},"id":5088,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"safeApprove","nodeType":"MemberAccess","referencedDeclaration":995,"src":"2441:27:27","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$832_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$832_$","typeString":"function (contract IERC20,address,uint256)"}},"id":5094,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2441:63:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5095,"nodeType":"ExpressionStatement","src":"2441:63:27"},{"assignments":[5100],"declarations":[{"constant":false,"id":5100,"mutability":"mutable","name":"amounts","nameLocation":"2531:7:27","nodeType":"VariableDeclaration","scope":5127,"src":"2514:24:27","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":5098,"name":"uint256","nodeType":"ElementaryTypeName","src":"2514:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5099,"nodeType":"ArrayTypeName","src":"2514:9:27","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"id":5119,"initialValue":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5104,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":5101,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5080,"src":"2541:4:27","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":5102,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"2541:11:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":5103,"name":"ENCODED_DATA_SINGLE_SWAP_LENGTH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5053,"src":"2556:31:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2541:46:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"arguments":[{"id":5112,"name":"tokenIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5072,"src":"2700:7:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":5113,"name":"tokenOut","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5074,"src":"2709:8:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":5114,"name":"amountIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5076,"src":"2719:8:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5115,"name":"minAmountOut","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5078,"src":"2729:12:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5116,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5080,"src":"2743:4:27","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":5111,"name":"_batchSwapUniswapV2","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5276,"src":"2680:19:27","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (address,address,uint256,uint256,bytes memory) returns (uint256[] memory)"}},"id":5117,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2680:68:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":5118,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"2541:207:27","trueExpression":{"arguments":[{"id":5106,"name":"tokenIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5072,"src":"2623:7:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":5107,"name":"tokenOut","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5074,"src":"2632:8:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":5108,"name":"amountIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5076,"src":"2642:8:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5109,"name":"minAmountOut","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5078,"src":"2652:12:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5105,"name":"_singleSwapUniswapV2","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5180,"src":"2602:20:27","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (address,address,uint256,uint256) returns (uint256[] memory)"}},"id":5110,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2602:63:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"nodeType":"VariableDeclarationStatement","src":"2514:234:27"},{"expression":{"baseExpression":{"id":5120,"name":"amounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5100,"src":"2765:7:27","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":5125,"indexExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5124,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":5121,"name":"amounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5100,"src":"2773:7:27","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":5122,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"2773:14:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":5123,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2790:1:27","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"2773:18:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2765:27:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5084,"id":5126,"nodeType":"Return","src":"2758:34:27"}]},"documentation":{"id":5070,"nodeType":"StructuredDocumentation","src":"1857:368:27","text":" @dev Internal function to swap two tokens through UniswapV2\n @param tokenIn Token being sent\n @param tokenOut Token being received\n @param amountIn Amount of tokenIn being swapped\n @param minAmountOut Minimum amount of tokenOut willing to receive\n @param data ABI-encoded list of hop-tokens between tokenIn and tokenOut"},"id":5128,"implemented":true,"kind":"function","modifiers":[],"name":"_swapUniswapV2","nameLocation":"2239:14:27","nodeType":"FunctionDefinition","parameters":{"id":5081,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5072,"mutability":"mutable","name":"tokenIn","nameLocation":"2271:7:27","nodeType":"VariableDeclaration","scope":5128,"src":"2263:15:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5071,"name":"address","nodeType":"ElementaryTypeName","src":"2263:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5074,"mutability":"mutable","name":"tokenOut","nameLocation":"2296:8:27","nodeType":"VariableDeclaration","scope":5128,"src":"2288:16:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5073,"name":"address","nodeType":"ElementaryTypeName","src":"2288:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5076,"mutability":"mutable","name":"amountIn","nameLocation":"2322:8:27","nodeType":"VariableDeclaration","scope":5128,"src":"2314:16:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5075,"name":"uint256","nodeType":"ElementaryTypeName","src":"2314:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5078,"mutability":"mutable","name":"minAmountOut","nameLocation":"2348:12:27","nodeType":"VariableDeclaration","scope":5128,"src":"2340:20:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5077,"name":"uint256","nodeType":"ElementaryTypeName","src":"2340:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5080,"mutability":"mutable","name":"data","nameLocation":"2383:4:27","nodeType":"VariableDeclaration","scope":5128,"src":"2370:17:27","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":5079,"name":"bytes","nodeType":"ElementaryTypeName","src":"2370:5:27","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2253:140:27"},"returnParameters":{"id":5084,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5083,"mutability":"mutable","name":"amountOut","nameLocation":"2420:9:27","nodeType":"VariableDeclaration","scope":5128,"src":"2412:17:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5082,"name":"uint256","nodeType":"ElementaryTypeName","src":"2412:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2411:19:27"},"scope":5308,"src":"2230:569:27","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":5179,"nodeType":"Block","src":"3278:298:27","statements":[{"assignments":[5144],"declarations":[{"constant":false,"id":5144,"mutability":"mutable","name":"factory","nameLocation":"3296:7:27","nodeType":"VariableDeclaration","scope":5179,"src":"3288:15:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5143,"name":"address","nodeType":"ElementaryTypeName","src":"3288:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":5148,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":5145,"name":"uniswapV2Router","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5056,"src":"3306:15:27","typeDescriptions":{"typeIdentifier":"t_contract$_IUniswapV2Router02_$3779","typeString":"contract IUniswapV2Router02"}},"id":5146,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"factory","nodeType":"MemberAccess","referencedDeclaration":3390,"src":"3306:23:27","typeDescriptions":{"typeIdentifier":"t_function_external_pure$__$returns$_t_address_$","typeString":"function () pure external returns (address)"}},"id":5147,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3306:25:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"3288:43:27"},{"assignments":[5153],"declarations":[{"constant":false,"id":5153,"mutability":"mutable","name":"tokens","nameLocation":"3358:6:27","nodeType":"VariableDeclaration","scope":5179,"src":"3341:23:27","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":5151,"name":"address","nodeType":"ElementaryTypeName","src":"3341:7:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":5152,"nodeType":"ArrayTypeName","src":"3341:9:27","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"id":5159,"initialValue":{"arguments":[{"id":5156,"name":"tokenIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5131,"src":"3379:7:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":5157,"name":"tokenOut","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5133,"src":"3388:8:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":5154,"name":"Arrays","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":396,"src":"3367:6:27","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Arrays_$396_$","typeString":"type(library Arrays)"}},"id":5155,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"from","nodeType":"MemberAccess","referencedDeclaration":227,"src":"3367:11:27","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_address_$_t_address_$returns$_t_array$_t_address_$dyn_memory_ptr_$","typeString":"function (address,address) pure returns (address[] memory)"}},"id":5158,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3367:30:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"nodeType":"VariableDeclarationStatement","src":"3341:56:27"},{"expression":{"arguments":[{"id":5161,"name":"factory","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5144,"src":"3421:7:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":5162,"name":"tokenIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5131,"src":"3430:7:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":5163,"name":"tokenOut","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5133,"src":"3439:8:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":5160,"name":"_validatePool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5307,"src":"3407:13:27","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$_t_address_$returns$__$","typeString":"function (address,address,address) view"}},"id":5164,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3407:41:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5165,"nodeType":"ExpressionStatement","src":"3407:41:27"},{"expression":{"arguments":[{"id":5168,"name":"amountIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5135,"src":"3506:8:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5169,"name":"minAmountOut","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5137,"src":"3516:12:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5170,"name":"tokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5153,"src":"3530:6:27","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},{"arguments":[{"id":5173,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"3546:4:27","typeDescriptions":{"typeIdentifier":"t_contract$_UniswapV2Connector_$5308","typeString":"contract UniswapV2Connector"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_UniswapV2Connector_$5308","typeString":"contract UniswapV2Connector"}],"id":5172,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3538:7:27","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":5171,"name":"address","nodeType":"ElementaryTypeName","src":"3538:7:27","typeDescriptions":{}}},"id":5174,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3538:13:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":5175,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"3553:5:27","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":5176,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"timestamp","nodeType":"MemberAccess","src":"3553:15:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":5166,"name":"uniswapV2Router","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5056,"src":"3465:15:27","typeDescriptions":{"typeIdentifier":"t_contract$_IUniswapV2Router02_$3779","typeString":"contract IUniswapV2Router02"}},"id":5167,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"swapExactTokensForTokens","nodeType":"MemberAccess","referencedDeclaration":3554,"src":"3465:40:27","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_uint256_$_t_uint256_$_t_array$_t_address_$dyn_memory_ptr_$_t_address_$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256,uint256,address[] memory,address,uint256) external returns (uint256[] memory)"}},"id":5177,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3465:104:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"functionReturnParameters":5142,"id":5178,"nodeType":"Return","src":"3458:111:27"}]},"documentation":{"id":5129,"nodeType":"StructuredDocumentation","src":"2805:308:27","text":" @dev Internal function to swap two tokens through UniswapV2 using a single hop\n @param tokenIn Token being sent\n @param tokenOut Token being received\n @param amountIn Amount of tokenIn being swapped\n @param minAmountOut Minimum amount of tokenOut willing to receive"},"id":5180,"implemented":true,"kind":"function","modifiers":[],"name":"_singleSwapUniswapV2","nameLocation":"3127:20:27","nodeType":"FunctionDefinition","parameters":{"id":5138,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5131,"mutability":"mutable","name":"tokenIn","nameLocation":"3156:7:27","nodeType":"VariableDeclaration","scope":5180,"src":"3148:15:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5130,"name":"address","nodeType":"ElementaryTypeName","src":"3148:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5133,"mutability":"mutable","name":"tokenOut","nameLocation":"3173:8:27","nodeType":"VariableDeclaration","scope":5180,"src":"3165:16:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5132,"name":"address","nodeType":"ElementaryTypeName","src":"3165:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5135,"mutability":"mutable","name":"amountIn","nameLocation":"3191:8:27","nodeType":"VariableDeclaration","scope":5180,"src":"3183:16:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5134,"name":"uint256","nodeType":"ElementaryTypeName","src":"3183:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5137,"mutability":"mutable","name":"minAmountOut","nameLocation":"3209:12:27","nodeType":"VariableDeclaration","scope":5180,"src":"3201:20:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5136,"name":"uint256","nodeType":"ElementaryTypeName","src":"3201:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3147:75:27"},"returnParameters":{"id":5142,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5141,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5180,"src":"3256:16:27","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":5139,"name":"uint256","nodeType":"ElementaryTypeName","src":"3256:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5140,"nodeType":"ArrayTypeName","src":"3256:9:27","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"3255:18:27"},"scope":5308,"src":"3118:458:27","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":5275,"nodeType":"Block","src":"4222:610:27","statements":[{"assignments":[5198],"declarations":[{"constant":false,"id":5198,"mutability":"mutable","name":"factory","nameLocation":"4240:7:27","nodeType":"VariableDeclaration","scope":5275,"src":"4232:15:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5197,"name":"address","nodeType":"ElementaryTypeName","src":"4232:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":5202,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":5199,"name":"uniswapV2Router","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5056,"src":"4250:15:27","typeDescriptions":{"typeIdentifier":"t_contract$_IUniswapV2Router02_$3779","typeString":"contract IUniswapV2Router02"}},"id":5200,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"factory","nodeType":"MemberAccess","referencedDeclaration":3390,"src":"4250:23:27","typeDescriptions":{"typeIdentifier":"t_function_external_pure$__$returns$_t_address_$","typeString":"function () pure external returns (address)"}},"id":5201,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4250:25:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"4232:43:27"},{"assignments":[5207],"declarations":[{"constant":false,"id":5207,"mutability":"mutable","name":"hopTokens","nameLocation":"4302:9:27","nodeType":"VariableDeclaration","scope":5275,"src":"4285:26:27","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":5205,"name":"address","nodeType":"ElementaryTypeName","src":"4285:7:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":5206,"nodeType":"ArrayTypeName","src":"4285:9:27","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"id":5216,"initialValue":{"arguments":[{"id":5210,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5191,"src":"4325:4:27","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"components":[{"baseExpression":{"id":5212,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4332:7:27","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":5211,"name":"address","nodeType":"ElementaryTypeName","src":"4332:7:27","typeDescriptions":{}}},"id":5213,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"IndexAccess","src":"4332:9:27","typeDescriptions":{"typeIdentifier":"t_type$_t_array$_t_address_$dyn_memory_ptr_$","typeString":"type(address[] memory)"}}],"id":5214,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"4331:11:27","typeDescriptions":{"typeIdentifier":"t_type$_t_array$_t_address_$dyn_memory_ptr_$","typeString":"type(address[] memory)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_type$_t_array$_t_address_$dyn_memory_ptr_$","typeString":"type(address[] memory)"}],"expression":{"id":5208,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"4314:3:27","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":5209,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"decode","nodeType":"MemberAccess","src":"4314:10:27","typeDescriptions":{"typeIdentifier":"t_function_abidecode_pure$__$returns$__$","typeString":"function () pure"}},"id":5215,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4314:29:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"nodeType":"VariableDeclarationStatement","src":"4285:58:27"},{"assignments":[5221],"declarations":[{"constant":false,"id":5221,"mutability":"mutable","name":"tokens","nameLocation":"4370:6:27","nodeType":"VariableDeclaration","scope":5275,"src":"4353:23:27","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":5219,"name":"address","nodeType":"ElementaryTypeName","src":"4353:7:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":5220,"nodeType":"ArrayTypeName","src":"4353:9:27","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"id":5228,"initialValue":{"arguments":[{"id":5224,"name":"tokenIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5183,"src":"4391:7:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":5225,"name":"hopTokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5207,"src":"4400:9:27","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},{"id":5226,"name":"tokenOut","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5185,"src":"4411:8:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":5222,"name":"Arrays","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":396,"src":"4379:6:27","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Arrays_$396_$","typeString":"type(library Arrays)"}},"id":5223,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"from","nodeType":"MemberAccess","referencedDeclaration":297,"src":"4379:11:27","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_address_$_t_array$_t_address_$dyn_memory_ptr_$_t_address_$returns$_t_array$_t_address_$dyn_memory_ptr_$","typeString":"function (address,address[] memory,address) pure returns (address[] memory)"}},"id":5227,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4379:41:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"nodeType":"VariableDeclarationStatement","src":"4353:67:27"},{"body":{"id":5260,"nodeType":"Block","src":"4620:85:27","statements":[{"expression":{"arguments":[{"id":5248,"name":"factory","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5198,"src":"4648:7:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"baseExpression":{"id":5249,"name":"tokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5221,"src":"4657:6:27","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":5251,"indexExpression":{"id":5250,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5230,"src":"4664:1:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4657:9:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"baseExpression":{"id":5252,"name":"tokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5221,"src":"4668:6:27","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":5257,"indexExpression":{"arguments":[{"hexValue":"31","id":5255,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4690:1:27","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"}],"expression":{"id":5253,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5230,"src":"4675:1:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5254,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"uncheckedAdd","nodeType":"MemberAccess","referencedDeclaration":62,"src":"4675:14:27","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":5256,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4675:17:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4668:25:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":5247,"name":"_validatePool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5307,"src":"4634:13:27","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$_t_address_$returns$__$","typeString":"function (address,address,address) view"}},"id":5258,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4634:60:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5259,"nodeType":"ExpressionStatement","src":"4634:60:27"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5239,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5233,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5230,"src":"4562:1:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"arguments":[{"hexValue":"31","id":5237,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4593:1:27","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"}],"expression":{"expression":{"id":5234,"name":"tokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5221,"src":"4566:6:27","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":5235,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"4566:13:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5236,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"uncheckedSub","nodeType":"MemberAccess","referencedDeclaration":78,"src":"4566:26:27","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":5238,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4566:29:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4562:33:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5261,"initializationExpression":{"assignments":[5230],"declarations":[{"constant":false,"id":5230,"mutability":"mutable","name":"i","nameLocation":"4555:1:27","nodeType":"VariableDeclaration","scope":5261,"src":"4547:9:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5229,"name":"uint256","nodeType":"ElementaryTypeName","src":"4547:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5232,"initialValue":{"hexValue":"30","id":5231,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4559:1:27","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"4547:13:27"},"loopExpression":{"expression":{"id":5245,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5240,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5230,"src":"4597:1:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"hexValue":"31","id":5243,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4616:1:27","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"}],"expression":{"id":5241,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5230,"src":"4601:1:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5242,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"uncheckedAdd","nodeType":"MemberAccess","referencedDeclaration":62,"src":"4601:14:27","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":5244,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4601:17:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4597:21:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5246,"nodeType":"ExpressionStatement","src":"4597:21:27"},"nodeType":"ForStatement","src":"4542:163:27"},{"expression":{"arguments":[{"id":5264,"name":"amountIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5187,"src":"4762:8:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5265,"name":"minAmountOut","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5189,"src":"4772:12:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5266,"name":"tokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5221,"src":"4786:6:27","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},{"arguments":[{"id":5269,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"4802:4:27","typeDescriptions":{"typeIdentifier":"t_contract$_UniswapV2Connector_$5308","typeString":"contract UniswapV2Connector"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_UniswapV2Connector_$5308","typeString":"contract UniswapV2Connector"}],"id":5268,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4794:7:27","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":5267,"name":"address","nodeType":"ElementaryTypeName","src":"4794:7:27","typeDescriptions":{}}},"id":5270,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4794:13:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":5271,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"4809:5:27","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":5272,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"timestamp","nodeType":"MemberAccess","src":"4809:15:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":5262,"name":"uniswapV2Router","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5056,"src":"4721:15:27","typeDescriptions":{"typeIdentifier":"t_contract$_IUniswapV2Router02_$3779","typeString":"contract IUniswapV2Router02"}},"id":5263,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"swapExactTokensForTokens","nodeType":"MemberAccess","referencedDeclaration":3554,"src":"4721:40:27","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_uint256_$_t_uint256_$_t_array$_t_address_$dyn_memory_ptr_$_t_address_$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256,uint256,address[] memory,address,uint256) external returns (uint256[] memory)"}},"id":5273,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4721:104:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"functionReturnParameters":5196,"id":5274,"nodeType":"Return","src":"4714:111:27"}]},"documentation":{"id":5181,"nodeType":"StructuredDocumentation","src":"3582:431:27","text":" @dev Internal function to swap two tokens through UniswapV2 using a multi hop\n @param tokenIn Token being sent\n @param tokenOut Token being received\n @param amountIn Amount of the first token in the path to be swapped\n @param minAmountOut Minimum amount of the last token in the path willing to receive\n @param data ABI-encoded-packed list of hop-tokens between tokenIn and tokenOut"},"id":5276,"implemented":true,"kind":"function","modifiers":[],"name":"_batchSwapUniswapV2","nameLocation":"4027:19:27","nodeType":"FunctionDefinition","parameters":{"id":5192,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5183,"mutability":"mutable","name":"tokenIn","nameLocation":"4064:7:27","nodeType":"VariableDeclaration","scope":5276,"src":"4056:15:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5182,"name":"address","nodeType":"ElementaryTypeName","src":"4056:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5185,"mutability":"mutable","name":"tokenOut","nameLocation":"4089:8:27","nodeType":"VariableDeclaration","scope":5276,"src":"4081:16:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5184,"name":"address","nodeType":"ElementaryTypeName","src":"4081:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5187,"mutability":"mutable","name":"amountIn","nameLocation":"4115:8:27","nodeType":"VariableDeclaration","scope":5276,"src":"4107:16:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5186,"name":"uint256","nodeType":"ElementaryTypeName","src":"4107:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5189,"mutability":"mutable","name":"minAmountOut","nameLocation":"4141:12:27","nodeType":"VariableDeclaration","scope":5276,"src":"4133:20:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5188,"name":"uint256","nodeType":"ElementaryTypeName","src":"4133:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5191,"mutability":"mutable","name":"data","nameLocation":"4176:4:27","nodeType":"VariableDeclaration","scope":5276,"src":"4163:17:27","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":5190,"name":"bytes","nodeType":"ElementaryTypeName","src":"4163:5:27","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4046:140:27"},"returnParameters":{"id":5196,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5195,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5276,"src":"4204:16:27","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":5193,"name":"uint256","nodeType":"ElementaryTypeName","src":"4204:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5194,"nodeType":"ArrayTypeName","src":"4204:9:27","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"4203:18:27"},"scope":5308,"src":"4018:814:27","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":5306,"nodeType":"Block","src":"5180:143:27","statements":[{"assignments":[5287],"declarations":[{"constant":false,"id":5287,"mutability":"mutable","name":"pool","nameLocation":"5198:4:27","nodeType":"VariableDeclaration","scope":5306,"src":"5190:12:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5286,"name":"address","nodeType":"ElementaryTypeName","src":"5190:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":5295,"initialValue":{"arguments":[{"id":5292,"name":"tokenA","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5281,"src":"5240:6:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":5293,"name":"tokenB","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5283,"src":"5248:6:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"arguments":[{"id":5289,"name":"factory","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5279,"src":"5223:7:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":5288,"name":"IUniswapV2Factory","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3383,"src":"5205:17:27","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IUniswapV2Factory_$3383_$","typeString":"type(contract IUniswapV2Factory)"}},"id":5290,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5205:26:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IUniswapV2Factory_$3383","typeString":"contract IUniswapV2Factory"}},"id":5291,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"getPair","nodeType":"MemberAccess","referencedDeclaration":3351,"src":"5205:34:27","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$_t_address_$returns$_t_address_$","typeString":"function (address,address) view external returns (address)"}},"id":5294,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5205:50:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"5190:65:27"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":5302,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5297,"name":"pool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5287,"src":"5273:4:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":5300,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5289:1:27","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":5299,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5281:7:27","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":5298,"name":"address","nodeType":"ElementaryTypeName","src":"5281:7:27","typeDescriptions":{}}},"id":5301,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5281:10:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5273:18:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"494e56414c49445f554e49535741505f504f4f4c","id":5303,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5293:22:27","typeDescriptions":{"typeIdentifier":"t_stringliteral_f8d7622446eb6d816555364a8a930f59f2926f9542740772751f6125f42d96ac","typeString":"literal_string \"INVALID_UNISWAP_POOL\""},"value":"INVALID_UNISWAP_POOL"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_f8d7622446eb6d816555364a8a930f59f2926f9542740772751f6125f42d96ac","typeString":"literal_string \"INVALID_UNISWAP_POOL\""}],"id":5296,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5265:7:27","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5304,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5265:51:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5305,"nodeType":"ExpressionStatement","src":"5265:51:27"}]},"documentation":{"id":5277,"nodeType":"StructuredDocumentation","src":"4838:252:27","text":" @dev Internal function to validate that there is a pool created for tokenA and tokenB\n @param factory UniswapV2 factory to check against\n @param tokenA First token of the pair\n @param tokenB Second token of the pair"},"id":5307,"implemented":true,"kind":"function","modifiers":[],"name":"_validatePool","nameLocation":"5104:13:27","nodeType":"FunctionDefinition","parameters":{"id":5284,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5279,"mutability":"mutable","name":"factory","nameLocation":"5126:7:27","nodeType":"VariableDeclaration","scope":5307,"src":"5118:15:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5278,"name":"address","nodeType":"ElementaryTypeName","src":"5118:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5281,"mutability":"mutable","name":"tokenA","nameLocation":"5143:6:27","nodeType":"VariableDeclaration","scope":5307,"src":"5135:14:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5280,"name":"address","nodeType":"ElementaryTypeName","src":"5135:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5283,"mutability":"mutable","name":"tokenB","nameLocation":"5159:6:27","nodeType":"VariableDeclaration","scope":5307,"src":"5151:14:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5282,"name":"address","nodeType":"ElementaryTypeName","src":"5151:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5117:49:27"},"returnParameters":{"id":5285,"nodeType":"ParameterList","parameters":[],"src":"5180:0:27"},"scope":5308,"src":"5095:228:27","stateMutability":"view","virtual":false,"visibility":"private"}],"scope":5309,"src":"1270:4055:27"}],"src":"688:4638:27"},"id":27},"contracts/connectors/UniswapV3Connector.sol":{"ast":{"absolutePath":"contracts/connectors/UniswapV3Connector.sol","exportedSymbols":{"Address":[1469],"Arrays":[396],"Bytes":[434],"IERC20":[832],"IERC20Permit":[893],"IPeripheryImmutableState":[3892],"ISwapRouter":[3992],"IUniswapV3Factory":[3862],"IUniswapV3SwapCallback":[3876],"SafeERC20":[1174],"UncheckedMath":[127],"UniswapV3Connector":[5763]},"id":5764,"license":"GPL-3.0-or-later","nodeType":"SourceUnit","nodes":[{"id":5310,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"688:23:28"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"@openzeppelin/contracts/token/ERC20/IERC20.sol","id":5311,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":5764,"sourceUnit":833,"src":"713:56:28","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol","file":"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol","id":5312,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":5764,"sourceUnit":1175,"src":"770:65:28","symbolAliases":[],"unitAlias":""},{"absolutePath":"@uniswap/v3-core/contracts/interfaces/IUniswapV3Factory.sol","file":"@uniswap/v3-core/contracts/interfaces/IUniswapV3Factory.sol","id":5313,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":5764,"sourceUnit":3863,"src":"837:69:28","symbolAliases":[],"unitAlias":""},{"absolutePath":"@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol","file":"@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol","id":5314,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":5764,"sourceUnit":3993,"src":"907:68:28","symbolAliases":[],"unitAlias":""},{"absolutePath":"@uniswap/v3-periphery/contracts/interfaces/IPeripheryImmutableState.sol","file":"@uniswap/v3-periphery/contracts/interfaces/IPeripheryImmutableState.sol","id":5315,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":5764,"sourceUnit":3893,"src":"976:81:28","symbolAliases":[],"unitAlias":""},{"absolutePath":"@mimic-fi/v2-helpers/contracts/utils/Arrays.sol","file":"@mimic-fi/v2-helpers/contracts/utils/Arrays.sol","id":5316,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":5764,"sourceUnit":397,"src":"1059:57:28","symbolAliases":[],"unitAlias":""},{"absolutePath":"@mimic-fi/v2-helpers/contracts/utils/Bytes.sol","file":"@mimic-fi/v2-helpers/contracts/utils/Bytes.sol","id":5317,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":5764,"sourceUnit":435,"src":"1117:56:28","symbolAliases":[],"unitAlias":""},{"absolutePath":"@mimic-fi/v2-helpers/contracts/math/UncheckedMath.sol","file":"@mimic-fi/v2-helpers/contracts/math/UncheckedMath.sol","id":5318,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":5764,"sourceUnit":128,"src":"1174:63:28","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[],"contractDependencies":[],"contractKind":"contract","documentation":{"id":5319,"nodeType":"StructuredDocumentation","src":"1239:86:28","text":" @title UniswapV3Connector\n @dev Interfaces with Uniswap V3 to swap tokens"},"fullyImplemented":true,"id":5763,"linearizedBaseContracts":[5763],"name":"UniswapV3Connector","nameLocation":"1335:18:28","nodeType":"ContractDefinition","nodes":[{"id":5322,"libraryName":{"id":5320,"name":"Bytes","nodeType":"IdentifierPath","referencedDeclaration":434,"src":"1366:5:28"},"nodeType":"UsingForDirective","src":"1360:22:28","typeName":{"id":5321,"name":"bytes","nodeType":"ElementaryTypeName","src":"1376:5:28","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}}},{"id":5326,"libraryName":{"id":5323,"name":"SafeERC20","nodeType":"IdentifierPath","referencedDeclaration":1174,"src":"1393:9:28"},"nodeType":"UsingForDirective","src":"1387:27:28","typeName":{"id":5325,"nodeType":"UserDefinedTypeName","pathNode":{"id":5324,"name":"IERC20","nodeType":"IdentifierPath","referencedDeclaration":832,"src":"1407:6:28"},"referencedDeclaration":832,"src":"1407:6:28","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$832","typeString":"contract IERC20"}}},{"id":5329,"libraryName":{"id":5327,"name":"UncheckedMath","nodeType":"IdentifierPath","referencedDeclaration":127,"src":"1425:13:28"},"nodeType":"UsingForDirective","src":"1419:32:28","typeName":{"id":5328,"name":"uint256","nodeType":"ElementaryTypeName","src":"1443:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},{"constant":true,"id":5332,"mutability":"constant","name":"ENCODED_DATA_SINGLE_SWAP_LENGTH","nameLocation":"1543:31:28","nodeType":"VariableDeclaration","scope":5763,"src":"1518:61:28","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5330,"name":"uint256","nodeType":"ElementaryTypeName","src":"1518:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"3332","id":5331,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1577:2:28","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"visibility":"private"},{"constant":false,"id":5335,"mutability":"immutable","name":"uniswapV3Router","nameLocation":"1653:15:28","nodeType":"VariableDeclaration","scope":5763,"src":"1623:45:28","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_ISwapRouter_$3992","typeString":"contract ISwapRouter"},"typeName":{"id":5334,"nodeType":"UserDefinedTypeName","pathNode":{"id":5333,"name":"ISwapRouter","nodeType":"IdentifierPath","referencedDeclaration":3992,"src":"1623:11:28"},"referencedDeclaration":3992,"src":"1623:11:28","typeDescriptions":{"typeIdentifier":"t_contract$_ISwapRouter_$3992","typeString":"contract ISwapRouter"}},"visibility":"private"},{"body":{"id":5347,"nodeType":"Block","src":"1844:64:28","statements":[{"expression":{"id":5345,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5341,"name":"uniswapV3Router","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5335,"src":"1854:15:28","typeDescriptions":{"typeIdentifier":"t_contract$_ISwapRouter_$3992","typeString":"contract ISwapRouter"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5343,"name":"_uniswapV3Router","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5338,"src":"1884:16:28","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":5342,"name":"ISwapRouter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3992,"src":"1872:11:28","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ISwapRouter_$3992_$","typeString":"type(contract ISwapRouter)"}},"id":5344,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1872:29:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_ISwapRouter_$3992","typeString":"contract ISwapRouter"}},"src":"1854:47:28","typeDescriptions":{"typeIdentifier":"t_contract$_ISwapRouter_$3992","typeString":"contract ISwapRouter"}},"id":5346,"nodeType":"ExpressionStatement","src":"1854:47:28"}]},"documentation":{"id":5336,"nodeType":"StructuredDocumentation","src":"1675:126:28","text":" @dev Initializes the UniswapV3Connector contract\n @param _uniswapV3Router Uniswap V3 router reference"},"id":5348,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":5339,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5338,"mutability":"mutable","name":"_uniswapV3Router","nameLocation":"1826:16:28","nodeType":"VariableDeclaration","scope":5348,"src":"1818:24:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5337,"name":"address","nodeType":"ElementaryTypeName","src":"1818:7:28","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1817:26:28"},"returnParameters":{"id":5340,"nodeType":"ParameterList","parameters":[],"src":"1844:0:28"},"scope":5763,"src":"1806:102:28","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":5395,"nodeType":"Block","src":"2497:330:28","statements":[{"expression":{"arguments":[{"arguments":[{"id":5370,"name":"uniswapV3Router","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5335,"src":"2543:15:28","typeDescriptions":{"typeIdentifier":"t_contract$_ISwapRouter_$3992","typeString":"contract ISwapRouter"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_ISwapRouter_$3992","typeString":"contract ISwapRouter"}],"id":5369,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2535:7:28","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":5368,"name":"address","nodeType":"ElementaryTypeName","src":"2535:7:28","typeDescriptions":{}}},"id":5371,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2535:24:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":5372,"name":"amountIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5355,"src":"2561:8:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"id":5365,"name":"tokenIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5351,"src":"2514:7:28","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":5364,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":832,"src":"2507:6:28","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$832_$","typeString":"type(contract IERC20)"}},"id":5366,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2507:15:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$832","typeString":"contract IERC20"}},"id":5367,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"safeApprove","nodeType":"MemberAccess","referencedDeclaration":995,"src":"2507:27:28","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$832_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$832_$","typeString":"function (contract IERC20,address,uint256)"}},"id":5373,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2507:63:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5374,"nodeType":"ExpressionStatement","src":"2507:63:28"},{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5378,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":5375,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5359,"src":"2599:4:28","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":5376,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"2599:11:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":5377,"name":"ENCODED_DATA_SINGLE_SWAP_LENGTH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5332,"src":"2614:31:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2599:46:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"arguments":[{"id":5387,"name":"tokenIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5351,"src":"2772:7:28","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":5388,"name":"tokenOut","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5353,"src":"2781:8:28","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":5389,"name":"amountIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5355,"src":"2791:8:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5390,"name":"minAmountOut","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5357,"src":"2801:12:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5391,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5359,"src":"2815:4:28","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":5386,"name":"_batchSwapUniswapV3","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5641,"src":"2752:19:28","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_uint256_$","typeString":"function (address,address,uint256,uint256,bytes memory) returns (uint256)"}},"id":5392,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2752:68:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5393,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"2599:221:28","trueExpression":{"arguments":[{"id":5380,"name":"tokenIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5351,"src":"2685:7:28","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":5381,"name":"tokenOut","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5353,"src":"2694:8:28","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":5382,"name":"amountIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5355,"src":"2704:8:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5383,"name":"minAmountOut","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5357,"src":"2714:12:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5384,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5359,"src":"2728:4:28","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":5379,"name":"_singleSwapUniswapV3","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5494,"src":"2664:20:28","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_uint256_$","typeString":"function (address,address,uint256,uint256,bytes memory) returns (uint256)"}},"id":5385,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2664:69:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5363,"id":5394,"nodeType":"Return","src":"2580:240:28"}]},"documentation":{"id":5349,"nodeType":"StructuredDocumentation","src":"1914:377:28","text":" @dev Internal function to swap two tokens through UniswapV3\n @param tokenIn Token being sent\n @param tokenOut Token being received\n @param amountIn Amount of tokenIn being swapped\n @param minAmountOut Minimum amount of tokenOut willing to receive\n @param data ABI-encoded-packed specifying the list of hop-tokens and fees to use"},"id":5396,"implemented":true,"kind":"function","modifiers":[],"name":"_swapUniswapV3","nameLocation":"2305:14:28","nodeType":"FunctionDefinition","parameters":{"id":5360,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5351,"mutability":"mutable","name":"tokenIn","nameLocation":"2337:7:28","nodeType":"VariableDeclaration","scope":5396,"src":"2329:15:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5350,"name":"address","nodeType":"ElementaryTypeName","src":"2329:7:28","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5353,"mutability":"mutable","name":"tokenOut","nameLocation":"2362:8:28","nodeType":"VariableDeclaration","scope":5396,"src":"2354:16:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5352,"name":"address","nodeType":"ElementaryTypeName","src":"2354:7:28","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5355,"mutability":"mutable","name":"amountIn","nameLocation":"2388:8:28","nodeType":"VariableDeclaration","scope":5396,"src":"2380:16:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5354,"name":"uint256","nodeType":"ElementaryTypeName","src":"2380:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5357,"mutability":"mutable","name":"minAmountOut","nameLocation":"2414:12:28","nodeType":"VariableDeclaration","scope":5396,"src":"2406:20:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5356,"name":"uint256","nodeType":"ElementaryTypeName","src":"2406:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5359,"mutability":"mutable","name":"data","nameLocation":"2449:4:28","nodeType":"VariableDeclaration","scope":5396,"src":"2436:17:28","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":5358,"name":"bytes","nodeType":"ElementaryTypeName","src":"2436:5:28","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2319:140:28"},"returnParameters":{"id":5363,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5362,"mutability":"mutable","name":"amountOut","nameLocation":"2486:9:28","nodeType":"VariableDeclaration","scope":5396,"src":"2478:17:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5361,"name":"uint256","nodeType":"ElementaryTypeName","src":"2478:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2477:19:28"},"scope":5763,"src":"2296:531:28","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":5493,"nodeType":"Block","src":"3419:533:28","statements":[{"assignments":[5413],"declarations":[{"constant":false,"id":5413,"mutability":"mutable","name":"fee","nameLocation":"3436:3:28","nodeType":"VariableDeclaration","scope":5493,"src":"3429:10:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"},"typeName":{"id":5412,"name":"uint24","nodeType":"ElementaryTypeName","src":"3429:6:28","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"visibility":"internal"}],"id":5421,"initialValue":{"arguments":[{"id":5416,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5407,"src":"3453:4:28","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"components":[{"id":5418,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3460:6:28","typeDescriptions":{"typeIdentifier":"t_type$_t_uint24_$","typeString":"type(uint24)"},"typeName":{"id":5417,"name":"uint24","nodeType":"ElementaryTypeName","src":"3460:6:28","typeDescriptions":{}}}],"id":5419,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"3459:8:28","typeDescriptions":{"typeIdentifier":"t_type$_t_uint24_$","typeString":"type(uint24)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_type$_t_uint24_$","typeString":"type(uint24)"}],"expression":{"id":5414,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"3442:3:28","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":5415,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"decode","nodeType":"MemberAccess","src":"3442:10:28","typeDescriptions":{"typeIdentifier":"t_function_abidecode_pure$__$returns$__$","typeString":"function () pure"}},"id":5420,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3442:26:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"nodeType":"VariableDeclarationStatement","src":"3429:39:28"},{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":5423,"name":"_uniswapV3Factory","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5657,"src":"3492:17:28","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":5424,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3492:19:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":5425,"name":"tokenIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5399,"src":"3513:7:28","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":5426,"name":"tokenOut","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5401,"src":"3522:8:28","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":5427,"name":"fee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5413,"src":"3532:3:28","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint24","typeString":"uint24"}],"id":5422,"name":"_validatePool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5702,"src":"3478:13:28","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$_t_address_$_t_uint24_$returns$__$","typeString":"function (address,address,address,uint24) view"}},"id":5428,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3478:58:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5429,"nodeType":"ExpressionStatement","src":"3478:58:28"},{"assignments":[5434],"declarations":[{"constant":false,"id":5434,"mutability":"mutable","name":"input","nameLocation":"3589:5:28","nodeType":"VariableDeclaration","scope":5493,"src":"3547:47:28","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_ExactInputSingleParams_$3916_memory_ptr","typeString":"struct ISwapRouter.ExactInputSingleParams"},"typeName":{"id":5433,"nodeType":"UserDefinedTypeName","pathNode":{"id":5432,"name":"ISwapRouter.ExactInputSingleParams","nodeType":"IdentifierPath","referencedDeclaration":3916,"src":"3547:34:28"},"referencedDeclaration":3916,"src":"3547:34:28","typeDescriptions":{"typeIdentifier":"t_struct$_ExactInputSingleParams_$3916_storage_ptr","typeString":"struct ISwapRouter.ExactInputSingleParams"}},"visibility":"internal"}],"id":5435,"nodeType":"VariableDeclarationStatement","src":"3547:47:28"},{"expression":{"id":5440,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":5436,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5434,"src":"3604:5:28","typeDescriptions":{"typeIdentifier":"t_struct$_ExactInputSingleParams_$3916_memory_ptr","typeString":"struct ISwapRouter.ExactInputSingleParams memory"}},"id":5438,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"tokenIn","nodeType":"MemberAccess","referencedDeclaration":3901,"src":"3604:13:28","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":5439,"name":"tokenIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5399,"src":"3620:7:28","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3604:23:28","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":5441,"nodeType":"ExpressionStatement","src":"3604:23:28"},{"expression":{"id":5446,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":5442,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5434,"src":"3637:5:28","typeDescriptions":{"typeIdentifier":"t_struct$_ExactInputSingleParams_$3916_memory_ptr","typeString":"struct ISwapRouter.ExactInputSingleParams memory"}},"id":5444,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"tokenOut","nodeType":"MemberAccess","referencedDeclaration":3903,"src":"3637:14:28","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":5445,"name":"tokenOut","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5401,"src":"3654:8:28","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3637:25:28","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":5447,"nodeType":"ExpressionStatement","src":"3637:25:28"},{"expression":{"id":5452,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":5448,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5434,"src":"3672:5:28","typeDescriptions":{"typeIdentifier":"t_struct$_ExactInputSingleParams_$3916_memory_ptr","typeString":"struct ISwapRouter.ExactInputSingleParams memory"}},"id":5450,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"fee","nodeType":"MemberAccess","referencedDeclaration":3905,"src":"3672:9:28","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":5451,"name":"fee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5413,"src":"3684:3:28","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"src":"3672:15:28","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"id":5453,"nodeType":"ExpressionStatement","src":"3672:15:28"},{"expression":{"id":5461,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":5454,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5434,"src":"3697:5:28","typeDescriptions":{"typeIdentifier":"t_struct$_ExactInputSingleParams_$3916_memory_ptr","typeString":"struct ISwapRouter.ExactInputSingleParams memory"}},"id":5456,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"recipient","nodeType":"MemberAccess","referencedDeclaration":3907,"src":"3697:15:28","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5459,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"3723:4:28","typeDescriptions":{"typeIdentifier":"t_contract$_UniswapV3Connector_$5763","typeString":"contract UniswapV3Connector"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_UniswapV3Connector_$5763","typeString":"contract UniswapV3Connector"}],"id":5458,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3715:7:28","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":5457,"name":"address","nodeType":"ElementaryTypeName","src":"3715:7:28","typeDescriptions":{}}},"id":5460,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3715:13:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3697:31:28","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":5462,"nodeType":"ExpressionStatement","src":"3697:31:28"},{"expression":{"id":5468,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":5463,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5434,"src":"3738:5:28","typeDescriptions":{"typeIdentifier":"t_struct$_ExactInputSingleParams_$3916_memory_ptr","typeString":"struct ISwapRouter.ExactInputSingleParams memory"}},"id":5465,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"deadline","nodeType":"MemberAccess","referencedDeclaration":3909,"src":"3738:14:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":5466,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"3755:5:28","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":5467,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"timestamp","nodeType":"MemberAccess","src":"3755:15:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3738:32:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5469,"nodeType":"ExpressionStatement","src":"3738:32:28"},{"expression":{"id":5474,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":5470,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5434,"src":"3780:5:28","typeDescriptions":{"typeIdentifier":"t_struct$_ExactInputSingleParams_$3916_memory_ptr","typeString":"struct ISwapRouter.ExactInputSingleParams memory"}},"id":5472,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"amountIn","nodeType":"MemberAccess","referencedDeclaration":3911,"src":"3780:14:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":5473,"name":"amountIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5403,"src":"3797:8:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3780:25:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5475,"nodeType":"ExpressionStatement","src":"3780:25:28"},{"expression":{"id":5480,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":5476,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5434,"src":"3815:5:28","typeDescriptions":{"typeIdentifier":"t_struct$_ExactInputSingleParams_$3916_memory_ptr","typeString":"struct ISwapRouter.ExactInputSingleParams memory"}},"id":5478,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"amountOutMinimum","nodeType":"MemberAccess","referencedDeclaration":3913,"src":"3815:22:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":5479,"name":"minAmountOut","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5405,"src":"3840:12:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3815:37:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5481,"nodeType":"ExpressionStatement","src":"3815:37:28"},{"expression":{"id":5486,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":5482,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5434,"src":"3862:5:28","typeDescriptions":{"typeIdentifier":"t_struct$_ExactInputSingleParams_$3916_memory_ptr","typeString":"struct ISwapRouter.ExactInputSingleParams memory"}},"id":5484,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"sqrtPriceLimitX96","nodeType":"MemberAccess","referencedDeclaration":3915,"src":"3862:23:28","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":5485,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3888:1:28","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3862:27:28","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"id":5487,"nodeType":"ExpressionStatement","src":"3862:27:28"},{"expression":{"arguments":[{"id":5490,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5434,"src":"3939:5:28","typeDescriptions":{"typeIdentifier":"t_struct$_ExactInputSingleParams_$3916_memory_ptr","typeString":"struct ISwapRouter.ExactInputSingleParams memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_ExactInputSingleParams_$3916_memory_ptr","typeString":"struct ISwapRouter.ExactInputSingleParams memory"}],"expression":{"id":5488,"name":"uniswapV3Router","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5335,"src":"3906:15:28","typeDescriptions":{"typeIdentifier":"t_contract$_ISwapRouter_$3992","typeString":"contract ISwapRouter"}},"id":5489,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"exactInputSingle","nodeType":"MemberAccess","referencedDeclaration":3925,"src":"3906:32:28","typeDescriptions":{"typeIdentifier":"t_function_external_payable$_t_struct$_ExactInputSingleParams_$3916_memory_ptr_$returns$_t_uint256_$","typeString":"function (struct ISwapRouter.ExactInputSingleParams memory) payable external returns (uint256)"}},"id":5491,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3906:39:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5411,"id":5492,"nodeType":"Return","src":"3899:46:28"}]},"documentation":{"id":5397,"nodeType":"StructuredDocumentation","src":"2833:375:28","text":" @dev Internal function to swap two tokens through UniswapV3 using a single hop\n @param tokenIn Token being sent\n @param tokenOut Token being received\n @param amountIn Amount of tokenIn being swapped\n @param minAmountOut Minimum amount of tokenOut willing to receive\n @param data ABI-encoded-packed of the uint24 fee to be used"},"id":5494,"implemented":true,"kind":"function","modifiers":[],"name":"_singleSwapUniswapV3","nameLocation":"3222:20:28","nodeType":"FunctionDefinition","parameters":{"id":5408,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5399,"mutability":"mutable","name":"tokenIn","nameLocation":"3260:7:28","nodeType":"VariableDeclaration","scope":5494,"src":"3252:15:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5398,"name":"address","nodeType":"ElementaryTypeName","src":"3252:7:28","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5401,"mutability":"mutable","name":"tokenOut","nameLocation":"3285:8:28","nodeType":"VariableDeclaration","scope":5494,"src":"3277:16:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5400,"name":"address","nodeType":"ElementaryTypeName","src":"3277:7:28","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5403,"mutability":"mutable","name":"amountIn","nameLocation":"3311:8:28","nodeType":"VariableDeclaration","scope":5494,"src":"3303:16:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5402,"name":"uint256","nodeType":"ElementaryTypeName","src":"3303:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5405,"mutability":"mutable","name":"minAmountOut","nameLocation":"3337:12:28","nodeType":"VariableDeclaration","scope":5494,"src":"3329:20:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5404,"name":"uint256","nodeType":"ElementaryTypeName","src":"3329:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5407,"mutability":"mutable","name":"data","nameLocation":"3372:4:28","nodeType":"VariableDeclaration","scope":5494,"src":"3359:17:28","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":5406,"name":"bytes","nodeType":"ElementaryTypeName","src":"3359:5:28","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3242:140:28"},"returnParameters":{"id":5411,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5410,"mutability":"mutable","name":"amountOut","nameLocation":"3408:9:28","nodeType":"VariableDeclaration","scope":5494,"src":"3400:17:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5409,"name":"uint256","nodeType":"ElementaryTypeName","src":"3400:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3399:19:28"},"scope":5763,"src":"3213:739:28","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":5640,"nodeType":"Block","src":"4627:1023:28","statements":[{"assignments":[5514,5517],"declarations":[{"constant":false,"id":5514,"mutability":"mutable","name":"hopTokens","nameLocation":"4655:9:28","nodeType":"VariableDeclaration","scope":5640,"src":"4638:26:28","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":5512,"name":"address","nodeType":"ElementaryTypeName","src":"4638:7:28","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":5513,"nodeType":"ArrayTypeName","src":"4638:9:28","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":5517,"mutability":"mutable","name":"fees","nameLocation":"4682:4:28","nodeType":"VariableDeclaration","scope":5640,"src":"4666:20:28","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint24_$dyn_memory_ptr","typeString":"uint24[]"},"typeName":{"baseType":{"id":5515,"name":"uint24","nodeType":"ElementaryTypeName","src":"4666:6:28","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"id":5516,"nodeType":"ArrayTypeName","src":"4666:8:28","typeDescriptions":{"typeIdentifier":"t_array$_t_uint24_$dyn_storage_ptr","typeString":"uint24[]"}},"visibility":"internal"}],"id":5529,"initialValue":{"arguments":[{"id":5520,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5505,"src":"4701:4:28","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"components":[{"baseExpression":{"id":5522,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4708:7:28","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":5521,"name":"address","nodeType":"ElementaryTypeName","src":"4708:7:28","typeDescriptions":{}}},"id":5523,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"IndexAccess","src":"4708:9:28","typeDescriptions":{"typeIdentifier":"t_type$_t_array$_t_address_$dyn_memory_ptr_$","typeString":"type(address[] memory)"}},{"baseExpression":{"id":5525,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4719:6:28","typeDescriptions":{"typeIdentifier":"t_type$_t_uint24_$","typeString":"type(uint24)"},"typeName":{"id":5524,"name":"uint24","nodeType":"ElementaryTypeName","src":"4719:6:28","typeDescriptions":{}}},"id":5526,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"IndexAccess","src":"4719:8:28","typeDescriptions":{"typeIdentifier":"t_type$_t_array$_t_uint24_$dyn_memory_ptr_$","typeString":"type(uint24[] memory)"}}],"id":5527,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"4707:21:28","typeDescriptions":{"typeIdentifier":"t_tuple$_t_type$_t_array$_t_address_$dyn_memory_ptr_$_$_t_type$_t_array$_t_uint24_$dyn_memory_ptr_$_$","typeString":"tuple(type(address[] memory),type(uint24[] memory))"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_tuple$_t_type$_t_array$_t_address_$dyn_memory_ptr_$_$_t_type$_t_array$_t_uint24_$dyn_memory_ptr_$_$","typeString":"tuple(type(address[] memory),type(uint24[] memory))"}],"expression":{"id":5518,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"4690:3:28","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":5519,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"decode","nodeType":"MemberAccess","src":"4690:10:28","typeDescriptions":{"typeIdentifier":"t_function_abidecode_pure$__$returns$__$","typeString":"function () pure"}},"id":5528,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4690:39:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_array$_t_address_$dyn_memory_ptr_$_t_array$_t_uint24_$dyn_memory_ptr_$","typeString":"tuple(address[] memory,uint24[] memory)"}},"nodeType":"VariableDeclarationStatement","src":"4637:92:28"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5538,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":5531,"name":"fees","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5517,"src":"4841:4:28","typeDescriptions":{"typeIdentifier":"t_array$_t_uint24_$dyn_memory_ptr","typeString":"uint24[] memory"}},"id":5532,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"4841:11:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"31","id":5536,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4886:1:28","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"}],"expression":{"expression":{"id":5533,"name":"hopTokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5514,"src":"4856:9:28","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":5534,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"4856:16:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5535,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"uncheckedAdd","nodeType":"MemberAccess","referencedDeclaration":62,"src":"4856:29:28","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":5537,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4856:32:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4841:47:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"494e56414c49445f554e49535741505f56335f494e5055545f4c454e475448","id":5539,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4890:33:28","typeDescriptions":{"typeIdentifier":"t_stringliteral_601328a88770133c0441e5fef15dc309a1dd06ee6bcaddda0c7e394090784c86","typeString":"literal_string \"INVALID_UNISWAP_V3_INPUT_LENGTH\""},"value":"INVALID_UNISWAP_V3_INPUT_LENGTH"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_601328a88770133c0441e5fef15dc309a1dd06ee6bcaddda0c7e394090784c86","typeString":"literal_string \"INVALID_UNISWAP_V3_INPUT_LENGTH\""}],"id":5530,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4833:7:28","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5540,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4833:91:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5541,"nodeType":"ExpressionStatement","src":"4833:91:28"},{"assignments":[5543],"declarations":[{"constant":false,"id":5543,"mutability":"mutable","name":"factory","nameLocation":"4943:7:28","nodeType":"VariableDeclaration","scope":5640,"src":"4935:15:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5542,"name":"address","nodeType":"ElementaryTypeName","src":"4935:7:28","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":5546,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":5544,"name":"_uniswapV3Factory","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5657,"src":"4953:17:28","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":5545,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4953:19:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"4935:37:28"},{"assignments":[5551],"declarations":[{"constant":false,"id":5551,"mutability":"mutable","name":"tokens","nameLocation":"4999:6:28","nodeType":"VariableDeclaration","scope":5640,"src":"4982:23:28","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":5549,"name":"address","nodeType":"ElementaryTypeName","src":"4982:7:28","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":5550,"nodeType":"ArrayTypeName","src":"4982:9:28","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"id":5558,"initialValue":{"arguments":[{"id":5554,"name":"tokenIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5497,"src":"5020:7:28","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":5555,"name":"hopTokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5514,"src":"5029:9:28","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},{"id":5556,"name":"tokenOut","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5499,"src":"5040:8:28","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":5552,"name":"Arrays","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":396,"src":"5008:6:28","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Arrays_$396_$","typeString":"type(library Arrays)"}},"id":5553,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"from","nodeType":"MemberAccess","referencedDeclaration":297,"src":"5008:11:28","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_address_$_t_array$_t_address_$dyn_memory_ptr_$_t_address_$returns$_t_array$_t_address_$dyn_memory_ptr_$","typeString":"function (address,address[] memory,address) pure returns (address[] memory)"}},"id":5557,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5008:41:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"nodeType":"VariableDeclarationStatement","src":"4982:67:28"},{"body":{"id":5590,"nodeType":"Block","src":"5231:94:28","statements":[{"expression":{"arguments":[{"id":5575,"name":"factory","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5543,"src":"5259:7:28","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"baseExpression":{"id":5576,"name":"tokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5551,"src":"5268:6:28","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":5578,"indexExpression":{"id":5577,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5560,"src":"5275:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5268:9:28","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"baseExpression":{"id":5579,"name":"tokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5551,"src":"5279:6:28","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":5584,"indexExpression":{"arguments":[{"hexValue":"31","id":5582,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5301:1:28","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"}],"expression":{"id":5580,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5560,"src":"5286:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5581,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"uncheckedAdd","nodeType":"MemberAccess","referencedDeclaration":62,"src":"5286:14:28","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":5583,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5286:17:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5279:25:28","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"baseExpression":{"id":5585,"name":"fees","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5517,"src":"5306:4:28","typeDescriptions":{"typeIdentifier":"t_array$_t_uint24_$dyn_memory_ptr","typeString":"uint24[] memory"}},"id":5587,"indexExpression":{"id":5586,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5560,"src":"5311:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5306:7:28","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint24","typeString":"uint24"}],"id":5574,"name":"_validatePool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5702,"src":"5245:13:28","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$_t_address_$_t_uint24_$returns$__$","typeString":"function (address,address,address,uint24) view"}},"id":5588,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5245:69:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5589,"nodeType":"ExpressionStatement","src":"5245:69:28"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5566,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5563,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5560,"src":"5191:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":5564,"name":"fees","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5517,"src":"5195:4:28","typeDescriptions":{"typeIdentifier":"t_array$_t_uint24_$dyn_memory_ptr","typeString":"uint24[] memory"}},"id":5565,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"5195:11:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5191:15:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5591,"initializationExpression":{"assignments":[5560],"declarations":[{"constant":false,"id":5560,"mutability":"mutable","name":"i","nameLocation":"5184:1:28","nodeType":"VariableDeclaration","scope":5591,"src":"5176:9:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5559,"name":"uint256","nodeType":"ElementaryTypeName","src":"5176:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5562,"initialValue":{"hexValue":"30","id":5561,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5188:1:28","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"5176:13:28"},"loopExpression":{"expression":{"id":5572,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5567,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5560,"src":"5208:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"hexValue":"31","id":5570,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5227:1:28","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"}],"expression":{"id":5568,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5560,"src":"5212:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5569,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"uncheckedAdd","nodeType":"MemberAccess","referencedDeclaration":62,"src":"5212:14:28","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":5571,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5212:17:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5208:21:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5573,"nodeType":"ExpressionStatement","src":"5208:21:28"},"nodeType":"ForStatement","src":"5171:154:28"},{"assignments":[5596],"declarations":[{"constant":false,"id":5596,"mutability":"mutable","name":"input","nameLocation":"5371:5:28","nodeType":"VariableDeclaration","scope":5640,"src":"5335:41:28","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_ExactInputParams_$3936_memory_ptr","typeString":"struct ISwapRouter.ExactInputParams"},"typeName":{"id":5595,"nodeType":"UserDefinedTypeName","pathNode":{"id":5594,"name":"ISwapRouter.ExactInputParams","nodeType":"IdentifierPath","referencedDeclaration":3936,"src":"5335:28:28"},"referencedDeclaration":3936,"src":"5335:28:28","typeDescriptions":{"typeIdentifier":"t_struct$_ExactInputParams_$3936_storage_ptr","typeString":"struct ISwapRouter.ExactInputParams"}},"visibility":"internal"}],"id":5597,"nodeType":"VariableDeclarationStatement","src":"5335:41:28"},{"expression":{"id":5605,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":5598,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5596,"src":"5386:5:28","typeDescriptions":{"typeIdentifier":"t_struct$_ExactInputParams_$3936_memory_ptr","typeString":"struct ISwapRouter.ExactInputParams memory"}},"id":5600,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"path","nodeType":"MemberAccess","referencedDeclaration":3927,"src":"5386:10:28","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5602,"name":"tokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5551,"src":"5415:6:28","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},{"id":5603,"name":"fees","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5517,"src":"5423:4:28","typeDescriptions":{"typeIdentifier":"t_array$_t_uint24_$dyn_memory_ptr","typeString":"uint24[] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"},{"typeIdentifier":"t_array$_t_uint24_$dyn_memory_ptr","typeString":"uint24[] memory"}],"id":5601,"name":"_encodePoolPath","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5762,"src":"5399:15:28","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_address_$dyn_memory_ptr_$_t_array$_t_uint24_$dyn_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address[] memory,uint24[] memory) pure returns (bytes memory)"}},"id":5604,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5399:29:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"src":"5386:42:28","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":5606,"nodeType":"ExpressionStatement","src":"5386:42:28"},{"expression":{"id":5611,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":5607,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5596,"src":"5438:5:28","typeDescriptions":{"typeIdentifier":"t_struct$_ExactInputParams_$3936_memory_ptr","typeString":"struct ISwapRouter.ExactInputParams memory"}},"id":5609,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"amountIn","nodeType":"MemberAccess","referencedDeclaration":3933,"src":"5438:14:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":5610,"name":"amountIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5501,"src":"5455:8:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5438:25:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5612,"nodeType":"ExpressionStatement","src":"5438:25:28"},{"expression":{"id":5617,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":5613,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5596,"src":"5473:5:28","typeDescriptions":{"typeIdentifier":"t_struct$_ExactInputParams_$3936_memory_ptr","typeString":"struct ISwapRouter.ExactInputParams memory"}},"id":5615,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"amountOutMinimum","nodeType":"MemberAccess","referencedDeclaration":3935,"src":"5473:22:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":5616,"name":"minAmountOut","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5503,"src":"5498:12:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5473:37:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5618,"nodeType":"ExpressionStatement","src":"5473:37:28"},{"expression":{"id":5626,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":5619,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5596,"src":"5520:5:28","typeDescriptions":{"typeIdentifier":"t_struct$_ExactInputParams_$3936_memory_ptr","typeString":"struct ISwapRouter.ExactInputParams memory"}},"id":5621,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"recipient","nodeType":"MemberAccess","referencedDeclaration":3929,"src":"5520:15:28","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5624,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"5546:4:28","typeDescriptions":{"typeIdentifier":"t_contract$_UniswapV3Connector_$5763","typeString":"contract UniswapV3Connector"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_UniswapV3Connector_$5763","typeString":"contract UniswapV3Connector"}],"id":5623,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5538:7:28","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":5622,"name":"address","nodeType":"ElementaryTypeName","src":"5538:7:28","typeDescriptions":{}}},"id":5625,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5538:13:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5520:31:28","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":5627,"nodeType":"ExpressionStatement","src":"5520:31:28"},{"expression":{"id":5633,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":5628,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5596,"src":"5561:5:28","typeDescriptions":{"typeIdentifier":"t_struct$_ExactInputParams_$3936_memory_ptr","typeString":"struct ISwapRouter.ExactInputParams memory"}},"id":5630,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"deadline","nodeType":"MemberAccess","referencedDeclaration":3931,"src":"5561:14:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":5631,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"5578:5:28","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":5632,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"timestamp","nodeType":"MemberAccess","src":"5578:15:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5561:32:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5634,"nodeType":"ExpressionStatement","src":"5561:32:28"},{"expression":{"arguments":[{"id":5637,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5596,"src":"5637:5:28","typeDescriptions":{"typeIdentifier":"t_struct$_ExactInputParams_$3936_memory_ptr","typeString":"struct ISwapRouter.ExactInputParams memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_ExactInputParams_$3936_memory_ptr","typeString":"struct ISwapRouter.ExactInputParams memory"}],"expression":{"id":5635,"name":"uniswapV3Router","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5335,"src":"5610:15:28","typeDescriptions":{"typeIdentifier":"t_contract$_ISwapRouter_$3992","typeString":"contract ISwapRouter"}},"id":5636,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"exactInput","nodeType":"MemberAccess","referencedDeclaration":3945,"src":"5610:26:28","typeDescriptions":{"typeIdentifier":"t_function_external_payable$_t_struct$_ExactInputParams_$3936_memory_ptr_$returns$_t_uint256_$","typeString":"function (struct ISwapRouter.ExactInputParams memory) payable external returns (uint256)"}},"id":5638,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5610:33:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5509,"id":5639,"nodeType":"Return","src":"5603:40:28"}]},"documentation":{"id":5495,"nodeType":"StructuredDocumentation","src":"3958:459:28","text":" @dev Internal function to swap two tokens through UniswapV3 using a multi hop\n @param tokenIn Token being sent\n @param tokenOut Token being received\n @param amountIn Amount of the first token in the path to be swapped\n @param minAmountOut Minimum amount of the last token in the path willing to receive\n @param data ABI-encoded-packed list of hop-tokens between tokenIn and tokenOut and list of fees to be used"},"id":5641,"implemented":true,"kind":"function","modifiers":[],"name":"_batchSwapUniswapV3","nameLocation":"4431:19:28","nodeType":"FunctionDefinition","parameters":{"id":5506,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5497,"mutability":"mutable","name":"tokenIn","nameLocation":"4468:7:28","nodeType":"VariableDeclaration","scope":5641,"src":"4460:15:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5496,"name":"address","nodeType":"ElementaryTypeName","src":"4460:7:28","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5499,"mutability":"mutable","name":"tokenOut","nameLocation":"4493:8:28","nodeType":"VariableDeclaration","scope":5641,"src":"4485:16:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5498,"name":"address","nodeType":"ElementaryTypeName","src":"4485:7:28","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5501,"mutability":"mutable","name":"amountIn","nameLocation":"4519:8:28","nodeType":"VariableDeclaration","scope":5641,"src":"4511:16:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5500,"name":"uint256","nodeType":"ElementaryTypeName","src":"4511:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5503,"mutability":"mutable","name":"minAmountOut","nameLocation":"4545:12:28","nodeType":"VariableDeclaration","scope":5641,"src":"4537:20:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5502,"name":"uint256","nodeType":"ElementaryTypeName","src":"4537:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5505,"mutability":"mutable","name":"data","nameLocation":"4580:4:28","nodeType":"VariableDeclaration","scope":5641,"src":"4567:17:28","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":5504,"name":"bytes","nodeType":"ElementaryTypeName","src":"4567:5:28","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4450:140:28"},"returnParameters":{"id":5509,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5508,"mutability":"mutable","name":"amountOut","nameLocation":"4616:9:28","nodeType":"VariableDeclaration","scope":5641,"src":"4608:17:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5507,"name":"uint256","nodeType":"ElementaryTypeName","src":"4608:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4607:19:28"},"scope":5763,"src":"4422:1228:28","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":5656,"nodeType":"Block","src":"5869:84:28","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"arguments":[{"arguments":[{"id":5650,"name":"uniswapV3Router","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5335,"src":"5919:15:28","typeDescriptions":{"typeIdentifier":"t_contract$_ISwapRouter_$3992","typeString":"contract ISwapRouter"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_ISwapRouter_$3992","typeString":"contract ISwapRouter"}],"id":5649,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5911:7:28","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":5648,"name":"address","nodeType":"ElementaryTypeName","src":"5911:7:28","typeDescriptions":{}}},"id":5651,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5911:24:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":5647,"name":"IPeripheryImmutableState","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3892,"src":"5886:24:28","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IPeripheryImmutableState_$3892_$","typeString":"type(contract IPeripheryImmutableState)"}},"id":5652,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5886:50:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IPeripheryImmutableState_$3892","typeString":"contract IPeripheryImmutableState"}},"id":5653,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"factory","nodeType":"MemberAccess","referencedDeclaration":3885,"src":"5886:58:28","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_address_$","typeString":"function () view external returns (address)"}},"id":5654,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5886:60:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":5646,"id":5655,"nodeType":"Return","src":"5879:67:28"}]},"documentation":{"id":5642,"nodeType":"StructuredDocumentation","src":"5656:148:28","text":" @dev Internal function to fetch the Uniswap V3 factory contract address\n @return Address of the Uniswap V3 factory contract"},"id":5657,"implemented":true,"kind":"function","modifiers":[],"name":"_uniswapV3Factory","nameLocation":"5818:17:28","nodeType":"FunctionDefinition","parameters":{"id":5643,"nodeType":"ParameterList","parameters":[],"src":"5835:2:28"},"returnParameters":{"id":5646,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5645,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5657,"src":"5860:7:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5644,"name":"address","nodeType":"ElementaryTypeName","src":"5860:7:28","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5859:9:28"},"scope":5763,"src":"5809:144:28","stateMutability":"view","virtual":false,"visibility":"private"},{"body":{"id":5701,"nodeType":"Block","src":"6382:221:28","statements":[{"assignments":[5670,5672],"declarations":[{"constant":false,"id":5670,"mutability":"mutable","name":"token0","nameLocation":"6401:6:28","nodeType":"VariableDeclaration","scope":5701,"src":"6393:14:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5669,"name":"address","nodeType":"ElementaryTypeName","src":"6393:7:28","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5672,"mutability":"mutable","name":"token1","nameLocation":"6417:6:28","nodeType":"VariableDeclaration","scope":5701,"src":"6409:14:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5671,"name":"address","nodeType":"ElementaryTypeName","src":"6409:7:28","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":5683,"initialValue":{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":5675,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5673,"name":"tokenA","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5662,"src":"6427:6:28","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":5674,"name":"tokenB","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5664,"src":"6436:6:28","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6427:15:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"components":[{"id":5679,"name":"tokenB","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5664,"src":"6465:6:28","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":5680,"name":"tokenA","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5662,"src":"6473:6:28","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":5681,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6464:16:28","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_address_$","typeString":"tuple(address,address)"}},"id":5682,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"6427:53:28","trueExpression":{"components":[{"id":5676,"name":"tokenA","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5662,"src":"6446:6:28","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":5677,"name":"tokenB","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5664,"src":"6454:6:28","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":5678,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6445:16:28","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_address_$","typeString":"tuple(address,address)"}},"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_address_$","typeString":"tuple(address,address)"}},"nodeType":"VariableDeclarationStatement","src":"6392:88:28"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":5697,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":5689,"name":"token0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5670,"src":"6533:6:28","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":5690,"name":"token1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5672,"src":"6541:6:28","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":5691,"name":"fee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5666,"src":"6549:3:28","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint24","typeString":"uint24"}],"expression":{"arguments":[{"id":5686,"name":"factory","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5660,"src":"6516:7:28","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":5685,"name":"IUniswapV3Factory","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3862,"src":"6498:17:28","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IUniswapV3Factory_$3862_$","typeString":"type(contract IUniswapV3Factory)"}},"id":5687,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6498:26:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IUniswapV3Factory_$3862","typeString":"contract IUniswapV3Factory"}},"id":5688,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"getPool","nodeType":"MemberAccess","referencedDeclaration":3835,"src":"6498:34:28","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$_t_address_$_t_uint24_$returns$_t_address_$","typeString":"function (address,address,uint24) view external returns (address)"}},"id":5692,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6498:55:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":5695,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6565:1:28","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":5694,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6557:7:28","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":5693,"name":"address","nodeType":"ElementaryTypeName","src":"6557:7:28","typeDescriptions":{}}},"id":5696,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6557:10:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6498:69:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"494e56414c49445f554e49535741505f504f4f4c5f464545","id":5698,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6569:26:28","typeDescriptions":{"typeIdentifier":"t_stringliteral_2dcd7e06206a1c88f04eb4fd1c9ebebaf21c4fee53df6088a8778fd0c6308ba0","typeString":"literal_string \"INVALID_UNISWAP_POOL_FEE\""},"value":"INVALID_UNISWAP_POOL_FEE"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_2dcd7e06206a1c88f04eb4fd1c9ebebaf21c4fee53df6088a8778fd0c6308ba0","typeString":"literal_string \"INVALID_UNISWAP_POOL_FEE\""}],"id":5684,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"6490:7:28","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5699,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6490:106:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5700,"nodeType":"ExpressionStatement","src":"6490:106:28"}]},"documentation":{"id":5658,"nodeType":"StructuredDocumentation","src":"5959:321:28","text":" @dev Internal function to validate that there is a pool created for tokenA and tokenB with a requested fee\n @param factory UniswapV3 factory to check against\n @param tokenA One of the tokens in the pool\n @param tokenB The other token in the pool\n @param fee Fee used by the pool"},"id":5702,"implemented":true,"kind":"function","modifiers":[],"name":"_validatePool","nameLocation":"6294:13:28","nodeType":"FunctionDefinition","parameters":{"id":5667,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5660,"mutability":"mutable","name":"factory","nameLocation":"6316:7:28","nodeType":"VariableDeclaration","scope":5702,"src":"6308:15:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5659,"name":"address","nodeType":"ElementaryTypeName","src":"6308:7:28","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5662,"mutability":"mutable","name":"tokenA","nameLocation":"6333:6:28","nodeType":"VariableDeclaration","scope":5702,"src":"6325:14:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5661,"name":"address","nodeType":"ElementaryTypeName","src":"6325:7:28","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5664,"mutability":"mutable","name":"tokenB","nameLocation":"6349:6:28","nodeType":"VariableDeclaration","scope":5702,"src":"6341:14:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5663,"name":"address","nodeType":"ElementaryTypeName","src":"6341:7:28","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5666,"mutability":"mutable","name":"fee","nameLocation":"6364:3:28","nodeType":"VariableDeclaration","scope":5702,"src":"6357:10:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"},"typeName":{"id":5665,"name":"uint24","nodeType":"ElementaryTypeName","src":"6357:6:28","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"visibility":"internal"}],"src":"6307:61:28"},"returnParameters":{"id":5668,"nodeType":"ParameterList","parameters":[],"src":"6382:0:28"},"scope":5763,"src":"6285:318:28","stateMutability":"view","virtual":false,"visibility":"private"},{"body":{"id":5761,"nodeType":"Block","src":"6934:200:28","statements":[{"expression":{"id":5719,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5714,"name":"path","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5712,"src":"6944:4:28","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"hexValue":"30","id":5717,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6961:1:28","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":5716,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"6951:9:28","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint256) pure returns (bytes memory)"},"typeName":{"id":5715,"name":"bytes","nodeType":"ElementaryTypeName","src":"6955:5:28","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}}},"id":5718,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6951:12:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"src":"6944:19:28","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":5720,"nodeType":"ExpressionStatement","src":"6944:19:28"},{"body":{"expression":{"id":5748,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5736,"name":"path","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5712,"src":"7033:4:28","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"baseExpression":{"id":5744,"name":"fees","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5709,"src":"7070:4:28","typeDescriptions":{"typeIdentifier":"t_array$_t_uint24_$dyn_memory_ptr","typeString":"uint24[] memory"}},"id":5746,"indexExpression":{"id":5745,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5722,"src":"7075:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7070:7:28","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint24","typeString":"uint24"}],"expression":{"arguments":[{"baseExpression":{"id":5739,"name":"tokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5706,"src":"7052:6:28","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":5741,"indexExpression":{"id":5740,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5722,"src":"7059:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7052:9:28","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":5737,"name":"path","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5712,"src":"7040:4:28","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":5738,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"concat","nodeType":"MemberAccess","referencedDeclaration":416,"src":"7040:11:28","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_address_$returns$_t_bytes_memory_ptr_$bound_to$_t_bytes_memory_ptr_$","typeString":"function (bytes memory,address) pure returns (bytes memory)"}},"id":5742,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7040:22:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":5743,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"concat","nodeType":"MemberAccess","referencedDeclaration":433,"src":"7040:29:28","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_uint24_$returns$_t_bytes_memory_ptr_$bound_to$_t_bytes_memory_ptr_$","typeString":"function (bytes memory,uint24) pure returns (bytes memory)"}},"id":5747,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7040:38:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"src":"7033:45:28","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":5749,"nodeType":"ExpressionStatement","src":"7033:45:28"},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5728,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5725,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5722,"src":"6993:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":5726,"name":"fees","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5709,"src":"6997:4:28","typeDescriptions":{"typeIdentifier":"t_array$_t_uint24_$dyn_memory_ptr","typeString":"uint24[] memory"}},"id":5727,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"6997:11:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6993:15:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5750,"initializationExpression":{"assignments":[5722],"declarations":[{"constant":false,"id":5722,"mutability":"mutable","name":"i","nameLocation":"6986:1:28","nodeType":"VariableDeclaration","scope":5750,"src":"6978:9:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5721,"name":"uint256","nodeType":"ElementaryTypeName","src":"6978:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5724,"initialValue":{"hexValue":"30","id":5723,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6990:1:28","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"6978:13:28"},"loopExpression":{"expression":{"id":5734,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5729,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5722,"src":"7010:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"hexValue":"31","id":5732,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7029:1:28","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"}],"expression":{"id":5730,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5722,"src":"7014:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5731,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"uncheckedAdd","nodeType":"MemberAccess","referencedDeclaration":62,"src":"7014:14:28","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":5733,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7014:17:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7010:21:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5735,"nodeType":"ExpressionStatement","src":"7010:21:28"},"nodeType":"ForStatement","src":"6973:105:28"},{"expression":{"id":5759,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5751,"name":"path","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5712,"src":"7088:4:28","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"baseExpression":{"id":5754,"name":"tokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5706,"src":"7107:6:28","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":5757,"indexExpression":{"expression":{"id":5755,"name":"fees","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5709,"src":"7114:4:28","typeDescriptions":{"typeIdentifier":"t_array$_t_uint24_$dyn_memory_ptr","typeString":"uint24[] memory"}},"id":5756,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"7114:11:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7107:19:28","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":5752,"name":"path","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5712,"src":"7095:4:28","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":5753,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"concat","nodeType":"MemberAccess","referencedDeclaration":416,"src":"7095:11:28","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_address_$returns$_t_bytes_memory_ptr_$bound_to$_t_bytes_memory_ptr_$","typeString":"function (bytes memory,address) pure returns (bytes memory)"}},"id":5758,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7095:32:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"src":"7088:39:28","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":5760,"nodeType":"ExpressionStatement","src":"7088:39:28"}]},"documentation":{"id":5703,"nodeType":"StructuredDocumentation","src":"6609:207:28","text":" @dev Internal function to encode a path of tokens with their corresponding fees\n @param tokens List of tokens to be encoded\n @param fees List of fees to use for each token pair"},"id":5762,"implemented":true,"kind":"function","modifiers":[],"name":"_encodePoolPath","nameLocation":"6830:15:28","nodeType":"FunctionDefinition","parameters":{"id":5710,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5706,"mutability":"mutable","name":"tokens","nameLocation":"6863:6:28","nodeType":"VariableDeclaration","scope":5762,"src":"6846:23:28","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":5704,"name":"address","nodeType":"ElementaryTypeName","src":"6846:7:28","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":5705,"nodeType":"ArrayTypeName","src":"6846:9:28","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":5709,"mutability":"mutable","name":"fees","nameLocation":"6887:4:28","nodeType":"VariableDeclaration","scope":5762,"src":"6871:20:28","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint24_$dyn_memory_ptr","typeString":"uint24[]"},"typeName":{"baseType":{"id":5707,"name":"uint24","nodeType":"ElementaryTypeName","src":"6871:6:28","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"id":5708,"nodeType":"ArrayTypeName","src":"6871:8:28","typeDescriptions":{"typeIdentifier":"t_array$_t_uint24_$dyn_storage_ptr","typeString":"uint24[]"}},"visibility":"internal"}],"src":"6845:47:28"},"returnParameters":{"id":5713,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5712,"mutability":"mutable","name":"path","nameLocation":"6928:4:28","nodeType":"VariableDeclaration","scope":5762,"src":"6915:17:28","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":5711,"name":"bytes","nodeType":"ElementaryTypeName","src":"6915:5:28","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6914:19:28"},"scope":5763,"src":"6821:313:28","stateMutability":"pure","virtual":false,"visibility":"private"}],"scope":5764,"src":"1326:5810:28"}],"src":"688:6449:28"},"id":28},"contracts/interfaces/IBalancerV2Vault.sol":{"ast":{"absolutePath":"contracts/interfaces/IBalancerV2Vault.sol","exportedSymbols":{"IBalancerV2Vault":[5865]},"id":5866,"license":"GPL-3.0-or-later","nodeType":"SourceUnit","nodes":[{"id":5765,"literals":["experimental","ABIEncoderV2"],"nodeType":"PragmaDirective","src":"688:33:29"},{"id":5766,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"722:23:29"},{"abstract":false,"baseContracts":[],"contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":5865,"linearizedBaseContracts":[5865],"name":"IBalancerV2Vault","nameLocation":"757:16:29","nodeType":"ContractDefinition","nodes":[{"canonicalName":"IBalancerV2Vault.SwapKind","id":5769,"members":[{"id":5767,"name":"GIVEN_IN","nameLocation":"804:8:29","nodeType":"EnumValue","src":"804:8:29"},{"id":5768,"name":"GIVEN_OUT","nameLocation":"822:9:29","nodeType":"EnumValue","src":"822:9:29"}],"name":"SwapKind","nameLocation":"785:8:29","nodeType":"EnumDefinition","src":"780:57:29"},{"canonicalName":"IBalancerV2Vault.SingleSwap","id":5783,"members":[{"constant":false,"id":5771,"mutability":"mutable","name":"poolId","nameLocation":"879:6:29","nodeType":"VariableDeclaration","scope":5783,"src":"871:14:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5770,"name":"bytes32","nodeType":"ElementaryTypeName","src":"871:7:29","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":5774,"mutability":"mutable","name":"kind","nameLocation":"904:4:29","nodeType":"VariableDeclaration","scope":5783,"src":"895:13:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_SwapKind_$5769","typeString":"enum IBalancerV2Vault.SwapKind"},"typeName":{"id":5773,"nodeType":"UserDefinedTypeName","pathNode":{"id":5772,"name":"SwapKind","nodeType":"IdentifierPath","referencedDeclaration":5769,"src":"895:8:29"},"referencedDeclaration":5769,"src":"895:8:29","typeDescriptions":{"typeIdentifier":"t_enum$_SwapKind_$5769","typeString":"enum IBalancerV2Vault.SwapKind"}},"visibility":"internal"},{"constant":false,"id":5776,"mutability":"mutable","name":"assetIn","nameLocation":"926:7:29","nodeType":"VariableDeclaration","scope":5783,"src":"918:15:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5775,"name":"address","nodeType":"ElementaryTypeName","src":"918:7:29","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5778,"mutability":"mutable","name":"assetOut","nameLocation":"951:8:29","nodeType":"VariableDeclaration","scope":5783,"src":"943:16:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5777,"name":"address","nodeType":"ElementaryTypeName","src":"943:7:29","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5780,"mutability":"mutable","name":"amount","nameLocation":"977:6:29","nodeType":"VariableDeclaration","scope":5783,"src":"969:14:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5779,"name":"uint256","nodeType":"ElementaryTypeName","src":"969:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5782,"mutability":"mutable","name":"userData","nameLocation":"999:8:29","nodeType":"VariableDeclaration","scope":5783,"src":"993:14:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":5781,"name":"bytes","nodeType":"ElementaryTypeName","src":"993:5:29","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"name":"SingleSwap","nameLocation":"850:10:29","nodeType":"StructDefinition","scope":5865,"src":"843:171:29","visibility":"public"},{"canonicalName":"IBalancerV2Vault.BatchSwapStep","id":5794,"members":[{"constant":false,"id":5785,"mutability":"mutable","name":"poolId","nameLocation":"1059:6:29","nodeType":"VariableDeclaration","scope":5794,"src":"1051:14:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5784,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1051:7:29","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":5787,"mutability":"mutable","name":"assetInIndex","nameLocation":"1083:12:29","nodeType":"VariableDeclaration","scope":5794,"src":"1075:20:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5786,"name":"uint256","nodeType":"ElementaryTypeName","src":"1075:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5789,"mutability":"mutable","name":"assetOutIndex","nameLocation":"1113:13:29","nodeType":"VariableDeclaration","scope":5794,"src":"1105:21:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5788,"name":"uint256","nodeType":"ElementaryTypeName","src":"1105:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5791,"mutability":"mutable","name":"amount","nameLocation":"1144:6:29","nodeType":"VariableDeclaration","scope":5794,"src":"1136:14:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5790,"name":"uint256","nodeType":"ElementaryTypeName","src":"1136:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5793,"mutability":"mutable","name":"userData","nameLocation":"1166:8:29","nodeType":"VariableDeclaration","scope":5794,"src":"1160:14:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":5792,"name":"bytes","nodeType":"ElementaryTypeName","src":"1160:5:29","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"name":"BatchSwapStep","nameLocation":"1027:13:29","nodeType":"StructDefinition","scope":5865,"src":"1020:161:29","visibility":"public"},{"canonicalName":"IBalancerV2Vault.FundManagement","id":5803,"members":[{"constant":false,"id":5796,"mutability":"mutable","name":"sender","nameLocation":"1227:6:29","nodeType":"VariableDeclaration","scope":5803,"src":"1219:14:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5795,"name":"address","nodeType":"ElementaryTypeName","src":"1219:7:29","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5798,"mutability":"mutable","name":"fromInternalBalance","nameLocation":"1248:19:29","nodeType":"VariableDeclaration","scope":5803,"src":"1243:24:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5797,"name":"bool","nodeType":"ElementaryTypeName","src":"1243:4:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":5800,"mutability":"mutable","name":"recipient","nameLocation":"1293:9:29","nodeType":"VariableDeclaration","scope":5803,"src":"1277:25:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"},"typeName":{"id":5799,"name":"address","nodeType":"ElementaryTypeName","src":"1277:15:29","stateMutability":"payable","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"visibility":"internal"},{"constant":false,"id":5802,"mutability":"mutable","name":"toInternalBalance","nameLocation":"1317:17:29","nodeType":"VariableDeclaration","scope":5803,"src":"1312:22:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5801,"name":"bool","nodeType":"ElementaryTypeName","src":"1312:4:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"name":"FundManagement","nameLocation":"1194:14:29","nodeType":"StructDefinition","scope":5865,"src":"1187:154:29","visibility":"public"},{"functionSelector":"52bbbe29","id":5818,"implemented":false,"kind":"function","modifiers":[],"name":"swap","nameLocation":"1356:4:29","nodeType":"FunctionDefinition","parameters":{"id":5814,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5806,"mutability":"mutable","name":"singleSwap","nameLocation":"1379:10:29","nodeType":"VariableDeclaration","scope":5818,"src":"1361:28:29","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_SingleSwap_$5783_memory_ptr","typeString":"struct IBalancerV2Vault.SingleSwap"},"typeName":{"id":5805,"nodeType":"UserDefinedTypeName","pathNode":{"id":5804,"name":"SingleSwap","nodeType":"IdentifierPath","referencedDeclaration":5783,"src":"1361:10:29"},"referencedDeclaration":5783,"src":"1361:10:29","typeDescriptions":{"typeIdentifier":"t_struct$_SingleSwap_$5783_storage_ptr","typeString":"struct IBalancerV2Vault.SingleSwap"}},"visibility":"internal"},{"constant":false,"id":5809,"mutability":"mutable","name":"funds","nameLocation":"1413:5:29","nodeType":"VariableDeclaration","scope":5818,"src":"1391:27:29","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_FundManagement_$5803_memory_ptr","typeString":"struct IBalancerV2Vault.FundManagement"},"typeName":{"id":5808,"nodeType":"UserDefinedTypeName","pathNode":{"id":5807,"name":"FundManagement","nodeType":"IdentifierPath","referencedDeclaration":5803,"src":"1391:14:29"},"referencedDeclaration":5803,"src":"1391:14:29","typeDescriptions":{"typeIdentifier":"t_struct$_FundManagement_$5803_storage_ptr","typeString":"struct IBalancerV2Vault.FundManagement"}},"visibility":"internal"},{"constant":false,"id":5811,"mutability":"mutable","name":"limit","nameLocation":"1428:5:29","nodeType":"VariableDeclaration","scope":5818,"src":"1420:13:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5810,"name":"uint256","nodeType":"ElementaryTypeName","src":"1420:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5813,"mutability":"mutable","name":"deadline","nameLocation":"1443:8:29","nodeType":"VariableDeclaration","scope":5818,"src":"1435:16:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5812,"name":"uint256","nodeType":"ElementaryTypeName","src":"1435:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1360:92:29"},"returnParameters":{"id":5817,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5816,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5818,"src":"1503:7:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5815,"name":"uint256","nodeType":"ElementaryTypeName","src":"1503:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1502:9:29"},"scope":5865,"src":"1347:165:29","stateMutability":"payable","virtual":false,"visibility":"external"},{"functionSelector":"945bcec9","id":5842,"implemented":false,"kind":"function","modifiers":[],"name":"batchSwap","nameLocation":"1527:9:29","nodeType":"FunctionDefinition","parameters":{"id":5837,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5821,"mutability":"mutable","name":"kind","nameLocation":"1555:4:29","nodeType":"VariableDeclaration","scope":5842,"src":"1546:13:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_SwapKind_$5769","typeString":"enum IBalancerV2Vault.SwapKind"},"typeName":{"id":5820,"nodeType":"UserDefinedTypeName","pathNode":{"id":5819,"name":"SwapKind","nodeType":"IdentifierPath","referencedDeclaration":5769,"src":"1546:8:29"},"referencedDeclaration":5769,"src":"1546:8:29","typeDescriptions":{"typeIdentifier":"t_enum$_SwapKind_$5769","typeString":"enum IBalancerV2Vault.SwapKind"}},"visibility":"internal"},{"constant":false,"id":5825,"mutability":"mutable","name":"swaps","nameLocation":"1592:5:29","nodeType":"VariableDeclaration","scope":5842,"src":"1569:28:29","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_BatchSwapStep_$5794_memory_ptr_$dyn_memory_ptr","typeString":"struct IBalancerV2Vault.BatchSwapStep[]"},"typeName":{"baseType":{"id":5823,"nodeType":"UserDefinedTypeName","pathNode":{"id":5822,"name":"BatchSwapStep","nodeType":"IdentifierPath","referencedDeclaration":5794,"src":"1569:13:29"},"referencedDeclaration":5794,"src":"1569:13:29","typeDescriptions":{"typeIdentifier":"t_struct$_BatchSwapStep_$5794_storage_ptr","typeString":"struct IBalancerV2Vault.BatchSwapStep"}},"id":5824,"nodeType":"ArrayTypeName","src":"1569:15:29","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_BatchSwapStep_$5794_storage_$dyn_storage_ptr","typeString":"struct IBalancerV2Vault.BatchSwapStep[]"}},"visibility":"internal"},{"constant":false,"id":5828,"mutability":"mutable","name":"assets","nameLocation":"1624:6:29","nodeType":"VariableDeclaration","scope":5842,"src":"1607:23:29","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":5826,"name":"address","nodeType":"ElementaryTypeName","src":"1607:7:29","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":5827,"nodeType":"ArrayTypeName","src":"1607:9:29","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":5831,"mutability":"mutable","name":"funds","nameLocation":"1662:5:29","nodeType":"VariableDeclaration","scope":5842,"src":"1640:27:29","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_FundManagement_$5803_memory_ptr","typeString":"struct IBalancerV2Vault.FundManagement"},"typeName":{"id":5830,"nodeType":"UserDefinedTypeName","pathNode":{"id":5829,"name":"FundManagement","nodeType":"IdentifierPath","referencedDeclaration":5803,"src":"1640:14:29"},"referencedDeclaration":5803,"src":"1640:14:29","typeDescriptions":{"typeIdentifier":"t_struct$_FundManagement_$5803_storage_ptr","typeString":"struct IBalancerV2Vault.FundManagement"}},"visibility":"internal"},{"constant":false,"id":5834,"mutability":"mutable","name":"limits","nameLocation":"1693:6:29","nodeType":"VariableDeclaration","scope":5842,"src":"1677:22:29","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_memory_ptr","typeString":"int256[]"},"typeName":{"baseType":{"id":5832,"name":"int256","nodeType":"ElementaryTypeName","src":"1677:6:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":5833,"nodeType":"ArrayTypeName","src":"1677:8:29","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_storage_ptr","typeString":"int256[]"}},"visibility":"internal"},{"constant":false,"id":5836,"mutability":"mutable","name":"deadline","nameLocation":"1717:8:29","nodeType":"VariableDeclaration","scope":5842,"src":"1709:16:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5835,"name":"uint256","nodeType":"ElementaryTypeName","src":"1709:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1536:195:29"},"returnParameters":{"id":5841,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5840,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5842,"src":"1758:15:29","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_memory_ptr","typeString":"int256[]"},"typeName":{"baseType":{"id":5838,"name":"int256","nodeType":"ElementaryTypeName","src":"1758:6:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":5839,"nodeType":"ArrayTypeName","src":"1758:8:29","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_storage_ptr","typeString":"int256[]"}},"visibility":"internal"}],"src":"1757:17:29"},"scope":5865,"src":"1518:257:29","stateMutability":"payable","virtual":false,"visibility":"external"},{"functionSelector":"f6c00927","id":5851,"implemented":false,"kind":"function","modifiers":[],"name":"getPool","nameLocation":"1790:7:29","nodeType":"FunctionDefinition","parameters":{"id":5845,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5844,"mutability":"mutable","name":"poolId","nameLocation":"1806:6:29","nodeType":"VariableDeclaration","scope":5851,"src":"1798:14:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5843,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1798:7:29","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1797:16:29"},"returnParameters":{"id":5850,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5847,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5851,"src":"1837:7:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5846,"name":"address","nodeType":"ElementaryTypeName","src":"1837:7:29","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5849,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5851,"src":"1846:5:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":5848,"name":"uint8","nodeType":"ElementaryTypeName","src":"1846:5:29","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"1836:16:29"},"scope":5865,"src":"1781:72:29","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"f94d4668","id":5864,"implemented":false,"kind":"function","modifiers":[],"name":"getPoolTokens","nameLocation":"1868:13:29","nodeType":"FunctionDefinition","parameters":{"id":5854,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5853,"mutability":"mutable","name":"poolId","nameLocation":"1890:6:29","nodeType":"VariableDeclaration","scope":5864,"src":"1882:14:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5852,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1882:7:29","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1881:16:29"},"returnParameters":{"id":5863,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5857,"mutability":"mutable","name":"tokens","nameLocation":"1962:6:29","nodeType":"VariableDeclaration","scope":5864,"src":"1945:23:29","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":5855,"name":"address","nodeType":"ElementaryTypeName","src":"1945:7:29","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":5856,"nodeType":"ArrayTypeName","src":"1945:9:29","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":5860,"mutability":"mutable","name":"balances","nameLocation":"1987:8:29","nodeType":"VariableDeclaration","scope":5864,"src":"1970:25:29","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":5858,"name":"uint256","nodeType":"ElementaryTypeName","src":"1970:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5859,"nodeType":"ArrayTypeName","src":"1970:9:29","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":5862,"mutability":"mutable","name":"lastChangeBlock","nameLocation":"2005:15:29","nodeType":"VariableDeclaration","scope":5864,"src":"1997:23:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5861,"name":"uint256","nodeType":"ElementaryTypeName","src":"1997:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1944:77:29"},"scope":5865,"src":"1859:163:29","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":5866,"src":"747:1277:29"}],"src":"688:1337:29"},"id":29},"contracts/interfaces/IHopSwap.sol":{"ast":{"absolutePath":"contracts/interfaces/IHopSwap.sol","exportedSymbols":{"IHopSwap":[5890]},"id":5891,"license":"GPL-3.0-or-later","nodeType":"SourceUnit","nodes":[{"id":5867,"literals":["solidity",">=","0.8",".0"],"nodeType":"PragmaDirective","src":"688:24:30"},{"abstract":false,"baseContracts":[],"contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":5890,"linearizedBaseContracts":[5890],"name":"IHopSwap","nameLocation":"724:8:30","nodeType":"ContractDefinition","nodes":[{"functionSelector":"66c0bd24","id":5874,"implemented":false,"kind":"function","modifiers":[],"name":"getTokenIndex","nameLocation":"748:13:30","nodeType":"FunctionDefinition","parameters":{"id":5870,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5869,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5874,"src":"762:7:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5868,"name":"address","nodeType":"ElementaryTypeName","src":"762:7:30","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"761:9:30"},"returnParameters":{"id":5873,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5872,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5874,"src":"794:5:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":5871,"name":"uint8","nodeType":"ElementaryTypeName","src":"794:5:30","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"793:7:30"},"scope":5890,"src":"739:62:30","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"91695586","id":5889,"implemented":false,"kind":"function","modifiers":[],"name":"swap","nameLocation":"816:4:30","nodeType":"FunctionDefinition","parameters":{"id":5885,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5876,"mutability":"mutable","name":"tokenIndexFrom","nameLocation":"827:14:30","nodeType":"VariableDeclaration","scope":5889,"src":"821:20:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":5875,"name":"uint8","nodeType":"ElementaryTypeName","src":"821:5:30","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":5878,"mutability":"mutable","name":"tokenIndexTo","nameLocation":"849:12:30","nodeType":"VariableDeclaration","scope":5889,"src":"843:18:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":5877,"name":"uint8","nodeType":"ElementaryTypeName","src":"843:5:30","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":5880,"mutability":"mutable","name":"dx","nameLocation":"871:2:30","nodeType":"VariableDeclaration","scope":5889,"src":"863:10:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5879,"name":"uint256","nodeType":"ElementaryTypeName","src":"863:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5882,"mutability":"mutable","name":"minDy","nameLocation":"883:5:30","nodeType":"VariableDeclaration","scope":5889,"src":"875:13:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5881,"name":"uint256","nodeType":"ElementaryTypeName","src":"875:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5884,"mutability":"mutable","name":"deadline","nameLocation":"898:8:30","nodeType":"VariableDeclaration","scope":5889,"src":"890:16:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5883,"name":"uint256","nodeType":"ElementaryTypeName","src":"890:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"820:87:30"},"returnParameters":{"id":5888,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5887,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5889,"src":"942:7:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5886,"name":"uint256","nodeType":"ElementaryTypeName","src":"942:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"941:9:30"},"scope":5890,"src":"807:144:30","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":5891,"src":"714:239:30"}],"src":"688:266:30"},"id":30},"contracts/interfaces/IOneInchV5AggregationRouter.sol":{"ast":{"absolutePath":"contracts/interfaces/IOneInchV5AggregationRouter.sol","exportedSymbols":{"IAggregationExecutor":[5901],"IERC20":[832],"IOneInchV5AggregationRouter":[5937]},"id":5938,"license":"GPL-3.0-or-later","nodeType":"SourceUnit","nodes":[{"id":5892,"literals":["experimental","ABIEncoderV2"],"nodeType":"PragmaDirective","src":"688:33:31"},{"id":5893,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"722:23:31"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"@openzeppelin/contracts/token/ERC20/IERC20.sol","id":5894,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":5938,"sourceUnit":833,"src":"747:56:31","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[],"contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":5901,"linearizedBaseContracts":[5901],"name":"IAggregationExecutor","nameLocation":"815:20:31","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":5895,"nodeType":"StructuredDocumentation","src":"842:88:31","text":"@notice propagates information about original msg.sender and executes arbitrary data"},"functionSelector":"4b64e492","id":5900,"implemented":false,"kind":"function","modifiers":[],"name":"execute","nameLocation":"944:7:31","nodeType":"FunctionDefinition","parameters":{"id":5898,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5897,"mutability":"mutable","name":"msgSender","nameLocation":"960:9:31","nodeType":"VariableDeclaration","scope":5900,"src":"952:17:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5896,"name":"address","nodeType":"ElementaryTypeName","src":"952:7:31","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"951:19:31"},"returnParameters":{"id":5899,"nodeType":"ParameterList","parameters":[],"src":"987:0:31"},"scope":5901,"src":"935:53:31","stateMutability":"payable","virtual":false,"visibility":"external"}],"scope":5938,"src":"805:185:31"},{"abstract":false,"baseContracts":[],"contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":5937,"linearizedBaseContracts":[5937],"name":"IOneInchV5AggregationRouter","nameLocation":"1002:27:31","nodeType":"ContractDefinition","nodes":[{"canonicalName":"IOneInchV5AggregationRouter.SwapDescription","id":5918,"members":[{"constant":false,"id":5904,"mutability":"mutable","name":"srcToken","nameLocation":"1076:8:31","nodeType":"VariableDeclaration","scope":5918,"src":"1069:15:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$832","typeString":"contract IERC20"},"typeName":{"id":5903,"nodeType":"UserDefinedTypeName","pathNode":{"id":5902,"name":"IERC20","nodeType":"IdentifierPath","referencedDeclaration":832,"src":"1069:6:31"},"referencedDeclaration":832,"src":"1069:6:31","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$832","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":5907,"mutability":"mutable","name":"dstToken","nameLocation":"1101:8:31","nodeType":"VariableDeclaration","scope":5918,"src":"1094:15:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$832","typeString":"contract IERC20"},"typeName":{"id":5906,"nodeType":"UserDefinedTypeName","pathNode":{"id":5905,"name":"IERC20","nodeType":"IdentifierPath","referencedDeclaration":832,"src":"1094:6:31"},"referencedDeclaration":832,"src":"1094:6:31","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$832","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":5909,"mutability":"mutable","name":"srcReceiver","nameLocation":"1135:11:31","nodeType":"VariableDeclaration","scope":5918,"src":"1119:27:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"},"typeName":{"id":5908,"name":"address","nodeType":"ElementaryTypeName","src":"1119:15:31","stateMutability":"payable","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"visibility":"internal"},{"constant":false,"id":5911,"mutability":"mutable","name":"dstReceiver","nameLocation":"1172:11:31","nodeType":"VariableDeclaration","scope":5918,"src":"1156:27:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"},"typeName":{"id":5910,"name":"address","nodeType":"ElementaryTypeName","src":"1156:15:31","stateMutability":"payable","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"visibility":"internal"},{"constant":false,"id":5913,"mutability":"mutable","name":"amount","nameLocation":"1201:6:31","nodeType":"VariableDeclaration","scope":5918,"src":"1193:14:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5912,"name":"uint256","nodeType":"ElementaryTypeName","src":"1193:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5915,"mutability":"mutable","name":"minReturnAmount","nameLocation":"1225:15:31","nodeType":"VariableDeclaration","scope":5918,"src":"1217:23:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5914,"name":"uint256","nodeType":"ElementaryTypeName","src":"1217:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5917,"mutability":"mutable","name":"flags","nameLocation":"1258:5:31","nodeType":"VariableDeclaration","scope":5918,"src":"1250:13:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5916,"name":"uint256","nodeType":"ElementaryTypeName","src":"1250:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"SwapDescription","nameLocation":"1043:15:31","nodeType":"StructDefinition","scope":5937,"src":"1036:234:31","visibility":"public"},{"documentation":{"id":5919,"nodeType":"StructuredDocumentation","src":"1276:690:31","text":"@notice Performs a swap, delegating all calls encoded in `data` to `executor`. See tests for usage examples\n @dev router keeps 1 wei of every token on the contract balance for gas optimisations reasons. This affects first swap of every token by leaving 1 wei on the contract.\n @param executor Aggregation executor that executes calls described in `data`\n @param desc Swap description\n @param permit Should contain valid permit that can be used in `IERC20Permit.permit` calls.\n @param data Encoded calls that `caller` should execute in between of swaps\n @return returnAmount Resulting token amount\n @return spentAmount Source token amount"},"functionSelector":"12aa3caf","id":5936,"implemented":false,"kind":"function","modifiers":[],"name":"swap","nameLocation":"1980:4:31","nodeType":"FunctionDefinition","parameters":{"id":5930,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5922,"mutability":"mutable","name":"executor","nameLocation":"2015:8:31","nodeType":"VariableDeclaration","scope":5936,"src":"1994:29:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IAggregationExecutor_$5901","typeString":"contract IAggregationExecutor"},"typeName":{"id":5921,"nodeType":"UserDefinedTypeName","pathNode":{"id":5920,"name":"IAggregationExecutor","nodeType":"IdentifierPath","referencedDeclaration":5901,"src":"1994:20:31"},"referencedDeclaration":5901,"src":"1994:20:31","typeDescriptions":{"typeIdentifier":"t_contract$_IAggregationExecutor_$5901","typeString":"contract IAggregationExecutor"}},"visibility":"internal"},{"constant":false,"id":5925,"mutability":"mutable","name":"desc","nameLocation":"2058:4:31","nodeType":"VariableDeclaration","scope":5936,"src":"2033:29:31","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_SwapDescription_$5918_calldata_ptr","typeString":"struct IOneInchV5AggregationRouter.SwapDescription"},"typeName":{"id":5924,"nodeType":"UserDefinedTypeName","pathNode":{"id":5923,"name":"SwapDescription","nodeType":"IdentifierPath","referencedDeclaration":5918,"src":"2033:15:31"},"referencedDeclaration":5918,"src":"2033:15:31","typeDescriptions":{"typeIdentifier":"t_struct$_SwapDescription_$5918_storage_ptr","typeString":"struct IOneInchV5AggregationRouter.SwapDescription"}},"visibility":"internal"},{"constant":false,"id":5927,"mutability":"mutable","name":"permit","nameLocation":"2087:6:31","nodeType":"VariableDeclaration","scope":5936,"src":"2072:21:31","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":5926,"name":"bytes","nodeType":"ElementaryTypeName","src":"2072:5:31","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":5929,"mutability":"mutable","name":"data","nameLocation":"2118:4:31","nodeType":"VariableDeclaration","scope":5936,"src":"2103:19:31","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":5928,"name":"bytes","nodeType":"ElementaryTypeName","src":"2103:5:31","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1984:144:31"},"returnParameters":{"id":5935,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5932,"mutability":"mutable","name":"returnAmount","nameLocation":"2163:12:31","nodeType":"VariableDeclaration","scope":5936,"src":"2155:20:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5931,"name":"uint256","nodeType":"ElementaryTypeName","src":"2155:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5934,"mutability":"mutable","name":"spentAmount","nameLocation":"2185:11:31","nodeType":"VariableDeclaration","scope":5936,"src":"2177:19:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5933,"name":"uint256","nodeType":"ElementaryTypeName","src":"2177:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2154:43:31"},"scope":5937,"src":"1971:227:31","stateMutability":"payable","virtual":false,"visibility":"external"}],"scope":5938,"src":"992:1208:31"}],"src":"688:1513:31"},"id":31},"contracts/interfaces/IParaswapV5Augustus.sol":{"ast":{"absolutePath":"contracts/interfaces/IParaswapV5Augustus.sol","exportedSymbols":{"IParaswapV5Augustus":[5945]},"id":5946,"license":"GPL-3.0-or-later","nodeType":"SourceUnit","nodes":[{"id":5939,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"688:23:32"},{"abstract":false,"baseContracts":[],"contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":5945,"linearizedBaseContracts":[5945],"name":"IParaswapV5Augustus","nameLocation":"723:19:32","nodeType":"ContractDefinition","nodes":[{"functionSelector":"d2c4b598","id":5944,"implemented":false,"kind":"function","modifiers":[],"name":"getTokenTransferProxy","nameLocation":"758:21:32","nodeType":"FunctionDefinition","parameters":{"id":5940,"nodeType":"ParameterList","parameters":[],"src":"779:2:32"},"returnParameters":{"id":5943,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5942,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5944,"src":"805:7:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5941,"name":"address","nodeType":"ElementaryTypeName","src":"805:7:32","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"804:9:32"},"scope":5945,"src":"749:65:32","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":5946,"src":"713:103:32"}],"src":"688:129:32"},"id":32}},"contracts":{"@mimic-fi/v2-helpers/contracts/auth/IAuthorizer.sol":{"IAuthorizer":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"who","type":"address"},{"indexed":false,"internalType":"bytes4","name":"what","type":"bytes4"}],"name":"Authorized","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"who","type":"address"},{"indexed":false,"internalType":"bytes4","name":"what","type":"bytes4"}],"name":"Unauthorized","type":"event"},{"inputs":[{"internalType":"address","name":"who","type":"address"},{"internalType":"bytes4","name":"what","type":"bytes4"}],"name":"authorize","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"who","type":"address"},{"internalType":"bytes4","name":"what","type":"bytes4"}],"name":"isAuthorized","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"who","type":"address"},{"internalType":"bytes4","name":"what","type":"bytes4"}],"name":"unauthorize","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"authorize(address,bytes4)":"933f0f3c","isAuthorized(address,bytes4)":"d9972b96","unauthorize(address,bytes4)":"6646a436"}},"metadata":"{\"compiler\":{\"version\":\"0.8.3+commit.8d00100c\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"who\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes4\",\"name\":\"what\",\"type\":\"bytes4\"}],\"name\":\"Authorized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"who\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes4\",\"name\":\"what\",\"type\":\"bytes4\"}],\"name\":\"Unauthorized\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"who\",\"type\":\"address\"},{\"internalType\":\"bytes4\",\"name\":\"what\",\"type\":\"bytes4\"}],\"name\":\"authorize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"who\",\"type\":\"address\"},{\"internalType\":\"bytes4\",\"name\":\"what\",\"type\":\"bytes4\"}],\"name\":\"isAuthorized\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"who\",\"type\":\"address\"},{\"internalType\":\"bytes4\",\"name\":\"what\",\"type\":\"bytes4\"}],\"name\":\"unauthorize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"Authorized(address,bytes4)\":{\"details\":\"Emitted when an account is authorized to call a function\"},\"Unauthorized(address,bytes4)\":{\"details\":\"Emitted when an account is unauthorized to call a function\"}},\"kind\":\"dev\",\"methods\":{\"authorize(address,bytes4)\":{\"details\":\"Authorizes someone to call a function. Sender must be authorize to do so.\",\"params\":{\"what\":\"Function selector to be granted\",\"who\":\"Address to be authorized\"}},\"isAuthorized(address,bytes4)\":{\"details\":\"Tells whether someone is allowed to call a function or not. It returns true if it's allowed to anyone.\",\"params\":{\"what\":\"Function selector asking permission for\",\"who\":\"Address asking permission for\"}},\"unauthorize(address,bytes4)\":{\"details\":\"Unauthorizes someone to call a function. Sender must be authorize to do so.\",\"params\":{\"what\":\"Function selector to be revoked\",\"who\":\"Address to be unauthorized\"}}},\"title\":\"IAuthorizer\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@mimic-fi/v2-helpers/contracts/auth/IAuthorizer.sol\":\"IAuthorizer\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":10000},\"remappings\":[]},\"sources\":{\"@mimic-fi/v2-helpers/contracts/auth/IAuthorizer.sol\":{\"keccak256\":\"0x7e5d1c440a02d16c3d62d8ca982749b4cf044ba14e0a40c4f2fe23257a5304d2\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://bdad507d0bdc80eb1ca9fc01d4ef4ff5e0258b631305033b5945aad85fa5068a\",\"dweb:/ipfs/QmaRdsSorrzkxYpeTNMrZvH5RbbM9JYPQ9HyNAcQGmXNAe\"]}},\"version\":1}"}},"@mimic-fi/v2-helpers/contracts/math/UncheckedMath.sol":{"UncheckedMath":{"abi":[],"evm":{"bytecode":{"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212202571b693cbd9fccd229da424e249566b2a553ea99b7680e895f1e95fe8c7ce4164736f6c63430008030033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x25 PUSH18 0xB693CBD9FCCD229DA424E249566B2A553EA9 SWAP12 PUSH23 0x80E895F1E95FE8C7CE4164736F6C634300080300330000 ","sourceMap":"798:1084:1:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;798:1084:1;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212202571b693cbd9fccd229da424e249566b2a553ea99b7680e895f1e95fe8c7ce4164736f6c63430008030033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x25 PUSH18 0xB693CBD9FCCD229DA424E249566B2A553EA9 SWAP12 PUSH23 0x80E895F1E95FE8C7CE4164736F6C634300080300330000 ","sourceMap":"798:1084:1:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.3+commit.8d00100c\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Math library to perform unchecked operations\",\"kind\":\"dev\",\"methods\":{},\"title\":\"UncheckedMath\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@mimic-fi/v2-helpers/contracts/math/UncheckedMath.sol\":\"UncheckedMath\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":10000},\"remappings\":[]},\"sources\":{\"@mimic-fi/v2-helpers/contracts/math/UncheckedMath.sol\":{\"keccak256\":\"0x0521515cc3d9bb160250175613575c85286db3f308f522dc98bbf637efa78bfb\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://acd315fd1ef1d6408682ba6f7943470361baefff1a5675da40aab21673e42b55\",\"dweb:/ipfs/QmSg9WHAMVLk9i2rR8DQSomXLaKBW9gWcTRAwzbdxMLU7h\"]}},\"version\":1}"}},"@mimic-fi/v2-helpers/contracts/utils/Arrays.sol":{"Arrays":{"abi":[],"evm":{"bytecode":{"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212208540a0eb75030330960de8fe902eaf13787f61ee099017306645c7218792af6464736f6c63430008030033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP6 BLOCKHASH LOG0 0xEB PUSH22 0x30330960DE8FE902EAF13787F61EE099017306645C7 0x21 DUP8 SWAP3 0xAF PUSH5 0x64736F6C63 NUMBER STOP ADDMOD SUB STOP CALLER ","sourceMap":"816:2287:2:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;816:2287:2;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212208540a0eb75030330960de8fe902eaf13787f61ee099017306645c7218792af6464736f6c63430008030033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP6 BLOCKHASH LOG0 0xEB PUSH22 0x30330960DE8FE902EAF13787F61EE099017306645C7 0x21 DUP8 SWAP3 0xAF PUSH5 0x64736F6C63 NUMBER STOP ADDMOD SUB STOP CALLER ","sourceMap":"816:2287:2:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.3+commit.8d00100c\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Helper methods to operate arrays\",\"kind\":\"dev\",\"methods\":{},\"title\":\"Arrays\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@mimic-fi/v2-helpers/contracts/utils/Arrays.sol\":\"Arrays\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":10000},\"remappings\":[]},\"sources\":{\"@mimic-fi/v2-helpers/contracts/math/UncheckedMath.sol\":{\"keccak256\":\"0x0521515cc3d9bb160250175613575c85286db3f308f522dc98bbf637efa78bfb\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://acd315fd1ef1d6408682ba6f7943470361baefff1a5675da40aab21673e42b55\",\"dweb:/ipfs/QmSg9WHAMVLk9i2rR8DQSomXLaKBW9gWcTRAwzbdxMLU7h\"]},\"@mimic-fi/v2-helpers/contracts/utils/Arrays.sol\":{\"keccak256\":\"0x369b3db3de25b981dcf879c6c5e46f709bb1cd356a876599ebee1d9a5d680fc0\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://6b9355a89b1acdbe8d4e26b74da1995b400a15a08372e07eeaa1ff2c939b66ba\",\"dweb:/ipfs/QmdHFHEu3DXXK6CNfHXY4J2j8KC3bQxLZgPssrttNYwS56\"]}},\"version\":1}"}},"@mimic-fi/v2-helpers/contracts/utils/Bytes.sol":{"Bytes":{"abi":[],"evm":{"bytecode":{"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220cc168e7b38f40a7b00e175391731f0c59fee8cb9589176e3171d694dfc675ff664736f6c63430008030033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xCC AND DUP15 PUSH28 0x38F40A7B00E175391731F0C59FEE8CB9589176E3171D694DFC675FF6 PUSH5 0x736F6C6343 STOP ADDMOD SUB STOP CALLER ","sourceMap":"791:444:3:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;791:444:3;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220cc168e7b38f40a7b00e175391731f0c59fee8cb9589176e3171d694dfc675ff664736f6c63430008030033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xCC AND DUP15 PUSH28 0x38F40A7B00E175391731F0C59FEE8CB9589176E3171D694DFC675FF6 PUSH5 0x736F6C6343 STOP ADDMOD SUB STOP CALLER ","sourceMap":"791:444:3:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.3+commit.8d00100c\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Helper methods to operate bytes-related types\",\"kind\":\"dev\",\"methods\":{},\"title\":\"Bytes\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@mimic-fi/v2-helpers/contracts/utils/Bytes.sol\":\"Bytes\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":10000},\"remappings\":[]},\"sources\":{\"@mimic-fi/v2-helpers/contracts/utils/Bytes.sol\":{\"keccak256\":\"0xb354327b816ba2f9934fabe96b26aff0376f6cc6bb4cbd2b2ad61bfe35b8e43a\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://8d512e742720f564112735dfb1d7e2057c534608f2ab5813e439ca4d8d808e3a\",\"dweb:/ipfs/QmbW9MwYR4JAP1UQ56MLH743vHsByFHAv7sszkduu5G8bD\"]}},\"version\":1}"}},"@mimic-fi/v2-registry/contracts/implementations/BaseImplementation.sol":{"BaseImplementation":{"abi":[{"inputs":[],"name":"NAMESPACE","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"registry","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"NAMESPACE()":"44ba1fca","registry()":"7b103999"}},"metadata":"{\"compiler\":{\"version\":\"0.8.3+commit.8d00100c\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"NAMESPACE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"registry\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"This implementation contract comes with an immutable reference to an implementations registry where it should be registered as well (checked during initialization). It allows requesting new instances of other registered implementations to as another safety check to make sure valid instances are referenced in case it's needed.\",\"kind\":\"dev\",\"methods\":{\"NAMESPACE()\":{\"details\":\"Tells the namespace under which the implementation is registered in the Mimic Registry\"},\"constructor\":{\"details\":\"Creates a new BaseImplementation\",\"params\":{\"_registry\":\"Address of the Mimic Registry where dependencies will be validated against\"}}},\"stateVariables\":{\"registry\":{\"details\":\"Tells the address of the Mimic Registry\"}},\"title\":\"BaseImplementation\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@mimic-fi/v2-registry/contracts/implementations/BaseImplementation.sol\":\"BaseImplementation\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":10000},\"remappings\":[]},\"sources\":{\"@mimic-fi/v2-helpers/contracts/auth/IAuthorizer.sol\":{\"keccak256\":\"0x7e5d1c440a02d16c3d62d8ca982749b4cf044ba14e0a40c4f2fe23257a5304d2\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://bdad507d0bdc80eb1ca9fc01d4ef4ff5e0258b631305033b5945aad85fa5068a\",\"dweb:/ipfs/QmaRdsSorrzkxYpeTNMrZvH5RbbM9JYPQ9HyNAcQGmXNAe\"]},\"@mimic-fi/v2-registry/contracts/implementations/BaseImplementation.sol\":{\"keccak256\":\"0xef331bd88660d3c89ea771c3a8a4392412a409f886411d740d056d547ca4098e\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://5615ee18477db1336aaa7908852e5b5f90a07d8bf90568ef87bab9043f19d819\",\"dweb:/ipfs/QmYJhtFsJAKsAjbbnFJbKxqxVzkQwxs6s3FehKfHZSouAo\"]},\"@mimic-fi/v2-registry/contracts/implementations/IImplementation.sol\":{\"keccak256\":\"0x621ffadea8fdc214f95fa95ff480ebc7f5f51d9678544883def90b59a3851f78\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://9933e44069dee9bf8410f405d734b1320e2b26f11108e723576f9df6ff410b59\",\"dweb:/ipfs/QmfEmrt9bRhjN86BJRST7ZSjkDjegJgd9JtLheizUNzDwN\"]},\"@mimic-fi/v2-registry/contracts/registry/IRegistry.sol\":{\"keccak256\":\"0xeb2662066535134308d0ba955c88e7de4a17d1681b148371dd6dd4b581b2f381\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://7d8f6509d822fea1cea9b6b81a9745fdcdfad4199e69cd3562ffeb234d0e3eac\",\"dweb:/ipfs/QmS74Fkt8nyoGUyNhrqmqrCXQcmboBciFY7zLSwpjytFtU\"]},\"@openzeppelin/contracts/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x2a21b14ff90012878752f230d3ffd5c3405e5938d06c97a7d89c0a64561d0d66\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3313a8f9bb1f9476857c9050067b31982bf2140b83d84f3bc0cec1f62bbe947f\",\"dweb:/ipfs/Qma17Pk8NRe7aB4UD3jjVxk7nSFaov3eQyv86hcyqkwJRV\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xd6153ce99bcdcce22b124f755e72553295be6abcd63804cfdffceb188b8bef10\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://35c47bece3c03caaa07fab37dd2bb3413bfbca20db7bd9895024390e0a469487\",\"dweb:/ipfs/QmPGWT2x3QHcKxqe6gRmAkdakhbaRgx3DLzcakHz5M4eXG\"]}},\"version\":1}"}},"@mimic-fi/v2-registry/contracts/implementations/IImplementation.sol":{"IImplementation":{"abi":[{"inputs":[],"name":"NAMESPACE","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"registry","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"NAMESPACE()":"44ba1fca","registry()":"7b103999"}},"metadata":"{\"compiler\":{\"version\":\"0.8.3+commit.8d00100c\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"NAMESPACE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"registry\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation interface that must be followed for implementations to be registered in the Mimic Registry\",\"kind\":\"dev\",\"methods\":{\"NAMESPACE()\":{\"details\":\"Tells the namespace under which the implementation is registered in the Mimic Registry\"},\"registry()\":{\"details\":\"Tells the address of the Mimic Registry\"}},\"title\":\"IImplementation\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@mimic-fi/v2-registry/contracts/implementations/IImplementation.sol\":\"IImplementation\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":10000},\"remappings\":[]},\"sources\":{\"@mimic-fi/v2-registry/contracts/implementations/IImplementation.sol\":{\"keccak256\":\"0x621ffadea8fdc214f95fa95ff480ebc7f5f51d9678544883def90b59a3851f78\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://9933e44069dee9bf8410f405d734b1320e2b26f11108e723576f9df6ff410b59\",\"dweb:/ipfs/QmfEmrt9bRhjN86BJRST7ZSjkDjegJgd9JtLheizUNzDwN\"]}},\"version\":1}"}},"@mimic-fi/v2-registry/contracts/registry/IRegistry.sol":{"IRegistry":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"who","type":"address"},{"indexed":false,"internalType":"bytes4","name":"what","type":"bytes4"}],"name":"Authorized","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"namespace","type":"bytes32"},{"indexed":true,"internalType":"address","name":"implementation","type":"address"}],"name":"Deprecated","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"namespace","type":"bytes32"},{"indexed":true,"internalType":"address","name":"implementation","type":"address"},{"indexed":false,"internalType":"bool","name":"stateless","type":"bool"}],"name":"Registered","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"who","type":"address"},{"indexed":false,"internalType":"bytes4","name":"what","type":"bytes4"}],"name":"Unauthorized","type":"event"},{"inputs":[{"internalType":"address","name":"who","type":"address"},{"internalType":"bytes4","name":"what","type":"bytes4"}],"name":"authorize","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"implementation","type":"address"}],"name":"deprecate","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"implementation","type":"address"}],"name":"implementationData","outputs":[{"internalType":"bool","name":"stateless","type":"bool"},{"internalType":"bool","name":"deprecated","type":"bool"},{"internalType":"bytes32","name":"namespace","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"namespace","type":"bytes32"},{"internalType":"address","name":"implementation","type":"address"}],"name":"isActive","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"who","type":"address"},{"internalType":"bytes4","name":"what","type":"bytes4"}],"name":"isAuthorized","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"namespace","type":"bytes32"},{"internalType":"address","name":"implementation","type":"address"},{"internalType":"bool","name":"stateless","type":"bool"}],"name":"register","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"who","type":"address"},{"internalType":"bytes4","name":"what","type":"bytes4"}],"name":"unauthorize","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"authorize(address,bytes4)":"933f0f3c","deprecate(address)":"0753c30c","implementationData(address)":"9235dcf8","isActive(bytes32,address)":"ca0f8f3b","isAuthorized(address,bytes4)":"d9972b96","register(bytes32,address,bool)":"678449d4","unauthorize(address,bytes4)":"6646a436"}},"metadata":"{\"compiler\":{\"version\":\"0.8.3+commit.8d00100c\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"who\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes4\",\"name\":\"what\",\"type\":\"bytes4\"}],\"name\":\"Authorized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"namespace\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"Deprecated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"namespace\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"stateless\",\"type\":\"bool\"}],\"name\":\"Registered\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"who\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes4\",\"name\":\"what\",\"type\":\"bytes4\"}],\"name\":\"Unauthorized\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"who\",\"type\":\"address\"},{\"internalType\":\"bytes4\",\"name\":\"what\",\"type\":\"bytes4\"}],\"name\":\"authorize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"deprecate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"implementationData\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"stateless\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"deprecated\",\"type\":\"bool\"},{\"internalType\":\"bytes32\",\"name\":\"namespace\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"namespace\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"isActive\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"who\",\"type\":\"address\"},{\"internalType\":\"bytes4\",\"name\":\"what\",\"type\":\"bytes4\"}],\"name\":\"isAuthorized\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"namespace\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"stateless\",\"type\":\"bool\"}],\"name\":\"register\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"who\",\"type\":\"address\"},{\"internalType\":\"bytes4\",\"name\":\"what\",\"type\":\"bytes4\"}],\"name\":\"unauthorize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Registry interface, it must follow the IAuthorizer interface.\",\"events\":{\"Deprecated(bytes32,address)\":{\"details\":\"Emitted every time an implementation is deprecated\"},\"Registered(bytes32,address,bool)\":{\"details\":\"Emitted every time a new implementation is registered\"}},\"kind\":\"dev\",\"methods\":{\"authorize(address,bytes4)\":{\"details\":\"Authorizes someone to call a function. Sender must be authorize to do so.\",\"params\":{\"what\":\"Function selector to be granted\",\"who\":\"Address to be authorized\"}},\"deprecate(address)\":{\"details\":\"Deprecates a registered implementation\",\"params\":{\"implementation\":\"Address of the implementation to be deprecated\"}},\"implementationData(address)\":{\"details\":\"Tells the data of an implementation:\",\"params\":{\"implementation\":\"Address of the implementation to request it's data\"}},\"isActive(bytes32,address)\":{\"details\":\"Tells if a specific implementation is registered under a certain namespace and it's not deprecated\",\"params\":{\"implementation\":\"Address of the implementation to be checked\",\"namespace\":\"Namespace asking for\"}},\"isAuthorized(address,bytes4)\":{\"details\":\"Tells whether someone is allowed to call a function or not. It returns true if it's allowed to anyone.\",\"params\":{\"what\":\"Function selector asking permission for\",\"who\":\"Address asking permission for\"}},\"register(bytes32,address,bool)\":{\"details\":\"Registers a new implementation for a given namespace\",\"params\":{\"implementation\":\"Address of the implementation to be registered\",\"namespace\":\"Namespace to be used for the implementation\",\"stateless\":\"Whether the implementation is stateless or not\"}},\"unauthorize(address,bytes4)\":{\"details\":\"Unauthorizes someone to call a function. Sender must be authorize to do so.\",\"params\":{\"what\":\"Function selector to be revoked\",\"who\":\"Address to be unauthorized\"}}},\"title\":\"IRegistry\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@mimic-fi/v2-registry/contracts/registry/IRegistry.sol\":\"IRegistry\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":10000},\"remappings\":[]},\"sources\":{\"@mimic-fi/v2-helpers/contracts/auth/IAuthorizer.sol\":{\"keccak256\":\"0x7e5d1c440a02d16c3d62d8ca982749b4cf044ba14e0a40c4f2fe23257a5304d2\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://bdad507d0bdc80eb1ca9fc01d4ef4ff5e0258b631305033b5945aad85fa5068a\",\"dweb:/ipfs/QmaRdsSorrzkxYpeTNMrZvH5RbbM9JYPQ9HyNAcQGmXNAe\"]},\"@mimic-fi/v2-registry/contracts/registry/IRegistry.sol\":{\"keccak256\":\"0xeb2662066535134308d0ba955c88e7de4a17d1681b148371dd6dd4b581b2f381\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://7d8f6509d822fea1cea9b6b81a9745fdcdfad4199e69cd3562ffeb234d0e3eac\",\"dweb:/ipfs/QmS74Fkt8nyoGUyNhrqmqrCXQcmboBciFY7zLSwpjytFtU\"]}},\"version\":1}"}},"@openzeppelin/contracts/proxy/utils/Initializable.sol":{"Initializable":{"abi":[{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint8","name":"version","type":"uint8"}],"name":"Initialized","type":"event"}],"evm":{"bytecode":{"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.3+commit.8d00100c\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"}],\"devdoc\":{\"custom:oz-upgrades-unsafe-allow\":\"constructor constructor() {     _disableInitializers(); } ``` ====\",\"details\":\"This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer function so it can only be called once. The {initializer} modifier provided by this contract will have this effect. The initialization functions use a version number. Once a version number is used, it is consumed and cannot be reused. This mechanism prevents re-execution of each \\\"step\\\" but allows the creation of new initialization steps in case an upgrade adds a module that needs to be initialized. For example: [.hljs-theme-light.nopadding] ``` contract MyToken is ERC20Upgradeable {     function initialize() initializer public {         __ERC20_init(\\\"MyToken\\\", \\\"MTK\\\");     } } contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {     function initializeV2() reinitializer(2) public {         __ERC20Permit_init(\\\"MyToken\\\");     } } ``` TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}. CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure that all initializers are idempotent. This is not verified automatically as constructors are by Solidity. [CAUTION] ==== Avoid leaving a contract uninitialized. An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke the {_disableInitializers} function in the constructor to automatically lock it when it is deployed: [.hljs-theme-light.nopadding] ```\",\"events\":{\"Initialized(uint8)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{},\"stateVariables\":{\"_initialized\":{\"custom:oz-retyped-from\":\"bool\",\"details\":\"Indicates that the contract has been initialized.\"},\"_initializing\":{\"details\":\"Indicates that the contract is in the process of being initialized.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/proxy/utils/Initializable.sol\":\"Initializable\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":10000},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x2a21b14ff90012878752f230d3ffd5c3405e5938d06c97a7d89c0a64561d0d66\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3313a8f9bb1f9476857c9050067b31982bf2140b83d84f3bc0cec1f62bbe947f\",\"dweb:/ipfs/Qma17Pk8NRe7aB4UD3jjVxk7nSFaov3eQyv86hcyqkwJRV\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xd6153ce99bcdcce22b124f755e72553295be6abcd63804cfdffceb188b8bef10\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://35c47bece3c03caaa07fab37dd2bb3413bfbca20db7bd9895024390e0a469487\",\"dweb:/ipfs/QmPGWT2x3QHcKxqe6gRmAkdakhbaRgx3DLzcakHz5M4eXG\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"IERC20":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.3+commit.8d00100c\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":10000},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol":{"IERC20Metadata":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","decimals()":"313ce567","name()":"06fdde03","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.3+commit.8d00100c\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC20 standard. _Available since v4.1._\",\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":\"IERC20Metadata\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":10000},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd\",\"dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol":{"IERC20Permit":{"abi":[{"inputs":[],"name":"DOMAIN_SEPARATOR","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"nonces","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"uint256","name":"deadline","type":"uint256"},{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"permit","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"DOMAIN_SEPARATOR()":"3644e515","nonces(address)":"7ecebe00","permit(address,address,uint256,uint256,uint8,bytes32,bytes32)":"d505accf"}},"metadata":"{\"compiler\":{\"version\":\"0.8.3+commit.8d00100c\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in https://eips.ethereum.org/EIPS/eip-2612[EIP-2612]. Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't need to send a transaction, and thus is not required to hold Ether at all.\",\"kind\":\"dev\",\"methods\":{\"DOMAIN_SEPARATOR()\":{\"details\":\"Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\"},\"nonces(address)\":{\"details\":\"Returns the current nonce for `owner`. This value must be included whenever a signature is generated for {permit}. Every successful call to {permit} increases ``owner``'s nonce by one. This prevents a signature from being used multiple times.\"},\"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"Sets `value` as the allowance of `spender` over ``owner``'s tokens, given ``owner``'s signed approval. IMPORTANT: The same issues {IERC20-approve} has related to transaction ordering also apply here. Emits an {Approval} event. Requirements: - `spender` cannot be the zero address. - `deadline` must be a timestamp in the future. - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner` over the EIP712-formatted function arguments. - the signature must use ``owner``'s current nonce (see {nonces}). For more information on the signature format, see the https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP section].\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol\":\"IERC20Permit\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":10000},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol\":{\"keccak256\":\"0xf41ca991f30855bf80ffd11e9347856a517b977f0a6c2d52e6421a99b7840329\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b2717fd2bdac99daa960a6de500754ea1b932093c946388c381da48658234b95\",\"dweb:/ipfs/QmP6QVMn6UeA3ByahyJbYQr5M6coHKBKsf3ySZSfbyA8R7\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol":{"SafeERC20":{"abi":[],"evm":{"bytecode":{"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220fc43b2d087323838c981001d1613bbb0d71e800bb581a4de5bebeb2592fb741864736f6c63430008030033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xFC NUMBER 0xB2 0xD0 DUP8 ORIGIN CODESIZE CODESIZE 0xC9 DUP2 STOP SAR AND SGT 0xBB 0xB0 0xD7 0x1E DUP1 SIGNEXTEND 0xB5 DUP2 LOG4 0xDE JUMPDEST 0xEB 0xEB 0x25 SWAP3 0xFB PUSH21 0x1864736F6C63430008030033000000000000000000 ","sourceMap":"707:3748:11:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;707:3748:11;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220fc43b2d087323838c981001d1613bbb0d71e800bb581a4de5bebeb2592fb741864736f6c63430008030033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xFC NUMBER 0xB2 0xD0 DUP8 ORIGIN CODESIZE CODESIZE 0xC9 DUP2 STOP SAR AND SGT 0xBB 0xB0 0xD7 0x1E DUP1 SIGNEXTEND 0xB5 DUP2 LOG4 0xDE JUMPDEST 0xEB 0xEB 0x25 SWAP3 0xFB PUSH21 0x1864736F6C63430008030033000000000000000000 ","sourceMap":"707:3748:11:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.3+commit.8d00100c\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers around ERC20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\",\"kind\":\"dev\",\"methods\":{},\"title\":\"SafeERC20\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":\"SafeERC20\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":10000},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol\":{\"keccak256\":\"0xf41ca991f30855bf80ffd11e9347856a517b977f0a6c2d52e6421a99b7840329\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b2717fd2bdac99daa960a6de500754ea1b932093c946388c381da48658234b95\",\"dweb:/ipfs/QmP6QVMn6UeA3ByahyJbYQr5M6coHKBKsf3ySZSfbyA8R7\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x032807210d1d7d218963d7355d62e021a84bf1b3339f4f50be2f63b53cccaf29\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://11756f42121f6541a35a8339ea899ee7514cfaa2e6d740625fcc844419296aa6\",\"dweb:/ipfs/QmekMuk6BY4DAjzeXr4MSbKdgoqqsZnA8JPtuyWc6CwXHf\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xd6153ce99bcdcce22b124f755e72553295be6abcd63804cfdffceb188b8bef10\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://35c47bece3c03caaa07fab37dd2bb3413bfbca20db7bd9895024390e0a469487\",\"dweb:/ipfs/QmPGWT2x3QHcKxqe6gRmAkdakhbaRgx3DLzcakHz5M4eXG\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/Address.sol":{"Address":{"abi":[],"evm":{"bytecode":{"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122041497d3a81e969a4d7c01e9faf5c2945dd14f91546df0e6ec6e832fea756aa9364736f6c63430008030033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 COINBASE 0x49 PUSH30 0x3A81E969A4D7C01E9FAF5C2945DD14F91546DF0E6EC6E832FEA756AA9364 PUSH20 0x6F6C634300080300330000000000000000000000 ","sourceMap":"194:8111:12:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;194:8111:12;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122041497d3a81e969a4d7c01e9faf5c2945dd14f91546df0e6ec6e832fea756aa9364736f6c63430008030033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 COINBASE 0x49 PUSH30 0x3A81E969A4D7C01E9FAF5C2945DD14F91546DF0E6EC6E832FEA756AA9364 PUSH20 0x6F6C634300080300330000000000000000000000 ","sourceMap":"194:8111:12:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.3+commit.8d00100c\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Address.sol\":\"Address\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":10000},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xd6153ce99bcdcce22b124f755e72553295be6abcd63804cfdffceb188b8bef10\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://35c47bece3c03caaa07fab37dd2bb3413bfbca20db7bd9895024390e0a469487\",\"dweb:/ipfs/QmPGWT2x3QHcKxqe6gRmAkdakhbaRgx3DLzcakHz5M4eXG\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/math/SafeCast.sol":{"SafeCast":{"abi":[],"evm":{"bytecode":{"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220414af25303008aa496b5022c4d18b1733427cecf5767ac8225767ccebf771a6364736f6c63430008030033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 COINBASE 0x4A CALLCODE MSTORE8 SUB STOP DUP11 LOG4 SWAP7 0xB5 MUL 0x2C 0x4D XOR 0xB1 PUSH20 0x3427CECF5767AC8225767CCEBF771A6364736F6C PUSH4 0x43000803 STOP CALLER ","sourceMap":"842:34685:13:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;842:34685:13;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220414af25303008aa496b5022c4d18b1733427cecf5767ac8225767ccebf771a6364736f6c63430008030033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 COINBASE 0x4A CALLCODE MSTORE8 SUB STOP DUP11 LOG4 SWAP7 0xB5 MUL 0x2C 0x4D XOR 0xB1 PUSH20 0x3427CECF5767AC8225767CCEBF771A6364736F6C PUSH4 0x43000803 STOP CALLER ","sourceMap":"842:34685:13:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.3+commit.8d00100c\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers over Solidity's uintXX/intXX casting operators with added overflow checks. Downcasting from uint256/int256 in Solidity does not revert on overflow. This can easily result in undesired exploitation or bugs, since developers usually assume that overflows raise errors. `SafeCast` restores this intuition by reverting the transaction when such an operation overflows. Using this library instead of the unchecked operations eliminates an entire class of bugs, so it's recommended to use it always. Can be combined with {SafeMath} and {SignedSafeMath} to extend it to smaller types, by performing all math on `uint256` and `int256` and then downcasting.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/SafeCast.sol\":\"SafeCast\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":10000},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x02686c31ccb9ee77a299fa5f47327af5271f251a707a0e24f321957166ff0434\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cb562d8ae1da31249ca0d8553df9f89ef4c3c110a018c4449dde68ae30e51ec1\",\"dweb:/ipfs/QmUwxjtTUYB89ymeV46TZPmTsGnYrKNcgTHk7MQA1MG3hj\"]}},\"version\":1}"}},"@uniswap/v2-core/contracts/interfaces/IUniswapV2Factory.sol":{"IUniswapV2Factory":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"token0","type":"address"},{"indexed":true,"internalType":"address","name":"token1","type":"address"},{"indexed":false,"internalType":"address","name":"pair","type":"address"},{"indexed":false,"internalType":"uint256","name":"","type":"uint256"}],"name":"PairCreated","type":"event"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"allPairs","outputs":[{"internalType":"address","name":"pair","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"allPairsLength","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"tokenA","type":"address"},{"internalType":"address","name":"tokenB","type":"address"}],"name":"createPair","outputs":[{"internalType":"address","name":"pair","type":"address"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"feeTo","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"feeToSetter","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"tokenA","type":"address"},{"internalType":"address","name":"tokenB","type":"address"}],"name":"getPair","outputs":[{"internalType":"address","name":"pair","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"setFeeTo","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"setFeeToSetter","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"allPairs(uint256)":"1e3dd18b","allPairsLength()":"574f2ba3","createPair(address,address)":"c9c65396","feeTo()":"017e7e58","feeToSetter()":"094b7415","getPair(address,address)":"e6a43905","setFeeTo(address)":"f46901ed","setFeeToSetter(address)":"a2e74af6"}},"metadata":"{\"compiler\":{\"version\":\"0.8.3+commit.8d00100c\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token0\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token1\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"pair\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"PairCreated\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"allPairs\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"pair\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"allPairsLength\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenA\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenB\",\"type\":\"address\"}],\"name\":\"createPair\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"pair\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"feeTo\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"feeToSetter\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenA\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenB\",\"type\":\"address\"}],\"name\":\"getPair\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"pair\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"setFeeTo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"setFeeToSetter\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@uniswap/v2-core/contracts/interfaces/IUniswapV2Factory.sol\":\"IUniswapV2Factory\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":10000},\"remappings\":[]},\"sources\":{\"@uniswap/v2-core/contracts/interfaces/IUniswapV2Factory.sol\":{\"keccak256\":\"0xe5905c0989cf5a865ed9bb7b9252536ca011c5b744017a82a7d4443b9c00a891\",\"urls\":[\"bzz-raw://5d2a90a0a796491507462a3da18c3f8819721d571572d765a2207c35bf0a0389\",\"dweb:/ipfs/Qmf9ACYiT3qzjgsYuhm866FBdiBpRMXAPpQhSFbgqcyhHt\"]}},\"version\":1}"}},"@uniswap/v2-periphery/contracts/interfaces/IUniswapV2Router01.sol":{"IUniswapV2Router01":{"abi":[{"inputs":[],"name":"WETH","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"pure","type":"function"},{"inputs":[{"internalType":"address","name":"tokenA","type":"address"},{"internalType":"address","name":"tokenB","type":"address"},{"internalType":"uint256","name":"amountADesired","type":"uint256"},{"internalType":"uint256","name":"amountBDesired","type":"uint256"},{"internalType":"uint256","name":"amountAMin","type":"uint256"},{"internalType":"uint256","name":"amountBMin","type":"uint256"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"deadline","type":"uint256"}],"name":"addLiquidity","outputs":[{"internalType":"uint256","name":"amountA","type":"uint256"},{"internalType":"uint256","name":"amountB","type":"uint256"},{"internalType":"uint256","name":"liquidity","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"token","type":"address"},{"internalType":"uint256","name":"amountTokenDesired","type":"uint256"},{"internalType":"uint256","name":"amountTokenMin","type":"uint256"},{"internalType":"uint256","name":"amountETHMin","type":"uint256"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"deadline","type":"uint256"}],"name":"addLiquidityETH","outputs":[{"internalType":"uint256","name":"amountToken","type":"uint256"},{"internalType":"uint256","name":"amountETH","type":"uint256"},{"internalType":"uint256","name":"liquidity","type":"uint256"}],"stateMutability":"payable","type":"function"},{"inputs":[],"name":"factory","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"pure","type":"function"},{"inputs":[{"internalType":"uint256","name":"amountOut","type":"uint256"},{"internalType":"uint256","name":"reserveIn","type":"uint256"},{"internalType":"uint256","name":"reserveOut","type":"uint256"}],"name":"getAmountIn","outputs":[{"internalType":"uint256","name":"amountIn","type":"uint256"}],"stateMutability":"pure","type":"function"},{"inputs":[{"internalType":"uint256","name":"amountIn","type":"uint256"},{"internalType":"uint256","name":"reserveIn","type":"uint256"},{"internalType":"uint256","name":"reserveOut","type":"uint256"}],"name":"getAmountOut","outputs":[{"internalType":"uint256","name":"amountOut","type":"uint256"}],"stateMutability":"pure","type":"function"},{"inputs":[{"internalType":"uint256","name":"amountOut","type":"uint256"},{"internalType":"address[]","name":"path","type":"address[]"}],"name":"getAmountsIn","outputs":[{"internalType":"uint256[]","name":"amounts","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"amountIn","type":"uint256"},{"internalType":"address[]","name":"path","type":"address[]"}],"name":"getAmountsOut","outputs":[{"internalType":"uint256[]","name":"amounts","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"amountA","type":"uint256"},{"internalType":"uint256","name":"reserveA","type":"uint256"},{"internalType":"uint256","name":"reserveB","type":"uint256"}],"name":"quote","outputs":[{"internalType":"uint256","name":"amountB","type":"uint256"}],"stateMutability":"pure","type":"function"},{"inputs":[{"internalType":"address","name":"tokenA","type":"address"},{"internalType":"address","name":"tokenB","type":"address"},{"internalType":"uint256","name":"liquidity","type":"uint256"},{"internalType":"uint256","name":"amountAMin","type":"uint256"},{"internalType":"uint256","name":"amountBMin","type":"uint256"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"deadline","type":"uint256"}],"name":"removeLiquidity","outputs":[{"internalType":"uint256","name":"amountA","type":"uint256"},{"internalType":"uint256","name":"amountB","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"token","type":"address"},{"internalType":"uint256","name":"liquidity","type":"uint256"},{"internalType":"uint256","name":"amountTokenMin","type":"uint256"},{"internalType":"uint256","name":"amountETHMin","type":"uint256"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"deadline","type":"uint256"}],"name":"removeLiquidityETH","outputs":[{"internalType":"uint256","name":"amountToken","type":"uint256"},{"internalType":"uint256","name":"amountETH","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"token","type":"address"},{"internalType":"uint256","name":"liquidity","type":"uint256"},{"internalType":"uint256","name":"amountTokenMin","type":"uint256"},{"internalType":"uint256","name":"amountETHMin","type":"uint256"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"deadline","type":"uint256"},{"internalType":"bool","name":"approveMax","type":"bool"},{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"removeLiquidityETHWithPermit","outputs":[{"internalType":"uint256","name":"amountToken","type":"uint256"},{"internalType":"uint256","name":"amountETH","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"tokenA","type":"address"},{"internalType":"address","name":"tokenB","type":"address"},{"internalType":"uint256","name":"liquidity","type":"uint256"},{"internalType":"uint256","name":"amountAMin","type":"uint256"},{"internalType":"uint256","name":"amountBMin","type":"uint256"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"deadline","type":"uint256"},{"internalType":"bool","name":"approveMax","type":"bool"},{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"removeLiquidityWithPermit","outputs":[{"internalType":"uint256","name":"amountA","type":"uint256"},{"internalType":"uint256","name":"amountB","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"amountOut","type":"uint256"},{"internalType":"address[]","name":"path","type":"address[]"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"deadline","type":"uint256"}],"name":"swapETHForExactTokens","outputs":[{"internalType":"uint256[]","name":"amounts","type":"uint256[]"}],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"uint256","name":"amountOutMin","type":"uint256"},{"internalType":"address[]","name":"path","type":"address[]"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"deadline","type":"uint256"}],"name":"swapExactETHForTokens","outputs":[{"internalType":"uint256[]","name":"amounts","type":"uint256[]"}],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"uint256","name":"amountIn","type":"uint256"},{"internalType":"uint256","name":"amountOutMin","type":"uint256"},{"internalType":"address[]","name":"path","type":"address[]"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"deadline","type":"uint256"}],"name":"swapExactTokensForETH","outputs":[{"internalType":"uint256[]","name":"amounts","type":"uint256[]"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"amountIn","type":"uint256"},{"internalType":"uint256","name":"amountOutMin","type":"uint256"},{"internalType":"address[]","name":"path","type":"address[]"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"deadline","type":"uint256"}],"name":"swapExactTokensForTokens","outputs":[{"internalType":"uint256[]","name":"amounts","type":"uint256[]"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"amountOut","type":"uint256"},{"internalType":"uint256","name":"amountInMax","type":"uint256"},{"internalType":"address[]","name":"path","type":"address[]"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"deadline","type":"uint256"}],"name":"swapTokensForExactETH","outputs":[{"internalType":"uint256[]","name":"amounts","type":"uint256[]"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"amountOut","type":"uint256"},{"internalType":"uint256","name":"amountInMax","type":"uint256"},{"internalType":"address[]","name":"path","type":"address[]"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"deadline","type":"uint256"}],"name":"swapTokensForExactTokens","outputs":[{"internalType":"uint256[]","name":"amounts","type":"uint256[]"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"WETH()":"ad5c4648","addLiquidity(address,address,uint256,uint256,uint256,uint256,address,uint256)":"e8e33700","addLiquidityETH(address,uint256,uint256,uint256,address,uint256)":"f305d719","factory()":"c45a0155","getAmountIn(uint256,uint256,uint256)":"85f8c259","getAmountOut(uint256,uint256,uint256)":"054d50d4","getAmountsIn(uint256,address[])":"1f00ca74","getAmountsOut(uint256,address[])":"d06ca61f","quote(uint256,uint256,uint256)":"ad615dec","removeLiquidity(address,address,uint256,uint256,uint256,address,uint256)":"baa2abde","removeLiquidityETH(address,uint256,uint256,uint256,address,uint256)":"02751cec","removeLiquidityETHWithPermit(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)":"ded9382a","removeLiquidityWithPermit(address,address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)":"2195995c","swapETHForExactTokens(uint256,address[],address,uint256)":"fb3bdb41","swapExactETHForTokens(uint256,address[],address,uint256)":"7ff36ab5","swapExactTokensForETH(uint256,uint256,address[],address,uint256)":"18cbafe5","swapExactTokensForTokens(uint256,uint256,address[],address,uint256)":"38ed1739","swapTokensForExactETH(uint256,uint256,address[],address,uint256)":"4a25d94a","swapTokensForExactTokens(uint256,uint256,address[],address,uint256)":"8803dbee"}},"metadata":"{\"compiler\":{\"version\":\"0.8.3+commit.8d00100c\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"WETH\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenA\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenB\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountADesired\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountBDesired\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountAMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountBMin\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"addLiquidity\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountA\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountB\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountTokenDesired\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountTokenMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountETHMin\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"addLiquidityETH\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountToken\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountETH\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"factory\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reserveIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reserveOut\",\"type\":\"uint256\"}],\"name\":\"getAmountIn\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reserveIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reserveOut\",\"type\":\"uint256\"}],\"name\":\"getAmountOut\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"}],\"name\":\"getAmountsIn\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"}],\"name\":\"getAmountsOut\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountA\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reserveA\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reserveB\",\"type\":\"uint256\"}],\"name\":\"quote\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountB\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenA\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenB\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountAMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountBMin\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"removeLiquidity\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountA\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountB\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountTokenMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountETHMin\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"removeLiquidityETH\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountToken\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountETH\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountTokenMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountETHMin\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"approveMax\",\"type\":\"bool\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"removeLiquidityETHWithPermit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountToken\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountETH\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenA\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenB\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountAMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountBMin\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"approveMax\",\"type\":\"bool\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"removeLiquidityWithPermit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountA\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountB\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapETHForExactTokens\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOutMin\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapExactETHForTokens\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOutMin\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapExactTokensForETH\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOutMin\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapExactTokensForTokens\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountInMax\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapTokensForExactETH\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountInMax\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapTokensForExactTokens\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@uniswap/v2-periphery/contracts/interfaces/IUniswapV2Router01.sol\":\"IUniswapV2Router01\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":10000},\"remappings\":[]},\"sources\":{\"@uniswap/v2-periphery/contracts/interfaces/IUniswapV2Router01.sol\":{\"keccak256\":\"0x8a3c5c449d4b7cd76513ed6995f4b86e4a86f222c770f8442f5fc128ce29b4d2\",\"urls\":[\"bzz-raw://1df63ca373dafae3bd0ee7fe70f890a1dc7c45ed869c01de68413e0e97ff9deb\",\"dweb:/ipfs/QmefJgEYGUL8KX7kQKYTrDweF8GB7yjy3nw5Bmqzryg7PG\"]}},\"version\":1}"}},"@uniswap/v2-periphery/contracts/interfaces/IUniswapV2Router02.sol":{"IUniswapV2Router02":{"abi":[{"inputs":[],"name":"WETH","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"pure","type":"function"},{"inputs":[{"internalType":"address","name":"tokenA","type":"address"},{"internalType":"address","name":"tokenB","type":"address"},{"internalType":"uint256","name":"amountADesired","type":"uint256"},{"internalType":"uint256","name":"amountBDesired","type":"uint256"},{"internalType":"uint256","name":"amountAMin","type":"uint256"},{"internalType":"uint256","name":"amountBMin","type":"uint256"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"deadline","type":"uint256"}],"name":"addLiquidity","outputs":[{"internalType":"uint256","name":"amountA","type":"uint256"},{"internalType":"uint256","name":"amountB","type":"uint256"},{"internalType":"uint256","name":"liquidity","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"token","type":"address"},{"internalType":"uint256","name":"amountTokenDesired","type":"uint256"},{"internalType":"uint256","name":"amountTokenMin","type":"uint256"},{"internalType":"uint256","name":"amountETHMin","type":"uint256"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"deadline","type":"uint256"}],"name":"addLiquidityETH","outputs":[{"internalType":"uint256","name":"amountToken","type":"uint256"},{"internalType":"uint256","name":"amountETH","type":"uint256"},{"internalType":"uint256","name":"liquidity","type":"uint256"}],"stateMutability":"payable","type":"function"},{"inputs":[],"name":"factory","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"pure","type":"function"},{"inputs":[{"internalType":"uint256","name":"amountOut","type":"uint256"},{"internalType":"uint256","name":"reserveIn","type":"uint256"},{"internalType":"uint256","name":"reserveOut","type":"uint256"}],"name":"getAmountIn","outputs":[{"internalType":"uint256","name":"amountIn","type":"uint256"}],"stateMutability":"pure","type":"function"},{"inputs":[{"internalType":"uint256","name":"amountIn","type":"uint256"},{"internalType":"uint256","name":"reserveIn","type":"uint256"},{"internalType":"uint256","name":"reserveOut","type":"uint256"}],"name":"getAmountOut","outputs":[{"internalType":"uint256","name":"amountOut","type":"uint256"}],"stateMutability":"pure","type":"function"},{"inputs":[{"internalType":"uint256","name":"amountOut","type":"uint256"},{"internalType":"address[]","name":"path","type":"address[]"}],"name":"getAmountsIn","outputs":[{"internalType":"uint256[]","name":"amounts","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"amountIn","type":"uint256"},{"internalType":"address[]","name":"path","type":"address[]"}],"name":"getAmountsOut","outputs":[{"internalType":"uint256[]","name":"amounts","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"amountA","type":"uint256"},{"internalType":"uint256","name":"reserveA","type":"uint256"},{"internalType":"uint256","name":"reserveB","type":"uint256"}],"name":"quote","outputs":[{"internalType":"uint256","name":"amountB","type":"uint256"}],"stateMutability":"pure","type":"function"},{"inputs":[{"internalType":"address","name":"tokenA","type":"address"},{"internalType":"address","name":"tokenB","type":"address"},{"internalType":"uint256","name":"liquidity","type":"uint256"},{"internalType":"uint256","name":"amountAMin","type":"uint256"},{"internalType":"uint256","name":"amountBMin","type":"uint256"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"deadline","type":"uint256"}],"name":"removeLiquidity","outputs":[{"internalType":"uint256","name":"amountA","type":"uint256"},{"internalType":"uint256","name":"amountB","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"token","type":"address"},{"internalType":"uint256","name":"liquidity","type":"uint256"},{"internalType":"uint256","name":"amountTokenMin","type":"uint256"},{"internalType":"uint256","name":"amountETHMin","type":"uint256"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"deadline","type":"uint256"}],"name":"removeLiquidityETH","outputs":[{"internalType":"uint256","name":"amountToken","type":"uint256"},{"internalType":"uint256","name":"amountETH","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"token","type":"address"},{"internalType":"uint256","name":"liquidity","type":"uint256"},{"internalType":"uint256","name":"amountTokenMin","type":"uint256"},{"internalType":"uint256","name":"amountETHMin","type":"uint256"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"deadline","type":"uint256"}],"name":"removeLiquidityETHSupportingFeeOnTransferTokens","outputs":[{"internalType":"uint256","name":"amountETH","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"token","type":"address"},{"internalType":"uint256","name":"liquidity","type":"uint256"},{"internalType":"uint256","name":"amountTokenMin","type":"uint256"},{"internalType":"uint256","name":"amountETHMin","type":"uint256"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"deadline","type":"uint256"},{"internalType":"bool","name":"approveMax","type":"bool"},{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"removeLiquidityETHWithPermit","outputs":[{"internalType":"uint256","name":"amountToken","type":"uint256"},{"internalType":"uint256","name":"amountETH","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"token","type":"address"},{"internalType":"uint256","name":"liquidity","type":"uint256"},{"internalType":"uint256","name":"amountTokenMin","type":"uint256"},{"internalType":"uint256","name":"amountETHMin","type":"uint256"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"deadline","type":"uint256"},{"internalType":"bool","name":"approveMax","type":"bool"},{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"removeLiquidityETHWithPermitSupportingFeeOnTransferTokens","outputs":[{"internalType":"uint256","name":"amountETH","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"tokenA","type":"address"},{"internalType":"address","name":"tokenB","type":"address"},{"internalType":"uint256","name":"liquidity","type":"uint256"},{"internalType":"uint256","name":"amountAMin","type":"uint256"},{"internalType":"uint256","name":"amountBMin","type":"uint256"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"deadline","type":"uint256"},{"internalType":"bool","name":"approveMax","type":"bool"},{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"removeLiquidityWithPermit","outputs":[{"internalType":"uint256","name":"amountA","type":"uint256"},{"internalType":"uint256","name":"amountB","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"amountOut","type":"uint256"},{"internalType":"address[]","name":"path","type":"address[]"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"deadline","type":"uint256"}],"name":"swapETHForExactTokens","outputs":[{"internalType":"uint256[]","name":"amounts","type":"uint256[]"}],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"uint256","name":"amountOutMin","type":"uint256"},{"internalType":"address[]","name":"path","type":"address[]"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"deadline","type":"uint256"}],"name":"swapExactETHForTokens","outputs":[{"internalType":"uint256[]","name":"amounts","type":"uint256[]"}],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"uint256","name":"amountOutMin","type":"uint256"},{"internalType":"address[]","name":"path","type":"address[]"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"deadline","type":"uint256"}],"name":"swapExactETHForTokensSupportingFeeOnTransferTokens","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"uint256","name":"amountIn","type":"uint256"},{"internalType":"uint256","name":"amountOutMin","type":"uint256"},{"internalType":"address[]","name":"path","type":"address[]"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"deadline","type":"uint256"}],"name":"swapExactTokensForETH","outputs":[{"internalType":"uint256[]","name":"amounts","type":"uint256[]"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"amountIn","type":"uint256"},{"internalType":"uint256","name":"amountOutMin","type":"uint256"},{"internalType":"address[]","name":"path","type":"address[]"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"deadline","type":"uint256"}],"name":"swapExactTokensForETHSupportingFeeOnTransferTokens","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"amountIn","type":"uint256"},{"internalType":"uint256","name":"amountOutMin","type":"uint256"},{"internalType":"address[]","name":"path","type":"address[]"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"deadline","type":"uint256"}],"name":"swapExactTokensForTokens","outputs":[{"internalType":"uint256[]","name":"amounts","type":"uint256[]"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"amountIn","type":"uint256"},{"internalType":"uint256","name":"amountOutMin","type":"uint256"},{"internalType":"address[]","name":"path","type":"address[]"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"deadline","type":"uint256"}],"name":"swapExactTokensForTokensSupportingFeeOnTransferTokens","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"amountOut","type":"uint256"},{"internalType":"uint256","name":"amountInMax","type":"uint256"},{"internalType":"address[]","name":"path","type":"address[]"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"deadline","type":"uint256"}],"name":"swapTokensForExactETH","outputs":[{"internalType":"uint256[]","name":"amounts","type":"uint256[]"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"amountOut","type":"uint256"},{"internalType":"uint256","name":"amountInMax","type":"uint256"},{"internalType":"address[]","name":"path","type":"address[]"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"deadline","type":"uint256"}],"name":"swapTokensForExactTokens","outputs":[{"internalType":"uint256[]","name":"amounts","type":"uint256[]"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"WETH()":"ad5c4648","addLiquidity(address,address,uint256,uint256,uint256,uint256,address,uint256)":"e8e33700","addLiquidityETH(address,uint256,uint256,uint256,address,uint256)":"f305d719","factory()":"c45a0155","getAmountIn(uint256,uint256,uint256)":"85f8c259","getAmountOut(uint256,uint256,uint256)":"054d50d4","getAmountsIn(uint256,address[])":"1f00ca74","getAmountsOut(uint256,address[])":"d06ca61f","quote(uint256,uint256,uint256)":"ad615dec","removeLiquidity(address,address,uint256,uint256,uint256,address,uint256)":"baa2abde","removeLiquidityETH(address,uint256,uint256,uint256,address,uint256)":"02751cec","removeLiquidityETHSupportingFeeOnTransferTokens(address,uint256,uint256,uint256,address,uint256)":"af2979eb","removeLiquidityETHWithPermit(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)":"ded9382a","removeLiquidityETHWithPermitSupportingFeeOnTransferTokens(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)":"5b0d5984","removeLiquidityWithPermit(address,address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)":"2195995c","swapETHForExactTokens(uint256,address[],address,uint256)":"fb3bdb41","swapExactETHForTokens(uint256,address[],address,uint256)":"7ff36ab5","swapExactETHForTokensSupportingFeeOnTransferTokens(uint256,address[],address,uint256)":"b6f9de95","swapExactTokensForETH(uint256,uint256,address[],address,uint256)":"18cbafe5","swapExactTokensForETHSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)":"791ac947","swapExactTokensForTokens(uint256,uint256,address[],address,uint256)":"38ed1739","swapExactTokensForTokensSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)":"5c11d795","swapTokensForExactETH(uint256,uint256,address[],address,uint256)":"4a25d94a","swapTokensForExactTokens(uint256,uint256,address[],address,uint256)":"8803dbee"}},"metadata":"{\"compiler\":{\"version\":\"0.8.3+commit.8d00100c\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"WETH\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenA\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenB\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountADesired\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountBDesired\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountAMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountBMin\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"addLiquidity\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountA\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountB\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountTokenDesired\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountTokenMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountETHMin\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"addLiquidityETH\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountToken\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountETH\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"factory\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reserveIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reserveOut\",\"type\":\"uint256\"}],\"name\":\"getAmountIn\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reserveIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reserveOut\",\"type\":\"uint256\"}],\"name\":\"getAmountOut\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"}],\"name\":\"getAmountsIn\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"}],\"name\":\"getAmountsOut\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountA\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reserveA\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reserveB\",\"type\":\"uint256\"}],\"name\":\"quote\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountB\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenA\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenB\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountAMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountBMin\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"removeLiquidity\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountA\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountB\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountTokenMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountETHMin\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"removeLiquidityETH\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountToken\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountETH\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountTokenMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountETHMin\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"removeLiquidityETHSupportingFeeOnTransferTokens\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountETH\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountTokenMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountETHMin\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"approveMax\",\"type\":\"bool\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"removeLiquidityETHWithPermit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountToken\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountETH\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountTokenMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountETHMin\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"approveMax\",\"type\":\"bool\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"removeLiquidityETHWithPermitSupportingFeeOnTransferTokens\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountETH\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenA\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenB\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountAMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountBMin\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"approveMax\",\"type\":\"bool\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"removeLiquidityWithPermit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountA\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountB\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapETHForExactTokens\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOutMin\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapExactETHForTokens\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOutMin\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapExactETHForTokensSupportingFeeOnTransferTokens\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOutMin\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapExactTokensForETH\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOutMin\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapExactTokensForETHSupportingFeeOnTransferTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOutMin\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapExactTokensForTokens\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOutMin\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapExactTokensForTokensSupportingFeeOnTransferTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountInMax\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapTokensForExactETH\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountInMax\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapTokensForExactTokens\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@uniswap/v2-periphery/contracts/interfaces/IUniswapV2Router02.sol\":\"IUniswapV2Router02\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":10000},\"remappings\":[]},\"sources\":{\"@uniswap/v2-periphery/contracts/interfaces/IUniswapV2Router01.sol\":{\"keccak256\":\"0x8a3c5c449d4b7cd76513ed6995f4b86e4a86f222c770f8442f5fc128ce29b4d2\",\"urls\":[\"bzz-raw://1df63ca373dafae3bd0ee7fe70f890a1dc7c45ed869c01de68413e0e97ff9deb\",\"dweb:/ipfs/QmefJgEYGUL8KX7kQKYTrDweF8GB7yjy3nw5Bmqzryg7PG\"]},\"@uniswap/v2-periphery/contracts/interfaces/IUniswapV2Router02.sol\":{\"keccak256\":\"0x744e30c133bd0f7ca9e7163433cf6d72f45c6bb1508c2c9c02f1a6db796ae59d\",\"urls\":[\"bzz-raw://9bf2f4454ad63d4cff03a0630e787d9e8a9deed80aec89682cd8ad6379d9ef8c\",\"dweb:/ipfs/Qme51hQNR2wpax7ooUadhtqLtXm8ffeVVYyubLkTT4wMCG\"]}},\"version\":1}"}},"@uniswap/v3-core/contracts/interfaces/IUniswapV3Factory.sol":{"IUniswapV3Factory":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint24","name":"fee","type":"uint24"},{"indexed":true,"internalType":"int24","name":"tickSpacing","type":"int24"}],"name":"FeeAmountEnabled","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"oldOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnerChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"token0","type":"address"},{"indexed":true,"internalType":"address","name":"token1","type":"address"},{"indexed":true,"internalType":"uint24","name":"fee","type":"uint24"},{"indexed":false,"internalType":"int24","name":"tickSpacing","type":"int24"},{"indexed":false,"internalType":"address","name":"pool","type":"address"}],"name":"PoolCreated","type":"event"},{"inputs":[{"internalType":"address","name":"tokenA","type":"address"},{"internalType":"address","name":"tokenB","type":"address"},{"internalType":"uint24","name":"fee","type":"uint24"}],"name":"createPool","outputs":[{"internalType":"address","name":"pool","type":"address"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint24","name":"fee","type":"uint24"},{"internalType":"int24","name":"tickSpacing","type":"int24"}],"name":"enableFeeAmount","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint24","name":"fee","type":"uint24"}],"name":"feeAmountTickSpacing","outputs":[{"internalType":"int24","name":"","type":"int24"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"tokenA","type":"address"},{"internalType":"address","name":"tokenB","type":"address"},{"internalType":"uint24","name":"fee","type":"uint24"}],"name":"getPool","outputs":[{"internalType":"address","name":"pool","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_owner","type":"address"}],"name":"setOwner","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"createPool(address,address,uint24)":"a1671295","enableFeeAmount(uint24,int24)":"8a7c195f","feeAmountTickSpacing(uint24)":"22afcccb","getPool(address,address,uint24)":"1698ee82","owner()":"8da5cb5b","setOwner(address)":"13af4035"}},"metadata":"{\"compiler\":{\"version\":\"0.8.3+commit.8d00100c\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"},{\"indexed\":true,\"internalType\":\"int24\",\"name\":\"tickSpacing\",\"type\":\"int24\"}],\"name\":\"FeeAmountEnabled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"oldOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnerChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token0\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token1\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"},{\"indexed\":false,\"internalType\":\"int24\",\"name\":\"tickSpacing\",\"type\":\"int24\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"}],\"name\":\"PoolCreated\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenA\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenB\",\"type\":\"address\"},{\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"}],\"name\":\"createPool\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"},{\"internalType\":\"int24\",\"name\":\"tickSpacing\",\"type\":\"int24\"}],\"name\":\"enableFeeAmount\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"}],\"name\":\"feeAmountTickSpacing\",\"outputs\":[{\"internalType\":\"int24\",\"name\":\"\",\"type\":\"int24\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenA\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenB\",\"type\":\"address\"},{\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"}],\"name\":\"getPool\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"setOwner\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"FeeAmountEnabled(uint24,int24)\":{\"params\":{\"fee\":\"The enabled fee, denominated in hundredths of a bip\",\"tickSpacing\":\"The minimum number of ticks between initialized ticks for pools created with the given fee\"}},\"OwnerChanged(address,address)\":{\"params\":{\"newOwner\":\"The owner after the owner was changed\",\"oldOwner\":\"The owner before the owner was changed\"}},\"PoolCreated(address,address,uint24,int24,address)\":{\"params\":{\"fee\":\"The fee collected upon every swap in the pool, denominated in hundredths of a bip\",\"pool\":\"The address of the created pool\",\"tickSpacing\":\"The minimum number of ticks between initialized ticks\",\"token0\":\"The first token of the pool by address sort order\",\"token1\":\"The second token of the pool by address sort order\"}}},\"kind\":\"dev\",\"methods\":{\"createPool(address,address,uint24)\":{\"details\":\"tokenA and tokenB may be passed in either order: token0/token1 or token1/token0. tickSpacing is retrieved from the fee. The call will revert if the pool already exists, the fee is invalid, or the token arguments are invalid.\",\"params\":{\"fee\":\"The desired fee for the pool\",\"tokenA\":\"One of the two tokens in the desired pool\",\"tokenB\":\"The other of the two tokens in the desired pool\"},\"returns\":{\"pool\":\"The address of the newly created pool\"}},\"enableFeeAmount(uint24,int24)\":{\"details\":\"Fee amounts may never be removed once enabled\",\"params\":{\"fee\":\"The fee amount to enable, denominated in hundredths of a bip (i.e. 1e-6)\",\"tickSpacing\":\"The spacing between ticks to be enforced for all pools created with the given fee amount\"}},\"feeAmountTickSpacing(uint24)\":{\"details\":\"A fee amount can never be removed, so this value should be hard coded or cached in the calling context\",\"params\":{\"fee\":\"The enabled fee, denominated in hundredths of a bip. Returns 0 in case of unenabled fee\"},\"returns\":{\"_0\":\"The tick spacing\"}},\"getPool(address,address,uint24)\":{\"details\":\"tokenA and tokenB may be passed in either token0/token1 or token1/token0 order\",\"params\":{\"fee\":\"The fee collected upon every swap in the pool, denominated in hundredths of a bip\",\"tokenA\":\"The contract address of either token0 or token1\",\"tokenB\":\"The contract address of the other token\"},\"returns\":{\"pool\":\"The pool address\"}},\"owner()\":{\"details\":\"Can be changed by the current owner via setOwner\",\"returns\":{\"_0\":\"The address of the factory owner\"}},\"setOwner(address)\":{\"details\":\"Must be called by the current owner\",\"params\":{\"_owner\":\"The new owner of the factory\"}}},\"title\":\"The interface for the Uniswap V3 Factory\",\"version\":1},\"userdoc\":{\"events\":{\"FeeAmountEnabled(uint24,int24)\":{\"notice\":\"Emitted when a new fee amount is enabled for pool creation via the factory\"},\"OwnerChanged(address,address)\":{\"notice\":\"Emitted when the owner of the factory is changed\"},\"PoolCreated(address,address,uint24,int24,address)\":{\"notice\":\"Emitted when a pool is created\"}},\"kind\":\"user\",\"methods\":{\"createPool(address,address,uint24)\":{\"notice\":\"Creates a pool for the given two tokens and fee\"},\"enableFeeAmount(uint24,int24)\":{\"notice\":\"Enables a fee amount with the given tickSpacing\"},\"feeAmountTickSpacing(uint24)\":{\"notice\":\"Returns the tick spacing for a given fee amount, if enabled, or 0 if not enabled\"},\"getPool(address,address,uint24)\":{\"notice\":\"Returns the pool address for a given pair of tokens and a fee, or address 0 if it does not exist\"},\"owner()\":{\"notice\":\"Returns the current owner of the factory\"},\"setOwner(address)\":{\"notice\":\"Updates the owner of the factory\"}},\"notice\":\"The Uniswap V3 Factory facilitates creation of Uniswap V3 pools and control over the protocol fees\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"@uniswap/v3-core/contracts/interfaces/IUniswapV3Factory.sol\":\"IUniswapV3Factory\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":10000},\"remappings\":[]},\"sources\":{\"@uniswap/v3-core/contracts/interfaces/IUniswapV3Factory.sol\":{\"keccak256\":\"0xcc3d0c93fc9ac0febbe09f941b465b57f750bcf3b48432da0b97dc289cfdc489\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://b9379ad954680c44a0bc523b314ae4c4da735f9fe1d02aa56ea5bdba6f1136f2\",\"dweb:/ipfs/QmZXdgQNXKAckrXWz9R3mc47F1fvDvr28a2ewJrwNAw71B\"]}},\"version\":1}"}},"@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol":{"IUniswapV3SwapCallback":{"abi":[{"inputs":[{"internalType":"int256","name":"amount0Delta","type":"int256"},{"internalType":"int256","name":"amount1Delta","type":"int256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"uniswapV3SwapCallback","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"uniswapV3SwapCallback(int256,int256,bytes)":"fa461e33"}},"metadata":"{\"compiler\":{\"version\":\"0.8.3+commit.8d00100c\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"amount0Delta\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"amount1Delta\",\"type\":\"int256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"uniswapV3SwapCallback\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"uniswapV3SwapCallback(int256,int256,bytes)\":{\"details\":\"In the implementation you must pay the pool tokens owed for the swap. The caller of this method must be checked to be a UniswapV3Pool deployed by the canonical UniswapV3Factory. amount0Delta and amount1Delta can both be 0 if no tokens were swapped.\",\"params\":{\"amount0Delta\":\"The amount of token0 that was sent (negative) or must be received (positive) by the pool by the end of the swap. If positive, the callback must send that amount of token0 to the pool.\",\"amount1Delta\":\"The amount of token1 that was sent (negative) or must be received (positive) by the pool by the end of the swap. If positive, the callback must send that amount of token1 to the pool.\",\"data\":\"Any data passed through by the caller via the IUniswapV3PoolActions#swap call\"}}},\"title\":\"Callback for IUniswapV3PoolActions#swap\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"uniswapV3SwapCallback(int256,int256,bytes)\":{\"notice\":\"Called to `msg.sender` after executing a swap via IUniswapV3Pool#swap.\"}},\"notice\":\"Any contract that calls IUniswapV3PoolActions#swap must implement this interface\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol\":\"IUniswapV3SwapCallback\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":10000},\"remappings\":[]},\"sources\":{\"@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol\":{\"keccak256\":\"0x3f485fb1a44e8fbeadefb5da07d66edab3cfe809f0ac4074b1e54e3eb3c4cf69\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://095ce0626b41318c772b3ebf19d548282607f6a8f3d6c41c13edfbd5370c8652\",\"dweb:/ipfs/QmVDZfJJ89UUCE1hMyzqpkZAtQ8jUsBgZNE5AMRG7RzRFS\"]}},\"version\":1}"}},"@uniswap/v3-periphery/contracts/interfaces/IPeripheryImmutableState.sol":{"IPeripheryImmutableState":{"abi":[{"inputs":[],"name":"WETH9","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"factory","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"WETH9()":"4aa4a4fc","factory()":"c45a0155"}},"metadata":"{\"compiler\":{\"version\":\"0.8.3+commit.8d00100c\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"WETH9\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"factory\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"WETH9()\":{\"returns\":{\"_0\":\"Returns the address of WETH9\"}},\"factory()\":{\"returns\":{\"_0\":\"Returns the address of the Uniswap V3 factory\"}}},\"title\":\"Immutable state\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"Functions that return immutable state of the router\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"@uniswap/v3-periphery/contracts/interfaces/IPeripheryImmutableState.sol\":\"IPeripheryImmutableState\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":10000},\"remappings\":[]},\"sources\":{\"@uniswap/v3-periphery/contracts/interfaces/IPeripheryImmutableState.sol\":{\"keccak256\":\"0x7affcfeb5127c0925a71d6a65345e117c33537523aeca7bc98085ead8452519d\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://e16b291294210e71cb0f20cd0afe62ae2dc6878d627f5ccc19c4dc9cd80aec3f\",\"dweb:/ipfs/QmQGitSyBr26nour81BZmpmDMyJpvZRqHQZvnCD1Acb127\"]}},\"version\":1}"}},"@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol":{"ISwapRouter":{"abi":[{"inputs":[{"components":[{"internalType":"bytes","name":"path","type":"bytes"},{"internalType":"address","name":"recipient","type":"address"},{"internalType":"uint256","name":"deadline","type":"uint256"},{"internalType":"uint256","name":"amountIn","type":"uint256"},{"internalType":"uint256","name":"amountOutMinimum","type":"uint256"}],"internalType":"struct ISwapRouter.ExactInputParams","name":"params","type":"tuple"}],"name":"exactInput","outputs":[{"internalType":"uint256","name":"amountOut","type":"uint256"}],"stateMutability":"payable","type":"function"},{"inputs":[{"components":[{"internalType":"address","name":"tokenIn","type":"address"},{"internalType":"address","name":"tokenOut","type":"address"},{"internalType":"uint24","name":"fee","type":"uint24"},{"internalType":"address","name":"recipient","type":"address"},{"internalType":"uint256","name":"deadline","type":"uint256"},{"internalType":"uint256","name":"amountIn","type":"uint256"},{"internalType":"uint256","name":"amountOutMinimum","type":"uint256"},{"internalType":"uint160","name":"sqrtPriceLimitX96","type":"uint160"}],"internalType":"struct ISwapRouter.ExactInputSingleParams","name":"params","type":"tuple"}],"name":"exactInputSingle","outputs":[{"internalType":"uint256","name":"amountOut","type":"uint256"}],"stateMutability":"payable","type":"function"},{"inputs":[{"components":[{"internalType":"bytes","name":"path","type":"bytes"},{"internalType":"address","name":"recipient","type":"address"},{"internalType":"uint256","name":"deadline","type":"uint256"},{"internalType":"uint256","name":"amountOut","type":"uint256"},{"internalType":"uint256","name":"amountInMaximum","type":"uint256"}],"internalType":"struct ISwapRouter.ExactOutputParams","name":"params","type":"tuple"}],"name":"exactOutput","outputs":[{"internalType":"uint256","name":"amountIn","type":"uint256"}],"stateMutability":"payable","type":"function"},{"inputs":[{"components":[{"internalType":"address","name":"tokenIn","type":"address"},{"internalType":"address","name":"tokenOut","type":"address"},{"internalType":"uint24","name":"fee","type":"uint24"},{"internalType":"address","name":"recipient","type":"address"},{"internalType":"uint256","name":"deadline","type":"uint256"},{"internalType":"uint256","name":"amountOut","type":"uint256"},{"internalType":"uint256","name":"amountInMaximum","type":"uint256"},{"internalType":"uint160","name":"sqrtPriceLimitX96","type":"uint160"}],"internalType":"struct ISwapRouter.ExactOutputSingleParams","name":"params","type":"tuple"}],"name":"exactOutputSingle","outputs":[{"internalType":"uint256","name":"amountIn","type":"uint256"}],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"int256","name":"amount0Delta","type":"int256"},{"internalType":"int256","name":"amount1Delta","type":"int256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"uniswapV3SwapCallback","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"exactInput((bytes,address,uint256,uint256,uint256))":"c04b8d59","exactInputSingle((address,address,uint24,address,uint256,uint256,uint256,uint160))":"414bf389","exactOutput((bytes,address,uint256,uint256,uint256))":"f28c0498","exactOutputSingle((address,address,uint24,address,uint256,uint256,uint256,uint160))":"db3e2198","uniswapV3SwapCallback(int256,int256,bytes)":"fa461e33"}},"metadata":"{\"compiler\":{\"version\":\"0.8.3+commit.8d00100c\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"components\":[{\"internalType\":\"bytes\",\"name\":\"path\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOutMinimum\",\"type\":\"uint256\"}],\"internalType\":\"struct ISwapRouter.ExactInputParams\",\"name\":\"params\",\"type\":\"tuple\"}],\"name\":\"exactInput\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"tokenIn\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenOut\",\"type\":\"address\"},{\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOutMinimum\",\"type\":\"uint256\"},{\"internalType\":\"uint160\",\"name\":\"sqrtPriceLimitX96\",\"type\":\"uint160\"}],\"internalType\":\"struct ISwapRouter.ExactInputSingleParams\",\"name\":\"params\",\"type\":\"tuple\"}],\"name\":\"exactInputSingle\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bytes\",\"name\":\"path\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountInMaximum\",\"type\":\"uint256\"}],\"internalType\":\"struct ISwapRouter.ExactOutputParams\",\"name\":\"params\",\"type\":\"tuple\"}],\"name\":\"exactOutput\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"tokenIn\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenOut\",\"type\":\"address\"},{\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountInMaximum\",\"type\":\"uint256\"},{\"internalType\":\"uint160\",\"name\":\"sqrtPriceLimitX96\",\"type\":\"uint160\"}],\"internalType\":\"struct ISwapRouter.ExactOutputSingleParams\",\"name\":\"params\",\"type\":\"tuple\"}],\"name\":\"exactOutputSingle\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"amount0Delta\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"amount1Delta\",\"type\":\"int256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"uniswapV3SwapCallback\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"exactInput((bytes,address,uint256,uint256,uint256))\":{\"params\":{\"params\":\"The parameters necessary for the multi-hop swap, encoded as `ExactInputParams` in calldata\"},\"returns\":{\"amountOut\":\"The amount of the received token\"}},\"exactInputSingle((address,address,uint24,address,uint256,uint256,uint256,uint160))\":{\"params\":{\"params\":\"The parameters necessary for the swap, encoded as `ExactInputSingleParams` in calldata\"},\"returns\":{\"amountOut\":\"The amount of the received token\"}},\"exactOutput((bytes,address,uint256,uint256,uint256))\":{\"params\":{\"params\":\"The parameters necessary for the multi-hop swap, encoded as `ExactOutputParams` in calldata\"},\"returns\":{\"amountIn\":\"The amount of the input token\"}},\"exactOutputSingle((address,address,uint24,address,uint256,uint256,uint256,uint160))\":{\"params\":{\"params\":\"The parameters necessary for the swap, encoded as `ExactOutputSingleParams` in calldata\"},\"returns\":{\"amountIn\":\"The amount of the input token\"}},\"uniswapV3SwapCallback(int256,int256,bytes)\":{\"details\":\"In the implementation you must pay the pool tokens owed for the swap. The caller of this method must be checked to be a UniswapV3Pool deployed by the canonical UniswapV3Factory. amount0Delta and amount1Delta can both be 0 if no tokens were swapped.\",\"params\":{\"amount0Delta\":\"The amount of token0 that was sent (negative) or must be received (positive) by the pool by the end of the swap. If positive, the callback must send that amount of token0 to the pool.\",\"amount1Delta\":\"The amount of token1 that was sent (negative) or must be received (positive) by the pool by the end of the swap. If positive, the callback must send that amount of token1 to the pool.\",\"data\":\"Any data passed through by the caller via the IUniswapV3PoolActions#swap call\"}}},\"title\":\"Router token swapping functionality\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"exactInput((bytes,address,uint256,uint256,uint256))\":{\"notice\":\"Swaps `amountIn` of one token for as much as possible of another along the specified path\"},\"exactInputSingle((address,address,uint24,address,uint256,uint256,uint256,uint160))\":{\"notice\":\"Swaps `amountIn` of one token for as much as possible of another token\"},\"exactOutput((bytes,address,uint256,uint256,uint256))\":{\"notice\":\"Swaps as little as possible of one token for `amountOut` of another along the specified path (reversed)\"},\"exactOutputSingle((address,address,uint24,address,uint256,uint256,uint256,uint160))\":{\"notice\":\"Swaps as little as possible of one token for `amountOut` of another token\"},\"uniswapV3SwapCallback(int256,int256,bytes)\":{\"notice\":\"Called to `msg.sender` after executing a swap via IUniswapV3Pool#swap.\"}},\"notice\":\"Functions for swapping tokens via Uniswap V3\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol\":\"ISwapRouter\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":10000},\"remappings\":[]},\"sources\":{\"@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol\":{\"keccak256\":\"0x3f485fb1a44e8fbeadefb5da07d66edab3cfe809f0ac4074b1e54e3eb3c4cf69\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://095ce0626b41318c772b3ebf19d548282607f6a8f3d6c41c13edfbd5370c8652\",\"dweb:/ipfs/QmVDZfJJ89UUCE1hMyzqpkZAtQ8jUsBgZNE5AMRG7RzRFS\"]},\"@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol\":{\"keccak256\":\"0x9bfaf1feb32814623e627ab70f2409760b15d95f1f9b058e2b3399a8bb732975\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://a8a2c3e55965b61bcd91993d8e1d5d34b8b8a63e0fdfce87a85f6af92526fd53\",\"dweb:/ipfs/QmQj2CSCSwqDSU4KMNWxGsN2336Cy64WgpV1X1EHXNZWxM\"]}},\"version\":1}"}},"contracts/ISwapConnector.sol":{"ISwapConnector":{"abi":[{"inputs":[],"name":"NAMESPACE","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"registry","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint8","name":"source","type":"uint8"},{"internalType":"address","name":"tokenIn","type":"address"},{"internalType":"address","name":"tokenOut","type":"address"},{"internalType":"uint256","name":"amountIn","type":"uint256"},{"internalType":"uint256","name":"minAmountOut","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"swap","outputs":[{"internalType":"uint256","name":"amountOut","type":"uint256"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"NAMESPACE()":"44ba1fca","registry()":"7b103999","swap(uint8,address,address,uint256,uint256,bytes)":"a231a780"}},"metadata":"{\"compiler\":{\"version\":\"0.8.3+commit.8d00100c\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"NAMESPACE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"registry\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"source\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"tokenIn\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenOut\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minAmountOut\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"swap\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Swap Connector interface to perform token swaps. It must follow the IImplementation interface.\",\"kind\":\"dev\",\"methods\":{\"NAMESPACE()\":{\"details\":\"Tells the namespace under which the implementation is registered in the Mimic Registry\"},\"registry()\":{\"details\":\"Tells the address of the Mimic Registry\"},\"swap(uint8,address,address,uint256,uint256,bytes)\":{\"details\":\"Swaps two tokens\",\"params\":{\"amountIn\":\"Amount of tokenIn being swapped\",\"data\":\"Encoded data to specify different swap parameters depending on the source picked\",\"minAmountOut\":\"Minimum amount of tokenOut willing to receive\",\"source\":\"Source to execute the requested swap\",\"tokenIn\":\"Token being sent\",\"tokenOut\":\"Token being received\"}}},\"title\":\"ISwapConnector\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/ISwapConnector.sol\":\"ISwapConnector\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":10000},\"remappings\":[]},\"sources\":{\"@mimic-fi/v2-registry/contracts/implementations/IImplementation.sol\":{\"keccak256\":\"0x621ffadea8fdc214f95fa95ff480ebc7f5f51d9678544883def90b59a3851f78\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://9933e44069dee9bf8410f405d734b1320e2b26f11108e723576f9df6ff410b59\",\"dweb:/ipfs/QmfEmrt9bRhjN86BJRST7ZSjkDjegJgd9JtLheizUNzDwN\"]},\"contracts/ISwapConnector.sol\":{\"keccak256\":\"0xe4bbf165e1bd53016dfd29240bad0f53d2376ed53807f9cb73371bb57b343172\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://2a62f166e1d12cc74da9d07a2d7869997c85ac3eba719a8da7d5f4784f5617bd\",\"dweb:/ipfs/QmRbC5RTNLrNvz82iJyssAsSEQVj5SrrvjCED3ANqSiVc9\"]}},\"version\":1}"}},"contracts/SwapConnector.sol":{"SwapConnector":{"abi":[{"inputs":[{"internalType":"address","name":"uniswapV2Router","type":"address"},{"internalType":"address","name":"uniswapV3Router","type":"address"},{"internalType":"address","name":"balancerV2Vault","type":"address"},{"internalType":"address","name":"paraswapV5Augustus","type":"address"},{"internalType":"address","name":"oneInchV5Router","type":"address"},{"internalType":"address","name":"registry","type":"address"}],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[],"name":"NAMESPACE","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"registry","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint8","name":"source","type":"uint8"},{"internalType":"address","name":"tokenIn","type":"address"},{"internalType":"address","name":"tokenOut","type":"address"},{"internalType":"uint256","name":"amountIn","type":"uint256"},{"internalType":"uint256","name":"minAmountOut","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"swap","outputs":[{"internalType":"uint256","name":"amountOut","type":"uint256"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:844:33","statements":[{"nodeType":"YulBlock","src":"6:3:33","statements":[]},{"body":{"nodeType":"YulBlock","src":"74:117:33","statements":[{"nodeType":"YulAssignment","src":"84:22:33","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"99:6:33"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"93:5:33"},"nodeType":"YulFunctionCall","src":"93:13:33"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"84:5:33"}]},{"body":{"nodeType":"YulBlock","src":"169:16:33","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"178:1:33","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"181:1:33","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"171:6:33"},"nodeType":"YulFunctionCall","src":"171:12:33"},"nodeType":"YulExpressionStatement","src":"171:12:33"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"128:5:33"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"139:5:33"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"154:3:33","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"159:1:33","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"150:3:33"},"nodeType":"YulFunctionCall","src":"150:11:33"},{"kind":"number","nodeType":"YulLiteral","src":"163:1:33","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"146:3:33"},"nodeType":"YulFunctionCall","src":"146:19:33"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"135:3:33"},"nodeType":"YulFunctionCall","src":"135:31:33"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"125:2:33"},"nodeType":"YulFunctionCall","src":"125:42:33"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"118:6:33"},"nodeType":"YulFunctionCall","src":"118:50:33"},"nodeType":"YulIf","src":"115:2:33"}]},"name":"abi_decode_address_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"53:6:33","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"64:5:33","type":""}],"src":"14:177:33"},{"body":{"nodeType":"YulBlock","src":"362:480:33","statements":[{"body":{"nodeType":"YulBlock","src":"409:26:33","statements":[{"expression":{"arguments":[{"name":"value4","nodeType":"YulIdentifier","src":"418:6:33"},{"name":"value4","nodeType":"YulIdentifier","src":"426:6:33"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"411:6:33"},"nodeType":"YulFunctionCall","src":"411:22:33"},"nodeType":"YulExpressionStatement","src":"411:22:33"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"383:7:33"},{"name":"headStart","nodeType":"YulIdentifier","src":"392:9:33"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"379:3:33"},"nodeType":"YulFunctionCall","src":"379:23:33"},{"kind":"number","nodeType":"YulLiteral","src":"404:3:33","type":"","value":"192"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"375:3:33"},"nodeType":"YulFunctionCall","src":"375:33:33"},"nodeType":"YulIf","src":"372:2:33"},{"nodeType":"YulAssignment","src":"444:50:33","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"484:9:33"}],"functionName":{"name":"abi_decode_address_fromMemory","nodeType":"YulIdentifier","src":"454:29:33"},"nodeType":"YulFunctionCall","src":"454:40:33"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"444:6:33"}]},{"nodeType":"YulAssignment","src":"503:59:33","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"547:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"558:2:33","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"543:3:33"},"nodeType":"YulFunctionCall","src":"543:18:33"}],"functionName":{"name":"abi_decode_address_fromMemory","nodeType":"YulIdentifier","src":"513:29:33"},"nodeType":"YulFunctionCall","src":"513:49:33"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"503:6:33"}]},{"nodeType":"YulAssignment","src":"571:59:33","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"615:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"626:2:33","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"611:3:33"},"nodeType":"YulFunctionCall","src":"611:18:33"}],"functionName":{"name":"abi_decode_address_fromMemory","nodeType":"YulIdentifier","src":"581:29:33"},"nodeType":"YulFunctionCall","src":"581:49:33"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"571:6:33"}]},{"nodeType":"YulAssignment","src":"639:59:33","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"683:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"694:2:33","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"679:3:33"},"nodeType":"YulFunctionCall","src":"679:18:33"}],"functionName":{"name":"abi_decode_address_fromMemory","nodeType":"YulIdentifier","src":"649:29:33"},"nodeType":"YulFunctionCall","src":"649:49:33"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"639:6:33"}]},{"nodeType":"YulAssignment","src":"707:60:33","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"751:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"762:3:33","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"747:3:33"},"nodeType":"YulFunctionCall","src":"747:19:33"}],"functionName":{"name":"abi_decode_address_fromMemory","nodeType":"YulIdentifier","src":"717:29:33"},"nodeType":"YulFunctionCall","src":"717:50:33"},"variableNames":[{"name":"value4","nodeType":"YulIdentifier","src":"707:6:33"}]},{"nodeType":"YulAssignment","src":"776:60:33","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"820:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"831:3:33","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"816:3:33"},"nodeType":"YulFunctionCall","src":"816:19:33"}],"functionName":{"name":"abi_decode_address_fromMemory","nodeType":"YulIdentifier","src":"786:29:33"},"nodeType":"YulFunctionCall","src":"786:50:33"},"variableNames":[{"name":"value5","nodeType":"YulIdentifier","src":"776:6:33"}]}]},"name":"abi_decode_tuple_t_addresst_addresst_addresst_addresst_addresst_address_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"288:9:33","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"299:7:33","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"311:6:33","type":""},{"name":"value1","nodeType":"YulTypedName","src":"319:6:33","type":""},{"name":"value2","nodeType":"YulTypedName","src":"327:6:33","type":""},{"name":"value3","nodeType":"YulTypedName","src":"335:6:33","type":""},{"name":"value4","nodeType":"YulTypedName","src":"343:6:33","type":""},{"name":"value5","nodeType":"YulTypedName","src":"351:6:33","type":""}],"src":"196:646:33"}]},"contents":"{\n    { }\n    function abi_decode_address_fromMemory(offset) -> value\n    {\n        value := mload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_addresst_addresst_addresst_addresst_address_fromMemory(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5\n    {\n        if slt(sub(dataEnd, headStart), 192) { revert(value4, value4) }\n        value0 := abi_decode_address_fromMemory(headStart)\n        value1 := abi_decode_address_fromMemory(add(headStart, 32))\n        value2 := abi_decode_address_fromMemory(add(headStart, 64))\n        value3 := abi_decode_address_fromMemory(add(headStart, 96))\n        value4 := abi_decode_address_fromMemory(add(headStart, 128))\n        value5 := abi_decode_address_fromMemory(add(headStart, 160))\n    }\n}","id":33,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"6101406040523480156200001257600080fd5b506040516200341338038062003413833981016040819052620000359162000092565b6001600160601b0319606091821b811660805295811b861660a05293841b851660c05291831b841660e052821b831661010052901b166101205262000112565b80516001600160a01b03811681146200008d57600080fd5b919050565b60008060008060008060c08789031215620000ab578182fd5b620000b68762000075565b9550620000c66020880162000075565b9450620000d66040880162000075565b9350620000e66060880162000075565b9250620000f66080880162000075565b91506200010660a0880162000075565b90509295509295509295565b60805160601c60a05160601c60c05160601c60e05160601c6101005160601c6101205160601c613245620001ce6000396000818161072e0152610758015260008181610485015261052f0152600081816103a2015281816117d801528181611adb0152818161226f015261237b0152600081816103440152818161122a015281816113b40152611faa0152600081816102a301528181610cc001528181610e4b01528181610ef10152610fcb01526000608501526132456000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c806344ba1fca146100465780637b10399914610080578063a231a780146100bf575b600080fd5b61006d7f3689005aec026df754d93d88502592c01be0cfc074fb2a14f1cd3f426b51aa1881565b6040519081526020015b60405180910390f35b6100a77f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b039091168152602001610077565b61006d6100cd366004612c48565b6000808760ff1660058111156100f357634e487b7160e01b600052602160045260246000fd5b9050600081600581111561011757634e487b7160e01b600052602160045260246000fd5b14156101325761012a8787878787610292565b915050610288565b600181600581111561015457634e487b7160e01b600052602160045260246000fd5b14156101675761012a8787878787610333565b600281600581111561018957634e487b7160e01b600052602160045260246000fd5b141561019c5761012a8787878787610391565b60038160058111156101be57634e487b7160e01b600052602160045260246000fd5b14156101d15761012a87878787876103ea565b60048160058111156101f357634e487b7160e01b600052602160045260246000fd5b14156102065761012a8787878787610688565b600581600581111561022857634e487b7160e01b600052602160045260246000fd5b141561023b5761012a87878787876108b0565b60405162461bcd60e51b815260206004820152600e60248201527f494e56414c49445f534f5552434500000000000000000000000000000000000060448201526064015b60405180910390fd5b9695505050505050565b60006102c86001600160a01b0387167f000000000000000000000000000000000000000000000000000000000000000086610b21565b6000808351146102e4576102df8787878787610cba565b6102f0565b6102f087878787610eeb565b905080600182516103019190613183565b8151811061031f57634e487b7160e01b600052603260045260246000fd5b602002602001015191505095945050505050565b60006103696001600160a01b0387167f000000000000000000000000000000000000000000000000000000000000000086610b21565b60208251146103845761037f8686868686611069565b610288565b61028886868686866112c8565b60006103c76001600160a01b0387167f000000000000000000000000000000000000000000000000000000000000000086610b21565b60208251146103dd5761037f8686868686611440565b6102888686868686611a1c565b6040517f70a0823100000000000000000000000000000000000000000000000000000000815230600482015260009081906001600160a01b038716906370a082319060240160206040518083038186803b15801561044757600080fd5b505afa15801561045b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061047f9190612bfa565b905060007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663d2c4b5986040518163ffffffff1660e01b815260040160206040518083038186803b1580156104dc57600080fd5b505afa1580156104f0573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061051491906128ab565b905061052a6001600160a01b0389168288610b21565b61058a7f0000000000000000000000000000000000000000000000000000000000000000856040518060400160405280601781526020017f50415241535741505f56355f535741505f4641494c4544000000000000000000815250611b70565b506040517f70a082310000000000000000000000000000000000000000000000000000000081523060048201526000906001600160a01b038916906370a082319060240160206040518083038186803b1580156105e657600080fd5b505afa1580156105fa573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061061e9190612bfa565b905061062a8382613183565b93508584101561067c5760405162461bcd60e51b815260206004820152601660248201527f50415241535741505f56355f4d494e5f414d4f554e5400000000000000000000604482015260640161027f565b50505095945050505050565b6040517f70a0823100000000000000000000000000000000000000000000000000000000815230600482015260009081906001600160a01b038716906370a082319060240160206040518083038186803b1580156106e557600080fd5b505afa1580156106f9573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061071d9190612bfa565b90506107536001600160a01b0388167f000000000000000000000000000000000000000000000000000000000000000087610b21565b6107b37f0000000000000000000000000000000000000000000000000000000000000000846040518060400160405280601481526020017f31494e43485f56355f535741505f4641494c4544000000000000000000000000815250611b70565b506040517f70a082310000000000000000000000000000000000000000000000000000000081523060048201526000906001600160a01b038816906370a082319060240160206040518083038186803b15801561080f57600080fd5b505afa158015610823573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108479190612bfa565b90506108538282613183565b9250848310156108a55760405162461bcd60e51b815260206004820152601360248201527f31494e43485f56355f4d494e5f414d4f554e5400000000000000000000000000604482015260640161027f565b505095945050505050565b600060208251146109035760405162461bcd60e51b815260206004820152601760248201527f484f505f494e56414c49445f444154415f4c454e475448000000000000000000604482015260640161027f565b60008280602001905181019061091991906128ab565b6040517f66c0bd240000000000000000000000000000000000000000000000000000000081526001600160a01b0389811660048301529192508291600091908316906366c0bd249060240160206040518083038186803b15801561097c57600080fd5b505afa158015610990573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109b49190612c2c565b6040517f66c0bd240000000000000000000000000000000000000000000000000000000081526001600160a01b038a811660048301529192506000918416906366c0bd249060240160206040518083038186803b158015610a1457600080fd5b505afa158015610a28573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a4c9190612c2c565b9050610a626001600160a01b038b16858a610b21565b6040517f9169558600000000000000000000000000000000000000000000000000000000815260ff80841660048301528216602482015260448101899052606481018890524260848201526001600160a01b0384169063916955869060a401602060405180830381600087803b158015610adb57600080fd5b505af1158015610aef573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b139190612bfa565b9a9950505050505050505050565b801580610bc357506040517fdd62ed3e0000000000000000000000000000000000000000000000000000000081523060048201526001600160a01b03838116602483015284169063dd62ed3e9060440160206040518083038186803b158015610b8957600080fd5b505afa158015610b9d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610bc19190612bfa565b155b610c355760405162461bcd60e51b815260206004820152603660248201527f5361666545524332303a20617070726f76652066726f6d206e6f6e2d7a65726f60448201527f20746f206e6f6e2d7a65726f20616c6c6f77616e636500000000000000000000606482015260840161027f565b604080516001600160a01b038416602482015260448082018490528251808303909101815260649091019091526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167f095ea7b300000000000000000000000000000000000000000000000000000000179052610cb5908490611b89565b505050565b606060007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663c45a01556040518163ffffffff1660e01b815260040160206040518083038186803b158015610d1757600080fd5b505afa158015610d2b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d4f91906128ab565b9050600083806020019051810190610d679190612900565b90506000610d7689838a611c6e565b905060005b81517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff01811015610e1a57610e1284838381518110610dca57634e487b7160e01b600052603260045260246000fd5b602002602001015184610de7600186611dfc90919063ffffffff16565b81518110610e0557634e487b7160e01b600052603260045260246000fd5b6020026020010151611e00565b600101610d7b565b506040517f38ed17390000000000000000000000000000000000000000000000000000000081526001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016906338ed173990610e88908a908a908690309042906004016130f2565b600060405180830381600087803b158015610ea257600080fd5b505af1158015610eb6573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610ede9190810190612ba7565b9998505050505050505050565b606060007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663c45a01556040518163ffffffff1660e01b815260040160206040518083038186803b158015610f4857600080fd5b505afa158015610f5c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f8091906128ab565b90506000610f8e8787611efc565b9050610f9b828888611e00565b6040517f38ed17390000000000000000000000000000000000000000000000000000000081526001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016906338ed17399061100890889088908690309042906004016130f2565b600060405180830381600087803b15801561102257600080fd5b505af1158015611036573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261105e9190810190612ba7565b979650505050505050565b60008060008380602001905181019061108291906129f7565b815191935091506001018151146110db5760405162461bcd60e51b815260206004820152601f60248201527f494e56414c49445f554e49535741505f56335f494e5055545f4c454e47544800604482015260640161027f565b60006110e5611fa6565b905060006110f48a858b611c6e565b905060005b835181101561119e576111968383838151811061112657634e487b7160e01b600052603260045260246000fd5b602002602001015184611143600186611dfc90919063ffffffff16565b8151811061116157634e487b7160e01b600052603260045260246000fd5b602002602001015187858151811061118957634e487b7160e01b600052603260045260246000fd5b602002602001015161203e565b6001016110f9565b506111da6040518060a001604052806060815260200160006001600160a01b031681526020016000815260200160008152602001600081525090565b6111e48285612171565b8152606081018990526080810188905230602082015242604080830191909152517fc04b8d590000000000000000000000000000000000000000000000000000000081527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169063c04b8d5990611267908490600401612fdc565b602060405180830381600087803b15801561128157600080fd5b505af1158015611295573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112b99190612bfa565b9b9a5050505050505050505050565b600080828060200190518101906112df9190612c12565b90506112f46112ec611fa6565b88888461203e565b6040805161010081018252600060e082019081526001600160a01b038a811683528981166020840190815262ffffff8681168587019081523060608701908152426080880190815260a088018e815260c089018e815299517f414bf389000000000000000000000000000000000000000000000000000000008152895188166004820152955187166024870152925190931660448501525184166064840152905160848301525160a4820152935160c48501529051811660e484015290917f00000000000000000000000000000000000000000000000000000000000000009091169063414bf38990610104015b602060405180830381600087803b1580156113fc57600080fd5b505af1158015611410573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906114349190612bfa565b98975050505050505050565b600080600083806020019051810190611459919061293b565b815191935091506001018151146114b25760405162461bcd60e51b815260206004820181905260248201527f494e56414c49445f42414c414e4345525f56325f494e5055545f4c454e475448604482015260640161027f565b60006114bf89848a611c6e565b905060005b8251811015611568576115608382815181106114f057634e487b7160e01b600052603260045260246000fd5b602002602001015183838151811061151857634e487b7160e01b600052603260045260246000fd5b602002602001015184611535600186611dfc90919063ffffffff16565b8151811061155357634e487b7160e01b600052603260045260246000fd5b602002602001015161223d565b6001016114c4565b5080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0160008167ffffffffffffffff8111156115b657634e487b7160e01b600052604160045260246000fd5b60405190808252806020026020018201604052801561161c57816020015b6116096040518060a0016040528060008019168152602001600081526020016000815260200160008152602001606081525090565b8152602001906001900390816115d45790505b50905060005b828110156116c657600082828151811061164c57634e487b7160e01b600052603260045260246000fd5b6020026020010151905081600014611665576000611667565b8a5b6060820152855186908390811061168e57634e487b7160e01b600052603260045260246000fd5b602090810291909101810151825281810183905260018301604080840182905280516000815292830190526080909201529050611622565b506000835167ffffffffffffffff8111156116f157634e487b7160e01b600052604160045260246000fd5b60405190808252806020026020018201604052801561171a578160200160208202803683370190505b5090506117268a612465565b8160008151811061174757634e487b7160e01b600052603260045260246000fd5b6020026020010181815250506117847fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff6117808b612465565b0290565b815182907fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff01815181106117c857634e487b7160e01b600052603260045260246000fd5b60200260200101818152505060007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663945bcec96000858861185760408051608081018252600080825260208201819052918101829052606081019190915250604080516080810182523080825260006020830181905292820152606081019190915290565b87426040518763ffffffff1660e01b815260040161187a96959493929190612e92565b600060405180830381600087803b15801561189457600080fd5b505af11580156118a8573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526118d09190810190612b14565b90506000816118ea60018451611df790919063ffffffff16565b8151811061190857634e487b7160e01b600052603260045260246000fd5b60200260200101519050600081126119625760405162461bcd60e51b815260206004820181905260248201527f42414c414e4345525f494e56414c49445f42415443485f414d4f554e545f4f55604482015260640161027f565b8b6119948360008151811061198757634e487b7160e01b600052603260045260246000fd5b6020026020010151612505565b146119e15760405162461bcd60e51b815260206004820181905260248201527f42414c414e4345525f494e56414c49445f42415443485f414d4f554e545f494e604482015260640161027f565b611a0a817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0290565b9e9d5050505050505050505050505050565b60008082806020019051810190611a339190612bfa565b9050611a4081888861223d565b611a8c6040805160c0810190915260008082526020820190815260200160006001600160a01b0316815260200160006001600160a01b0316815260200160008152602001606081525090565b818152600060208201819052506001600160a01b038881166040838101919091529088166060830152608082018790528051600080825260208201909252905060a08201526001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000166352bbbe2982611b4f60408051608081018252600080825260208201819052918101829052606081019190915250604080516080810182523080825260006020830181905292820152606081019190915290565b88426040518563ffffffff1660e01b81526004016113e29493929190613035565b6060611b7f8484600085612557565b90505b9392505050565b6000611bde826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b0316611b709092919063ffffffff16565b805190915015610cb55780806020019051810190611bfc9190612bda565b610cb55760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e60448201527f6f74207375636365656400000000000000000000000000000000000000000000606482015260840161027f565b815160609060020167ffffffffffffffff811115611c9c57634e487b7160e01b600052604160045260246000fd5b604051908082528060200260200182016040528015611cc5578160200160208202803683370190505b5090508381600081518110611cea57634e487b7160e01b600052603260045260246000fd5b60200260200101906001600160a01b031690816001600160a01b03168152505060005b8351811015611d9a57838181518110611d3657634e487b7160e01b600052603260045260246000fd5b602002602001015182611d53600184611dfc90919063ffffffff16565b81518110611d7157634e487b7160e01b600052603260045260246000fd5b6001600160a01b0390921660209283029190910190910152611d938160010190565b9050611d0d565b508181611db260018651611dfc90919063ffffffff16565b81518110611dd057634e487b7160e01b600052603260045260246000fd5b60200260200101906001600160a01b031690816001600160a01b0316815250509392505050565b900390565b0190565b6040517fe6a439050000000000000000000000000000000000000000000000000000000081526001600160a01b03838116600483015282811660248301526000919085169063e6a439059060440160206040518083038186803b158015611e6657600080fd5b505afa158015611e7a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611e9e91906128ab565b90506001600160a01b038116611ef65760405162461bcd60e51b815260206004820152601460248201527f494e56414c49445f554e49535741505f504f4f4c000000000000000000000000604482015260640161027f565b50505050565b60408051600280825260608083018452926020830190803683370190505090508281600081518110611f3e57634e487b7160e01b600052603260045260246000fd5b60200260200101906001600160a01b031690816001600160a01b0316815250508181600181518110611f8057634e487b7160e01b600052603260045260246000fd5b60200260200101906001600160a01b031690816001600160a01b03168152505092915050565b60007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663c45a01556040518163ffffffff1660e01b815260040160206040518083038186803b15801561200157600080fd5b505afa158015612015573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061203991906128ab565b905090565b600080836001600160a01b0316856001600160a01b031610612061578385612064565b84845b6040517f1698ee820000000000000000000000000000000000000000000000000000000081526001600160a01b038084166004830152808316602483015262ffffff87166044830152929450909250600091881690631698ee829060640160206040518083038186803b1580156120da57600080fd5b505afa1580156120ee573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061211291906128ab565b6001600160a01b031614156121695760405162461bcd60e51b815260206004820152601860248201527f494e56414c49445f554e49535741505f504f4f4c5f4645450000000000000000604482015260640161027f565b505050505050565b60408051600080825260208201909252905b8251811015612201576121f78382815181106121af57634e487b7160e01b600052603260045260246000fd5b60200260200101516121f18684815181106121da57634e487b7160e01b600052603260045260246000fd5b60200260200101518561269490919063ffffffff16565b906126c0565b9150600101612183565b50611b828383518151811061222657634e487b7160e01b600052603260045260246000fd5b60200260200101518261269490919063ffffffff16565b6040517ff6c00927000000000000000000000000000000000000000000000000000000008152600481018490526000907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169063f6c0092790602401604080518083038186803b1580156122b857600080fd5b505afa1580156122cc573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906122f091906128c7565b5090506001600160a01b0381166123495760405162461bcd60e51b815260206004820152601860248201527f494e56414c49445f42414c414e4345525f504f4f4c5f49440000000000000000604482015260640161027f565b6040517ff94d4668000000000000000000000000000000000000000000000000000000008152600481018590526000907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169063f94d46689060240160006040518083038186803b1580156123c557600080fd5b505afa1580156123d9573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526124019190810190612aaa565b5090915061241290508185856126d5565b61245e5760405162461bcd60e51b815260206004820152601c60248201527f494e56414c49445f42414c414e4345525f504f4f4c5f544f4b454e5300000000604482015260640161027f565b5050505050565b60007f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8211156124fd5760405162461bcd60e51b815260206004820152602860248201527f53616665436173743a2076616c756520646f65736e27742066697420696e206160448201527f6e20696e74323536000000000000000000000000000000000000000000000000606482015260840161027f565b50805b919050565b6000808212156124fd5760405162461bcd60e51b815260206004820181905260248201527f53616665436173743a2076616c7565206d75737420626520706f736974697665604482015260640161027f565b6060824710156125cf5760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f60448201527f722063616c6c0000000000000000000000000000000000000000000000000000606482015260840161027f565b6001600160a01b0385163b6126265760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604482015260640161027f565b600080866001600160a01b031685876040516126429190612de2565b60006040518083038185875af1925050503d806000811461267f576040519150601f19603f3d011682016040523d82523d6000602084013e612684565b606091505b509150915061105e82828661278a565b606082826040516020016126a9929190612dfe565b604051602081830303815290604052905092915050565b606082826040516020016126a9929190612e48565b60008080805b865181101561277857856001600160a01b031687828151811061270e57634e487b7160e01b600052603260045260246000fd5b60200260200101516001600160a01b0316141561272a57600192505b846001600160a01b031687828151811061275457634e487b7160e01b600052603260045260246000fd5b60200260200101516001600160a01b0316141561277057600191505b6001016126db565b50818015610288575095945050505050565b60608315612799575081611b82565b8251156127a95782518084602001fd5b8160405162461bcd60e51b815260040161027f9190612fc9565b600082601f8301126127d3578081fd5b815160206127e86127e38361315f565b61312e565b80838252828201915082860187848660051b8901011115612807578586fd5b855b8581101561282e57815161281c816131e8565b84529284019290840190600101612809565b5090979650505050505050565b600082601f83011261284b578081fd5b8151602061285b6127e38361315f565b80838252828201915082860187848660051b890101111561287a578586fd5b855b8581101561282e5781518452928401929084019060010161287c565b805162ffffff8116811461250057600080fd5b6000602082840312156128bc578081fd5b8151611b82816131e8565b600080604083850312156128d9578081fd5b82516128e4816131e8565b60208401519092506128f581613200565b809150509250929050565b600060208284031215612911578081fd5b815167ffffffffffffffff811115612927578182fd5b612933848285016127c3565b949350505050565b6000806040838503121561294d578182fd5b825167ffffffffffffffff80821115612964578384fd5b612970868387016127c3565b9350602091508185015181811115612986578384fd5b85019050601f81018613612998578283fd5b80516129a66127e38261315f565b80828252848201915084840189868560051b87010111156129c5578687fd5b8694505b838510156129e75780518352600194909401939185019185016129c9565b5080955050505050509250929050565b60008060408385031215612a09578182fd5b825167ffffffffffffffff80821115612a20578384fd5b612a2c868387016127c3565b9350602091508185015181811115612a42578384fd5b85019050601f81018613612a54578283fd5b8051612a626127e38261315f565b80828252848201915084840189868560051b8701011115612a81578687fd5b8694505b838510156129e757612a9681612898565b835260019490940193918501918501612a85565b600080600060608486031215612abe578081fd5b835167ffffffffffffffff80821115612ad5578283fd5b612ae1878388016127c3565b94506020860151915080821115612af6578283fd5b50612b038682870161283b565b925050604084015190509250925092565b60006020808385031215612b26578182fd5b825167ffffffffffffffff811115612b3c578283fd5b8301601f81018513612b4c578283fd5b8051612b5a6127e38261315f565b80828252848201915084840188868560051b8701011115612b79578687fd5b8694505b83851015612b9b578051835260019490940193918501918501612b7d565b50979650505050505050565b600060208284031215612bb8578081fd5b815167ffffffffffffffff811115612bce578182fd5b6129338482850161283b565b600060208284031215612beb578081fd5b81518015158114611b82578182fd5b600060208284031215612c0b578081fd5b5051919050565b600060208284031215612c23578081fd5b611b8282612898565b600060208284031215612c3d578081fd5b8151611b8281613200565b60008060008060008060c08789031215612c60578384fd5b8635612c6b81613200565b9550602087810135612c7c816131e8565b95506040880135612c8c816131e8565b9450606088013593506080880135925060a088013567ffffffffffffffff80821115612cb6578384fd5b818a0191508a601f830112612cc9578384fd5b813581811115612cdb57612cdb6131d2565b612ced84601f19601f8401160161312e565b91508082528b84828501011115612d02578485fd5b808484018584013784848284010152508093505050509295509295509295565b6000815180845260208085019450808401835b83811015612d5a5781516001600160a01b031687529582019590820190600101612d35565b509495945050505050565b6000815180845260208085019450808401835b83811015612d5a57815187529582019590820190600101612d78565b60008151808452612dac8160208601602086016131a6565b601f01601f19169290920160200192915050565b60028110612dde57634e487b7160e01b600052602160045260246000fd5b9052565b60008251612df48184602087016131a6565b9190910192915050565b60008351612e108184602088016131a6565b60609390931b7fffffffffffffffffffffffffffffffffffffffff000000000000000000000000169190920190815260140192915050565b60008351612e5a8184602088016131a6565b60e89390931b7fffffff0000000000000000000000000000000000000000000000000000000000169190920190815260030192915050565b6000610120808301612ea4848b612dc0565b60208481019290925288519081905261014080850192600583901b8601909101918a8201855b82811015612f4a578785037ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffec00186528151805186528481015185870152604080820151908701526060808201519087015260809081015160a091870182905290612f3681880183612d94565b978601979650505090830190600101612eca565b505050508381036040850152612f608189612d22565b915050612fa260608401876001600160a01b03808251168352602082015115156020840152806040830151166040840152506060810151151560608301525050565b82810360e0840152612fb48186612d65565b91505082610100830152979650505050505050565b600060208252611b826020830184612d94565b600060208252825160a06020840152612ff860c0840182612d94565b90506001600160a01b0360208501511660408401526040840151606084015260608401516080840152608084015160a08401528091505092915050565b600060e08252855160e08301526020860151613055610100840182612dc0565b5060408601516001600160a01b03908116610120840152606087015116610140830152608086015161016083015260a086015160c061018084015261309e6101a0840182612d94565b9150506130e060208301866001600160a01b03808251168352602082015115156020840152806040830151166040840152506060810151151560608301525050565b60a082019390935260c0015292915050565b600086825285602083015260a0604083015261311160a0830186612d22565b6001600160a01b0394909416606083015250608001529392505050565b604051601f8201601f1916810167ffffffffffffffff81118282101715613157576131576131d2565b604052919050565b600067ffffffffffffffff821115613179576131796131d2565b5060051b60200190565b6000828210156131a157634e487b7160e01b81526011600452602481fd5b500390565b60005b838110156131c15781810151838201526020016131a9565b83811115611ef65750506000910152565b634e487b7160e01b600052604160045260246000fd5b6001600160a01b03811681146131fd57600080fd5b50565b60ff811681146131fd57600080fdfea26469706673582212205419c496f8641090590a91e365ca55d66994f9c29f959d931b1c4fbaefe5432c64736f6c63430008030033","opcodes":"PUSH2 0x140 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x12 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x3413 CODESIZE SUB DUP1 PUSH3 0x3413 DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH3 0x35 SWAP2 PUSH3 0x92 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB NOT PUSH1 0x60 SWAP2 DUP3 SHL DUP2 AND PUSH1 0x80 MSTORE SWAP6 DUP2 SHL DUP7 AND PUSH1 0xA0 MSTORE SWAP4 DUP5 SHL DUP6 AND PUSH1 0xC0 MSTORE SWAP2 DUP4 SHL DUP5 AND PUSH1 0xE0 MSTORE DUP3 SHL DUP4 AND PUSH2 0x100 MSTORE SWAP1 SHL AND PUSH2 0x120 MSTORE PUSH3 0x112 JUMP JUMPDEST DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH3 0x8D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0xC0 DUP8 DUP10 SUB SLT ISZERO PUSH3 0xAB JUMPI DUP2 DUP3 REVERT JUMPDEST PUSH3 0xB6 DUP8 PUSH3 0x75 JUMP JUMPDEST SWAP6 POP PUSH3 0xC6 PUSH1 0x20 DUP9 ADD PUSH3 0x75 JUMP JUMPDEST SWAP5 POP PUSH3 0xD6 PUSH1 0x40 DUP9 ADD PUSH3 0x75 JUMP JUMPDEST SWAP4 POP PUSH3 0xE6 PUSH1 0x60 DUP9 ADD PUSH3 0x75 JUMP JUMPDEST SWAP3 POP PUSH3 0xF6 PUSH1 0x80 DUP9 ADD PUSH3 0x75 JUMP JUMPDEST SWAP2 POP PUSH3 0x106 PUSH1 0xA0 DUP9 ADD PUSH3 0x75 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP6 POP SWAP3 SWAP6 POP SWAP3 SWAP6 JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH1 0x60 SHR PUSH1 0xA0 MLOAD PUSH1 0x60 SHR PUSH1 0xC0 MLOAD PUSH1 0x60 SHR PUSH1 0xE0 MLOAD PUSH1 0x60 SHR PUSH2 0x100 MLOAD PUSH1 0x60 SHR PUSH2 0x120 MLOAD PUSH1 0x60 SHR PUSH2 0x3245 PUSH3 0x1CE PUSH1 0x0 CODECOPY PUSH1 0x0 DUP2 DUP2 PUSH2 0x72E ADD MSTORE PUSH2 0x758 ADD MSTORE PUSH1 0x0 DUP2 DUP2 PUSH2 0x485 ADD MSTORE PUSH2 0x52F ADD MSTORE PUSH1 0x0 DUP2 DUP2 PUSH2 0x3A2 ADD MSTORE DUP2 DUP2 PUSH2 0x17D8 ADD MSTORE DUP2 DUP2 PUSH2 0x1ADB ADD MSTORE DUP2 DUP2 PUSH2 0x226F ADD MSTORE PUSH2 0x237B ADD MSTORE PUSH1 0x0 DUP2 DUP2 PUSH2 0x344 ADD MSTORE DUP2 DUP2 PUSH2 0x122A ADD MSTORE DUP2 DUP2 PUSH2 0x13B4 ADD MSTORE PUSH2 0x1FAA ADD MSTORE PUSH1 0x0 DUP2 DUP2 PUSH2 0x2A3 ADD MSTORE DUP2 DUP2 PUSH2 0xCC0 ADD MSTORE DUP2 DUP2 PUSH2 0xE4B ADD MSTORE DUP2 DUP2 PUSH2 0xEF1 ADD MSTORE PUSH2 0xFCB ADD MSTORE PUSH1 0x0 PUSH1 0x85 ADD MSTORE PUSH2 0x3245 PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x41 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x44BA1FCA EQ PUSH2 0x46 JUMPI DUP1 PUSH4 0x7B103999 EQ PUSH2 0x80 JUMPI DUP1 PUSH4 0xA231A780 EQ PUSH2 0xBF JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x6D PUSH32 0x3689005AEC026DF754D93D88502592C01BE0CFC074FB2A14F1CD3F426B51AA18 DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xA7 PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x77 JUMP JUMPDEST PUSH2 0x6D PUSH2 0xCD CALLDATASIZE PUSH1 0x4 PUSH2 0x2C48 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP8 PUSH1 0xFF AND PUSH1 0x5 DUP2 GT ISZERO PUSH2 0xF3 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 PUSH1 0x5 DUP2 GT ISZERO PUSH2 0x117 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST EQ ISZERO PUSH2 0x132 JUMPI PUSH2 0x12A DUP8 DUP8 DUP8 DUP8 DUP8 PUSH2 0x292 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x288 JUMP JUMPDEST PUSH1 0x1 DUP2 PUSH1 0x5 DUP2 GT ISZERO PUSH2 0x154 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST EQ ISZERO PUSH2 0x167 JUMPI PUSH2 0x12A DUP8 DUP8 DUP8 DUP8 DUP8 PUSH2 0x333 JUMP JUMPDEST PUSH1 0x2 DUP2 PUSH1 0x5 DUP2 GT ISZERO PUSH2 0x189 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST EQ ISZERO PUSH2 0x19C JUMPI PUSH2 0x12A DUP8 DUP8 DUP8 DUP8 DUP8 PUSH2 0x391 JUMP JUMPDEST PUSH1 0x3 DUP2 PUSH1 0x5 DUP2 GT ISZERO PUSH2 0x1BE JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST EQ ISZERO PUSH2 0x1D1 JUMPI PUSH2 0x12A DUP8 DUP8 DUP8 DUP8 DUP8 PUSH2 0x3EA JUMP JUMPDEST PUSH1 0x4 DUP2 PUSH1 0x5 DUP2 GT ISZERO PUSH2 0x1F3 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST EQ ISZERO PUSH2 0x206 JUMPI PUSH2 0x12A DUP8 DUP8 DUP8 DUP8 DUP8 PUSH2 0x688 JUMP JUMPDEST PUSH1 0x5 DUP2 PUSH1 0x5 DUP2 GT ISZERO PUSH2 0x228 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST EQ ISZERO PUSH2 0x23B JUMPI PUSH2 0x12A DUP8 DUP8 DUP8 DUP8 DUP8 PUSH2 0x8B0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x494E56414C49445F534F55524345000000000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2C8 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND PUSH32 0x0 DUP7 PUSH2 0xB21 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 MLOAD EQ PUSH2 0x2E4 JUMPI PUSH2 0x2DF DUP8 DUP8 DUP8 DUP8 DUP8 PUSH2 0xCBA JUMP JUMPDEST PUSH2 0x2F0 JUMP JUMPDEST PUSH2 0x2F0 DUP8 DUP8 DUP8 DUP8 PUSH2 0xEEB JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x1 DUP3 MLOAD PUSH2 0x301 SWAP2 SWAP1 PUSH2 0x3183 JUMP JUMPDEST DUP2 MLOAD DUP2 LT PUSH2 0x31F JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP2 POP POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x369 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND PUSH32 0x0 DUP7 PUSH2 0xB21 JUMP JUMPDEST PUSH1 0x20 DUP3 MLOAD EQ PUSH2 0x384 JUMPI PUSH2 0x37F DUP7 DUP7 DUP7 DUP7 DUP7 PUSH2 0x1069 JUMP JUMPDEST PUSH2 0x288 JUMP JUMPDEST PUSH2 0x288 DUP7 DUP7 DUP7 DUP7 DUP7 PUSH2 0x12C8 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3C7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND PUSH32 0x0 DUP7 PUSH2 0xB21 JUMP JUMPDEST PUSH1 0x20 DUP3 MLOAD EQ PUSH2 0x3DD JUMPI PUSH2 0x37F DUP7 DUP7 DUP7 DUP7 DUP7 PUSH2 0x1440 JUMP JUMPDEST PUSH2 0x288 DUP7 DUP7 DUP7 DUP7 DUP7 PUSH2 0x1A1C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x70A0823100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x0 SWAP1 DUP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x447 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x45B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x47F SWAP2 SWAP1 PUSH2 0x2BFA JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xD2C4B598 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x4DC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x4F0 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x514 SWAP2 SWAP1 PUSH2 0x28AB JUMP JUMPDEST SWAP1 POP PUSH2 0x52A PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP10 AND DUP3 DUP9 PUSH2 0xB21 JUMP JUMPDEST PUSH2 0x58A PUSH32 0x0 DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x17 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x50415241535741505F56355F535741505F4641494C4544000000000000000000 DUP2 MSTORE POP PUSH2 0x1B70 JUMP JUMPDEST POP PUSH1 0x40 MLOAD PUSH32 0x70A0823100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP10 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x5E6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x5FA JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x61E SWAP2 SWAP1 PUSH2 0x2BFA JUMP JUMPDEST SWAP1 POP PUSH2 0x62A DUP4 DUP3 PUSH2 0x3183 JUMP JUMPDEST SWAP4 POP DUP6 DUP5 LT ISZERO PUSH2 0x67C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x50415241535741505F56355F4D494E5F414D4F554E5400000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x27F JUMP JUMPDEST POP POP POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x70A0823100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x0 SWAP1 DUP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x6E5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x6F9 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x71D SWAP2 SWAP1 PUSH2 0x2BFA JUMP JUMPDEST SWAP1 POP PUSH2 0x753 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND PUSH32 0x0 DUP8 PUSH2 0xB21 JUMP JUMPDEST PUSH2 0x7B3 PUSH32 0x0 DUP5 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x14 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x31494E43485F56355F535741505F4641494C4544000000000000000000000000 DUP2 MSTORE POP PUSH2 0x1B70 JUMP JUMPDEST POP PUSH1 0x40 MLOAD PUSH32 0x70A0823100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x80F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x823 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x847 SWAP2 SWAP1 PUSH2 0x2BFA JUMP JUMPDEST SWAP1 POP PUSH2 0x853 DUP3 DUP3 PUSH2 0x3183 JUMP JUMPDEST SWAP3 POP DUP5 DUP4 LT ISZERO PUSH2 0x8A5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x31494E43485F56355F4D494E5F414D4F554E5400000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x27F JUMP JUMPDEST POP POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 MLOAD EQ PUSH2 0x903 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x484F505F494E56414C49445F444154415F4C454E475448000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x27F JUMP JUMPDEST PUSH1 0x0 DUP3 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x919 SWAP2 SWAP1 PUSH2 0x28AB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x66C0BD2400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP10 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE SWAP2 SWAP3 POP DUP3 SWAP2 PUSH1 0x0 SWAP2 SWAP1 DUP4 AND SWAP1 PUSH4 0x66C0BD24 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x97C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x990 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x9B4 SWAP2 SWAP1 PUSH2 0x2C2C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x66C0BD2400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP11 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE SWAP2 SWAP3 POP PUSH1 0x0 SWAP2 DUP5 AND SWAP1 PUSH4 0x66C0BD24 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xA14 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xA28 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xA4C SWAP2 SWAP1 PUSH2 0x2C2C JUMP JUMPDEST SWAP1 POP PUSH2 0xA62 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP12 AND DUP6 DUP11 PUSH2 0xB21 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x9169558600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0xFF DUP1 DUP5 AND PUSH1 0x4 DUP4 ADD MSTORE DUP3 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD DUP10 SWAP1 MSTORE PUSH1 0x64 DUP2 ADD DUP9 SWAP1 MSTORE TIMESTAMP PUSH1 0x84 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 PUSH4 0x91695586 SWAP1 PUSH1 0xA4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xADB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xAEF JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xB13 SWAP2 SWAP1 PUSH2 0x2BFA JUMP JUMPDEST SWAP11 SWAP10 POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST DUP1 ISZERO DUP1 PUSH2 0xBC3 JUMPI POP PUSH1 0x40 MLOAD PUSH32 0xDD62ED3E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x24 DUP4 ADD MSTORE DUP5 AND SWAP1 PUSH4 0xDD62ED3E SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xB89 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xB9D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xBC1 SWAP2 SWAP1 PUSH2 0x2BFA JUMP JUMPDEST ISZERO JUMPDEST PUSH2 0xC35 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x36 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5361666545524332303A20617070726F76652066726F6D206E6F6E2D7A65726F PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x20746F206E6F6E2D7A65726F20616C6C6F77616E636500000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x27F JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP1 DUP3 ADD DUP5 SWAP1 MSTORE DUP3 MLOAD DUP1 DUP4 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH1 0x64 SWAP1 SWAP2 ADD SWAP1 SWAP2 MSTORE PUSH1 0x20 DUP2 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x95EA7B300000000000000000000000000000000000000000000000000000000 OR SWAP1 MSTORE PUSH2 0xCB5 SWAP1 DUP5 SWAP1 PUSH2 0x1B89 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xC45A0155 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xD17 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xD2B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xD4F SWAP2 SWAP1 PUSH2 0x28AB JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP4 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0xD67 SWAP2 SWAP1 PUSH2 0x2900 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0xD76 DUP10 DUP4 DUP11 PUSH2 0x1C6E JUMP JUMPDEST SWAP1 POP PUSH1 0x0 JUMPDEST DUP2 MLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF ADD DUP2 LT ISZERO PUSH2 0xE1A JUMPI PUSH2 0xE12 DUP5 DUP4 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0xDCA JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP5 PUSH2 0xDE7 PUSH1 0x1 DUP7 PUSH2 0x1DFC SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP2 MLOAD DUP2 LT PUSH2 0xE05 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x1E00 JUMP JUMPDEST PUSH1 0x1 ADD PUSH2 0xD7B JUMP JUMPDEST POP PUSH1 0x40 MLOAD PUSH32 0x38ED173900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND SWAP1 PUSH4 0x38ED1739 SWAP1 PUSH2 0xE88 SWAP1 DUP11 SWAP1 DUP11 SWAP1 DUP7 SWAP1 ADDRESS SWAP1 TIMESTAMP SWAP1 PUSH1 0x4 ADD PUSH2 0x30F2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xEA2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xEB6 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD PUSH1 0x40 MSTORE PUSH2 0xEDE SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH2 0x2BA7 JUMP JUMPDEST SWAP10 SWAP9 POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xC45A0155 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xF48 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xF5C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xF80 SWAP2 SWAP1 PUSH2 0x28AB JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0xF8E DUP8 DUP8 PUSH2 0x1EFC JUMP JUMPDEST SWAP1 POP PUSH2 0xF9B DUP3 DUP9 DUP9 PUSH2 0x1E00 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x38ED173900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND SWAP1 PUSH4 0x38ED1739 SWAP1 PUSH2 0x1008 SWAP1 DUP9 SWAP1 DUP9 SWAP1 DUP7 SWAP1 ADDRESS SWAP1 TIMESTAMP SWAP1 PUSH1 0x4 ADD PUSH2 0x30F2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1022 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1036 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD PUSH1 0x40 MSTORE PUSH2 0x105E SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH2 0x2BA7 JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x1082 SWAP2 SWAP1 PUSH2 0x29F7 JUMP JUMPDEST DUP2 MLOAD SWAP2 SWAP4 POP SWAP2 POP PUSH1 0x1 ADD DUP2 MLOAD EQ PUSH2 0x10DB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x494E56414C49445F554E49535741505F56335F494E5055545F4C454E47544800 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x27F JUMP JUMPDEST PUSH1 0x0 PUSH2 0x10E5 PUSH2 0x1FA6 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x10F4 DUP11 DUP6 DUP12 PUSH2 0x1C6E JUMP JUMPDEST SWAP1 POP PUSH1 0x0 JUMPDEST DUP4 MLOAD DUP2 LT ISZERO PUSH2 0x119E JUMPI PUSH2 0x1196 DUP4 DUP4 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x1126 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP5 PUSH2 0x1143 PUSH1 0x1 DUP7 PUSH2 0x1DFC SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP2 MLOAD DUP2 LT PUSH2 0x1161 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP8 DUP6 DUP2 MLOAD DUP2 LT PUSH2 0x1189 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x203E JUMP JUMPDEST PUSH1 0x1 ADD PUSH2 0x10F9 JUMP JUMPDEST POP PUSH2 0x11DA PUSH1 0x40 MLOAD DUP1 PUSH1 0xA0 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x60 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH2 0x11E4 DUP3 DUP6 PUSH2 0x2171 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x60 DUP2 ADD DUP10 SWAP1 MSTORE PUSH1 0x80 DUP2 ADD DUP9 SWAP1 MSTORE ADDRESS PUSH1 0x20 DUP3 ADD MSTORE TIMESTAMP PUSH1 0x40 DUP1 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE MLOAD PUSH32 0xC04B8D5900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0xC04B8D59 SWAP1 PUSH2 0x1267 SWAP1 DUP5 SWAP1 PUSH1 0x4 ADD PUSH2 0x2FDC JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1281 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1295 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x12B9 SWAP2 SWAP1 PUSH2 0x2BFA JUMP JUMPDEST SWAP12 SWAP11 POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x12DF SWAP2 SWAP1 PUSH2 0x2C12 JUMP JUMPDEST SWAP1 POP PUSH2 0x12F4 PUSH2 0x12EC PUSH2 0x1FA6 JUMP JUMPDEST DUP9 DUP9 DUP5 PUSH2 0x203E JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH2 0x100 DUP2 ADD DUP3 MSTORE PUSH1 0x0 PUSH1 0xE0 DUP3 ADD SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP11 DUP2 AND DUP4 MSTORE DUP10 DUP2 AND PUSH1 0x20 DUP5 ADD SWAP1 DUP2 MSTORE PUSH3 0xFFFFFF DUP7 DUP2 AND DUP6 DUP8 ADD SWAP1 DUP2 MSTORE ADDRESS PUSH1 0x60 DUP8 ADD SWAP1 DUP2 MSTORE TIMESTAMP PUSH1 0x80 DUP9 ADD SWAP1 DUP2 MSTORE PUSH1 0xA0 DUP9 ADD DUP15 DUP2 MSTORE PUSH1 0xC0 DUP10 ADD DUP15 DUP2 MSTORE SWAP10 MLOAD PUSH32 0x414BF38900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE DUP10 MLOAD DUP9 AND PUSH1 0x4 DUP3 ADD MSTORE SWAP6 MLOAD DUP8 AND PUSH1 0x24 DUP8 ADD MSTORE SWAP3 MLOAD SWAP1 SWAP4 AND PUSH1 0x44 DUP6 ADD MSTORE MLOAD DUP5 AND PUSH1 0x64 DUP5 ADD MSTORE SWAP1 MLOAD PUSH1 0x84 DUP4 ADD MSTORE MLOAD PUSH1 0xA4 DUP3 ADD MSTORE SWAP4 MLOAD PUSH1 0xC4 DUP6 ADD MSTORE SWAP1 MLOAD DUP2 AND PUSH1 0xE4 DUP5 ADD MSTORE SWAP1 SWAP2 PUSH32 0x0 SWAP1 SWAP2 AND SWAP1 PUSH4 0x414BF389 SWAP1 PUSH2 0x104 ADD JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x13FC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1410 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1434 SWAP2 SWAP1 PUSH2 0x2BFA JUMP JUMPDEST SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x1459 SWAP2 SWAP1 PUSH2 0x293B JUMP JUMPDEST DUP2 MLOAD SWAP2 SWAP4 POP SWAP2 POP PUSH1 0x1 ADD DUP2 MLOAD EQ PUSH2 0x14B2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x494E56414C49445F42414C414E4345525F56325F494E5055545F4C454E475448 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x27F JUMP JUMPDEST PUSH1 0x0 PUSH2 0x14BF DUP10 DUP5 DUP11 PUSH2 0x1C6E JUMP JUMPDEST SWAP1 POP PUSH1 0x0 JUMPDEST DUP3 MLOAD DUP2 LT ISZERO PUSH2 0x1568 JUMPI PUSH2 0x1560 DUP4 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x14F0 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP4 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x1518 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP5 PUSH2 0x1535 PUSH1 0x1 DUP7 PUSH2 0x1DFC SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP2 MLOAD DUP2 LT PUSH2 0x1553 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x223D JUMP JUMPDEST PUSH1 0x1 ADD PUSH2 0x14C4 JUMP JUMPDEST POP DUP1 MLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF ADD PUSH1 0x0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x15B6 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x161C JUMPI DUP2 PUSH1 0x20 ADD JUMPDEST PUSH2 0x1609 PUSH1 0x40 MLOAD DUP1 PUSH1 0xA0 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP1 NOT AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x60 DUP2 MSTORE POP SWAP1 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0x15D4 JUMPI SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x16C6 JUMPI PUSH1 0x0 DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x164C JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP1 POP DUP2 PUSH1 0x0 EQ PUSH2 0x1665 JUMPI PUSH1 0x0 PUSH2 0x1667 JUMP JUMPDEST DUP11 JUMPDEST PUSH1 0x60 DUP3 ADD MSTORE DUP6 MLOAD DUP7 SWAP1 DUP4 SWAP1 DUP2 LT PUSH2 0x168E JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD DUP2 ADD MLOAD DUP3 MSTORE DUP2 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x1 DUP4 ADD PUSH1 0x40 DUP1 DUP5 ADD DUP3 SWAP1 MSTORE DUP1 MLOAD PUSH1 0x0 DUP2 MSTORE SWAP3 DUP4 ADD SWAP1 MSTORE PUSH1 0x80 SWAP1 SWAP3 ADD MSTORE SWAP1 POP PUSH2 0x1622 JUMP JUMPDEST POP PUSH1 0x0 DUP4 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x16F1 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x171A JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH2 0x1726 DUP11 PUSH2 0x2465 JUMP JUMPDEST DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x1747 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP PUSH2 0x1784 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH2 0x1780 DUP12 PUSH2 0x2465 JUMP JUMPDEST MUL SWAP1 JUMP JUMPDEST DUP2 MLOAD DUP3 SWAP1 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF ADD DUP2 MLOAD DUP2 LT PUSH2 0x17C8 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP PUSH1 0x0 PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x945BCEC9 PUSH1 0x0 DUP6 DUP9 PUSH2 0x1857 PUSH1 0x40 DUP1 MLOAD PUSH1 0x80 DUP2 ADD DUP3 MSTORE PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD DUP2 SWAP1 MSTORE SWAP2 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x60 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x80 DUP2 ADD DUP3 MSTORE ADDRESS DUP1 DUP3 MSTORE PUSH1 0x0 PUSH1 0x20 DUP4 ADD DUP2 SWAP1 MSTORE SWAP3 DUP3 ADD MSTORE PUSH1 0x60 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP1 JUMP JUMPDEST DUP8 TIMESTAMP PUSH1 0x40 MLOAD DUP8 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x187A SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2E92 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1894 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x18A8 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD PUSH1 0x40 MSTORE PUSH2 0x18D0 SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH2 0x2B14 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 PUSH2 0x18EA PUSH1 0x1 DUP5 MLOAD PUSH2 0x1DF7 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP2 MLOAD DUP2 LT PUSH2 0x1908 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP1 POP PUSH1 0x0 DUP2 SLT PUSH2 0x1962 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x42414C414E4345525F494E56414C49445F42415443485F414D4F554E545F4F55 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x27F JUMP JUMPDEST DUP12 PUSH2 0x1994 DUP4 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x1987 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x2505 JUMP JUMPDEST EQ PUSH2 0x19E1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x42414C414E4345525F494E56414C49445F42415443485F414D4F554E545F494E PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x27F JUMP JUMPDEST PUSH2 0x1A0A DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL SWAP1 JUMP JUMPDEST SWAP15 SWAP14 POP POP POP POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x1A33 SWAP2 SWAP1 PUSH2 0x2BFA JUMP JUMPDEST SWAP1 POP PUSH2 0x1A40 DUP2 DUP9 DUP9 PUSH2 0x223D JUMP JUMPDEST PUSH2 0x1A8C PUSH1 0x40 DUP1 MLOAD PUSH1 0xC0 DUP2 ADD SWAP1 SWAP2 MSTORE PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x60 DUP2 MSTORE POP SWAP1 JUMP JUMPDEST DUP2 DUP2 MSTORE PUSH1 0x0 PUSH1 0x20 DUP3 ADD DUP2 SWAP1 MSTORE POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 DUP2 AND PUSH1 0x40 DUP4 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP1 DUP9 AND PUSH1 0x60 DUP4 ADD MSTORE PUSH1 0x80 DUP3 ADD DUP8 SWAP1 MSTORE DUP1 MLOAD PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 SWAP3 MSTORE SWAP1 POP PUSH1 0xA0 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND PUSH4 0x52BBBE29 DUP3 PUSH2 0x1B4F PUSH1 0x40 DUP1 MLOAD PUSH1 0x80 DUP2 ADD DUP3 MSTORE PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD DUP2 SWAP1 MSTORE SWAP2 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x60 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x80 DUP2 ADD DUP3 MSTORE ADDRESS DUP1 DUP3 MSTORE PUSH1 0x0 PUSH1 0x20 DUP4 ADD DUP2 SWAP1 MSTORE SWAP3 DUP3 ADD MSTORE PUSH1 0x60 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP1 JUMP JUMPDEST DUP9 TIMESTAMP PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x13E2 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3035 JUMP JUMPDEST PUSH1 0x60 PUSH2 0x1B7F DUP5 DUP5 PUSH1 0x0 DUP6 PUSH2 0x2557 JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1BDE DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564 DUP2 MSTORE POP DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1B70 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP1 MLOAD SWAP1 SWAP2 POP ISZERO PUSH2 0xCB5 JUMPI DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x1BFC SWAP2 SWAP1 PUSH2 0x2BDA JUMP JUMPDEST PUSH2 0xCB5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5361666545524332303A204552433230206F7065726174696F6E20646964206E PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6F74207375636365656400000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x27F JUMP JUMPDEST DUP2 MLOAD PUSH1 0x60 SWAP1 PUSH1 0x2 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1C9C JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x1CC5 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP DUP4 DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x1CEA JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE POP POP PUSH1 0x0 JUMPDEST DUP4 MLOAD DUP2 LT ISZERO PUSH2 0x1D9A JUMPI DUP4 DUP2 DUP2 MLOAD DUP2 LT PUSH2 0x1D36 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP3 PUSH2 0x1D53 PUSH1 0x1 DUP5 PUSH2 0x1DFC SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP2 MLOAD DUP2 LT PUSH2 0x1D71 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND PUSH1 0x20 SWAP3 DUP4 MUL SWAP2 SWAP1 SWAP2 ADD SWAP1 SWAP2 ADD MSTORE PUSH2 0x1D93 DUP2 PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST SWAP1 POP PUSH2 0x1D0D JUMP JUMPDEST POP DUP2 DUP2 PUSH2 0x1DB2 PUSH1 0x1 DUP7 MLOAD PUSH2 0x1DFC SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP2 MLOAD DUP2 LT PUSH2 0x1DD0 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST SWAP1 SUB SWAP1 JUMP JUMPDEST ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0xE6A4390500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE DUP3 DUP2 AND PUSH1 0x24 DUP4 ADD MSTORE PUSH1 0x0 SWAP2 SWAP1 DUP6 AND SWAP1 PUSH4 0xE6A43905 SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1E66 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1E7A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1E9E SWAP2 SWAP1 PUSH2 0x28AB JUMP JUMPDEST SWAP1 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x1EF6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x494E56414C49445F554E49535741505F504F4F4C000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x27F JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x2 DUP1 DUP3 MSTORE PUSH1 0x60 DUP1 DUP4 ADD DUP5 MSTORE SWAP3 PUSH1 0x20 DUP4 ADD SWAP1 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP POP SWAP1 POP DUP3 DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x1F3E JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE POP POP DUP2 DUP2 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x1F80 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xC45A0155 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2001 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2015 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2039 SWAP2 SWAP1 PUSH2 0x28AB JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND LT PUSH2 0x2061 JUMPI DUP4 DUP6 PUSH2 0x2064 JUMP JUMPDEST DUP5 DUP5 JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x1698EE8200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND PUSH1 0x4 DUP4 ADD MSTORE DUP1 DUP4 AND PUSH1 0x24 DUP4 ADD MSTORE PUSH3 0xFFFFFF DUP8 AND PUSH1 0x44 DUP4 ADD MSTORE SWAP3 SWAP5 POP SWAP1 SWAP3 POP PUSH1 0x0 SWAP2 DUP9 AND SWAP1 PUSH4 0x1698EE82 SWAP1 PUSH1 0x64 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x20DA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x20EE JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2112 SWAP2 SWAP1 PUSH2 0x28AB JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO PUSH2 0x2169 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x494E56414C49445F554E49535741505F504F4F4C5F4645450000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x27F JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 SWAP3 MSTORE SWAP1 JUMPDEST DUP3 MLOAD DUP2 LT ISZERO PUSH2 0x2201 JUMPI PUSH2 0x21F7 DUP4 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x21AF JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x21F1 DUP7 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x21DA JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP6 PUSH2 0x2694 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 PUSH2 0x26C0 JUMP JUMPDEST SWAP2 POP PUSH1 0x1 ADD PUSH2 0x2183 JUMP JUMPDEST POP PUSH2 0x1B82 DUP4 DUP4 MLOAD DUP2 MLOAD DUP2 LT PUSH2 0x2226 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP3 PUSH2 0x2694 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0xF6C0092700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0xF6C00927 SWAP1 PUSH1 0x24 ADD PUSH1 0x40 DUP1 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x22B8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x22CC JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x22F0 SWAP2 SWAP1 PUSH2 0x28C7 JUMP JUMPDEST POP SWAP1 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x2349 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x494E56414C49445F42414C414E4345525F504F4F4C5F49440000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x27F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0xF94D466800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP6 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0xF94D4668 SWAP1 PUSH1 0x24 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x23C5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x23D9 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD PUSH1 0x40 MSTORE PUSH2 0x2401 SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH2 0x2AAA JUMP JUMPDEST POP SWAP1 SWAP2 POP PUSH2 0x2412 SWAP1 POP DUP2 DUP6 DUP6 PUSH2 0x26D5 JUMP JUMPDEST PUSH2 0x245E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x494E56414C49445F42414C414E4345525F504F4F4C5F544F4B454E5300000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x27F JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x24FD JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x28 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x53616665436173743A2076616C756520646F65736E27742066697420696E2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6E20696E74323536000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x27F JUMP JUMPDEST POP DUP1 JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 SLT ISZERO PUSH2 0x24FD JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x53616665436173743A2076616C7565206D75737420626520706F736974697665 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x27F JUMP JUMPDEST PUSH1 0x60 DUP3 SELFBALANCE LT ISZERO PUSH2 0x25CF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A20696E73756666696369656E742062616C616E636520666F PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x722063616C6C0000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x27F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND EXTCODESIZE PUSH2 0x2626 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x27F JUMP JUMPDEST PUSH1 0x0 DUP1 DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 DUP8 PUSH1 0x40 MLOAD PUSH2 0x2642 SWAP2 SWAP1 PUSH2 0x2DE2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x267F JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x2684 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x105E DUP3 DUP3 DUP7 PUSH2 0x278A JUMP JUMPDEST PUSH1 0x60 DUP3 DUP3 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x26A9 SWAP3 SWAP2 SWAP1 PUSH2 0x2DFE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 DUP3 DUP3 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x26A9 SWAP3 SWAP2 SWAP1 PUSH2 0x2E48 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP1 DUP1 JUMPDEST DUP7 MLOAD DUP2 LT ISZERO PUSH2 0x2778 JUMPI DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP8 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x270E JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO PUSH2 0x272A JUMPI PUSH1 0x1 SWAP3 POP JUMPDEST DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP8 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x2754 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO PUSH2 0x2770 JUMPI PUSH1 0x1 SWAP2 POP JUMPDEST PUSH1 0x1 ADD PUSH2 0x26DB JUMP JUMPDEST POP DUP2 DUP1 ISZERO PUSH2 0x288 JUMPI POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP4 ISZERO PUSH2 0x2799 JUMPI POP DUP2 PUSH2 0x1B82 JUMP JUMPDEST DUP3 MLOAD ISZERO PUSH2 0x27A9 JUMPI DUP3 MLOAD DUP1 DUP5 PUSH1 0x20 ADD REVERT JUMPDEST DUP2 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x27F SWAP2 SWAP1 PUSH2 0x2FC9 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x27D3 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x20 PUSH2 0x27E8 PUSH2 0x27E3 DUP4 PUSH2 0x315F JUMP JUMPDEST PUSH2 0x312E JUMP JUMPDEST DUP1 DUP4 DUP3 MSTORE DUP3 DUP3 ADD SWAP2 POP DUP3 DUP7 ADD DUP8 DUP5 DUP7 PUSH1 0x5 SHL DUP10 ADD ADD GT ISZERO PUSH2 0x2807 JUMPI DUP6 DUP7 REVERT JUMPDEST DUP6 JUMPDEST DUP6 DUP2 LT ISZERO PUSH2 0x282E JUMPI DUP2 MLOAD PUSH2 0x281C DUP2 PUSH2 0x31E8 JUMP JUMPDEST DUP5 MSTORE SWAP3 DUP5 ADD SWAP3 SWAP1 DUP5 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x2809 JUMP JUMPDEST POP SWAP1 SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x284B JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x20 PUSH2 0x285B PUSH2 0x27E3 DUP4 PUSH2 0x315F JUMP JUMPDEST DUP1 DUP4 DUP3 MSTORE DUP3 DUP3 ADD SWAP2 POP DUP3 DUP7 ADD DUP8 DUP5 DUP7 PUSH1 0x5 SHL DUP10 ADD ADD GT ISZERO PUSH2 0x287A JUMPI DUP6 DUP7 REVERT JUMPDEST DUP6 JUMPDEST DUP6 DUP2 LT ISZERO PUSH2 0x282E JUMPI DUP2 MLOAD DUP5 MSTORE SWAP3 DUP5 ADD SWAP3 SWAP1 DUP5 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x287C JUMP JUMPDEST DUP1 MLOAD PUSH3 0xFFFFFF DUP2 AND DUP2 EQ PUSH2 0x2500 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x28BC JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x1B82 DUP2 PUSH2 0x31E8 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x28D9 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP3 MLOAD PUSH2 0x28E4 DUP2 PUSH2 0x31E8 JUMP JUMPDEST PUSH1 0x20 DUP5 ADD MLOAD SWAP1 SWAP3 POP PUSH2 0x28F5 DUP2 PUSH2 0x3200 JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2911 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2927 JUMPI DUP2 DUP3 REVERT JUMPDEST PUSH2 0x2933 DUP5 DUP3 DUP6 ADD PUSH2 0x27C3 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x294D JUMPI DUP2 DUP3 REVERT JUMPDEST DUP3 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x2964 JUMPI DUP4 DUP5 REVERT JUMPDEST PUSH2 0x2970 DUP7 DUP4 DUP8 ADD PUSH2 0x27C3 JUMP JUMPDEST SWAP4 POP PUSH1 0x20 SWAP2 POP DUP2 DUP6 ADD MLOAD DUP2 DUP2 GT ISZERO PUSH2 0x2986 JUMPI DUP4 DUP5 REVERT JUMPDEST DUP6 ADD SWAP1 POP PUSH1 0x1F DUP2 ADD DUP7 SGT PUSH2 0x2998 JUMPI DUP3 DUP4 REVERT JUMPDEST DUP1 MLOAD PUSH2 0x29A6 PUSH2 0x27E3 DUP3 PUSH2 0x315F JUMP JUMPDEST DUP1 DUP3 DUP3 MSTORE DUP5 DUP3 ADD SWAP2 POP DUP5 DUP5 ADD DUP10 DUP7 DUP6 PUSH1 0x5 SHL DUP8 ADD ADD GT ISZERO PUSH2 0x29C5 JUMPI DUP7 DUP8 REVERT JUMPDEST DUP7 SWAP5 POP JUMPDEST DUP4 DUP6 LT ISZERO PUSH2 0x29E7 JUMPI DUP1 MLOAD DUP4 MSTORE PUSH1 0x1 SWAP5 SWAP1 SWAP5 ADD SWAP4 SWAP2 DUP6 ADD SWAP2 DUP6 ADD PUSH2 0x29C9 JUMP JUMPDEST POP DUP1 SWAP6 POP POP POP POP POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2A09 JUMPI DUP2 DUP3 REVERT JUMPDEST DUP3 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x2A20 JUMPI DUP4 DUP5 REVERT JUMPDEST PUSH2 0x2A2C DUP7 DUP4 DUP8 ADD PUSH2 0x27C3 JUMP JUMPDEST SWAP4 POP PUSH1 0x20 SWAP2 POP DUP2 DUP6 ADD MLOAD DUP2 DUP2 GT ISZERO PUSH2 0x2A42 JUMPI DUP4 DUP5 REVERT JUMPDEST DUP6 ADD SWAP1 POP PUSH1 0x1F DUP2 ADD DUP7 SGT PUSH2 0x2A54 JUMPI DUP3 DUP4 REVERT JUMPDEST DUP1 MLOAD PUSH2 0x2A62 PUSH2 0x27E3 DUP3 PUSH2 0x315F JUMP JUMPDEST DUP1 DUP3 DUP3 MSTORE DUP5 DUP3 ADD SWAP2 POP DUP5 DUP5 ADD DUP10 DUP7 DUP6 PUSH1 0x5 SHL DUP8 ADD ADD GT ISZERO PUSH2 0x2A81 JUMPI DUP7 DUP8 REVERT JUMPDEST DUP7 SWAP5 POP JUMPDEST DUP4 DUP6 LT ISZERO PUSH2 0x29E7 JUMPI PUSH2 0x2A96 DUP2 PUSH2 0x2898 JUMP JUMPDEST DUP4 MSTORE PUSH1 0x1 SWAP5 SWAP1 SWAP5 ADD SWAP4 SWAP2 DUP6 ADD SWAP2 DUP6 ADD PUSH2 0x2A85 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x2ABE JUMPI DUP1 DUP2 REVERT JUMPDEST DUP4 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x2AD5 JUMPI DUP3 DUP4 REVERT JUMPDEST PUSH2 0x2AE1 DUP8 DUP4 DUP9 ADD PUSH2 0x27C3 JUMP JUMPDEST SWAP5 POP PUSH1 0x20 DUP7 ADD MLOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x2AF6 JUMPI DUP3 DUP4 REVERT JUMPDEST POP PUSH2 0x2B03 DUP7 DUP3 DUP8 ADD PUSH2 0x283B JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 DUP5 ADD MLOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2B26 JUMPI DUP2 DUP3 REVERT JUMPDEST DUP3 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2B3C JUMPI DUP3 DUP4 REVERT JUMPDEST DUP4 ADD PUSH1 0x1F DUP2 ADD DUP6 SGT PUSH2 0x2B4C JUMPI DUP3 DUP4 REVERT JUMPDEST DUP1 MLOAD PUSH2 0x2B5A PUSH2 0x27E3 DUP3 PUSH2 0x315F JUMP JUMPDEST DUP1 DUP3 DUP3 MSTORE DUP5 DUP3 ADD SWAP2 POP DUP5 DUP5 ADD DUP9 DUP7 DUP6 PUSH1 0x5 SHL DUP8 ADD ADD GT ISZERO PUSH2 0x2B79 JUMPI DUP7 DUP8 REVERT JUMPDEST DUP7 SWAP5 POP JUMPDEST DUP4 DUP6 LT ISZERO PUSH2 0x2B9B JUMPI DUP1 MLOAD DUP4 MSTORE PUSH1 0x1 SWAP5 SWAP1 SWAP5 ADD SWAP4 SWAP2 DUP6 ADD SWAP2 DUP6 ADD PUSH2 0x2B7D JUMP JUMPDEST POP SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2BB8 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2BCE JUMPI DUP2 DUP3 REVERT JUMPDEST PUSH2 0x2933 DUP5 DUP3 DUP6 ADD PUSH2 0x283B JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2BEB JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x1B82 JUMPI DUP2 DUP3 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2C0B JUMPI DUP1 DUP2 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2C23 JUMPI DUP1 DUP2 REVERT JUMPDEST PUSH2 0x1B82 DUP3 PUSH2 0x2898 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2C3D JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x1B82 DUP2 PUSH2 0x3200 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0xC0 DUP8 DUP10 SUB SLT ISZERO PUSH2 0x2C60 JUMPI DUP4 DUP5 REVERT JUMPDEST DUP7 CALLDATALOAD PUSH2 0x2C6B DUP2 PUSH2 0x3200 JUMP JUMPDEST SWAP6 POP PUSH1 0x20 DUP8 DUP2 ADD CALLDATALOAD PUSH2 0x2C7C DUP2 PUSH2 0x31E8 JUMP JUMPDEST SWAP6 POP PUSH1 0x40 DUP9 ADD CALLDATALOAD PUSH2 0x2C8C DUP2 PUSH2 0x31E8 JUMP JUMPDEST SWAP5 POP PUSH1 0x60 DUP9 ADD CALLDATALOAD SWAP4 POP PUSH1 0x80 DUP9 ADD CALLDATALOAD SWAP3 POP PUSH1 0xA0 DUP9 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x2CB6 JUMPI DUP4 DUP5 REVERT JUMPDEST DUP2 DUP11 ADD SWAP2 POP DUP11 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x2CC9 JUMPI DUP4 DUP5 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x2CDB JUMPI PUSH2 0x2CDB PUSH2 0x31D2 JUMP JUMPDEST PUSH2 0x2CED DUP5 PUSH1 0x1F NOT PUSH1 0x1F DUP5 ADD AND ADD PUSH2 0x312E JUMP JUMPDEST SWAP2 POP DUP1 DUP3 MSTORE DUP12 DUP5 DUP3 DUP6 ADD ADD GT ISZERO PUSH2 0x2D02 JUMPI DUP5 DUP6 REVERT JUMPDEST DUP1 DUP5 DUP5 ADD DUP6 DUP5 ADD CALLDATACOPY DUP5 DUP5 DUP3 DUP5 ADD ADD MSTORE POP DUP1 SWAP4 POP POP POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 POP SWAP3 SWAP6 JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH1 0x20 DUP1 DUP6 ADD SWAP5 POP DUP1 DUP5 ADD DUP4 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x2D5A JUMPI DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP8 MSTORE SWAP6 DUP3 ADD SWAP6 SWAP1 DUP3 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x2D35 JUMP JUMPDEST POP SWAP5 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH1 0x20 DUP1 DUP6 ADD SWAP5 POP DUP1 DUP5 ADD DUP4 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x2D5A JUMPI DUP2 MLOAD DUP8 MSTORE SWAP6 DUP3 ADD SWAP6 SWAP1 DUP3 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x2D78 JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH2 0x2DAC DUP2 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP7 ADD PUSH2 0x31A6 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x2 DUP2 LT PUSH2 0x2DDE JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 MSTORE JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD PUSH2 0x2DF4 DUP2 DUP5 PUSH1 0x20 DUP8 ADD PUSH2 0x31A6 JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP4 MLOAD PUSH2 0x2E10 DUP2 DUP5 PUSH1 0x20 DUP9 ADD PUSH2 0x31A6 JUMP JUMPDEST PUSH1 0x60 SWAP4 SWAP1 SWAP4 SHL PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF000000000000000000000000 AND SWAP2 SWAP1 SWAP3 ADD SWAP1 DUP2 MSTORE PUSH1 0x14 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP4 MLOAD PUSH2 0x2E5A DUP2 DUP5 PUSH1 0x20 DUP9 ADD PUSH2 0x31A6 JUMP JUMPDEST PUSH1 0xE8 SWAP4 SWAP1 SWAP4 SHL PUSH32 0xFFFFFF0000000000000000000000000000000000000000000000000000000000 AND SWAP2 SWAP1 SWAP3 ADD SWAP1 DUP2 MSTORE PUSH1 0x3 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x120 DUP1 DUP4 ADD PUSH2 0x2EA4 DUP5 DUP12 PUSH2 0x2DC0 JUMP JUMPDEST PUSH1 0x20 DUP5 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE DUP9 MLOAD SWAP1 DUP2 SWAP1 MSTORE PUSH2 0x140 DUP1 DUP6 ADD SWAP3 PUSH1 0x5 DUP4 SWAP1 SHL DUP7 ADD SWAP1 SWAP2 ADD SWAP2 DUP11 DUP3 ADD DUP6 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x2F4A JUMPI DUP8 DUP6 SUB PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEC0 ADD DUP7 MSTORE DUP2 MLOAD DUP1 MLOAD DUP7 MSTORE DUP5 DUP2 ADD MLOAD DUP6 DUP8 ADD MSTORE PUSH1 0x40 DUP1 DUP3 ADD MLOAD SWAP1 DUP8 ADD MSTORE PUSH1 0x60 DUP1 DUP3 ADD MLOAD SWAP1 DUP8 ADD MSTORE PUSH1 0x80 SWAP1 DUP2 ADD MLOAD PUSH1 0xA0 SWAP2 DUP8 ADD DUP3 SWAP1 MSTORE SWAP1 PUSH2 0x2F36 DUP2 DUP9 ADD DUP4 PUSH2 0x2D94 JUMP JUMPDEST SWAP8 DUP7 ADD SWAP8 SWAP7 POP POP POP SWAP1 DUP4 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x2ECA JUMP JUMPDEST POP POP POP POP DUP4 DUP2 SUB PUSH1 0x40 DUP6 ADD MSTORE PUSH2 0x2F60 DUP2 DUP10 PUSH2 0x2D22 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x2FA2 PUSH1 0x60 DUP5 ADD DUP8 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP3 MLOAD AND DUP4 MSTORE PUSH1 0x20 DUP3 ADD MLOAD ISZERO ISZERO PUSH1 0x20 DUP5 ADD MSTORE DUP1 PUSH1 0x40 DUP4 ADD MLOAD AND PUSH1 0x40 DUP5 ADD MSTORE POP PUSH1 0x60 DUP2 ADD MLOAD ISZERO ISZERO PUSH1 0x60 DUP4 ADD MSTORE POP POP JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0xE0 DUP5 ADD MSTORE PUSH2 0x2FB4 DUP2 DUP7 PUSH2 0x2D65 JUMP JUMPDEST SWAP2 POP POP DUP3 PUSH2 0x100 DUP4 ADD MSTORE SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 MSTORE PUSH2 0x1B82 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x2D94 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 MSTORE DUP3 MLOAD PUSH1 0xA0 PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x2FF8 PUSH1 0xC0 DUP5 ADD DUP3 PUSH2 0x2D94 JUMP JUMPDEST SWAP1 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH1 0x20 DUP6 ADD MLOAD AND PUSH1 0x40 DUP5 ADD MSTORE PUSH1 0x40 DUP5 ADD MLOAD PUSH1 0x60 DUP5 ADD MSTORE PUSH1 0x60 DUP5 ADD MLOAD PUSH1 0x80 DUP5 ADD MSTORE PUSH1 0x80 DUP5 ADD MLOAD PUSH1 0xA0 DUP5 ADD MSTORE DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xE0 DUP3 MSTORE DUP6 MLOAD PUSH1 0xE0 DUP4 ADD MSTORE PUSH1 0x20 DUP7 ADD MLOAD PUSH2 0x3055 PUSH2 0x100 DUP5 ADD DUP3 PUSH2 0x2DC0 JUMP JUMPDEST POP PUSH1 0x40 DUP7 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND PUSH2 0x120 DUP5 ADD MSTORE PUSH1 0x60 DUP8 ADD MLOAD AND PUSH2 0x140 DUP4 ADD MSTORE PUSH1 0x80 DUP7 ADD MLOAD PUSH2 0x160 DUP4 ADD MSTORE PUSH1 0xA0 DUP7 ADD MLOAD PUSH1 0xC0 PUSH2 0x180 DUP5 ADD MSTORE PUSH2 0x309E PUSH2 0x1A0 DUP5 ADD DUP3 PUSH2 0x2D94 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x30E0 PUSH1 0x20 DUP4 ADD DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP3 MLOAD AND DUP4 MSTORE PUSH1 0x20 DUP3 ADD MLOAD ISZERO ISZERO PUSH1 0x20 DUP5 ADD MSTORE DUP1 PUSH1 0x40 DUP4 ADD MLOAD AND PUSH1 0x40 DUP5 ADD MSTORE POP PUSH1 0x60 DUP2 ADD MLOAD ISZERO ISZERO PUSH1 0x60 DUP4 ADD MSTORE POP POP JUMP JUMPDEST PUSH1 0xA0 DUP3 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0xC0 ADD MSTORE SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP7 DUP3 MSTORE DUP6 PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0xA0 PUSH1 0x40 DUP4 ADD MSTORE PUSH2 0x3111 PUSH1 0xA0 DUP4 ADD DUP7 PUSH2 0x2D22 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP5 SWAP1 SWAP5 AND PUSH1 0x60 DUP4 ADD MSTORE POP PUSH1 0x80 ADD MSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND DUP2 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x3157 JUMPI PUSH2 0x3157 PUSH2 0x31D2 JUMP JUMPDEST PUSH1 0x40 MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x3179 JUMPI PUSH2 0x3179 PUSH2 0x31D2 JUMP JUMPDEST POP PUSH1 0x5 SHL PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x31A1 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 DUP2 REVERT JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x31C1 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x31A9 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x1EF6 JUMPI POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x31FD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0xFF DUP2 AND DUP2 EQ PUSH2 0x31FD JUMPI PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SLOAD NOT 0xC4 SWAP7 0xF8 PUSH5 0x1090590A91 0xE3 PUSH6 0xCA55D66994F9 0xC2 SWAP16 SWAP6 SWAP14 SWAP4 SHL SHR 0x4F 0xBA 0xEF 0xE5 NUMBER 0x2C PUSH5 0x736F6C6343 STOP ADDMOD SUB STOP CALLER ","sourceMap":"1791:2693:22:-:0;;;2531:569;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;;1590:20:4;;;;;;;;1790:54:27;;;;;;;1854:47:28;;;;;;;1734:52:23;;;;;;;1395:61:26;;;;;;1403:63:25;;;;;1791:2693:22;;14:177:33;93:13;;-1:-1:-1;;;;;135:31:33;;125:42;;115:2;;181:1;178;171:12;115:2;74:117;;;:::o;196:646::-;;;;;;;404:3;392:9;383:7;379:23;375:33;372:2;;;426:6;418;411:22;372:2;454:40;484:9;454:40;:::i;:::-;444:50;;513:49;558:2;547:9;543:18;513:49;:::i;:::-;503:59;;581:49;626:2;615:9;611:18;581:49;:::i;:::-;571:59;;649:49;694:2;683:9;679:18;649:49;:::i;:::-;639:59;;717:50;762:3;751:9;747:19;717:50;:::i;:::-;707:60;;786:50;831:3;820:9;816:19;786:50;:::i;:::-;776:60;;362:480;;;;;;;;:::o;:::-;1791:2693:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:29062:33","statements":[{"nodeType":"YulBlock","src":"6:3:33","statements":[]},{"body":{"nodeType":"YulBlock","src":"89:690:33","statements":[{"body":{"nodeType":"YulBlock","src":"138:24:33","statements":[{"expression":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"147:5:33"},{"name":"array","nodeType":"YulIdentifier","src":"154:5:33"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"140:6:33"},"nodeType":"YulFunctionCall","src":"140:20:33"},"nodeType":"YulExpressionStatement","src":"140:20:33"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"117:6:33"},{"kind":"number","nodeType":"YulLiteral","src":"125:4:33","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"113:3:33"},"nodeType":"YulFunctionCall","src":"113:17:33"},{"name":"end","nodeType":"YulIdentifier","src":"132:3:33"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"109:3:33"},"nodeType":"YulFunctionCall","src":"109:27:33"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"102:6:33"},"nodeType":"YulFunctionCall","src":"102:35:33"},"nodeType":"YulIf","src":"99:2:33"},{"nodeType":"YulVariableDeclaration","src":"171:23:33","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"187:6:33"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"181:5:33"},"nodeType":"YulFunctionCall","src":"181:13:33"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"175:2:33","type":""}]},{"nodeType":"YulVariableDeclaration","src":"203:14:33","value":{"kind":"number","nodeType":"YulLiteral","src":"213:4:33","type":"","value":"0x20"},"variables":[{"name":"_2","nodeType":"YulTypedName","src":"207:2:33","type":""}]},{"nodeType":"YulVariableDeclaration","src":"226:71:33","value":{"arguments":[{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"293:2:33"}],"functionName":{"name":"array_allocation_size_array_address_dyn","nodeType":"YulIdentifier","src":"253:39:33"},"nodeType":"YulFunctionCall","src":"253:43:33"}],"functionName":{"name":"allocate_memory","nodeType":"YulIdentifier","src":"237:15:33"},"nodeType":"YulFunctionCall","src":"237:60:33"},"variables":[{"name":"dst","nodeType":"YulTypedName","src":"230:3:33","type":""}]},{"nodeType":"YulVariableDeclaration","src":"306:16:33","value":{"name":"dst","nodeType":"YulIdentifier","src":"319:3:33"},"variables":[{"name":"dst_1","nodeType":"YulTypedName","src":"310:5:33","type":""}]},{"expression":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"338:3:33"},{"name":"_1","nodeType":"YulIdentifier","src":"343:2:33"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"331:6:33"},"nodeType":"YulFunctionCall","src":"331:15:33"},"nodeType":"YulExpressionStatement","src":"331:15:33"},{"nodeType":"YulAssignment","src":"355:19:33","value":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"366:3:33"},{"name":"_2","nodeType":"YulIdentifier","src":"371:2:33"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"362:3:33"},"nodeType":"YulFunctionCall","src":"362:12:33"},"variableNames":[{"name":"dst","nodeType":"YulIdentifier","src":"355:3:33"}]},{"nodeType":"YulVariableDeclaration","src":"383:26:33","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"398:6:33"},{"name":"_2","nodeType":"YulIdentifier","src":"406:2:33"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"394:3:33"},"nodeType":"YulFunctionCall","src":"394:15:33"},"variables":[{"name":"src","nodeType":"YulTypedName","src":"387:3:33","type":""}]},{"body":{"nodeType":"YulBlock","src":"463:24:33","statements":[{"expression":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"472:5:33"},{"name":"array","nodeType":"YulIdentifier","src":"479:5:33"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"465:6:33"},"nodeType":"YulFunctionCall","src":"465:20:33"},"nodeType":"YulExpressionStatement","src":"465:20:33"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"432:6:33"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"444:1:33","type":"","value":"5"},{"name":"_1","nodeType":"YulIdentifier","src":"447:2:33"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"440:3:33"},"nodeType":"YulFunctionCall","src":"440:10:33"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"428:3:33"},"nodeType":"YulFunctionCall","src":"428:23:33"},{"name":"_2","nodeType":"YulIdentifier","src":"453:2:33"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"424:3:33"},"nodeType":"YulFunctionCall","src":"424:32:33"},{"name":"end","nodeType":"YulIdentifier","src":"458:3:33"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"421:2:33"},"nodeType":"YulFunctionCall","src":"421:41:33"},"nodeType":"YulIf","src":"418:2:33"},{"nodeType":"YulVariableDeclaration","src":"496:14:33","value":{"name":"array","nodeType":"YulIdentifier","src":"505:5:33"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"500:1:33","type":""}]},{"body":{"nodeType":"YulBlock","src":"564:186:33","statements":[{"nodeType":"YulVariableDeclaration","src":"578:23:33","value":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"597:3:33"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"591:5:33"},"nodeType":"YulFunctionCall","src":"591:10:33"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"582:5:33","type":""}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"639:5:33"}],"functionName":{"name":"validator_revert_address","nodeType":"YulIdentifier","src":"614:24:33"},"nodeType":"YulFunctionCall","src":"614:31:33"},"nodeType":"YulExpressionStatement","src":"614:31:33"},{"expression":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"665:3:33"},{"name":"value","nodeType":"YulIdentifier","src":"670:5:33"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"658:6:33"},"nodeType":"YulFunctionCall","src":"658:18:33"},"nodeType":"YulExpressionStatement","src":"658:18:33"},{"nodeType":"YulAssignment","src":"689:19:33","value":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"700:3:33"},{"name":"_2","nodeType":"YulIdentifier","src":"705:2:33"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"696:3:33"},"nodeType":"YulFunctionCall","src":"696:12:33"},"variableNames":[{"name":"dst","nodeType":"YulIdentifier","src":"689:3:33"}]},{"nodeType":"YulAssignment","src":"721:19:33","value":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"732:3:33"},{"name":"_2","nodeType":"YulIdentifier","src":"737:2:33"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"728:3:33"},"nodeType":"YulFunctionCall","src":"728:12:33"},"variableNames":[{"name":"src","nodeType":"YulIdentifier","src":"721:3:33"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"530:1:33"},{"name":"_1","nodeType":"YulIdentifier","src":"533:2:33"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"527:2:33"},"nodeType":"YulFunctionCall","src":"527:9:33"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"537:18:33","statements":[{"nodeType":"YulAssignment","src":"539:14:33","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"548:1:33"},{"kind":"number","nodeType":"YulLiteral","src":"551:1:33","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"544:3:33"},"nodeType":"YulFunctionCall","src":"544:9:33"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"539:1:33"}]}]},"pre":{"nodeType":"YulBlock","src":"523:3:33","statements":[]},"src":"519:231:33"},{"nodeType":"YulAssignment","src":"759:14:33","value":{"name":"dst_1","nodeType":"YulIdentifier","src":"768:5:33"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"759:5:33"}]}]},"name":"abi_decode_array_address_dyn_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"63:6:33","type":""},{"name":"end","nodeType":"YulTypedName","src":"71:3:33","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"79:5:33","type":""}],"src":"14:765:33"},{"body":{"nodeType":"YulBlock","src":"859:615:33","statements":[{"body":{"nodeType":"YulBlock","src":"908:24:33","statements":[{"expression":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"917:5:33"},{"name":"array","nodeType":"YulIdentifier","src":"924:5:33"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"910:6:33"},"nodeType":"YulFunctionCall","src":"910:20:33"},"nodeType":"YulExpressionStatement","src":"910:20:33"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"887:6:33"},{"kind":"number","nodeType":"YulLiteral","src":"895:4:33","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"883:3:33"},"nodeType":"YulFunctionCall","src":"883:17:33"},{"name":"end","nodeType":"YulIdentifier","src":"902:3:33"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"879:3:33"},"nodeType":"YulFunctionCall","src":"879:27:33"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"872:6:33"},"nodeType":"YulFunctionCall","src":"872:35:33"},"nodeType":"YulIf","src":"869:2:33"},{"nodeType":"YulVariableDeclaration","src":"941:23:33","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"957:6:33"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"951:5:33"},"nodeType":"YulFunctionCall","src":"951:13:33"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"945:2:33","type":""}]},{"nodeType":"YulVariableDeclaration","src":"973:14:33","value":{"kind":"number","nodeType":"YulLiteral","src":"983:4:33","type":"","value":"0x20"},"variables":[{"name":"_2","nodeType":"YulTypedName","src":"977:2:33","type":""}]},{"nodeType":"YulVariableDeclaration","src":"996:71:33","value":{"arguments":[{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"1063:2:33"}],"functionName":{"name":"array_allocation_size_array_address_dyn","nodeType":"YulIdentifier","src":"1023:39:33"},"nodeType":"YulFunctionCall","src":"1023:43:33"}],"functionName":{"name":"allocate_memory","nodeType":"YulIdentifier","src":"1007:15:33"},"nodeType":"YulFunctionCall","src":"1007:60:33"},"variables":[{"name":"dst","nodeType":"YulTypedName","src":"1000:3:33","type":""}]},{"nodeType":"YulVariableDeclaration","src":"1076:16:33","value":{"name":"dst","nodeType":"YulIdentifier","src":"1089:3:33"},"variables":[{"name":"dst_1","nodeType":"YulTypedName","src":"1080:5:33","type":""}]},{"expression":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"1108:3:33"},{"name":"_1","nodeType":"YulIdentifier","src":"1113:2:33"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1101:6:33"},"nodeType":"YulFunctionCall","src":"1101:15:33"},"nodeType":"YulExpressionStatement","src":"1101:15:33"},{"nodeType":"YulAssignment","src":"1125:19:33","value":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"1136:3:33"},{"name":"_2","nodeType":"YulIdentifier","src":"1141:2:33"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1132:3:33"},"nodeType":"YulFunctionCall","src":"1132:12:33"},"variableNames":[{"name":"dst","nodeType":"YulIdentifier","src":"1125:3:33"}]},{"nodeType":"YulVariableDeclaration","src":"1153:26:33","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1168:6:33"},{"name":"_2","nodeType":"YulIdentifier","src":"1176:2:33"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1164:3:33"},"nodeType":"YulFunctionCall","src":"1164:15:33"},"variables":[{"name":"src","nodeType":"YulTypedName","src":"1157:3:33","type":""}]},{"body":{"nodeType":"YulBlock","src":"1233:24:33","statements":[{"expression":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"1242:5:33"},{"name":"array","nodeType":"YulIdentifier","src":"1249:5:33"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1235:6:33"},"nodeType":"YulFunctionCall","src":"1235:20:33"},"nodeType":"YulExpressionStatement","src":"1235:20:33"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1202:6:33"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1214:1:33","type":"","value":"5"},{"name":"_1","nodeType":"YulIdentifier","src":"1217:2:33"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"1210:3:33"},"nodeType":"YulFunctionCall","src":"1210:10:33"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1198:3:33"},"nodeType":"YulFunctionCall","src":"1198:23:33"},{"name":"_2","nodeType":"YulIdentifier","src":"1223:2:33"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1194:3:33"},"nodeType":"YulFunctionCall","src":"1194:32:33"},{"name":"end","nodeType":"YulIdentifier","src":"1228:3:33"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1191:2:33"},"nodeType":"YulFunctionCall","src":"1191:41:33"},"nodeType":"YulIf","src":"1188:2:33"},{"nodeType":"YulVariableDeclaration","src":"1266:14:33","value":{"name":"array","nodeType":"YulIdentifier","src":"1275:5:33"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"1270:1:33","type":""}]},{"body":{"nodeType":"YulBlock","src":"1334:111:33","statements":[{"expression":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"1355:3:33"},{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"1366:3:33"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1360:5:33"},"nodeType":"YulFunctionCall","src":"1360:10:33"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1348:6:33"},"nodeType":"YulFunctionCall","src":"1348:23:33"},"nodeType":"YulExpressionStatement","src":"1348:23:33"},{"nodeType":"YulAssignment","src":"1384:19:33","value":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"1395:3:33"},{"name":"_2","nodeType":"YulIdentifier","src":"1400:2:33"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1391:3:33"},"nodeType":"YulFunctionCall","src":"1391:12:33"},"variableNames":[{"name":"dst","nodeType":"YulIdentifier","src":"1384:3:33"}]},{"nodeType":"YulAssignment","src":"1416:19:33","value":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"1427:3:33"},{"name":"_2","nodeType":"YulIdentifier","src":"1432:2:33"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1423:3:33"},"nodeType":"YulFunctionCall","src":"1423:12:33"},"variableNames":[{"name":"src","nodeType":"YulIdentifier","src":"1416:3:33"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"1300:1:33"},{"name":"_1","nodeType":"YulIdentifier","src":"1303:2:33"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"1297:2:33"},"nodeType":"YulFunctionCall","src":"1297:9:33"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"1307:18:33","statements":[{"nodeType":"YulAssignment","src":"1309:14:33","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"1318:1:33"},{"kind":"number","nodeType":"YulLiteral","src":"1321:1:33","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1314:3:33"},"nodeType":"YulFunctionCall","src":"1314:9:33"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"1309:1:33"}]}]},"pre":{"nodeType":"YulBlock","src":"1293:3:33","statements":[]},"src":"1289:156:33"},{"nodeType":"YulAssignment","src":"1454:14:33","value":{"name":"dst_1","nodeType":"YulIdentifier","src":"1463:5:33"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"1454:5:33"}]}]},"name":"abi_decode_array_uint256_dyn_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"833:6:33","type":""},{"name":"end","nodeType":"YulTypedName","src":"841:3:33","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"849:5:33","type":""}],"src":"784:690:33"},{"body":{"nodeType":"YulBlock","src":"1538:106:33","statements":[{"nodeType":"YulAssignment","src":"1548:22:33","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1563:6:33"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1557:5:33"},"nodeType":"YulFunctionCall","src":"1557:13:33"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"1548:5:33"}]},{"body":{"nodeType":"YulBlock","src":"1622:16:33","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1631:1:33","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1634:1:33","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1624:6:33"},"nodeType":"YulFunctionCall","src":"1624:12:33"},"nodeType":"YulExpressionStatement","src":"1624:12:33"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1592:5:33"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1603:5:33"},{"kind":"number","nodeType":"YulLiteral","src":"1610:8:33","type":"","value":"0xffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1599:3:33"},"nodeType":"YulFunctionCall","src":"1599:20:33"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"1589:2:33"},"nodeType":"YulFunctionCall","src":"1589:31:33"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1582:6:33"},"nodeType":"YulFunctionCall","src":"1582:39:33"},"nodeType":"YulIf","src":"1579:2:33"}]},"name":"abi_decode_uint24_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"1517:6:33","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"1528:5:33","type":""}],"src":"1479:165:33"},{"body":{"nodeType":"YulBlock","src":"1730:180:33","statements":[{"body":{"nodeType":"YulBlock","src":"1776:26:33","statements":[{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"1785:6:33"},{"name":"value0","nodeType":"YulIdentifier","src":"1793:6:33"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1778:6:33"},"nodeType":"YulFunctionCall","src":"1778:22:33"},"nodeType":"YulExpressionStatement","src":"1778:22:33"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1751:7:33"},{"name":"headStart","nodeType":"YulIdentifier","src":"1760:9:33"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1747:3:33"},"nodeType":"YulFunctionCall","src":"1747:23:33"},{"kind":"number","nodeType":"YulLiteral","src":"1772:2:33","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1743:3:33"},"nodeType":"YulFunctionCall","src":"1743:32:33"},"nodeType":"YulIf","src":"1740:2:33"},{"nodeType":"YulVariableDeclaration","src":"1811:29:33","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1830:9:33"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1824:5:33"},"nodeType":"YulFunctionCall","src":"1824:16:33"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"1815:5:33","type":""}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1874:5:33"}],"functionName":{"name":"validator_revert_address","nodeType":"YulIdentifier","src":"1849:24:33"},"nodeType":"YulFunctionCall","src":"1849:31:33"},"nodeType":"YulExpressionStatement","src":"1849:31:33"},{"nodeType":"YulAssignment","src":"1889:15:33","value":{"name":"value","nodeType":"YulIdentifier","src":"1899:5:33"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1889:6:33"}]}]},"name":"abi_decode_tuple_t_address_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1696:9:33","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1707:7:33","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1719:6:33","type":""}],"src":"1649:261:33"},{"body":{"nodeType":"YulBlock","src":"2004:180:33","statements":[{"body":{"nodeType":"YulBlock","src":"2050:26:33","statements":[{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"2059:6:33"},{"name":"value0","nodeType":"YulIdentifier","src":"2067:6:33"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2052:6:33"},"nodeType":"YulFunctionCall","src":"2052:22:33"},"nodeType":"YulExpressionStatement","src":"2052:22:33"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"2025:7:33"},{"name":"headStart","nodeType":"YulIdentifier","src":"2034:9:33"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2021:3:33"},"nodeType":"YulFunctionCall","src":"2021:23:33"},{"kind":"number","nodeType":"YulLiteral","src":"2046:2:33","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2017:3:33"},"nodeType":"YulFunctionCall","src":"2017:32:33"},"nodeType":"YulIf","src":"2014:2:33"},{"nodeType":"YulVariableDeclaration","src":"2085:29:33","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2104:9:33"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2098:5:33"},"nodeType":"YulFunctionCall","src":"2098:16:33"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"2089:5:33","type":""}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2148:5:33"}],"functionName":{"name":"validator_revert_address","nodeType":"YulIdentifier","src":"2123:24:33"},"nodeType":"YulFunctionCall","src":"2123:31:33"},"nodeType":"YulExpressionStatement","src":"2123:31:33"},{"nodeType":"YulAssignment","src":"2163:15:33","value":{"name":"value","nodeType":"YulIdentifier","src":"2173:5:33"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"2163:6:33"}]}]},"name":"abi_decode_tuple_t_address_payable_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1970:9:33","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1981:7:33","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1993:6:33","type":""}],"src":"1915:269:33"},{"body":{"nodeType":"YulBlock","src":"2285:295:33","statements":[{"body":{"nodeType":"YulBlock","src":"2331:26:33","statements":[{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"2340:6:33"},{"name":"value1","nodeType":"YulIdentifier","src":"2348:6:33"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2333:6:33"},"nodeType":"YulFunctionCall","src":"2333:22:33"},"nodeType":"YulExpressionStatement","src":"2333:22:33"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"2306:7:33"},{"name":"headStart","nodeType":"YulIdentifier","src":"2315:9:33"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2302:3:33"},"nodeType":"YulFunctionCall","src":"2302:23:33"},{"kind":"number","nodeType":"YulLiteral","src":"2327:2:33","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2298:3:33"},"nodeType":"YulFunctionCall","src":"2298:32:33"},"nodeType":"YulIf","src":"2295:2:33"},{"nodeType":"YulVariableDeclaration","src":"2366:29:33","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2385:9:33"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2379:5:33"},"nodeType":"YulFunctionCall","src":"2379:16:33"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"2370:5:33","type":""}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2429:5:33"}],"functionName":{"name":"validator_revert_address","nodeType":"YulIdentifier","src":"2404:24:33"},"nodeType":"YulFunctionCall","src":"2404:31:33"},"nodeType":"YulExpressionStatement","src":"2404:31:33"},{"nodeType":"YulAssignment","src":"2444:15:33","value":{"name":"value","nodeType":"YulIdentifier","src":"2454:5:33"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"2444:6:33"}]},{"nodeType":"YulVariableDeclaration","src":"2468:40:33","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2493:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"2504:2:33","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2489:3:33"},"nodeType":"YulFunctionCall","src":"2489:18:33"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2483:5:33"},"nodeType":"YulFunctionCall","src":"2483:25:33"},"variables":[{"name":"value_1","nodeType":"YulTypedName","src":"2472:7:33","type":""}]},{"expression":{"arguments":[{"name":"value_1","nodeType":"YulIdentifier","src":"2540:7:33"}],"functionName":{"name":"validator_revert_uint8","nodeType":"YulIdentifier","src":"2517:22:33"},"nodeType":"YulFunctionCall","src":"2517:31:33"},"nodeType":"YulExpressionStatement","src":"2517:31:33"},{"nodeType":"YulAssignment","src":"2557:17:33","value":{"name":"value_1","nodeType":"YulIdentifier","src":"2567:7:33"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"2557:6:33"}]}]},"name":"abi_decode_tuple_t_addresst_uint8_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2243:9:33","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"2254:7:33","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"2266:6:33","type":""},{"name":"value1","nodeType":"YulTypedName","src":"2274:6:33","type":""}],"src":"2189:391:33"},{"body":{"nodeType":"YulBlock","src":"2691:277:33","statements":[{"body":{"nodeType":"YulBlock","src":"2737:26:33","statements":[{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"2746:6:33"},{"name":"value0","nodeType":"YulIdentifier","src":"2754:6:33"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2739:6:33"},"nodeType":"YulFunctionCall","src":"2739:22:33"},"nodeType":"YulExpressionStatement","src":"2739:22:33"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"2712:7:33"},{"name":"headStart","nodeType":"YulIdentifier","src":"2721:9:33"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2708:3:33"},"nodeType":"YulFunctionCall","src":"2708:23:33"},{"kind":"number","nodeType":"YulLiteral","src":"2733:2:33","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2704:3:33"},"nodeType":"YulFunctionCall","src":"2704:32:33"},"nodeType":"YulIf","src":"2701:2:33"},{"nodeType":"YulVariableDeclaration","src":"2772:30:33","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2792:9:33"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2786:5:33"},"nodeType":"YulFunctionCall","src":"2786:16:33"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2776:6:33","type":""}]},{"body":{"nodeType":"YulBlock","src":"2845:26:33","statements":[{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"2854:6:33"},{"name":"value0","nodeType":"YulIdentifier","src":"2862:6:33"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2847:6:33"},"nodeType":"YulFunctionCall","src":"2847:22:33"},"nodeType":"YulExpressionStatement","src":"2847:22:33"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2817:6:33"},{"kind":"number","nodeType":"YulLiteral","src":"2825:18:33","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2814:2:33"},"nodeType":"YulFunctionCall","src":"2814:30:33"},"nodeType":"YulIf","src":"2811:2:33"},{"nodeType":"YulAssignment","src":"2880:82:33","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2934:9:33"},{"name":"offset","nodeType":"YulIdentifier","src":"2945:6:33"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2930:3:33"},"nodeType":"YulFunctionCall","src":"2930:22:33"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"2954:7:33"}],"functionName":{"name":"abi_decode_array_address_dyn_fromMemory","nodeType":"YulIdentifier","src":"2890:39:33"},"nodeType":"YulFunctionCall","src":"2890:72:33"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"2880:6:33"}]}]},"name":"abi_decode_tuple_t_array$_t_address_$dyn_memory_ptr_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2657:9:33","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"2668:7:33","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"2680:6:33","type":""}],"src":"2585:383:33"},{"body":{"nodeType":"YulBlock","src":"3121:1050:33","statements":[{"body":{"nodeType":"YulBlock","src":"3167:26:33","statements":[{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"3176:6:33"},{"name":"value0","nodeType":"YulIdentifier","src":"3184:6:33"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3169:6:33"},"nodeType":"YulFunctionCall","src":"3169:22:33"},"nodeType":"YulExpressionStatement","src":"3169:22:33"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"3142:7:33"},{"name":"headStart","nodeType":"YulIdentifier","src":"3151:9:33"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3138:3:33"},"nodeType":"YulFunctionCall","src":"3138:23:33"},{"kind":"number","nodeType":"YulLiteral","src":"3163:2:33","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"3134:3:33"},"nodeType":"YulFunctionCall","src":"3134:32:33"},"nodeType":"YulIf","src":"3131:2:33"},{"nodeType":"YulVariableDeclaration","src":"3202:30:33","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3222:9:33"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3216:5:33"},"nodeType":"YulFunctionCall","src":"3216:16:33"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"3206:6:33","type":""}]},{"nodeType":"YulVariableDeclaration","src":"3241:28:33","value":{"kind":"number","nodeType":"YulLiteral","src":"3251:18:33","type":"","value":"0xffffffffffffffff"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"3245:2:33","type":""}]},{"body":{"nodeType":"YulBlock","src":"3296:26:33","statements":[{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"3305:6:33"},{"name":"value0","nodeType":"YulIdentifier","src":"3313:6:33"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3298:6:33"},"nodeType":"YulFunctionCall","src":"3298:22:33"},"nodeType":"YulExpressionStatement","src":"3298:22:33"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"3284:6:33"},{"name":"_1","nodeType":"YulIdentifier","src":"3292:2:33"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"3281:2:33"},"nodeType":"YulFunctionCall","src":"3281:14:33"},"nodeType":"YulIf","src":"3278:2:33"},{"nodeType":"YulAssignment","src":"3331:82:33","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3385:9:33"},{"name":"offset","nodeType":"YulIdentifier","src":"3396:6:33"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3381:3:33"},"nodeType":"YulFunctionCall","src":"3381:22:33"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"3405:7:33"}],"functionName":{"name":"abi_decode_array_address_dyn_fromMemory","nodeType":"YulIdentifier","src":"3341:39:33"},"nodeType":"YulFunctionCall","src":"3341:72:33"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"3331:6:33"}]},{"nodeType":"YulVariableDeclaration","src":"3422:12:33","value":{"kind":"number","nodeType":"YulLiteral","src":"3432:2:33","type":"","value":"32"},"variables":[{"name":"_2","nodeType":"YulTypedName","src":"3426:2:33","type":""}]},{"nodeType":"YulVariableDeclaration","src":"3443:41:33","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3469:9:33"},{"name":"_2","nodeType":"YulIdentifier","src":"3480:2:33"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3465:3:33"},"nodeType":"YulFunctionCall","src":"3465:18:33"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3459:5:33"},"nodeType":"YulFunctionCall","src":"3459:25:33"},"variables":[{"name":"offset_1","nodeType":"YulTypedName","src":"3447:8:33","type":""}]},{"body":{"nodeType":"YulBlock","src":"3513:26:33","statements":[{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"3522:6:33"},{"name":"value1","nodeType":"YulIdentifier","src":"3530:6:33"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3515:6:33"},"nodeType":"YulFunctionCall","src":"3515:22:33"},"nodeType":"YulExpressionStatement","src":"3515:22:33"}]},"condition":{"arguments":[{"name":"offset_1","nodeType":"YulIdentifier","src":"3499:8:33"},{"name":"_1","nodeType":"YulIdentifier","src":"3509:2:33"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"3496:2:33"},"nodeType":"YulFunctionCall","src":"3496:16:33"},"nodeType":"YulIf","src":"3493:2:33"},{"nodeType":"YulVariableDeclaration","src":"3548:34:33","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3562:9:33"},{"name":"offset_1","nodeType":"YulIdentifier","src":"3573:8:33"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3558:3:33"},"nodeType":"YulFunctionCall","src":"3558:24:33"},"variables":[{"name":"_3","nodeType":"YulTypedName","src":"3552:2:33","type":""}]},{"body":{"nodeType":"YulBlock","src":"3630:26:33","statements":[{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"3639:6:33"},{"name":"value1","nodeType":"YulIdentifier","src":"3647:6:33"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3632:6:33"},"nodeType":"YulFunctionCall","src":"3632:22:33"},"nodeType":"YulExpressionStatement","src":"3632:22:33"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"_3","nodeType":"YulIdentifier","src":"3609:2:33"},{"kind":"number","nodeType":"YulLiteral","src":"3613:4:33","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3605:3:33"},"nodeType":"YulFunctionCall","src":"3605:13:33"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"3620:7:33"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"3601:3:33"},"nodeType":"YulFunctionCall","src":"3601:27:33"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"3594:6:33"},"nodeType":"YulFunctionCall","src":"3594:35:33"},"nodeType":"YulIf","src":"3591:2:33"},{"nodeType":"YulVariableDeclaration","src":"3665:19:33","value":{"arguments":[{"name":"_3","nodeType":"YulIdentifier","src":"3681:2:33"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3675:5:33"},"nodeType":"YulFunctionCall","src":"3675:9:33"},"variables":[{"name":"_4","nodeType":"YulTypedName","src":"3669:2:33","type":""}]},{"nodeType":"YulVariableDeclaration","src":"3693:71:33","value":{"arguments":[{"arguments":[{"name":"_4","nodeType":"YulIdentifier","src":"3760:2:33"}],"functionName":{"name":"array_allocation_size_array_address_dyn","nodeType":"YulIdentifier","src":"3720:39:33"},"nodeType":"YulFunctionCall","src":"3720:43:33"}],"functionName":{"name":"allocate_memory","nodeType":"YulIdentifier","src":"3704:15:33"},"nodeType":"YulFunctionCall","src":"3704:60:33"},"variables":[{"name":"dst","nodeType":"YulTypedName","src":"3697:3:33","type":""}]},{"nodeType":"YulVariableDeclaration","src":"3773:16:33","value":{"name":"dst","nodeType":"YulIdentifier","src":"3786:3:33"},"variables":[{"name":"dst_1","nodeType":"YulTypedName","src":"3777:5:33","type":""}]},{"expression":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"3805:3:33"},{"name":"_4","nodeType":"YulIdentifier","src":"3810:2:33"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3798:6:33"},"nodeType":"YulFunctionCall","src":"3798:15:33"},"nodeType":"YulExpressionStatement","src":"3798:15:33"},{"nodeType":"YulAssignment","src":"3822:19:33","value":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"3833:3:33"},{"name":"_2","nodeType":"YulIdentifier","src":"3838:2:33"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3829:3:33"},"nodeType":"YulFunctionCall","src":"3829:12:33"},"variableNames":[{"name":"dst","nodeType":"YulIdentifier","src":"3822:3:33"}]},{"nodeType":"YulVariableDeclaration","src":"3850:22:33","value":{"arguments":[{"name":"_3","nodeType":"YulIdentifier","src":"3865:2:33"},{"name":"_2","nodeType":"YulIdentifier","src":"3869:2:33"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3861:3:33"},"nodeType":"YulFunctionCall","src":"3861:11:33"},"variables":[{"name":"src","nodeType":"YulTypedName","src":"3854:3:33","type":""}]},{"body":{"nodeType":"YulBlock","src":"3926:26:33","statements":[{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"3935:6:33"},{"name":"value1","nodeType":"YulIdentifier","src":"3943:6:33"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3928:6:33"},"nodeType":"YulFunctionCall","src":"3928:22:33"},"nodeType":"YulExpressionStatement","src":"3928:22:33"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"_3","nodeType":"YulIdentifier","src":"3895:2:33"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3903:1:33","type":"","value":"5"},{"name":"_4","nodeType":"YulIdentifier","src":"3906:2:33"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"3899:3:33"},"nodeType":"YulFunctionCall","src":"3899:10:33"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3891:3:33"},"nodeType":"YulFunctionCall","src":"3891:19:33"},{"name":"_2","nodeType":"YulIdentifier","src":"3912:2:33"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3887:3:33"},"nodeType":"YulFunctionCall","src":"3887:28:33"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"3917:7:33"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"3884:2:33"},"nodeType":"YulFunctionCall","src":"3884:41:33"},"nodeType":"YulIf","src":"3881:2:33"},{"nodeType":"YulVariableDeclaration","src":"3961:15:33","value":{"name":"value1","nodeType":"YulIdentifier","src":"3970:6:33"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"3965:1:33","type":""}]},{"body":{"nodeType":"YulBlock","src":"4030:111:33","statements":[{"expression":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"4051:3:33"},{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"4062:3:33"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"4056:5:33"},"nodeType":"YulFunctionCall","src":"4056:10:33"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4044:6:33"},"nodeType":"YulFunctionCall","src":"4044:23:33"},"nodeType":"YulExpressionStatement","src":"4044:23:33"},{"nodeType":"YulAssignment","src":"4080:19:33","value":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"4091:3:33"},{"name":"_2","nodeType":"YulIdentifier","src":"4096:2:33"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4087:3:33"},"nodeType":"YulFunctionCall","src":"4087:12:33"},"variableNames":[{"name":"dst","nodeType":"YulIdentifier","src":"4080:3:33"}]},{"nodeType":"YulAssignment","src":"4112:19:33","value":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"4123:3:33"},{"name":"_2","nodeType":"YulIdentifier","src":"4128:2:33"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4119:3:33"},"nodeType":"YulFunctionCall","src":"4119:12:33"},"variableNames":[{"name":"src","nodeType":"YulIdentifier","src":"4112:3:33"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"3996:1:33"},{"name":"_4","nodeType":"YulIdentifier","src":"3999:2:33"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"3993:2:33"},"nodeType":"YulFunctionCall","src":"3993:9:33"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"4003:18:33","statements":[{"nodeType":"YulAssignment","src":"4005:14:33","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"4014:1:33"},{"kind":"number","nodeType":"YulLiteral","src":"4017:1:33","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4010:3:33"},"nodeType":"YulFunctionCall","src":"4010:9:33"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"4005:1:33"}]}]},"pre":{"nodeType":"YulBlock","src":"3989:3:33","statements":[]},"src":"3985:156:33"},{"nodeType":"YulAssignment","src":"4150:15:33","value":{"name":"dst_1","nodeType":"YulIdentifier","src":"4160:5:33"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"4150:6:33"}]}]},"name":"abi_decode_tuple_t_array$_t_address_$dyn_memory_ptrt_array$_t_bytes32_$dyn_memory_ptr_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3079:9:33","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"3090:7:33","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"3102:6:33","type":""},{"name":"value1","nodeType":"YulTypedName","src":"3110:6:33","type":""}],"src":"2973:1198:33"},{"body":{"nodeType":"YulBlock","src":"4323:1073:33","statements":[{"body":{"nodeType":"YulBlock","src":"4369:26:33","statements":[{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"4378:6:33"},{"name":"value0","nodeType":"YulIdentifier","src":"4386:6:33"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"4371:6:33"},"nodeType":"YulFunctionCall","src":"4371:22:33"},"nodeType":"YulExpressionStatement","src":"4371:22:33"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"4344:7:33"},{"name":"headStart","nodeType":"YulIdentifier","src":"4353:9:33"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4340:3:33"},"nodeType":"YulFunctionCall","src":"4340:23:33"},{"kind":"number","nodeType":"YulLiteral","src":"4365:2:33","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"4336:3:33"},"nodeType":"YulFunctionCall","src":"4336:32:33"},"nodeType":"YulIf","src":"4333:2:33"},{"nodeType":"YulVariableDeclaration","src":"4404:30:33","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4424:9:33"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"4418:5:33"},"nodeType":"YulFunctionCall","src":"4418:16:33"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4408:6:33","type":""}]},{"nodeType":"YulVariableDeclaration","src":"4443:28:33","value":{"kind":"number","nodeType":"YulLiteral","src":"4453:18:33","type":"","value":"0xffffffffffffffff"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"4447:2:33","type":""}]},{"body":{"nodeType":"YulBlock","src":"4498:26:33","statements":[{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"4507:6:33"},{"name":"value0","nodeType":"YulIdentifier","src":"4515:6:33"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"4500:6:33"},"nodeType":"YulFunctionCall","src":"4500:22:33"},"nodeType":"YulExpressionStatement","src":"4500:22:33"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"4486:6:33"},{"name":"_1","nodeType":"YulIdentifier","src":"4494:2:33"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"4483:2:33"},"nodeType":"YulFunctionCall","src":"4483:14:33"},"nodeType":"YulIf","src":"4480:2:33"},{"nodeType":"YulAssignment","src":"4533:82:33","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4587:9:33"},{"name":"offset","nodeType":"YulIdentifier","src":"4598:6:33"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4583:3:33"},"nodeType":"YulFunctionCall","src":"4583:22:33"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4607:7:33"}],"functionName":{"name":"abi_decode_array_address_dyn_fromMemory","nodeType":"YulIdentifier","src":"4543:39:33"},"nodeType":"YulFunctionCall","src":"4543:72:33"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"4533:6:33"}]},{"nodeType":"YulVariableDeclaration","src":"4624:12:33","value":{"kind":"number","nodeType":"YulLiteral","src":"4634:2:33","type":"","value":"32"},"variables":[{"name":"_2","nodeType":"YulTypedName","src":"4628:2:33","type":""}]},{"nodeType":"YulVariableDeclaration","src":"4645:41:33","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4671:9:33"},{"name":"_2","nodeType":"YulIdentifier","src":"4682:2:33"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4667:3:33"},"nodeType":"YulFunctionCall","src":"4667:18:33"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"4661:5:33"},"nodeType":"YulFunctionCall","src":"4661:25:33"},"variables":[{"name":"offset_1","nodeType":"YulTypedName","src":"4649:8:33","type":""}]},{"body":{"nodeType":"YulBlock","src":"4715:26:33","statements":[{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"4724:6:33"},{"name":"value1","nodeType":"YulIdentifier","src":"4732:6:33"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"4717:6:33"},"nodeType":"YulFunctionCall","src":"4717:22:33"},"nodeType":"YulExpressionStatement","src":"4717:22:33"}]},"condition":{"arguments":[{"name":"offset_1","nodeType":"YulIdentifier","src":"4701:8:33"},{"name":"_1","nodeType":"YulIdentifier","src":"4711:2:33"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"4698:2:33"},"nodeType":"YulFunctionCall","src":"4698:16:33"},"nodeType":"YulIf","src":"4695:2:33"},{"nodeType":"YulVariableDeclaration","src":"4750:34:33","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4764:9:33"},{"name":"offset_1","nodeType":"YulIdentifier","src":"4775:8:33"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4760:3:33"},"nodeType":"YulFunctionCall","src":"4760:24:33"},"variables":[{"name":"_3","nodeType":"YulTypedName","src":"4754:2:33","type":""}]},{"body":{"nodeType":"YulBlock","src":"4832:26:33","statements":[{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"4841:6:33"},{"name":"value1","nodeType":"YulIdentifier","src":"4849:6:33"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"4834:6:33"},"nodeType":"YulFunctionCall","src":"4834:22:33"},"nodeType":"YulExpressionStatement","src":"4834:22:33"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"_3","nodeType":"YulIdentifier","src":"4811:2:33"},{"kind":"number","nodeType":"YulLiteral","src":"4815:4:33","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4807:3:33"},"nodeType":"YulFunctionCall","src":"4807:13:33"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4822:7:33"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"4803:3:33"},"nodeType":"YulFunctionCall","src":"4803:27:33"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"4796:6:33"},"nodeType":"YulFunctionCall","src":"4796:35:33"},"nodeType":"YulIf","src":"4793:2:33"},{"nodeType":"YulVariableDeclaration","src":"4867:19:33","value":{"arguments":[{"name":"_3","nodeType":"YulIdentifier","src":"4883:2:33"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"4877:5:33"},"nodeType":"YulFunctionCall","src":"4877:9:33"},"variables":[{"name":"_4","nodeType":"YulTypedName","src":"4871:2:33","type":""}]},{"nodeType":"YulVariableDeclaration","src":"4895:71:33","value":{"arguments":[{"arguments":[{"name":"_4","nodeType":"YulIdentifier","src":"4962:2:33"}],"functionName":{"name":"array_allocation_size_array_address_dyn","nodeType":"YulIdentifier","src":"4922:39:33"},"nodeType":"YulFunctionCall","src":"4922:43:33"}],"functionName":{"name":"allocate_memory","nodeType":"YulIdentifier","src":"4906:15:33"},"nodeType":"YulFunctionCall","src":"4906:60:33"},"variables":[{"name":"dst","nodeType":"YulTypedName","src":"4899:3:33","type":""}]},{"nodeType":"YulVariableDeclaration","src":"4975:16:33","value":{"name":"dst","nodeType":"YulIdentifier","src":"4988:3:33"},"variables":[{"name":"dst_1","nodeType":"YulTypedName","src":"4979:5:33","type":""}]},{"expression":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"5007:3:33"},{"name":"_4","nodeType":"YulIdentifier","src":"5012:2:33"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5000:6:33"},"nodeType":"YulFunctionCall","src":"5000:15:33"},"nodeType":"YulExpressionStatement","src":"5000:15:33"},{"nodeType":"YulAssignment","src":"5024:19:33","value":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"5035:3:33"},{"name":"_2","nodeType":"YulIdentifier","src":"5040:2:33"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5031:3:33"},"nodeType":"YulFunctionCall","src":"5031:12:33"},"variableNames":[{"name":"dst","nodeType":"YulIdentifier","src":"5024:3:33"}]},{"nodeType":"YulVariableDeclaration","src":"5052:22:33","value":{"arguments":[{"name":"_3","nodeType":"YulIdentifier","src":"5067:2:33"},{"name":"_2","nodeType":"YulIdentifier","src":"5071:2:33"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5063:3:33"},"nodeType":"YulFunctionCall","src":"5063:11:33"},"variables":[{"name":"src","nodeType":"YulTypedName","src":"5056:3:33","type":""}]},{"body":{"nodeType":"YulBlock","src":"5128:26:33","statements":[{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"5137:6:33"},{"name":"value1","nodeType":"YulIdentifier","src":"5145:6:33"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"5130:6:33"},"nodeType":"YulFunctionCall","src":"5130:22:33"},"nodeType":"YulExpressionStatement","src":"5130:22:33"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"_3","nodeType":"YulIdentifier","src":"5097:2:33"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5105:1:33","type":"","value":"5"},{"name":"_4","nodeType":"YulIdentifier","src":"5108:2:33"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"5101:3:33"},"nodeType":"YulFunctionCall","src":"5101:10:33"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5093:3:33"},"nodeType":"YulFunctionCall","src":"5093:19:33"},{"name":"_2","nodeType":"YulIdentifier","src":"5114:2:33"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5089:3:33"},"nodeType":"YulFunctionCall","src":"5089:28:33"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"5119:7:33"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"5086:2:33"},"nodeType":"YulFunctionCall","src":"5086:41:33"},"nodeType":"YulIf","src":"5083:2:33"},{"nodeType":"YulVariableDeclaration","src":"5163:15:33","value":{"name":"value1","nodeType":"YulIdentifier","src":"5172:6:33"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"5167:1:33","type":""}]},{"body":{"nodeType":"YulBlock","src":"5232:134:33","statements":[{"expression":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"5253:3:33"},{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"5287:3:33"}],"functionName":{"name":"abi_decode_uint24_fromMemory","nodeType":"YulIdentifier","src":"5258:28:33"},"nodeType":"YulFunctionCall","src":"5258:33:33"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5246:6:33"},"nodeType":"YulFunctionCall","src":"5246:46:33"},"nodeType":"YulExpressionStatement","src":"5246:46:33"},{"nodeType":"YulAssignment","src":"5305:19:33","value":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"5316:3:33"},{"name":"_2","nodeType":"YulIdentifier","src":"5321:2:33"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5312:3:33"},"nodeType":"YulFunctionCall","src":"5312:12:33"},"variableNames":[{"name":"dst","nodeType":"YulIdentifier","src":"5305:3:33"}]},{"nodeType":"YulAssignment","src":"5337:19:33","value":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"5348:3:33"},{"name":"_2","nodeType":"YulIdentifier","src":"5353:2:33"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5344:3:33"},"nodeType":"YulFunctionCall","src":"5344:12:33"},"variableNames":[{"name":"src","nodeType":"YulIdentifier","src":"5337:3:33"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"5198:1:33"},{"name":"_4","nodeType":"YulIdentifier","src":"5201:2:33"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"5195:2:33"},"nodeType":"YulFunctionCall","src":"5195:9:33"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"5205:18:33","statements":[{"nodeType":"YulAssignment","src":"5207:14:33","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"5216:1:33"},{"kind":"number","nodeType":"YulLiteral","src":"5219:1:33","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5212:3:33"},"nodeType":"YulFunctionCall","src":"5212:9:33"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"5207:1:33"}]}]},"pre":{"nodeType":"YulBlock","src":"5191:3:33","statements":[]},"src":"5187:179:33"},{"nodeType":"YulAssignment","src":"5375:15:33","value":{"name":"dst_1","nodeType":"YulIdentifier","src":"5385:5:33"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"5375:6:33"}]}]},"name":"abi_decode_tuple_t_array$_t_address_$dyn_memory_ptrt_array$_t_uint24_$dyn_memory_ptr_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4281:9:33","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"4292:7:33","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"4304:6:33","type":""},{"name":"value1","nodeType":"YulTypedName","src":"4312:6:33","type":""}],"src":"4176:1220:33"},{"body":{"nodeType":"YulBlock","src":"5566:540:33","statements":[{"body":{"nodeType":"YulBlock","src":"5612:26:33","statements":[{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"5621:6:33"},{"name":"value2","nodeType":"YulIdentifier","src":"5629:6:33"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"5614:6:33"},"nodeType":"YulFunctionCall","src":"5614:22:33"},"nodeType":"YulExpressionStatement","src":"5614:22:33"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"5587:7:33"},{"name":"headStart","nodeType":"YulIdentifier","src":"5596:9:33"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5583:3:33"},"nodeType":"YulFunctionCall","src":"5583:23:33"},{"kind":"number","nodeType":"YulLiteral","src":"5608:2:33","type":"","value":"96"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"5579:3:33"},"nodeType":"YulFunctionCall","src":"5579:32:33"},"nodeType":"YulIf","src":"5576:2:33"},{"nodeType":"YulVariableDeclaration","src":"5647:30:33","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5667:9:33"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"5661:5:33"},"nodeType":"YulFunctionCall","src":"5661:16:33"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"5651:6:33","type":""}]},{"nodeType":"YulVariableDeclaration","src":"5686:28:33","value":{"kind":"number","nodeType":"YulLiteral","src":"5696:18:33","type":"","value":"0xffffffffffffffff"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"5690:2:33","type":""}]},{"body":{"nodeType":"YulBlock","src":"5741:26:33","statements":[{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"5750:6:33"},{"name":"value2","nodeType":"YulIdentifier","src":"5758:6:33"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"5743:6:33"},"nodeType":"YulFunctionCall","src":"5743:22:33"},"nodeType":"YulExpressionStatement","src":"5743:22:33"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"5729:6:33"},{"name":"_1","nodeType":"YulIdentifier","src":"5737:2:33"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"5726:2:33"},"nodeType":"YulFunctionCall","src":"5726:14:33"},"nodeType":"YulIf","src":"5723:2:33"},{"nodeType":"YulAssignment","src":"5776:82:33","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5830:9:33"},{"name":"offset","nodeType":"YulIdentifier","src":"5841:6:33"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5826:3:33"},"nodeType":"YulFunctionCall","src":"5826:22:33"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"5850:7:33"}],"functionName":{"name":"abi_decode_array_address_dyn_fromMemory","nodeType":"YulIdentifier","src":"5786:39:33"},"nodeType":"YulFunctionCall","src":"5786:72:33"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"5776:6:33"}]},{"nodeType":"YulVariableDeclaration","src":"5867:41:33","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5893:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"5904:2:33","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5889:3:33"},"nodeType":"YulFunctionCall","src":"5889:18:33"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"5883:5:33"},"nodeType":"YulFunctionCall","src":"5883:25:33"},"variables":[{"name":"offset_1","nodeType":"YulTypedName","src":"5871:8:33","type":""}]},{"body":{"nodeType":"YulBlock","src":"5937:26:33","statements":[{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"5946:6:33"},{"name":"value2","nodeType":"YulIdentifier","src":"5954:6:33"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"5939:6:33"},"nodeType":"YulFunctionCall","src":"5939:22:33"},"nodeType":"YulExpressionStatement","src":"5939:22:33"}]},"condition":{"arguments":[{"name":"offset_1","nodeType":"YulIdentifier","src":"5923:8:33"},{"name":"_1","nodeType":"YulIdentifier","src":"5933:2:33"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"5920:2:33"},"nodeType":"YulFunctionCall","src":"5920:16:33"},"nodeType":"YulIf","src":"5917:2:33"},{"nodeType":"YulAssignment","src":"5972:84:33","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6026:9:33"},{"name":"offset_1","nodeType":"YulIdentifier","src":"6037:8:33"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6022:3:33"},"nodeType":"YulFunctionCall","src":"6022:24:33"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"6048:7:33"}],"functionName":{"name":"abi_decode_array_uint256_dyn_fromMemory","nodeType":"YulIdentifier","src":"5982:39:33"},"nodeType":"YulFunctionCall","src":"5982:74:33"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"5972:6:33"}]},{"nodeType":"YulAssignment","src":"6065:35:33","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6085:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"6096:2:33","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6081:3:33"},"nodeType":"YulFunctionCall","src":"6081:18:33"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"6075:5:33"},"nodeType":"YulFunctionCall","src":"6075:25:33"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"6065:6:33"}]}]},"name":"abi_decode_tuple_t_array$_t_address_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptrt_uint256_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5516:9:33","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"5527:7:33","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"5539:6:33","type":""},{"name":"value1","nodeType":"YulTypedName","src":"5547:6:33","type":""},{"name":"value2","nodeType":"YulTypedName","src":"5555:6:33","type":""}],"src":"5401:705:33"},{"body":{"nodeType":"YulBlock","src":"6216:831:33","statements":[{"nodeType":"YulVariableDeclaration","src":"6226:12:33","value":{"kind":"number","nodeType":"YulLiteral","src":"6236:2:33","type":"","value":"32"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"6230:2:33","type":""}]},{"body":{"nodeType":"YulBlock","src":"6283:26:33","statements":[{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"6292:6:33"},{"name":"value0","nodeType":"YulIdentifier","src":"6300:6:33"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"6285:6:33"},"nodeType":"YulFunctionCall","src":"6285:22:33"},"nodeType":"YulExpressionStatement","src":"6285:22:33"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"6258:7:33"},{"name":"headStart","nodeType":"YulIdentifier","src":"6267:9:33"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"6254:3:33"},"nodeType":"YulFunctionCall","src":"6254:23:33"},{"name":"_1","nodeType":"YulIdentifier","src":"6279:2:33"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"6250:3:33"},"nodeType":"YulFunctionCall","src":"6250:32:33"},"nodeType":"YulIf","src":"6247:2:33"},{"nodeType":"YulVariableDeclaration","src":"6318:30:33","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6338:9:33"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"6332:5:33"},"nodeType":"YulFunctionCall","src":"6332:16:33"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"6322:6:33","type":""}]},{"body":{"nodeType":"YulBlock","src":"6391:26:33","statements":[{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"6400:6:33"},{"name":"value0","nodeType":"YulIdentifier","src":"6408:6:33"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"6393:6:33"},"nodeType":"YulFunctionCall","src":"6393:22:33"},"nodeType":"YulExpressionStatement","src":"6393:22:33"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"6363:6:33"},{"kind":"number","nodeType":"YulLiteral","src":"6371:18:33","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"6360:2:33"},"nodeType":"YulFunctionCall","src":"6360:30:33"},"nodeType":"YulIf","src":"6357:2:33"},{"nodeType":"YulVariableDeclaration","src":"6426:32:33","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6440:9:33"},{"name":"offset","nodeType":"YulIdentifier","src":"6451:6:33"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6436:3:33"},"nodeType":"YulFunctionCall","src":"6436:22:33"},"variables":[{"name":"_2","nodeType":"YulTypedName","src":"6430:2:33","type":""}]},{"body":{"nodeType":"YulBlock","src":"6506:26:33","statements":[{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"6515:6:33"},{"name":"value0","nodeType":"YulIdentifier","src":"6523:6:33"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"6508:6:33"},"nodeType":"YulFunctionCall","src":"6508:22:33"},"nodeType":"YulExpressionStatement","src":"6508:22:33"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"_2","nodeType":"YulIdentifier","src":"6485:2:33"},{"kind":"number","nodeType":"YulLiteral","src":"6489:4:33","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6481:3:33"},"nodeType":"YulFunctionCall","src":"6481:13:33"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"6496:7:33"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"6477:3:33"},"nodeType":"YulFunctionCall","src":"6477:27:33"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"6470:6:33"},"nodeType":"YulFunctionCall","src":"6470:35:33"},"nodeType":"YulIf","src":"6467:2:33"},{"nodeType":"YulVariableDeclaration","src":"6541:19:33","value":{"arguments":[{"name":"_2","nodeType":"YulIdentifier","src":"6557:2:33"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"6551:5:33"},"nodeType":"YulFunctionCall","src":"6551:9:33"},"variables":[{"name":"_3","nodeType":"YulTypedName","src":"6545:2:33","type":""}]},{"nodeType":"YulVariableDeclaration","src":"6569:71:33","value":{"arguments":[{"arguments":[{"name":"_3","nodeType":"YulIdentifier","src":"6636:2:33"}],"functionName":{"name":"array_allocation_size_array_address_dyn","nodeType":"YulIdentifier","src":"6596:39:33"},"nodeType":"YulFunctionCall","src":"6596:43:33"}],"functionName":{"name":"allocate_memory","nodeType":"YulIdentifier","src":"6580:15:33"},"nodeType":"YulFunctionCall","src":"6580:60:33"},"variables":[{"name":"dst","nodeType":"YulTypedName","src":"6573:3:33","type":""}]},{"nodeType":"YulVariableDeclaration","src":"6649:16:33","value":{"name":"dst","nodeType":"YulIdentifier","src":"6662:3:33"},"variables":[{"name":"dst_1","nodeType":"YulTypedName","src":"6653:5:33","type":""}]},{"expression":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"6681:3:33"},{"name":"_3","nodeType":"YulIdentifier","src":"6686:2:33"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6674:6:33"},"nodeType":"YulFunctionCall","src":"6674:15:33"},"nodeType":"YulExpressionStatement","src":"6674:15:33"},{"nodeType":"YulAssignment","src":"6698:19:33","value":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"6709:3:33"},{"name":"_1","nodeType":"YulIdentifier","src":"6714:2:33"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6705:3:33"},"nodeType":"YulFunctionCall","src":"6705:12:33"},"variableNames":[{"name":"dst","nodeType":"YulIdentifier","src":"6698:3:33"}]},{"nodeType":"YulVariableDeclaration","src":"6726:22:33","value":{"arguments":[{"name":"_2","nodeType":"YulIdentifier","src":"6741:2:33"},{"name":"_1","nodeType":"YulIdentifier","src":"6745:2:33"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6737:3:33"},"nodeType":"YulFunctionCall","src":"6737:11:33"},"variables":[{"name":"src","nodeType":"YulTypedName","src":"6730:3:33","type":""}]},{"body":{"nodeType":"YulBlock","src":"6802:26:33","statements":[{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"6811:6:33"},{"name":"value0","nodeType":"YulIdentifier","src":"6819:6:33"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"6804:6:33"},"nodeType":"YulFunctionCall","src":"6804:22:33"},"nodeType":"YulExpressionStatement","src":"6804:22:33"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"_2","nodeType":"YulIdentifier","src":"6771:2:33"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6779:1:33","type":"","value":"5"},{"name":"_3","nodeType":"YulIdentifier","src":"6782:2:33"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"6775:3:33"},"nodeType":"YulFunctionCall","src":"6775:10:33"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6767:3:33"},"nodeType":"YulFunctionCall","src":"6767:19:33"},{"name":"_1","nodeType":"YulIdentifier","src":"6788:2:33"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6763:3:33"},"nodeType":"YulFunctionCall","src":"6763:28:33"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"6793:7:33"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"6760:2:33"},"nodeType":"YulFunctionCall","src":"6760:41:33"},"nodeType":"YulIf","src":"6757:2:33"},{"nodeType":"YulVariableDeclaration","src":"6837:15:33","value":{"name":"value0","nodeType":"YulIdentifier","src":"6846:6:33"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"6841:1:33","type":""}]},{"body":{"nodeType":"YulBlock","src":"6906:111:33","statements":[{"expression":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"6927:3:33"},{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"6938:3:33"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"6932:5:33"},"nodeType":"YulFunctionCall","src":"6932:10:33"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6920:6:33"},"nodeType":"YulFunctionCall","src":"6920:23:33"},"nodeType":"YulExpressionStatement","src":"6920:23:33"},{"nodeType":"YulAssignment","src":"6956:19:33","value":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"6967:3:33"},{"name":"_1","nodeType":"YulIdentifier","src":"6972:2:33"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6963:3:33"},"nodeType":"YulFunctionCall","src":"6963:12:33"},"variableNames":[{"name":"dst","nodeType":"YulIdentifier","src":"6956:3:33"}]},{"nodeType":"YulAssignment","src":"6988:19:33","value":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"6999:3:33"},{"name":"_1","nodeType":"YulIdentifier","src":"7004:2:33"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6995:3:33"},"nodeType":"YulFunctionCall","src":"6995:12:33"},"variableNames":[{"name":"src","nodeType":"YulIdentifier","src":"6988:3:33"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"6872:1:33"},{"name":"_3","nodeType":"YulIdentifier","src":"6875:2:33"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"6869:2:33"},"nodeType":"YulFunctionCall","src":"6869:9:33"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"6879:18:33","statements":[{"nodeType":"YulAssignment","src":"6881:14:33","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"6890:1:33"},{"kind":"number","nodeType":"YulLiteral","src":"6893:1:33","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6886:3:33"},"nodeType":"YulFunctionCall","src":"6886:9:33"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"6881:1:33"}]}]},"pre":{"nodeType":"YulBlock","src":"6865:3:33","statements":[]},"src":"6861:156:33"},{"nodeType":"YulAssignment","src":"7026:15:33","value":{"name":"dst_1","nodeType":"YulIdentifier","src":"7036:5:33"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"7026:6:33"}]}]},"name":"abi_decode_tuple_t_array$_t_int256_$dyn_memory_ptr_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6182:9:33","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"6193:7:33","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"6205:6:33","type":""}],"src":"6111:936:33"},{"body":{"nodeType":"YulBlock","src":"7158:277:33","statements":[{"body":{"nodeType":"YulBlock","src":"7204:26:33","statements":[{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"7213:6:33"},{"name":"value0","nodeType":"YulIdentifier","src":"7221:6:33"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"7206:6:33"},"nodeType":"YulFunctionCall","src":"7206:22:33"},"nodeType":"YulExpressionStatement","src":"7206:22:33"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"7179:7:33"},{"name":"headStart","nodeType":"YulIdentifier","src":"7188:9:33"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"7175:3:33"},"nodeType":"YulFunctionCall","src":"7175:23:33"},{"kind":"number","nodeType":"YulLiteral","src":"7200:2:33","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"7171:3:33"},"nodeType":"YulFunctionCall","src":"7171:32:33"},"nodeType":"YulIf","src":"7168:2:33"},{"nodeType":"YulVariableDeclaration","src":"7239:30:33","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7259:9:33"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"7253:5:33"},"nodeType":"YulFunctionCall","src":"7253:16:33"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"7243:6:33","type":""}]},{"body":{"nodeType":"YulBlock","src":"7312:26:33","statements":[{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"7321:6:33"},{"name":"value0","nodeType":"YulIdentifier","src":"7329:6:33"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"7314:6:33"},"nodeType":"YulFunctionCall","src":"7314:22:33"},"nodeType":"YulExpressionStatement","src":"7314:22:33"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"7284:6:33"},{"kind":"number","nodeType":"YulLiteral","src":"7292:18:33","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"7281:2:33"},"nodeType":"YulFunctionCall","src":"7281:30:33"},"nodeType":"YulIf","src":"7278:2:33"},{"nodeType":"YulAssignment","src":"7347:82:33","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7401:9:33"},{"name":"offset","nodeType":"YulIdentifier","src":"7412:6:33"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7397:3:33"},"nodeType":"YulFunctionCall","src":"7397:22:33"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"7421:7:33"}],"functionName":{"name":"abi_decode_array_uint256_dyn_fromMemory","nodeType":"YulIdentifier","src":"7357:39:33"},"nodeType":"YulFunctionCall","src":"7357:72:33"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"7347:6:33"}]}]},"name":"abi_decode_tuple_t_array$_t_uint256_$dyn_memory_ptr_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"7124:9:33","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"7135:7:33","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"7147:6:33","type":""}],"src":"7052:383:33"},{"body":{"nodeType":"YulBlock","src":"7518:219:33","statements":[{"body":{"nodeType":"YulBlock","src":"7564:26:33","statements":[{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"7573:6:33"},{"name":"value0","nodeType":"YulIdentifier","src":"7581:6:33"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"7566:6:33"},"nodeType":"YulFunctionCall","src":"7566:22:33"},"nodeType":"YulExpressionStatement","src":"7566:22:33"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"7539:7:33"},{"name":"headStart","nodeType":"YulIdentifier","src":"7548:9:33"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"7535:3:33"},"nodeType":"YulFunctionCall","src":"7535:23:33"},{"kind":"number","nodeType":"YulLiteral","src":"7560:2:33","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"7531:3:33"},"nodeType":"YulFunctionCall","src":"7531:32:33"},"nodeType":"YulIf","src":"7528:2:33"},{"nodeType":"YulVariableDeclaration","src":"7599:29:33","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7618:9:33"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"7612:5:33"},"nodeType":"YulFunctionCall","src":"7612:16:33"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"7603:5:33","type":""}]},{"body":{"nodeType":"YulBlock","src":"7681:26:33","statements":[{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"7690:6:33"},{"name":"value0","nodeType":"YulIdentifier","src":"7698:6:33"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"7683:6:33"},"nodeType":"YulFunctionCall","src":"7683:22:33"},"nodeType":"YulExpressionStatement","src":"7683:22:33"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"7650:5:33"},{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"7671:5:33"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"7664:6:33"},"nodeType":"YulFunctionCall","src":"7664:13:33"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"7657:6:33"},"nodeType":"YulFunctionCall","src":"7657:21:33"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"7647:2:33"},"nodeType":"YulFunctionCall","src":"7647:32:33"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"7640:6:33"},"nodeType":"YulFunctionCall","src":"7640:40:33"},"nodeType":"YulIf","src":"7637:2:33"},{"nodeType":"YulAssignment","src":"7716:15:33","value":{"name":"value","nodeType":"YulIdentifier","src":"7726:5:33"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"7716:6:33"}]}]},"name":"abi_decode_tuple_t_bool_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"7484:9:33","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"7495:7:33","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"7507:6:33","type":""}],"src":"7440:297:33"},{"body":{"nodeType":"YulBlock","src":"7823:113:33","statements":[{"body":{"nodeType":"YulBlock","src":"7869:26:33","statements":[{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"7878:6:33"},{"name":"value0","nodeType":"YulIdentifier","src":"7886:6:33"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"7871:6:33"},"nodeType":"YulFunctionCall","src":"7871:22:33"},"nodeType":"YulExpressionStatement","src":"7871:22:33"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"7844:7:33"},{"name":"headStart","nodeType":"YulIdentifier","src":"7853:9:33"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"7840:3:33"},"nodeType":"YulFunctionCall","src":"7840:23:33"},{"kind":"number","nodeType":"YulLiteral","src":"7865:2:33","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"7836:3:33"},"nodeType":"YulFunctionCall","src":"7836:32:33"},"nodeType":"YulIf","src":"7833:2:33"},{"nodeType":"YulAssignment","src":"7904:26:33","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7920:9:33"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"7914:5:33"},"nodeType":"YulFunctionCall","src":"7914:16:33"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"7904:6:33"}]}]},"name":"abi_decode_tuple_t_bytes32_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"7789:9:33","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"7800:7:33","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"7812:6:33","type":""}],"src":"7742:194:33"},{"body":{"nodeType":"YulBlock","src":"8021:136:33","statements":[{"body":{"nodeType":"YulBlock","src":"8067:26:33","statements":[{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"8076:6:33"},{"name":"value0","nodeType":"YulIdentifier","src":"8084:6:33"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"8069:6:33"},"nodeType":"YulFunctionCall","src":"8069:22:33"},"nodeType":"YulExpressionStatement","src":"8069:22:33"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"8042:7:33"},{"name":"headStart","nodeType":"YulIdentifier","src":"8051:9:33"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"8038:3:33"},"nodeType":"YulFunctionCall","src":"8038:23:33"},{"kind":"number","nodeType":"YulLiteral","src":"8063:2:33","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"8034:3:33"},"nodeType":"YulFunctionCall","src":"8034:32:33"},"nodeType":"YulIf","src":"8031:2:33"},{"nodeType":"YulAssignment","src":"8102:49:33","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8141:9:33"}],"functionName":{"name":"abi_decode_uint24_fromMemory","nodeType":"YulIdentifier","src":"8112:28:33"},"nodeType":"YulFunctionCall","src":"8112:39:33"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"8102:6:33"}]}]},"name":"abi_decode_tuple_t_uint24_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"7987:9:33","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"7998:7:33","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"8010:6:33","type":""}],"src":"7941:216:33"},{"body":{"nodeType":"YulBlock","src":"8243:113:33","statements":[{"body":{"nodeType":"YulBlock","src":"8289:26:33","statements":[{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"8298:6:33"},{"name":"value0","nodeType":"YulIdentifier","src":"8306:6:33"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"8291:6:33"},"nodeType":"YulFunctionCall","src":"8291:22:33"},"nodeType":"YulExpressionStatement","src":"8291:22:33"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"8264:7:33"},{"name":"headStart","nodeType":"YulIdentifier","src":"8273:9:33"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"8260:3:33"},"nodeType":"YulFunctionCall","src":"8260:23:33"},{"kind":"number","nodeType":"YulLiteral","src":"8285:2:33","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"8256:3:33"},"nodeType":"YulFunctionCall","src":"8256:32:33"},"nodeType":"YulIf","src":"8253:2:33"},{"nodeType":"YulAssignment","src":"8324:26:33","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8340:9:33"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"8334:5:33"},"nodeType":"YulFunctionCall","src":"8334:16:33"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"8324:6:33"}]}]},"name":"abi_decode_tuple_t_uint256_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"8209:9:33","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"8220:7:33","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"8232:6:33","type":""}],"src":"8162:194:33"},{"body":{"nodeType":"YulBlock","src":"8440:178:33","statements":[{"body":{"nodeType":"YulBlock","src":"8486:26:33","statements":[{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"8495:6:33"},{"name":"value0","nodeType":"YulIdentifier","src":"8503:6:33"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"8488:6:33"},"nodeType":"YulFunctionCall","src":"8488:22:33"},"nodeType":"YulExpressionStatement","src":"8488:22:33"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"8461:7:33"},{"name":"headStart","nodeType":"YulIdentifier","src":"8470:9:33"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"8457:3:33"},"nodeType":"YulFunctionCall","src":"8457:23:33"},{"kind":"number","nodeType":"YulLiteral","src":"8482:2:33","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"8453:3:33"},"nodeType":"YulFunctionCall","src":"8453:32:33"},"nodeType":"YulIf","src":"8450:2:33"},{"nodeType":"YulVariableDeclaration","src":"8521:29:33","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8540:9:33"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"8534:5:33"},"nodeType":"YulFunctionCall","src":"8534:16:33"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"8525:5:33","type":""}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"8582:5:33"}],"functionName":{"name":"validator_revert_uint8","nodeType":"YulIdentifier","src":"8559:22:33"},"nodeType":"YulFunctionCall","src":"8559:29:33"},"nodeType":"YulExpressionStatement","src":"8559:29:33"},{"nodeType":"YulAssignment","src":"8597:15:33","value":{"name":"value","nodeType":"YulIdentifier","src":"8607:5:33"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"8597:6:33"}]}]},"name":"abi_decode_tuple_t_uint8_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"8406:9:33","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"8417:7:33","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"8429:6:33","type":""}],"src":"8361:257:33"},{"body":{"nodeType":"YulBlock","src":"8785:1257:33","statements":[{"body":{"nodeType":"YulBlock","src":"8832:26:33","statements":[{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"8841:6:33"},{"name":"value2","nodeType":"YulIdentifier","src":"8849:6:33"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"8834:6:33"},"nodeType":"YulFunctionCall","src":"8834:22:33"},"nodeType":"YulExpressionStatement","src":"8834:22:33"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"8806:7:33"},{"name":"headStart","nodeType":"YulIdentifier","src":"8815:9:33"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"8802:3:33"},"nodeType":"YulFunctionCall","src":"8802:23:33"},{"kind":"number","nodeType":"YulLiteral","src":"8827:3:33","type":"","value":"192"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"8798:3:33"},"nodeType":"YulFunctionCall","src":"8798:33:33"},"nodeType":"YulIf","src":"8795:2:33"},{"nodeType":"YulVariableDeclaration","src":"8867:36:33","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8893:9:33"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"8880:12:33"},"nodeType":"YulFunctionCall","src":"8880:23:33"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"8871:5:33","type":""}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"8935:5:33"}],"functionName":{"name":"validator_revert_uint8","nodeType":"YulIdentifier","src":"8912:22:33"},"nodeType":"YulFunctionCall","src":"8912:29:33"},"nodeType":"YulExpressionStatement","src":"8912:29:33"},{"nodeType":"YulAssignment","src":"8950:15:33","value":{"name":"value","nodeType":"YulIdentifier","src":"8960:5:33"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"8950:6:33"}]},{"nodeType":"YulVariableDeclaration","src":"8974:12:33","value":{"kind":"number","nodeType":"YulLiteral","src":"8984:2:33","type":"","value":"32"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"8978:2:33","type":""}]},{"nodeType":"YulVariableDeclaration","src":"8995:47:33","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9027:9:33"},{"name":"_1","nodeType":"YulIdentifier","src":"9038:2:33"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9023:3:33"},"nodeType":"YulFunctionCall","src":"9023:18:33"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"9010:12:33"},"nodeType":"YulFunctionCall","src":"9010:32:33"},"variables":[{"name":"value_1","nodeType":"YulTypedName","src":"8999:7:33","type":""}]},{"expression":{"arguments":[{"name":"value_1","nodeType":"YulIdentifier","src":"9076:7:33"}],"functionName":{"name":"validator_revert_address","nodeType":"YulIdentifier","src":"9051:24:33"},"nodeType":"YulFunctionCall","src":"9051:33:33"},"nodeType":"YulExpressionStatement","src":"9051:33:33"},{"nodeType":"YulAssignment","src":"9093:17:33","value":{"name":"value_1","nodeType":"YulIdentifier","src":"9103:7:33"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"9093:6:33"}]},{"nodeType":"YulVariableDeclaration","src":"9119:47:33","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9151:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"9162:2:33","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9147:3:33"},"nodeType":"YulFunctionCall","src":"9147:18:33"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"9134:12:33"},"nodeType":"YulFunctionCall","src":"9134:32:33"},"variables":[{"name":"value_2","nodeType":"YulTypedName","src":"9123:7:33","type":""}]},{"expression":{"arguments":[{"name":"value_2","nodeType":"YulIdentifier","src":"9200:7:33"}],"functionName":{"name":"validator_revert_address","nodeType":"YulIdentifier","src":"9175:24:33"},"nodeType":"YulFunctionCall","src":"9175:33:33"},"nodeType":"YulExpressionStatement","src":"9175:33:33"},{"nodeType":"YulAssignment","src":"9217:17:33","value":{"name":"value_2","nodeType":"YulIdentifier","src":"9227:7:33"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"9217:6:33"}]},{"nodeType":"YulAssignment","src":"9243:42:33","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9270:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"9281:2:33","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9266:3:33"},"nodeType":"YulFunctionCall","src":"9266:18:33"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"9253:12:33"},"nodeType":"YulFunctionCall","src":"9253:32:33"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"9243:6:33"}]},{"nodeType":"YulAssignment","src":"9294:43:33","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9321:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"9332:3:33","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9317:3:33"},"nodeType":"YulFunctionCall","src":"9317:19:33"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"9304:12:33"},"nodeType":"YulFunctionCall","src":"9304:33:33"},"variableNames":[{"name":"value4","nodeType":"YulIdentifier","src":"9294:6:33"}]},{"nodeType":"YulVariableDeclaration","src":"9346:47:33","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9377:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"9388:3:33","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9373:3:33"},"nodeType":"YulFunctionCall","src":"9373:19:33"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"9360:12:33"},"nodeType":"YulFunctionCall","src":"9360:33:33"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"9350:6:33","type":""}]},{"nodeType":"YulVariableDeclaration","src":"9402:28:33","value":{"kind":"number","nodeType":"YulLiteral","src":"9412:18:33","type":"","value":"0xffffffffffffffff"},"variables":[{"name":"_2","nodeType":"YulTypedName","src":"9406:2:33","type":""}]},{"body":{"nodeType":"YulBlock","src":"9457:26:33","statements":[{"expression":{"arguments":[{"name":"value5","nodeType":"YulIdentifier","src":"9466:6:33"},{"name":"value5","nodeType":"YulIdentifier","src":"9474:6:33"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"9459:6:33"},"nodeType":"YulFunctionCall","src":"9459:22:33"},"nodeType":"YulExpressionStatement","src":"9459:22:33"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"9445:6:33"},{"name":"_2","nodeType":"YulIdentifier","src":"9453:2:33"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"9442:2:33"},"nodeType":"YulFunctionCall","src":"9442:14:33"},"nodeType":"YulIf","src":"9439:2:33"},{"nodeType":"YulVariableDeclaration","src":"9492:32:33","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9506:9:33"},{"name":"offset","nodeType":"YulIdentifier","src":"9517:6:33"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9502:3:33"},"nodeType":"YulFunctionCall","src":"9502:22:33"},"variables":[{"name":"_3","nodeType":"YulTypedName","src":"9496:2:33","type":""}]},{"body":{"nodeType":"YulBlock","src":"9572:26:33","statements":[{"expression":{"arguments":[{"name":"value5","nodeType":"YulIdentifier","src":"9581:6:33"},{"name":"value5","nodeType":"YulIdentifier","src":"9589:6:33"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"9574:6:33"},"nodeType":"YulFunctionCall","src":"9574:22:33"},"nodeType":"YulExpressionStatement","src":"9574:22:33"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"_3","nodeType":"YulIdentifier","src":"9551:2:33"},{"kind":"number","nodeType":"YulLiteral","src":"9555:4:33","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9547:3:33"},"nodeType":"YulFunctionCall","src":"9547:13:33"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"9562:7:33"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"9543:3:33"},"nodeType":"YulFunctionCall","src":"9543:27:33"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"9536:6:33"},"nodeType":"YulFunctionCall","src":"9536:35:33"},"nodeType":"YulIf","src":"9533:2:33"},{"nodeType":"YulVariableDeclaration","src":"9607:26:33","value":{"arguments":[{"name":"_3","nodeType":"YulIdentifier","src":"9630:2:33"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"9617:12:33"},"nodeType":"YulFunctionCall","src":"9617:16:33"},"variables":[{"name":"_4","nodeType":"YulTypedName","src":"9611:2:33","type":""}]},{"body":{"nodeType":"YulBlock","src":"9656:22:33","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"9658:16:33"},"nodeType":"YulFunctionCall","src":"9658:18:33"},"nodeType":"YulExpressionStatement","src":"9658:18:33"}]},"condition":{"arguments":[{"name":"_4","nodeType":"YulIdentifier","src":"9648:2:33"},{"name":"_2","nodeType":"YulIdentifier","src":"9652:2:33"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"9645:2:33"},"nodeType":"YulFunctionCall","src":"9645:10:33"},"nodeType":"YulIf","src":"9642:2:33"},{"nodeType":"YulVariableDeclaration","src":"9687:125:33","value":{"arguments":[{"arguments":[{"arguments":[{"arguments":[{"name":"_4","nodeType":"YulIdentifier","src":"9728:2:33"},{"kind":"number","nodeType":"YulLiteral","src":"9732:4:33","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9724:3:33"},"nodeType":"YulFunctionCall","src":"9724:13:33"},{"kind":"number","nodeType":"YulLiteral","src":"9739:66:33","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"9720:3:33"},"nodeType":"YulFunctionCall","src":"9720:86:33"},{"name":"_1","nodeType":"YulIdentifier","src":"9808:2:33"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9716:3:33"},"nodeType":"YulFunctionCall","src":"9716:95:33"}],"functionName":{"name":"allocate_memory","nodeType":"YulIdentifier","src":"9700:15:33"},"nodeType":"YulFunctionCall","src":"9700:112:33"},"variables":[{"name":"array","nodeType":"YulTypedName","src":"9691:5:33","type":""}]},{"expression":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"9828:5:33"},{"name":"_4","nodeType":"YulIdentifier","src":"9835:2:33"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9821:6:33"},"nodeType":"YulFunctionCall","src":"9821:17:33"},"nodeType":"YulExpressionStatement","src":"9821:17:33"},{"body":{"nodeType":"YulBlock","src":"9884:26:33","statements":[{"expression":{"arguments":[{"name":"value5","nodeType":"YulIdentifier","src":"9893:6:33"},{"name":"value5","nodeType":"YulIdentifier","src":"9901:6:33"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"9886:6:33"},"nodeType":"YulFunctionCall","src":"9886:22:33"},"nodeType":"YulExpressionStatement","src":"9886:22:33"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"_3","nodeType":"YulIdentifier","src":"9861:2:33"},{"name":"_4","nodeType":"YulIdentifier","src":"9865:2:33"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9857:3:33"},"nodeType":"YulFunctionCall","src":"9857:11:33"},{"name":"_1","nodeType":"YulIdentifier","src":"9870:2:33"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9853:3:33"},"nodeType":"YulFunctionCall","src":"9853:20:33"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"9875:7:33"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"9850:2:33"},"nodeType":"YulFunctionCall","src":"9850:33:33"},"nodeType":"YulIf","src":"9847:2:33"},{"expression":{"arguments":[{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"9936:5:33"},{"name":"_1","nodeType":"YulIdentifier","src":"9943:2:33"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9932:3:33"},"nodeType":"YulFunctionCall","src":"9932:14:33"},{"arguments":[{"name":"_3","nodeType":"YulIdentifier","src":"9952:2:33"},{"name":"_1","nodeType":"YulIdentifier","src":"9956:2:33"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9948:3:33"},"nodeType":"YulFunctionCall","src":"9948:11:33"},{"name":"_4","nodeType":"YulIdentifier","src":"9961:2:33"}],"functionName":{"name":"calldatacopy","nodeType":"YulIdentifier","src":"9919:12:33"},"nodeType":"YulFunctionCall","src":"9919:45:33"},"nodeType":"YulExpressionStatement","src":"9919:45:33"},{"expression":{"arguments":[{"arguments":[{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"9988:5:33"},{"name":"_4","nodeType":"YulIdentifier","src":"9995:2:33"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9984:3:33"},"nodeType":"YulFunctionCall","src":"9984:14:33"},{"name":"_1","nodeType":"YulIdentifier","src":"10000:2:33"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9980:3:33"},"nodeType":"YulFunctionCall","src":"9980:23:33"},{"name":"value5","nodeType":"YulIdentifier","src":"10005:6:33"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9973:6:33"},"nodeType":"YulFunctionCall","src":"9973:39:33"},"nodeType":"YulExpressionStatement","src":"9973:39:33"},{"nodeType":"YulAssignment","src":"10021:15:33","value":{"name":"array","nodeType":"YulIdentifier","src":"10031:5:33"},"variableNames":[{"name":"value5","nodeType":"YulIdentifier","src":"10021:6:33"}]}]},"name":"abi_decode_tuple_t_uint8t_addresst_addresst_uint256t_uint256t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"8711:9:33","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"8722:7:33","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"8734:6:33","type":""},{"name":"value1","nodeType":"YulTypedName","src":"8742:6:33","type":""},{"name":"value2","nodeType":"YulTypedName","src":"8750:6:33","type":""},{"name":"value3","nodeType":"YulTypedName","src":"8758:6:33","type":""},{"name":"value4","nodeType":"YulTypedName","src":"8766:6:33","type":""},{"name":"value5","nodeType":"YulTypedName","src":"8774:6:33","type":""}],"src":"8623:1419:33"},{"body":{"nodeType":"YulBlock","src":"10108:425:33","statements":[{"nodeType":"YulVariableDeclaration","src":"10118:26:33","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"10138:5:33"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"10132:5:33"},"nodeType":"YulFunctionCall","src":"10132:12:33"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"10122:6:33","type":""}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"10160:3:33"},{"name":"length","nodeType":"YulIdentifier","src":"10165:6:33"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10153:6:33"},"nodeType":"YulFunctionCall","src":"10153:19:33"},"nodeType":"YulExpressionStatement","src":"10153:19:33"},{"nodeType":"YulVariableDeclaration","src":"10181:14:33","value":{"kind":"number","nodeType":"YulLiteral","src":"10191:4:33","type":"","value":"0x20"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"10185:2:33","type":""}]},{"nodeType":"YulAssignment","src":"10204:19:33","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"10215:3:33"},{"name":"_1","nodeType":"YulIdentifier","src":"10220:2:33"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10211:3:33"},"nodeType":"YulFunctionCall","src":"10211:12:33"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"10204:3:33"}]},{"nodeType":"YulVariableDeclaration","src":"10232:28:33","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"10250:5:33"},{"name":"_1","nodeType":"YulIdentifier","src":"10257:2:33"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10246:3:33"},"nodeType":"YulFunctionCall","src":"10246:14:33"},"variables":[{"name":"srcPtr","nodeType":"YulTypedName","src":"10236:6:33","type":""}]},{"nodeType":"YulVariableDeclaration","src":"10269:12:33","value":{"name":"end","nodeType":"YulIdentifier","src":"10278:3:33"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"10273:1:33","type":""}]},{"body":{"nodeType":"YulBlock","src":"10339:169:33","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"10360:3:33"},{"arguments":[{"arguments":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"10375:6:33"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"10369:5:33"},"nodeType":"YulFunctionCall","src":"10369:13:33"},{"kind":"number","nodeType":"YulLiteral","src":"10384:42:33","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"10365:3:33"},"nodeType":"YulFunctionCall","src":"10365:62:33"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10353:6:33"},"nodeType":"YulFunctionCall","src":"10353:75:33"},"nodeType":"YulExpressionStatement","src":"10353:75:33"},{"nodeType":"YulAssignment","src":"10441:19:33","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"10452:3:33"},{"name":"_1","nodeType":"YulIdentifier","src":"10457:2:33"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10448:3:33"},"nodeType":"YulFunctionCall","src":"10448:12:33"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"10441:3:33"}]},{"nodeType":"YulAssignment","src":"10473:25:33","value":{"arguments":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"10487:6:33"},{"name":"_1","nodeType":"YulIdentifier","src":"10495:2:33"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10483:3:33"},"nodeType":"YulFunctionCall","src":"10483:15:33"},"variableNames":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"10473:6:33"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"10301:1:33"},{"name":"length","nodeType":"YulIdentifier","src":"10304:6:33"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"10298:2:33"},"nodeType":"YulFunctionCall","src":"10298:13:33"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"10312:18:33","statements":[{"nodeType":"YulAssignment","src":"10314:14:33","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"10323:1:33"},{"kind":"number","nodeType":"YulLiteral","src":"10326:1:33","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10319:3:33"},"nodeType":"YulFunctionCall","src":"10319:9:33"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"10314:1:33"}]}]},"pre":{"nodeType":"YulBlock","src":"10294:3:33","statements":[]},"src":"10290:218:33"},{"nodeType":"YulAssignment","src":"10517:10:33","value":{"name":"pos","nodeType":"YulIdentifier","src":"10524:3:33"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"10517:3:33"}]}]},"name":"abi_encode_array_address_dyn","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"10085:5:33","type":""},{"name":"pos","nodeType":"YulTypedName","src":"10092:3:33","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"10100:3:33","type":""}],"src":"10047:486:33"},{"body":{"nodeType":"YulBlock","src":"10598:376:33","statements":[{"nodeType":"YulVariableDeclaration","src":"10608:26:33","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"10628:5:33"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"10622:5:33"},"nodeType":"YulFunctionCall","src":"10622:12:33"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"10612:6:33","type":""}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"10650:3:33"},{"name":"length","nodeType":"YulIdentifier","src":"10655:6:33"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10643:6:33"},"nodeType":"YulFunctionCall","src":"10643:19:33"},"nodeType":"YulExpressionStatement","src":"10643:19:33"},{"nodeType":"YulVariableDeclaration","src":"10671:14:33","value":{"kind":"number","nodeType":"YulLiteral","src":"10681:4:33","type":"","value":"0x20"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"10675:2:33","type":""}]},{"nodeType":"YulAssignment","src":"10694:19:33","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"10705:3:33"},{"name":"_1","nodeType":"YulIdentifier","src":"10710:2:33"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10701:3:33"},"nodeType":"YulFunctionCall","src":"10701:12:33"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"10694:3:33"}]},{"nodeType":"YulVariableDeclaration","src":"10722:28:33","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"10740:5:33"},{"name":"_1","nodeType":"YulIdentifier","src":"10747:2:33"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10736:3:33"},"nodeType":"YulFunctionCall","src":"10736:14:33"},"variables":[{"name":"srcPtr","nodeType":"YulTypedName","src":"10726:6:33","type":""}]},{"nodeType":"YulVariableDeclaration","src":"10759:12:33","value":{"name":"end","nodeType":"YulIdentifier","src":"10768:3:33"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"10763:1:33","type":""}]},{"body":{"nodeType":"YulBlock","src":"10829:120:33","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"10850:3:33"},{"arguments":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"10861:6:33"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"10855:5:33"},"nodeType":"YulFunctionCall","src":"10855:13:33"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10843:6:33"},"nodeType":"YulFunctionCall","src":"10843:26:33"},"nodeType":"YulExpressionStatement","src":"10843:26:33"},{"nodeType":"YulAssignment","src":"10882:19:33","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"10893:3:33"},{"name":"_1","nodeType":"YulIdentifier","src":"10898:2:33"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10889:3:33"},"nodeType":"YulFunctionCall","src":"10889:12:33"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"10882:3:33"}]},{"nodeType":"YulAssignment","src":"10914:25:33","value":{"arguments":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"10928:6:33"},{"name":"_1","nodeType":"YulIdentifier","src":"10936:2:33"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10924:3:33"},"nodeType":"YulFunctionCall","src":"10924:15:33"},"variableNames":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"10914:6:33"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"10791:1:33"},{"name":"length","nodeType":"YulIdentifier","src":"10794:6:33"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"10788:2:33"},"nodeType":"YulFunctionCall","src":"10788:13:33"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"10802:18:33","statements":[{"nodeType":"YulAssignment","src":"10804:14:33","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"10813:1:33"},{"kind":"number","nodeType":"YulLiteral","src":"10816:1:33","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10809:3:33"},"nodeType":"YulFunctionCall","src":"10809:9:33"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"10804:1:33"}]}]},"pre":{"nodeType":"YulBlock","src":"10784:3:33","statements":[]},"src":"10780:169:33"},{"nodeType":"YulAssignment","src":"10958:10:33","value":{"name":"pos","nodeType":"YulIdentifier","src":"10965:3:33"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"10958:3:33"}]}]},"name":"abi_encode_array_int256_dyn","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"10575:5:33","type":""},{"name":"pos","nodeType":"YulTypedName","src":"10582:3:33","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"10590:3:33","type":""}],"src":"10538:436:33"},{"body":{"nodeType":"YulBlock","src":"11028:267:33","statements":[{"nodeType":"YulVariableDeclaration","src":"11038:26:33","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"11058:5:33"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"11052:5:33"},"nodeType":"YulFunctionCall","src":"11052:12:33"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"11042:6:33","type":""}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"11080:3:33"},{"name":"length","nodeType":"YulIdentifier","src":"11085:6:33"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11073:6:33"},"nodeType":"YulFunctionCall","src":"11073:19:33"},"nodeType":"YulExpressionStatement","src":"11073:19:33"},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"11127:5:33"},{"kind":"number","nodeType":"YulLiteral","src":"11134:4:33","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11123:3:33"},"nodeType":"YulFunctionCall","src":"11123:16:33"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"11145:3:33"},{"kind":"number","nodeType":"YulLiteral","src":"11150:4:33","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11141:3:33"},"nodeType":"YulFunctionCall","src":"11141:14:33"},{"name":"length","nodeType":"YulIdentifier","src":"11157:6:33"}],"functionName":{"name":"copy_memory_to_memory","nodeType":"YulIdentifier","src":"11101:21:33"},"nodeType":"YulFunctionCall","src":"11101:63:33"},"nodeType":"YulExpressionStatement","src":"11101:63:33"},{"nodeType":"YulAssignment","src":"11173:116:33","value":{"arguments":[{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"11188:3:33"},{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"11201:6:33"},{"kind":"number","nodeType":"YulLiteral","src":"11209:2:33","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11197:3:33"},"nodeType":"YulFunctionCall","src":"11197:15:33"},{"kind":"number","nodeType":"YulLiteral","src":"11214:66:33","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"11193:3:33"},"nodeType":"YulFunctionCall","src":"11193:88:33"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11184:3:33"},"nodeType":"YulFunctionCall","src":"11184:98:33"},{"kind":"number","nodeType":"YulLiteral","src":"11284:4:33","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11180:3:33"},"nodeType":"YulFunctionCall","src":"11180:109:33"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"11173:3:33"}]}]},"name":"abi_encode_bytes","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"11005:5:33","type":""},{"name":"pos","nodeType":"YulTypedName","src":"11012:3:33","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"11020:3:33","type":""}],"src":"10979:316:33"},{"body":{"nodeType":"YulBlock","src":"11350:243:33","statements":[{"body":{"nodeType":"YulBlock","src":"11392:168:33","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"11413:1:33","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"11416:77:33","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11406:6:33"},"nodeType":"YulFunctionCall","src":"11406:88:33"},"nodeType":"YulExpressionStatement","src":"11406:88:33"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"11514:1:33","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"11517:4:33","type":"","value":"0x21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11507:6:33"},"nodeType":"YulFunctionCall","src":"11507:15:33"},"nodeType":"YulExpressionStatement","src":"11507:15:33"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"11542:1:33","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"11545:4:33","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"11535:6:33"},"nodeType":"YulFunctionCall","src":"11535:15:33"},"nodeType":"YulExpressionStatement","src":"11535:15:33"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"11373:5:33"},{"kind":"number","nodeType":"YulLiteral","src":"11380:1:33","type":"","value":"2"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"11370:2:33"},"nodeType":"YulFunctionCall","src":"11370:12:33"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"11363:6:33"},"nodeType":"YulFunctionCall","src":"11363:20:33"},"nodeType":"YulIf","src":"11360:2:33"},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"11576:3:33"},{"name":"value","nodeType":"YulIdentifier","src":"11581:5:33"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11569:6:33"},"nodeType":"YulFunctionCall","src":"11569:18:33"},"nodeType":"YulExpressionStatement","src":"11569:18:33"}]},"name":"abi_encode_enum_SwapKind","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"11334:5:33","type":""},{"name":"pos","nodeType":"YulTypedName","src":"11341:3:33","type":""}],"src":"11300:293:33"},{"body":{"nodeType":"YulBlock","src":"11656:320:33","statements":[{"nodeType":"YulVariableDeclaration","src":"11666:52:33","value":{"kind":"number","nodeType":"YulLiteral","src":"11676:42:33","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"11670:2:33","type":""}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"11734:3:33"},{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"11749:5:33"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"11743:5:33"},"nodeType":"YulFunctionCall","src":"11743:12:33"},{"name":"_1","nodeType":"YulIdentifier","src":"11757:2:33"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"11739:3:33"},"nodeType":"YulFunctionCall","src":"11739:21:33"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11727:6:33"},"nodeType":"YulFunctionCall","src":"11727:34:33"},"nodeType":"YulExpressionStatement","src":"11727:34:33"},{"expression":{"arguments":[{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"11781:3:33"},{"kind":"number","nodeType":"YulLiteral","src":"11786:4:33","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11777:3:33"},"nodeType":"YulFunctionCall","src":"11777:14:33"},{"arguments":[{"arguments":[{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"11817:5:33"},{"kind":"number","nodeType":"YulLiteral","src":"11824:4:33","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11813:3:33"},"nodeType":"YulFunctionCall","src":"11813:16:33"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"11807:5:33"},"nodeType":"YulFunctionCall","src":"11807:23:33"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"11800:6:33"},"nodeType":"YulFunctionCall","src":"11800:31:33"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"11793:6:33"},"nodeType":"YulFunctionCall","src":"11793:39:33"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11770:6:33"},"nodeType":"YulFunctionCall","src":"11770:63:33"},"nodeType":"YulExpressionStatement","src":"11770:63:33"},{"expression":{"arguments":[{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"11853:3:33"},{"kind":"number","nodeType":"YulLiteral","src":"11858:4:33","type":"","value":"0x40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11849:3:33"},"nodeType":"YulFunctionCall","src":"11849:14:33"},{"arguments":[{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"11879:5:33"},{"kind":"number","nodeType":"YulLiteral","src":"11886:4:33","type":"","value":"0x40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11875:3:33"},"nodeType":"YulFunctionCall","src":"11875:16:33"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"11869:5:33"},"nodeType":"YulFunctionCall","src":"11869:23:33"},{"name":"_1","nodeType":"YulIdentifier","src":"11894:2:33"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"11865:3:33"},"nodeType":"YulFunctionCall","src":"11865:32:33"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11842:6:33"},"nodeType":"YulFunctionCall","src":"11842:56:33"},"nodeType":"YulExpressionStatement","src":"11842:56:33"},{"expression":{"arguments":[{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"11918:3:33"},{"kind":"number","nodeType":"YulLiteral","src":"11923:4:33","type":"","value":"0x60"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11914:3:33"},"nodeType":"YulFunctionCall","src":"11914:14:33"},{"arguments":[{"arguments":[{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"11954:5:33"},{"kind":"number","nodeType":"YulLiteral","src":"11961:4:33","type":"","value":"0x60"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11950:3:33"},"nodeType":"YulFunctionCall","src":"11950:16:33"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"11944:5:33"},"nodeType":"YulFunctionCall","src":"11944:23:33"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"11937:6:33"},"nodeType":"YulFunctionCall","src":"11937:31:33"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"11930:6:33"},"nodeType":"YulFunctionCall","src":"11930:39:33"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11907:6:33"},"nodeType":"YulFunctionCall","src":"11907:63:33"},"nodeType":"YulExpressionStatement","src":"11907:63:33"}]},"name":"abi_encode_struct_FundManagement","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"11640:5:33","type":""},{"name":"pos","nodeType":"YulTypedName","src":"11647:3:33","type":""}],"src":"11598:378:33"},{"body":{"nodeType":"YulBlock","src":"12118:137:33","statements":[{"nodeType":"YulVariableDeclaration","src":"12128:27:33","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"12148:6:33"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"12142:5:33"},"nodeType":"YulFunctionCall","src":"12142:13:33"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"12132:6:33","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"12190:6:33"},{"kind":"number","nodeType":"YulLiteral","src":"12198:4:33","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12186:3:33"},"nodeType":"YulFunctionCall","src":"12186:17:33"},{"name":"pos","nodeType":"YulIdentifier","src":"12205:3:33"},{"name":"length","nodeType":"YulIdentifier","src":"12210:6:33"}],"functionName":{"name":"copy_memory_to_memory","nodeType":"YulIdentifier","src":"12164:21:33"},"nodeType":"YulFunctionCall","src":"12164:53:33"},"nodeType":"YulExpressionStatement","src":"12164:53:33"},{"nodeType":"YulAssignment","src":"12226:23:33","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"12237:3:33"},{"name":"length","nodeType":"YulIdentifier","src":"12242:6:33"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12233:3:33"},"nodeType":"YulFunctionCall","src":"12233:16:33"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"12226:3:33"}]}]},"name":"abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"12094:3:33","type":""},{"name":"value0","nodeType":"YulTypedName","src":"12099:6:33","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"12110:3:33","type":""}],"src":"11981:274:33"},{"body":{"nodeType":"YulBlock","src":"12425:285:33","statements":[{"nodeType":"YulVariableDeclaration","src":"12435:27:33","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"12455:6:33"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"12449:5:33"},"nodeType":"YulFunctionCall","src":"12449:13:33"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"12439:6:33","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"12497:6:33"},{"kind":"number","nodeType":"YulLiteral","src":"12505:4:33","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12493:3:33"},"nodeType":"YulFunctionCall","src":"12493:17:33"},{"name":"pos","nodeType":"YulIdentifier","src":"12512:3:33"},{"name":"length","nodeType":"YulIdentifier","src":"12517:6:33"}],"functionName":{"name":"copy_memory_to_memory","nodeType":"YulIdentifier","src":"12471:21:33"},"nodeType":"YulFunctionCall","src":"12471:53:33"},"nodeType":"YulExpressionStatement","src":"12471:53:33"},{"nodeType":"YulVariableDeclaration","src":"12533:29:33","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"12550:3:33"},{"name":"length","nodeType":"YulIdentifier","src":"12555:6:33"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12546:3:33"},"nodeType":"YulFunctionCall","src":"12546:16:33"},"variables":[{"name":"end_1","nodeType":"YulTypedName","src":"12537:5:33","type":""}]},{"expression":{"arguments":[{"name":"end_1","nodeType":"YulIdentifier","src":"12578:5:33"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"12593:2:33","type":"","value":"96"},{"name":"value1","nodeType":"YulIdentifier","src":"12597:6:33"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"12589:3:33"},"nodeType":"YulFunctionCall","src":"12589:15:33"},{"kind":"number","nodeType":"YulLiteral","src":"12606:66:33","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff000000000000000000000000"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"12585:3:33"},"nodeType":"YulFunctionCall","src":"12585:88:33"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12571:6:33"},"nodeType":"YulFunctionCall","src":"12571:103:33"},"nodeType":"YulExpressionStatement","src":"12571:103:33"},{"nodeType":"YulAssignment","src":"12683:21:33","value":{"arguments":[{"name":"end_1","nodeType":"YulIdentifier","src":"12694:5:33"},{"kind":"number","nodeType":"YulLiteral","src":"12701:2:33","type":"","value":"20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12690:3:33"},"nodeType":"YulFunctionCall","src":"12690:14:33"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"12683:3:33"}]}]},"name":"abi_encode_tuple_packed_t_bytes_memory_ptr_t_address__to_t_bytes_memory_ptr_t_address__nonPadded_inplace_fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"12393:3:33","type":""},{"name":"value1","nodeType":"YulTypedName","src":"12398:6:33","type":""},{"name":"value0","nodeType":"YulTypedName","src":"12406:6:33","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"12417:3:33","type":""}],"src":"12260:450:33"},{"body":{"nodeType":"YulBlock","src":"12878:285:33","statements":[{"nodeType":"YulVariableDeclaration","src":"12888:27:33","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"12908:6:33"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"12902:5:33"},"nodeType":"YulFunctionCall","src":"12902:13:33"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"12892:6:33","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"12950:6:33"},{"kind":"number","nodeType":"YulLiteral","src":"12958:4:33","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12946:3:33"},"nodeType":"YulFunctionCall","src":"12946:17:33"},{"name":"pos","nodeType":"YulIdentifier","src":"12965:3:33"},{"name":"length","nodeType":"YulIdentifier","src":"12970:6:33"}],"functionName":{"name":"copy_memory_to_memory","nodeType":"YulIdentifier","src":"12924:21:33"},"nodeType":"YulFunctionCall","src":"12924:53:33"},"nodeType":"YulExpressionStatement","src":"12924:53:33"},{"nodeType":"YulVariableDeclaration","src":"12986:29:33","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"13003:3:33"},{"name":"length","nodeType":"YulIdentifier","src":"13008:6:33"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12999:3:33"},"nodeType":"YulFunctionCall","src":"12999:16:33"},"variables":[{"name":"end_1","nodeType":"YulTypedName","src":"12990:5:33","type":""}]},{"expression":{"arguments":[{"name":"end_1","nodeType":"YulIdentifier","src":"13031:5:33"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"13046:3:33","type":"","value":"232"},{"name":"value1","nodeType":"YulIdentifier","src":"13051:6:33"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"13042:3:33"},"nodeType":"YulFunctionCall","src":"13042:16:33"},{"kind":"number","nodeType":"YulLiteral","src":"13060:66:33","type":"","value":"0xffffff0000000000000000000000000000000000000000000000000000000000"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"13038:3:33"},"nodeType":"YulFunctionCall","src":"13038:89:33"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13024:6:33"},"nodeType":"YulFunctionCall","src":"13024:104:33"},"nodeType":"YulExpressionStatement","src":"13024:104:33"},{"nodeType":"YulAssignment","src":"13137:20:33","value":{"arguments":[{"name":"end_1","nodeType":"YulIdentifier","src":"13148:5:33"},{"kind":"number","nodeType":"YulLiteral","src":"13155:1:33","type":"","value":"3"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13144:3:33"},"nodeType":"YulFunctionCall","src":"13144:13:33"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"13137:3:33"}]}]},"name":"abi_encode_tuple_packed_t_bytes_memory_ptr_t_uint24__to_t_bytes_memory_ptr_t_uint24__nonPadded_inplace_fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"12846:3:33","type":""},{"name":"value1","nodeType":"YulTypedName","src":"12851:6:33","type":""},{"name":"value0","nodeType":"YulTypedName","src":"12859:6:33","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"12870:3:33","type":""}],"src":"12715:448:33"},{"body":{"nodeType":"YulBlock","src":"13269:125:33","statements":[{"nodeType":"YulAssignment","src":"13279:26:33","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13291:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"13302:2:33","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13287:3:33"},"nodeType":"YulFunctionCall","src":"13287:18:33"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"13279:4:33"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13321:9:33"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"13336:6:33"},{"kind":"number","nodeType":"YulLiteral","src":"13344:42:33","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"13332:3:33"},"nodeType":"YulFunctionCall","src":"13332:55:33"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13314:6:33"},"nodeType":"YulFunctionCall","src":"13314:74:33"},"nodeType":"YulExpressionStatement","src":"13314:74:33"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"13238:9:33","type":""},{"name":"value0","nodeType":"YulTypedName","src":"13249:6:33","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"13260:4:33","type":""}],"src":"13168:226:33"},{"body":{"nodeType":"YulBlock","src":"13528:198:33","statements":[{"nodeType":"YulAssignment","src":"13538:26:33","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13550:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"13561:2:33","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13546:3:33"},"nodeType":"YulFunctionCall","src":"13546:18:33"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"13538:4:33"}]},{"nodeType":"YulVariableDeclaration","src":"13573:52:33","value":{"kind":"number","nodeType":"YulLiteral","src":"13583:42:33","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"13577:2:33","type":""}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13641:9:33"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"13656:6:33"},{"name":"_1","nodeType":"YulIdentifier","src":"13664:2:33"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"13652:3:33"},"nodeType":"YulFunctionCall","src":"13652:15:33"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13634:6:33"},"nodeType":"YulFunctionCall","src":"13634:34:33"},"nodeType":"YulExpressionStatement","src":"13634:34:33"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13688:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"13699:2:33","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13684:3:33"},"nodeType":"YulFunctionCall","src":"13684:18:33"},{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"13708:6:33"},{"name":"_1","nodeType":"YulIdentifier","src":"13716:2:33"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"13704:3:33"},"nodeType":"YulFunctionCall","src":"13704:15:33"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13677:6:33"},"nodeType":"YulFunctionCall","src":"13677:43:33"},"nodeType":"YulExpressionStatement","src":"13677:43:33"}]},"name":"abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"13489:9:33","type":""},{"name":"value1","nodeType":"YulTypedName","src":"13500:6:33","type":""},{"name":"value0","nodeType":"YulTypedName","src":"13508:6:33","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"13519:4:33","type":""}],"src":"13399:327:33"},{"body":{"nodeType":"YulBlock","src":"13886:256:33","statements":[{"nodeType":"YulAssignment","src":"13896:26:33","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13908:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"13919:2:33","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13904:3:33"},"nodeType":"YulFunctionCall","src":"13904:18:33"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"13896:4:33"}]},{"nodeType":"YulVariableDeclaration","src":"13931:52:33","value":{"kind":"number","nodeType":"YulLiteral","src":"13941:42:33","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"13935:2:33","type":""}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13999:9:33"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"14014:6:33"},{"name":"_1","nodeType":"YulIdentifier","src":"14022:2:33"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"14010:3:33"},"nodeType":"YulFunctionCall","src":"14010:15:33"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13992:6:33"},"nodeType":"YulFunctionCall","src":"13992:34:33"},"nodeType":"YulExpressionStatement","src":"13992:34:33"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14046:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"14057:2:33","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14042:3:33"},"nodeType":"YulFunctionCall","src":"14042:18:33"},{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"14066:6:33"},{"name":"_1","nodeType":"YulIdentifier","src":"14074:2:33"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"14062:3:33"},"nodeType":"YulFunctionCall","src":"14062:15:33"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14035:6:33"},"nodeType":"YulFunctionCall","src":"14035:43:33"},"nodeType":"YulExpressionStatement","src":"14035:43:33"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14098:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"14109:2:33","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14094:3:33"},"nodeType":"YulFunctionCall","src":"14094:18:33"},{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"14118:6:33"},{"kind":"number","nodeType":"YulLiteral","src":"14126:8:33","type":"","value":"0xffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"14114:3:33"},"nodeType":"YulFunctionCall","src":"14114:21:33"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14087:6:33"},"nodeType":"YulFunctionCall","src":"14087:49:33"},"nodeType":"YulExpressionStatement","src":"14087:49:33"}]},"name":"abi_encode_tuple_t_address_t_address_t_uint24__to_t_address_t_address_t_uint24__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"13839:9:33","type":""},{"name":"value2","nodeType":"YulTypedName","src":"13850:6:33","type":""},{"name":"value1","nodeType":"YulTypedName","src":"13858:6:33","type":""},{"name":"value0","nodeType":"YulTypedName","src":"13866:6:33","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"13877:4:33","type":""}],"src":"13731:411:33"},{"body":{"nodeType":"YulBlock","src":"14276:168:33","statements":[{"nodeType":"YulAssignment","src":"14286:26:33","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14298:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"14309:2:33","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14294:3:33"},"nodeType":"YulFunctionCall","src":"14294:18:33"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"14286:4:33"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14328:9:33"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"14343:6:33"},{"kind":"number","nodeType":"YulLiteral","src":"14351:42:33","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"14339:3:33"},"nodeType":"YulFunctionCall","src":"14339:55:33"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14321:6:33"},"nodeType":"YulFunctionCall","src":"14321:74:33"},"nodeType":"YulExpressionStatement","src":"14321:74:33"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14415:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"14426:2:33","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14411:3:33"},"nodeType":"YulFunctionCall","src":"14411:18:33"},{"name":"value1","nodeType":"YulIdentifier","src":"14431:6:33"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14404:6:33"},"nodeType":"YulFunctionCall","src":"14404:34:33"},"nodeType":"YulExpressionStatement","src":"14404:34:33"}]},"name":"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"14237:9:33","type":""},{"name":"value1","nodeType":"YulTypedName","src":"14248:6:33","type":""},{"name":"value0","nodeType":"YulTypedName","src":"14256:6:33","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"14267:4:33","type":""}],"src":"14147:297:33"},{"body":{"nodeType":"YulBlock","src":"14550:76:33","statements":[{"nodeType":"YulAssignment","src":"14560:26:33","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14572:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"14583:2:33","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14568:3:33"},"nodeType":"YulFunctionCall","src":"14568:18:33"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"14560:4:33"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14602:9:33"},{"name":"value0","nodeType":"YulIdentifier","src":"14613:6:33"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14595:6:33"},"nodeType":"YulFunctionCall","src":"14595:25:33"},"nodeType":"YulExpressionStatement","src":"14595:25:33"}]},"name":"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"14519:9:33","type":""},{"name":"value0","nodeType":"YulTypedName","src":"14530:6:33","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"14541:4:33","type":""}],"src":"14449:177:33"},{"body":{"nodeType":"YulBlock","src":"15157:1587:33","statements":[{"nodeType":"YulVariableDeclaration","src":"15167:13:33","value":{"kind":"number","nodeType":"YulLiteral","src":"15177:3:33","type":"","value":"288"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"15171:2:33","type":""}]},{"nodeType":"YulVariableDeclaration","src":"15189:32:33","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15207:9:33"},{"name":"_1","nodeType":"YulIdentifier","src":"15218:2:33"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15203:3:33"},"nodeType":"YulFunctionCall","src":"15203:18:33"},"variables":[{"name":"tail_1","nodeType":"YulTypedName","src":"15193:6:33","type":""}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"15255:6:33"},{"name":"headStart","nodeType":"YulIdentifier","src":"15263:9:33"}],"functionName":{"name":"abi_encode_enum_SwapKind","nodeType":"YulIdentifier","src":"15230:24:33"},"nodeType":"YulFunctionCall","src":"15230:43:33"},"nodeType":"YulExpressionStatement","src":"15230:43:33"},{"nodeType":"YulVariableDeclaration","src":"15282:12:33","value":{"kind":"number","nodeType":"YulLiteral","src":"15292:2:33","type":"","value":"32"},"variables":[{"name":"_2","nodeType":"YulTypedName","src":"15286:2:33","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15314:9:33"},{"name":"_2","nodeType":"YulIdentifier","src":"15325:2:33"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15310:3:33"},"nodeType":"YulFunctionCall","src":"15310:18:33"},{"name":"_1","nodeType":"YulIdentifier","src":"15330:2:33"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15303:6:33"},"nodeType":"YulFunctionCall","src":"15303:30:33"},"nodeType":"YulExpressionStatement","src":"15303:30:33"},{"nodeType":"YulVariableDeclaration","src":"15342:17:33","value":{"name":"tail_1","nodeType":"YulIdentifier","src":"15353:6:33"},"variables":[{"name":"pos","nodeType":"YulTypedName","src":"15346:3:33","type":""}]},{"nodeType":"YulVariableDeclaration","src":"15368:27:33","value":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"15388:6:33"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"15382:5:33"},"nodeType":"YulFunctionCall","src":"15382:13:33"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"15372:6:33","type":""}]},{"expression":{"arguments":[{"name":"tail_1","nodeType":"YulIdentifier","src":"15411:6:33"},{"name":"length","nodeType":"YulIdentifier","src":"15419:6:33"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15404:6:33"},"nodeType":"YulFunctionCall","src":"15404:22:33"},"nodeType":"YulExpressionStatement","src":"15404:22:33"},{"nodeType":"YulVariableDeclaration","src":"15435:13:33","value":{"kind":"number","nodeType":"YulLiteral","src":"15445:3:33","type":"","value":"320"},"variables":[{"name":"_3","nodeType":"YulTypedName","src":"15439:2:33","type":""}]},{"nodeType":"YulAssignment","src":"15457:25:33","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15468:9:33"},{"name":"_3","nodeType":"YulIdentifier","src":"15479:2:33"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15464:3:33"},"nodeType":"YulFunctionCall","src":"15464:18:33"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"15457:3:33"}]},{"nodeType":"YulVariableDeclaration","src":"15491:53:33","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15513:9:33"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"15528:1:33","type":"","value":"5"},{"name":"length","nodeType":"YulIdentifier","src":"15531:6:33"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"15524:3:33"},"nodeType":"YulFunctionCall","src":"15524:14:33"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15509:3:33"},"nodeType":"YulFunctionCall","src":"15509:30:33"},{"name":"_3","nodeType":"YulIdentifier","src":"15541:2:33"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15505:3:33"},"nodeType":"YulFunctionCall","src":"15505:39:33"},"variables":[{"name":"tail_2","nodeType":"YulTypedName","src":"15495:6:33","type":""}]},{"nodeType":"YulVariableDeclaration","src":"15553:29:33","value":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"15571:6:33"},{"name":"_2","nodeType":"YulIdentifier","src":"15579:2:33"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15567:3:33"},"nodeType":"YulFunctionCall","src":"15567:15:33"},"variables":[{"name":"srcPtr","nodeType":"YulTypedName","src":"15557:6:33","type":""}]},{"nodeType":"YulVariableDeclaration","src":"15591:13:33","value":{"name":"tail","nodeType":"YulIdentifier","src":"15600:4:33"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"15595:1:33","type":""}]},{"body":{"nodeType":"YulBlock","src":"15662:713:33","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"15683:3:33"},{"arguments":[{"arguments":[{"name":"tail_2","nodeType":"YulIdentifier","src":"15696:6:33"},{"name":"headStart","nodeType":"YulIdentifier","src":"15704:9:33"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"15692:3:33"},"nodeType":"YulFunctionCall","src":"15692:22:33"},{"kind":"number","nodeType":"YulLiteral","src":"15716:66:33","type":"","value":"0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffec0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15688:3:33"},"nodeType":"YulFunctionCall","src":"15688:95:33"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15676:6:33"},"nodeType":"YulFunctionCall","src":"15676:108:33"},"nodeType":"YulExpressionStatement","src":"15676:108:33"},{"nodeType":"YulVariableDeclaration","src":"15797:23:33","value":{"arguments":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"15813:6:33"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"15807:5:33"},"nodeType":"YulFunctionCall","src":"15807:13:33"},"variables":[{"name":"_4","nodeType":"YulTypedName","src":"15801:2:33","type":""}]},{"nodeType":"YulVariableDeclaration","src":"15833:14:33","value":{"kind":"number","nodeType":"YulLiteral","src":"15843:4:33","type":"","value":"0xa0"},"variables":[{"name":"_5","nodeType":"YulTypedName","src":"15837:2:33","type":""}]},{"expression":{"arguments":[{"name":"tail_2","nodeType":"YulIdentifier","src":"15867:6:33"},{"arguments":[{"name":"_4","nodeType":"YulIdentifier","src":"15881:2:33"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"15875:5:33"},"nodeType":"YulFunctionCall","src":"15875:9:33"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15860:6:33"},"nodeType":"YulFunctionCall","src":"15860:25:33"},"nodeType":"YulExpressionStatement","src":"15860:25:33"},{"expression":{"arguments":[{"arguments":[{"name":"tail_2","nodeType":"YulIdentifier","src":"15909:6:33"},{"name":"_2","nodeType":"YulIdentifier","src":"15917:2:33"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15905:3:33"},"nodeType":"YulFunctionCall","src":"15905:15:33"},{"arguments":[{"arguments":[{"name":"_4","nodeType":"YulIdentifier","src":"15932:2:33"},{"name":"_2","nodeType":"YulIdentifier","src":"15936:2:33"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15928:3:33"},"nodeType":"YulFunctionCall","src":"15928:11:33"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"15922:5:33"},"nodeType":"YulFunctionCall","src":"15922:18:33"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15898:6:33"},"nodeType":"YulFunctionCall","src":"15898:43:33"},"nodeType":"YulExpressionStatement","src":"15898:43:33"},{"nodeType":"YulVariableDeclaration","src":"15954:14:33","value":{"kind":"number","nodeType":"YulLiteral","src":"15964:4:33","type":"","value":"0x40"},"variables":[{"name":"_6","nodeType":"YulTypedName","src":"15958:2:33","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"tail_2","nodeType":"YulIdentifier","src":"15992:6:33"},{"name":"_6","nodeType":"YulIdentifier","src":"16000:2:33"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15988:3:33"},"nodeType":"YulFunctionCall","src":"15988:15:33"},{"arguments":[{"arguments":[{"name":"_4","nodeType":"YulIdentifier","src":"16015:2:33"},{"name":"_6","nodeType":"YulIdentifier","src":"16019:2:33"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16011:3:33"},"nodeType":"YulFunctionCall","src":"16011:11:33"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"16005:5:33"},"nodeType":"YulFunctionCall","src":"16005:18:33"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15981:6:33"},"nodeType":"YulFunctionCall","src":"15981:43:33"},"nodeType":"YulExpressionStatement","src":"15981:43:33"},{"nodeType":"YulVariableDeclaration","src":"16037:14:33","value":{"kind":"number","nodeType":"YulLiteral","src":"16047:4:33","type":"","value":"0x60"},"variables":[{"name":"_7","nodeType":"YulTypedName","src":"16041:2:33","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"tail_2","nodeType":"YulIdentifier","src":"16075:6:33"},{"name":"_7","nodeType":"YulIdentifier","src":"16083:2:33"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16071:3:33"},"nodeType":"YulFunctionCall","src":"16071:15:33"},{"arguments":[{"arguments":[{"name":"_4","nodeType":"YulIdentifier","src":"16098:2:33"},{"name":"_7","nodeType":"YulIdentifier","src":"16102:2:33"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16094:3:33"},"nodeType":"YulFunctionCall","src":"16094:11:33"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"16088:5:33"},"nodeType":"YulFunctionCall","src":"16088:18:33"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16064:6:33"},"nodeType":"YulFunctionCall","src":"16064:43:33"},"nodeType":"YulExpressionStatement","src":"16064:43:33"},{"nodeType":"YulVariableDeclaration","src":"16120:14:33","value":{"kind":"number","nodeType":"YulLiteral","src":"16130:4:33","type":"","value":"0x80"},"variables":[{"name":"_8","nodeType":"YulTypedName","src":"16124:2:33","type":""}]},{"nodeType":"YulVariableDeclaration","src":"16147:38:33","value":{"arguments":[{"arguments":[{"name":"_4","nodeType":"YulIdentifier","src":"16177:2:33"},{"name":"_8","nodeType":"YulIdentifier","src":"16181:2:33"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16173:3:33"},"nodeType":"YulFunctionCall","src":"16173:11:33"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"16167:5:33"},"nodeType":"YulFunctionCall","src":"16167:18:33"},"variables":[{"name":"memberValue0","nodeType":"YulTypedName","src":"16151:12:33","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"tail_2","nodeType":"YulIdentifier","src":"16209:6:33"},{"name":"_8","nodeType":"YulIdentifier","src":"16217:2:33"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16205:3:33"},"nodeType":"YulFunctionCall","src":"16205:15:33"},{"name":"_5","nodeType":"YulIdentifier","src":"16222:2:33"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16198:6:33"},"nodeType":"YulFunctionCall","src":"16198:27:33"},"nodeType":"YulExpressionStatement","src":"16198:27:33"},{"nodeType":"YulAssignment","src":"16238:57:33","value":{"arguments":[{"name":"memberValue0","nodeType":"YulIdentifier","src":"16265:12:33"},{"arguments":[{"name":"tail_2","nodeType":"YulIdentifier","src":"16283:6:33"},{"name":"_5","nodeType":"YulIdentifier","src":"16291:2:33"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16279:3:33"},"nodeType":"YulFunctionCall","src":"16279:15:33"}],"functionName":{"name":"abi_encode_bytes","nodeType":"YulIdentifier","src":"16248:16:33"},"nodeType":"YulFunctionCall","src":"16248:47:33"},"variableNames":[{"name":"tail_2","nodeType":"YulIdentifier","src":"16238:6:33"}]},{"nodeType":"YulAssignment","src":"16308:25:33","value":{"arguments":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"16322:6:33"},{"name":"_2","nodeType":"YulIdentifier","src":"16330:2:33"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16318:3:33"},"nodeType":"YulFunctionCall","src":"16318:15:33"},"variableNames":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"16308:6:33"}]},{"nodeType":"YulAssignment","src":"16346:19:33","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"16357:3:33"},{"name":"_2","nodeType":"YulIdentifier","src":"16362:2:33"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16353:3:33"},"nodeType":"YulFunctionCall","src":"16353:12:33"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"16346:3:33"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"15624:1:33"},{"name":"length","nodeType":"YulIdentifier","src":"15627:6:33"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"15621:2:33"},"nodeType":"YulFunctionCall","src":"15621:13:33"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"15635:18:33","statements":[{"nodeType":"YulAssignment","src":"15637:14:33","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"15646:1:33"},{"kind":"number","nodeType":"YulLiteral","src":"15649:1:33","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15642:3:33"},"nodeType":"YulFunctionCall","src":"15642:9:33"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"15637:1:33"}]}]},"pre":{"nodeType":"YulBlock","src":"15617:3:33","statements":[]},"src":"15613:762:33"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16395:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"16406:4:33","type":"","value":"0x40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16391:3:33"},"nodeType":"YulFunctionCall","src":"16391:20:33"},{"arguments":[{"name":"tail_2","nodeType":"YulIdentifier","src":"16417:6:33"},{"name":"headStart","nodeType":"YulIdentifier","src":"16425:9:33"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"16413:3:33"},"nodeType":"YulFunctionCall","src":"16413:22:33"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16384:6:33"},"nodeType":"YulFunctionCall","src":"16384:52:33"},"nodeType":"YulExpressionStatement","src":"16384:52:33"},{"nodeType":"YulVariableDeclaration","src":"16445:58:33","value":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"16488:6:33"},{"name":"tail_2","nodeType":"YulIdentifier","src":"16496:6:33"}],"functionName":{"name":"abi_encode_array_address_dyn","nodeType":"YulIdentifier","src":"16459:28:33"},"nodeType":"YulFunctionCall","src":"16459:44:33"},"variables":[{"name":"tail_3","nodeType":"YulTypedName","src":"16449:6:33","type":""}]},{"expression":{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"16545:6:33"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16557:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"16568:4:33","type":"","value":"0x60"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16553:3:33"},"nodeType":"YulFunctionCall","src":"16553:20:33"}],"functionName":{"name":"abi_encode_struct_FundManagement","nodeType":"YulIdentifier","src":"16512:32:33"},"nodeType":"YulFunctionCall","src":"16512:62:33"},"nodeType":"YulExpressionStatement","src":"16512:62:33"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16594:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"16605:3:33","type":"","value":"224"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16590:3:33"},"nodeType":"YulFunctionCall","src":"16590:19:33"},{"arguments":[{"name":"tail_3","nodeType":"YulIdentifier","src":"16615:6:33"},{"name":"headStart","nodeType":"YulIdentifier","src":"16623:9:33"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"16611:3:33"},"nodeType":"YulFunctionCall","src":"16611:22:33"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16583:6:33"},"nodeType":"YulFunctionCall","src":"16583:51:33"},"nodeType":"YulExpressionStatement","src":"16583:51:33"},{"nodeType":"YulAssignment","src":"16643:51:33","value":{"arguments":[{"name":"value4","nodeType":"YulIdentifier","src":"16679:6:33"},{"name":"tail_3","nodeType":"YulIdentifier","src":"16687:6:33"}],"functionName":{"name":"abi_encode_array_int256_dyn","nodeType":"YulIdentifier","src":"16651:27:33"},"nodeType":"YulFunctionCall","src":"16651:43:33"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"16643:4:33"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16714:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"16725:3:33","type":"","value":"256"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16710:3:33"},"nodeType":"YulFunctionCall","src":"16710:19:33"},{"name":"value5","nodeType":"YulIdentifier","src":"16731:6:33"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16703:6:33"},"nodeType":"YulFunctionCall","src":"16703:35:33"},"nodeType":"YulExpressionStatement","src":"16703:35:33"}]},"name":"abi_encode_tuple_t_enum$_SwapKind_$5769_t_array$_t_struct$_BatchSwapStep_$5794_memory_ptr_$dyn_memory_ptr_t_array$_t_address_$dyn_memory_ptr_t_struct$_FundManagement_$5803_memory_ptr_t_array$_t_int256_$dyn_memory_ptr_t_uint256__to_t_uint8_t_array$_t_struct$_BatchSwapStep_$5794_memory_ptr_$dyn_memory_ptr_t_array$_t_address_$dyn_memory_ptr_t_struct$_FundManagement_$5803_memory_ptr_t_array$_t_int256_$dyn_memory_ptr_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"15086:9:33","type":""},{"name":"value5","nodeType":"YulTypedName","src":"15097:6:33","type":""},{"name":"value4","nodeType":"YulTypedName","src":"15105:6:33","type":""},{"name":"value3","nodeType":"YulTypedName","src":"15113:6:33","type":""},{"name":"value2","nodeType":"YulTypedName","src":"15121:6:33","type":""},{"name":"value1","nodeType":"YulTypedName","src":"15129:6:33","type":""},{"name":"value0","nodeType":"YulTypedName","src":"15137:6:33","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"15148:4:33","type":""}],"src":"14631:2113:33"},{"body":{"nodeType":"YulBlock","src":"16870:98:33","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16887:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"16898:2:33","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16880:6:33"},"nodeType":"YulFunctionCall","src":"16880:21:33"},"nodeType":"YulExpressionStatement","src":"16880:21:33"},{"nodeType":"YulAssignment","src":"16910:52:33","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"16935:6:33"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16947:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"16958:2:33","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16943:3:33"},"nodeType":"YulFunctionCall","src":"16943:18:33"}],"functionName":{"name":"abi_encode_bytes","nodeType":"YulIdentifier","src":"16918:16:33"},"nodeType":"YulFunctionCall","src":"16918:44:33"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"16910:4:33"}]}]},"name":"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"16839:9:33","type":""},{"name":"value0","nodeType":"YulTypedName","src":"16850:6:33","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"16861:4:33","type":""}],"src":"16749:219:33"},{"body":{"nodeType":"YulBlock","src":"17147:182:33","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17164:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"17175:2:33","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17157:6:33"},"nodeType":"YulFunctionCall","src":"17157:21:33"},"nodeType":"YulExpressionStatement","src":"17157:21:33"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17198:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"17209:2:33","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17194:3:33"},"nodeType":"YulFunctionCall","src":"17194:18:33"},{"kind":"number","nodeType":"YulLiteral","src":"17214:2:33","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17187:6:33"},"nodeType":"YulFunctionCall","src":"17187:30:33"},"nodeType":"YulExpressionStatement","src":"17187:30:33"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17237:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"17248:2:33","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17233:3:33"},"nodeType":"YulFunctionCall","src":"17233:18:33"},{"kind":"string","nodeType":"YulLiteral","src":"17253:34:33","type":"","value":"BALANCER_INVALID_BATCH_AMOUNT_IN"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17226:6:33"},"nodeType":"YulFunctionCall","src":"17226:62:33"},"nodeType":"YulExpressionStatement","src":"17226:62:33"},{"nodeType":"YulAssignment","src":"17297:26:33","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17309:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"17320:2:33","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17305:3:33"},"nodeType":"YulFunctionCall","src":"17305:18:33"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"17297:4:33"}]}]},"name":"abi_encode_tuple_t_stringliteral_0932a94ff52ccbad8aa0d10631f5a1d64f1bc3a1b4af2eb31a63fa91d9514653__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"17124:9:33","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"17138:4:33","type":""}],"src":"16973:356:33"},{"body":{"nodeType":"YulBlock","src":"17508:169:33","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17525:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"17536:2:33","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17518:6:33"},"nodeType":"YulFunctionCall","src":"17518:21:33"},"nodeType":"YulExpressionStatement","src":"17518:21:33"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17559:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"17570:2:33","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17555:3:33"},"nodeType":"YulFunctionCall","src":"17555:18:33"},{"kind":"number","nodeType":"YulLiteral","src":"17575:2:33","type":"","value":"19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17548:6:33"},"nodeType":"YulFunctionCall","src":"17548:30:33"},"nodeType":"YulExpressionStatement","src":"17548:30:33"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17598:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"17609:2:33","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17594:3:33"},"nodeType":"YulFunctionCall","src":"17594:18:33"},{"kind":"string","nodeType":"YulLiteral","src":"17614:21:33","type":"","value":"1INCH_V5_MIN_AMOUNT"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17587:6:33"},"nodeType":"YulFunctionCall","src":"17587:49:33"},"nodeType":"YulExpressionStatement","src":"17587:49:33"},{"nodeType":"YulAssignment","src":"17645:26:33","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17657:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"17668:2:33","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17653:3:33"},"nodeType":"YulFunctionCall","src":"17653:18:33"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"17645:4:33"}]}]},"name":"abi_encode_tuple_t_stringliteral_250825b91a441035041aa19c47dca116183d1965aa3af31049d8bb22daeaca26__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"17485:9:33","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"17499:4:33","type":""}],"src":"17334:343:33"},{"body":{"nodeType":"YulBlock","src":"17856:174:33","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17873:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"17884:2:33","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17866:6:33"},"nodeType":"YulFunctionCall","src":"17866:21:33"},"nodeType":"YulExpressionStatement","src":"17866:21:33"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17907:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"17918:2:33","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17903:3:33"},"nodeType":"YulFunctionCall","src":"17903:18:33"},{"kind":"number","nodeType":"YulLiteral","src":"17923:2:33","type":"","value":"24"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17896:6:33"},"nodeType":"YulFunctionCall","src":"17896:30:33"},"nodeType":"YulExpressionStatement","src":"17896:30:33"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17946:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"17957:2:33","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17942:3:33"},"nodeType":"YulFunctionCall","src":"17942:18:33"},{"kind":"string","nodeType":"YulLiteral","src":"17962:26:33","type":"","value":"INVALID_UNISWAP_POOL_FEE"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17935:6:33"},"nodeType":"YulFunctionCall","src":"17935:54:33"},"nodeType":"YulExpressionStatement","src":"17935:54:33"},{"nodeType":"YulAssignment","src":"17998:26:33","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18010:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"18021:2:33","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18006:3:33"},"nodeType":"YulFunctionCall","src":"18006:18:33"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"17998:4:33"}]}]},"name":"abi_encode_tuple_t_stringliteral_2dcd7e06206a1c88f04eb4fd1c9ebebaf21c4fee53df6088a8778fd0c6308ba0__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"17833:9:33","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"17847:4:33","type":""}],"src":"17682:348:33"},{"body":{"nodeType":"YulBlock","src":"18209:178:33","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18226:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"18237:2:33","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18219:6:33"},"nodeType":"YulFunctionCall","src":"18219:21:33"},"nodeType":"YulExpressionStatement","src":"18219:21:33"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18260:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"18271:2:33","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18256:3:33"},"nodeType":"YulFunctionCall","src":"18256:18:33"},{"kind":"number","nodeType":"YulLiteral","src":"18276:2:33","type":"","value":"28"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18249:6:33"},"nodeType":"YulFunctionCall","src":"18249:30:33"},"nodeType":"YulExpressionStatement","src":"18249:30:33"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18299:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"18310:2:33","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18295:3:33"},"nodeType":"YulFunctionCall","src":"18295:18:33"},{"kind":"string","nodeType":"YulLiteral","src":"18315:30:33","type":"","value":"INVALID_BALANCER_POOL_TOKENS"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18288:6:33"},"nodeType":"YulFunctionCall","src":"18288:58:33"},"nodeType":"YulExpressionStatement","src":"18288:58:33"},{"nodeType":"YulAssignment","src":"18355:26:33","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18367:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"18378:2:33","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18363:3:33"},"nodeType":"YulFunctionCall","src":"18363:18:33"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"18355:4:33"}]}]},"name":"abi_encode_tuple_t_stringliteral_316b7cdf461641c0913c2eef4903d44fb8ebf510c9c6a5d8e9dc1df97827889d__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"18186:9:33","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"18200:4:33","type":""}],"src":"18035:352:33"},{"body":{"nodeType":"YulBlock","src":"18566:164:33","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18583:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"18594:2:33","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18576:6:33"},"nodeType":"YulFunctionCall","src":"18576:21:33"},"nodeType":"YulExpressionStatement","src":"18576:21:33"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18617:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"18628:2:33","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18613:3:33"},"nodeType":"YulFunctionCall","src":"18613:18:33"},{"kind":"number","nodeType":"YulLiteral","src":"18633:2:33","type":"","value":"14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18606:6:33"},"nodeType":"YulFunctionCall","src":"18606:30:33"},"nodeType":"YulExpressionStatement","src":"18606:30:33"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18656:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"18667:2:33","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18652:3:33"},"nodeType":"YulFunctionCall","src":"18652:18:33"},{"kind":"string","nodeType":"YulLiteral","src":"18672:16:33","type":"","value":"INVALID_SOURCE"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18645:6:33"},"nodeType":"YulFunctionCall","src":"18645:44:33"},"nodeType":"YulExpressionStatement","src":"18645:44:33"},{"nodeType":"YulAssignment","src":"18698:26:33","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18710:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"18721:2:33","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18706:3:33"},"nodeType":"YulFunctionCall","src":"18706:18:33"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"18698:4:33"}]}]},"name":"abi_encode_tuple_t_stringliteral_4c4756d62952d105f77979d4c1b28506a71eed0131395424dfb3a5ae68650cc3__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"18543:9:33","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"18557:4:33","type":""}],"src":"18392:338:33"},{"body":{"nodeType":"YulBlock","src":"18909:228:33","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18926:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"18937:2:33","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18919:6:33"},"nodeType":"YulFunctionCall","src":"18919:21:33"},"nodeType":"YulExpressionStatement","src":"18919:21:33"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18960:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"18971:2:33","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18956:3:33"},"nodeType":"YulFunctionCall","src":"18956:18:33"},{"kind":"number","nodeType":"YulLiteral","src":"18976:2:33","type":"","value":"38"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18949:6:33"},"nodeType":"YulFunctionCall","src":"18949:30:33"},"nodeType":"YulExpressionStatement","src":"18949:30:33"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18999:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"19010:2:33","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18995:3:33"},"nodeType":"YulFunctionCall","src":"18995:18:33"},{"kind":"string","nodeType":"YulLiteral","src":"19015:34:33","type":"","value":"Address: insufficient balance fo"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18988:6:33"},"nodeType":"YulFunctionCall","src":"18988:62:33"},"nodeType":"YulExpressionStatement","src":"18988:62:33"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19070:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"19081:2:33","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19066:3:33"},"nodeType":"YulFunctionCall","src":"19066:18:33"},{"kind":"string","nodeType":"YulLiteral","src":"19086:8:33","type":"","value":"r call"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19059:6:33"},"nodeType":"YulFunctionCall","src":"19059:36:33"},"nodeType":"YulExpressionStatement","src":"19059:36:33"},{"nodeType":"YulAssignment","src":"19104:27:33","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19116:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"19127:3:33","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19112:3:33"},"nodeType":"YulFunctionCall","src":"19112:19:33"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"19104:4:33"}]}]},"name":"abi_encode_tuple_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"18886:9:33","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"18900:4:33","type":""}],"src":"18735:402:33"},{"body":{"nodeType":"YulBlock","src":"19316:181:33","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19333:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"19344:2:33","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19326:6:33"},"nodeType":"YulFunctionCall","src":"19326:21:33"},"nodeType":"YulExpressionStatement","src":"19326:21:33"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19367:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"19378:2:33","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19363:3:33"},"nodeType":"YulFunctionCall","src":"19363:18:33"},{"kind":"number","nodeType":"YulLiteral","src":"19383:2:33","type":"","value":"31"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19356:6:33"},"nodeType":"YulFunctionCall","src":"19356:30:33"},"nodeType":"YulExpressionStatement","src":"19356:30:33"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19406:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"19417:2:33","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19402:3:33"},"nodeType":"YulFunctionCall","src":"19402:18:33"},{"kind":"string","nodeType":"YulLiteral","src":"19422:33:33","type":"","value":"INVALID_UNISWAP_V3_INPUT_LENGTH"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19395:6:33"},"nodeType":"YulFunctionCall","src":"19395:61:33"},"nodeType":"YulExpressionStatement","src":"19395:61:33"},{"nodeType":"YulAssignment","src":"19465:26:33","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19477:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"19488:2:33","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19473:3:33"},"nodeType":"YulFunctionCall","src":"19473:18:33"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"19465:4:33"}]}]},"name":"abi_encode_tuple_t_stringliteral_601328a88770133c0441e5fef15dc309a1dd06ee6bcaddda0c7e394090784c86__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"19293:9:33","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"19307:4:33","type":""}],"src":"19142:355:33"},{"body":{"nodeType":"YulBlock","src":"19676:174:33","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19693:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"19704:2:33","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19686:6:33"},"nodeType":"YulFunctionCall","src":"19686:21:33"},"nodeType":"YulExpressionStatement","src":"19686:21:33"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19727:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"19738:2:33","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19723:3:33"},"nodeType":"YulFunctionCall","src":"19723:18:33"},{"kind":"number","nodeType":"YulLiteral","src":"19743:2:33","type":"","value":"24"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19716:6:33"},"nodeType":"YulFunctionCall","src":"19716:30:33"},"nodeType":"YulExpressionStatement","src":"19716:30:33"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19766:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"19777:2:33","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19762:3:33"},"nodeType":"YulFunctionCall","src":"19762:18:33"},{"kind":"string","nodeType":"YulLiteral","src":"19782:26:33","type":"","value":"INVALID_BALANCER_POOL_ID"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19755:6:33"},"nodeType":"YulFunctionCall","src":"19755:54:33"},"nodeType":"YulExpressionStatement","src":"19755:54:33"},{"nodeType":"YulAssignment","src":"19818:26:33","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19830:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"19841:2:33","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19826:3:33"},"nodeType":"YulFunctionCall","src":"19826:18:33"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"19818:4:33"}]}]},"name":"abi_encode_tuple_t_stringliteral_66cbe35eb6666c92304a8cb76d93a701850dd3d2002f6d45447de944a39de107__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"19653:9:33","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"19667:4:33","type":""}],"src":"19502:348:33"},{"body":{"nodeType":"YulBlock","src":"20029:182:33","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20046:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"20057:2:33","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20039:6:33"},"nodeType":"YulFunctionCall","src":"20039:21:33"},"nodeType":"YulExpressionStatement","src":"20039:21:33"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20080:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"20091:2:33","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20076:3:33"},"nodeType":"YulFunctionCall","src":"20076:18:33"},{"kind":"number","nodeType":"YulLiteral","src":"20096:2:33","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20069:6:33"},"nodeType":"YulFunctionCall","src":"20069:30:33"},"nodeType":"YulExpressionStatement","src":"20069:30:33"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20119:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"20130:2:33","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20115:3:33"},"nodeType":"YulFunctionCall","src":"20115:18:33"},{"kind":"string","nodeType":"YulLiteral","src":"20135:34:33","type":"","value":"SafeCast: value must be positive"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20108:6:33"},"nodeType":"YulFunctionCall","src":"20108:62:33"},"nodeType":"YulExpressionStatement","src":"20108:62:33"},{"nodeType":"YulAssignment","src":"20179:26:33","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20191:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"20202:2:33","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20187:3:33"},"nodeType":"YulFunctionCall","src":"20187:18:33"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"20179:4:33"}]}]},"name":"abi_encode_tuple_t_stringliteral_74e6d3a4204092bea305532ded31d3763fc378e46be3884a93ceff08a0761807__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"20006:9:33","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"20020:4:33","type":""}],"src":"19855:356:33"},{"body":{"nodeType":"YulBlock","src":"20390:182:33","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20407:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"20418:2:33","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20400:6:33"},"nodeType":"YulFunctionCall","src":"20400:21:33"},"nodeType":"YulExpressionStatement","src":"20400:21:33"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20441:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"20452:2:33","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20437:3:33"},"nodeType":"YulFunctionCall","src":"20437:18:33"},{"kind":"number","nodeType":"YulLiteral","src":"20457:2:33","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20430:6:33"},"nodeType":"YulFunctionCall","src":"20430:30:33"},"nodeType":"YulExpressionStatement","src":"20430:30:33"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20480:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"20491:2:33","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20476:3:33"},"nodeType":"YulFunctionCall","src":"20476:18:33"},{"kind":"string","nodeType":"YulLiteral","src":"20496:34:33","type":"","value":"BALANCER_INVALID_BATCH_AMOUNT_OU"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20469:6:33"},"nodeType":"YulFunctionCall","src":"20469:62:33"},"nodeType":"YulExpressionStatement","src":"20469:62:33"},{"nodeType":"YulAssignment","src":"20540:26:33","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20552:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"20563:2:33","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20548:3:33"},"nodeType":"YulFunctionCall","src":"20548:18:33"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"20540:4:33"}]}]},"name":"abi_encode_tuple_t_stringliteral_7d53102d364230849b66935ee94d95d6509cab71f6498d129b923063a4d51836__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"20367:9:33","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"20381:4:33","type":""}],"src":"20216:356:33"},{"body":{"nodeType":"YulBlock","src":"20751:172:33","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20768:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"20779:2:33","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20761:6:33"},"nodeType":"YulFunctionCall","src":"20761:21:33"},"nodeType":"YulExpressionStatement","src":"20761:21:33"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20802:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"20813:2:33","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20798:3:33"},"nodeType":"YulFunctionCall","src":"20798:18:33"},{"kind":"number","nodeType":"YulLiteral","src":"20818:2:33","type":"","value":"22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20791:6:33"},"nodeType":"YulFunctionCall","src":"20791:30:33"},"nodeType":"YulExpressionStatement","src":"20791:30:33"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20841:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"20852:2:33","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20837:3:33"},"nodeType":"YulFunctionCall","src":"20837:18:33"},{"kind":"string","nodeType":"YulLiteral","src":"20857:24:33","type":"","value":"PARASWAP_V5_MIN_AMOUNT"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20830:6:33"},"nodeType":"YulFunctionCall","src":"20830:52:33"},"nodeType":"YulExpressionStatement","src":"20830:52:33"},{"nodeType":"YulAssignment","src":"20891:26:33","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20903:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"20914:2:33","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20899:3:33"},"nodeType":"YulFunctionCall","src":"20899:18:33"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"20891:4:33"}]}]},"name":"abi_encode_tuple_t_stringliteral_893d73b372bd066c89d4a33be85bdd8036ae33c71f36d2c1583a20b63f7fcf27__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"20728:9:33","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"20742:4:33","type":""}],"src":"20577:346:33"},{"body":{"nodeType":"YulBlock","src":"21102:179:33","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21119:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"21130:2:33","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"21112:6:33"},"nodeType":"YulFunctionCall","src":"21112:21:33"},"nodeType":"YulExpressionStatement","src":"21112:21:33"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21153:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"21164:2:33","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21149:3:33"},"nodeType":"YulFunctionCall","src":"21149:18:33"},{"kind":"number","nodeType":"YulLiteral","src":"21169:2:33","type":"","value":"29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"21142:6:33"},"nodeType":"YulFunctionCall","src":"21142:30:33"},"nodeType":"YulExpressionStatement","src":"21142:30:33"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21192:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"21203:2:33","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21188:3:33"},"nodeType":"YulFunctionCall","src":"21188:18:33"},{"kind":"string","nodeType":"YulLiteral","src":"21208:31:33","type":"","value":"Address: call to non-contract"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"21181:6:33"},"nodeType":"YulFunctionCall","src":"21181:59:33"},"nodeType":"YulExpressionStatement","src":"21181:59:33"},{"nodeType":"YulAssignment","src":"21249:26:33","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21261:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"21272:2:33","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21257:3:33"},"nodeType":"YulFunctionCall","src":"21257:18:33"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"21249:4:33"}]}]},"name":"abi_encode_tuple_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"21079:9:33","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"21093:4:33","type":""}],"src":"20928:353:33"},{"body":{"nodeType":"YulBlock","src":"21460:230:33","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21477:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"21488:2:33","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"21470:6:33"},"nodeType":"YulFunctionCall","src":"21470:21:33"},"nodeType":"YulExpressionStatement","src":"21470:21:33"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21511:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"21522:2:33","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21507:3:33"},"nodeType":"YulFunctionCall","src":"21507:18:33"},{"kind":"number","nodeType":"YulLiteral","src":"21527:2:33","type":"","value":"40"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"21500:6:33"},"nodeType":"YulFunctionCall","src":"21500:30:33"},"nodeType":"YulExpressionStatement","src":"21500:30:33"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21550:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"21561:2:33","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21546:3:33"},"nodeType":"YulFunctionCall","src":"21546:18:33"},{"kind":"string","nodeType":"YulLiteral","src":"21566:34:33","type":"","value":"SafeCast: value doesn't fit in a"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"21539:6:33"},"nodeType":"YulFunctionCall","src":"21539:62:33"},"nodeType":"YulExpressionStatement","src":"21539:62:33"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21621:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"21632:2:33","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21617:3:33"},"nodeType":"YulFunctionCall","src":"21617:18:33"},{"kind":"string","nodeType":"YulLiteral","src":"21637:10:33","type":"","value":"n int256"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"21610:6:33"},"nodeType":"YulFunctionCall","src":"21610:38:33"},"nodeType":"YulExpressionStatement","src":"21610:38:33"},{"nodeType":"YulAssignment","src":"21657:27:33","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21669:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"21680:3:33","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21665:3:33"},"nodeType":"YulFunctionCall","src":"21665:19:33"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"21657:4:33"}]}]},"name":"abi_encode_tuple_t_stringliteral_d70dcf21692b3c91b4c5fbb89ed57f464aa42efbe5b0ea96c4acb7c080144227__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"21437:9:33","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"21451:4:33","type":""}],"src":"21286:404:33"},{"body":{"nodeType":"YulBlock","src":"21869:232:33","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21886:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"21897:2:33","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"21879:6:33"},"nodeType":"YulFunctionCall","src":"21879:21:33"},"nodeType":"YulExpressionStatement","src":"21879:21:33"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21920:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"21931:2:33","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21916:3:33"},"nodeType":"YulFunctionCall","src":"21916:18:33"},{"kind":"number","nodeType":"YulLiteral","src":"21936:2:33","type":"","value":"42"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"21909:6:33"},"nodeType":"YulFunctionCall","src":"21909:30:33"},"nodeType":"YulExpressionStatement","src":"21909:30:33"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21959:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"21970:2:33","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21955:3:33"},"nodeType":"YulFunctionCall","src":"21955:18:33"},{"kind":"string","nodeType":"YulLiteral","src":"21975:34:33","type":"","value":"SafeERC20: ERC20 operation did n"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"21948:6:33"},"nodeType":"YulFunctionCall","src":"21948:62:33"},"nodeType":"YulExpressionStatement","src":"21948:62:33"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"22030:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"22041:2:33","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22026:3:33"},"nodeType":"YulFunctionCall","src":"22026:18:33"},{"kind":"string","nodeType":"YulLiteral","src":"22046:12:33","type":"","value":"ot succeed"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"22019:6:33"},"nodeType":"YulFunctionCall","src":"22019:40:33"},"nodeType":"YulExpressionStatement","src":"22019:40:33"},{"nodeType":"YulAssignment","src":"22068:27:33","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"22080:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"22091:3:33","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22076:3:33"},"nodeType":"YulFunctionCall","src":"22076:19:33"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"22068:4:33"}]}]},"name":"abi_encode_tuple_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"21846:9:33","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"21860:4:33","type":""}],"src":"21695:406:33"},{"body":{"nodeType":"YulBlock","src":"22280:173:33","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"22297:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"22308:2:33","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"22290:6:33"},"nodeType":"YulFunctionCall","src":"22290:21:33"},"nodeType":"YulExpressionStatement","src":"22290:21:33"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"22331:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"22342:2:33","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22327:3:33"},"nodeType":"YulFunctionCall","src":"22327:18:33"},{"kind":"number","nodeType":"YulLiteral","src":"22347:2:33","type":"","value":"23"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"22320:6:33"},"nodeType":"YulFunctionCall","src":"22320:30:33"},"nodeType":"YulExpressionStatement","src":"22320:30:33"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"22370:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"22381:2:33","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22366:3:33"},"nodeType":"YulFunctionCall","src":"22366:18:33"},{"kind":"string","nodeType":"YulLiteral","src":"22386:25:33","type":"","value":"HOP_INVALID_DATA_LENGTH"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"22359:6:33"},"nodeType":"YulFunctionCall","src":"22359:53:33"},"nodeType":"YulExpressionStatement","src":"22359:53:33"},{"nodeType":"YulAssignment","src":"22421:26:33","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"22433:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"22444:2:33","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22429:3:33"},"nodeType":"YulFunctionCall","src":"22429:18:33"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"22421:4:33"}]}]},"name":"abi_encode_tuple_t_stringliteral_e3360c1aa242a694a0a30f9b3474b7c9673cb4d060b27b23ff6dffb88815edc4__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"22257:9:33","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"22271:4:33","type":""}],"src":"22106:347:33"},{"body":{"nodeType":"YulBlock","src":"22632:182:33","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"22649:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"22660:2:33","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"22642:6:33"},"nodeType":"YulFunctionCall","src":"22642:21:33"},"nodeType":"YulExpressionStatement","src":"22642:21:33"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"22683:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"22694:2:33","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22679:3:33"},"nodeType":"YulFunctionCall","src":"22679:18:33"},{"kind":"number","nodeType":"YulLiteral","src":"22699:2:33","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"22672:6:33"},"nodeType":"YulFunctionCall","src":"22672:30:33"},"nodeType":"YulExpressionStatement","src":"22672:30:33"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"22722:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"22733:2:33","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22718:3:33"},"nodeType":"YulFunctionCall","src":"22718:18:33"},{"kind":"string","nodeType":"YulLiteral","src":"22738:34:33","type":"","value":"INVALID_BALANCER_V2_INPUT_LENGTH"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"22711:6:33"},"nodeType":"YulFunctionCall","src":"22711:62:33"},"nodeType":"YulExpressionStatement","src":"22711:62:33"},{"nodeType":"YulAssignment","src":"22782:26:33","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"22794:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"22805:2:33","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22790:3:33"},"nodeType":"YulFunctionCall","src":"22790:18:33"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"22782:4:33"}]}]},"name":"abi_encode_tuple_t_stringliteral_e40c26701b18ead1b939f999c70ae24cebfc5e0c2f0c824ccb75645cabcd8b92__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"22609:9:33","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"22623:4:33","type":""}],"src":"22458:356:33"},{"body":{"nodeType":"YulBlock","src":"22993:244:33","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"23010:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"23021:2:33","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"23003:6:33"},"nodeType":"YulFunctionCall","src":"23003:21:33"},"nodeType":"YulExpressionStatement","src":"23003:21:33"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"23044:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"23055:2:33","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23040:3:33"},"nodeType":"YulFunctionCall","src":"23040:18:33"},{"kind":"number","nodeType":"YulLiteral","src":"23060:2:33","type":"","value":"54"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"23033:6:33"},"nodeType":"YulFunctionCall","src":"23033:30:33"},"nodeType":"YulExpressionStatement","src":"23033:30:33"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"23083:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"23094:2:33","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23079:3:33"},"nodeType":"YulFunctionCall","src":"23079:18:33"},{"kind":"string","nodeType":"YulLiteral","src":"23099:34:33","type":"","value":"SafeERC20: approve from non-zero"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"23072:6:33"},"nodeType":"YulFunctionCall","src":"23072:62:33"},"nodeType":"YulExpressionStatement","src":"23072:62:33"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"23154:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"23165:2:33","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23150:3:33"},"nodeType":"YulFunctionCall","src":"23150:18:33"},{"kind":"string","nodeType":"YulLiteral","src":"23170:24:33","type":"","value":" to non-zero allowance"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"23143:6:33"},"nodeType":"YulFunctionCall","src":"23143:52:33"},"nodeType":"YulExpressionStatement","src":"23143:52:33"},{"nodeType":"YulAssignment","src":"23204:27:33","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"23216:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"23227:3:33","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23212:3:33"},"nodeType":"YulFunctionCall","src":"23212:19:33"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"23204:4:33"}]}]},"name":"abi_encode_tuple_t_stringliteral_ef945ddb1bfdc0da870feb4560d868b047642b4ac7f2fb7f8b7c51cb4a411e25__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"22970:9:33","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"22984:4:33","type":""}],"src":"22819:418:33"},{"body":{"nodeType":"YulBlock","src":"23416:170:33","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"23433:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"23444:2:33","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"23426:6:33"},"nodeType":"YulFunctionCall","src":"23426:21:33"},"nodeType":"YulExpressionStatement","src":"23426:21:33"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"23467:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"23478:2:33","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23463:3:33"},"nodeType":"YulFunctionCall","src":"23463:18:33"},{"kind":"number","nodeType":"YulLiteral","src":"23483:2:33","type":"","value":"20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"23456:6:33"},"nodeType":"YulFunctionCall","src":"23456:30:33"},"nodeType":"YulExpressionStatement","src":"23456:30:33"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"23506:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"23517:2:33","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23502:3:33"},"nodeType":"YulFunctionCall","src":"23502:18:33"},{"kind":"string","nodeType":"YulLiteral","src":"23522:22:33","type":"","value":"INVALID_UNISWAP_POOL"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"23495:6:33"},"nodeType":"YulFunctionCall","src":"23495:50:33"},"nodeType":"YulExpressionStatement","src":"23495:50:33"},{"nodeType":"YulAssignment","src":"23554:26:33","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"23566:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"23577:2:33","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23562:3:33"},"nodeType":"YulFunctionCall","src":"23562:18:33"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"23554:4:33"}]}]},"name":"abi_encode_tuple_t_stringliteral_f8d7622446eb6d816555364a8a930f59f2926f9542740772751f6125f42d96ac__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"23393:9:33","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"23407:4:33","type":""}],"src":"23242:344:33"},{"body":{"nodeType":"YulBlock","src":"23760:506:33","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"23777:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"23788:2:33","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"23770:6:33"},"nodeType":"YulFunctionCall","src":"23770:21:33"},"nodeType":"YulExpressionStatement","src":"23770:21:33"},{"nodeType":"YulVariableDeclaration","src":"23800:33:33","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"23826:6:33"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"23820:5:33"},"nodeType":"YulFunctionCall","src":"23820:13:33"},"variables":[{"name":"memberValue0","nodeType":"YulTypedName","src":"23804:12:33","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"23853:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"23864:2:33","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23849:3:33"},"nodeType":"YulFunctionCall","src":"23849:18:33"},{"kind":"number","nodeType":"YulLiteral","src":"23869:4:33","type":"","value":"0xa0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"23842:6:33"},"nodeType":"YulFunctionCall","src":"23842:32:33"},"nodeType":"YulExpressionStatement","src":"23842:32:33"},{"nodeType":"YulVariableDeclaration","src":"23883:65:33","value":{"arguments":[{"name":"memberValue0","nodeType":"YulIdentifier","src":"23914:12:33"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"23932:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"23943:3:33","type":"","value":"192"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23928:3:33"},"nodeType":"YulFunctionCall","src":"23928:19:33"}],"functionName":{"name":"abi_encode_bytes","nodeType":"YulIdentifier","src":"23897:16:33"},"nodeType":"YulFunctionCall","src":"23897:51:33"},"variables":[{"name":"tail_1","nodeType":"YulTypedName","src":"23887:6:33","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"23968:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"23979:2:33","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23964:3:33"},"nodeType":"YulFunctionCall","src":"23964:18:33"},{"arguments":[{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"23998:6:33"},{"kind":"number","nodeType":"YulLiteral","src":"24006:2:33","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23994:3:33"},"nodeType":"YulFunctionCall","src":"23994:15:33"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"23988:5:33"},"nodeType":"YulFunctionCall","src":"23988:22:33"},{"kind":"number","nodeType":"YulLiteral","src":"24012:42:33","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"23984:3:33"},"nodeType":"YulFunctionCall","src":"23984:71:33"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"23957:6:33"},"nodeType":"YulFunctionCall","src":"23957:99:33"},"nodeType":"YulExpressionStatement","src":"23957:99:33"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"24076:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"24087:2:33","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24072:3:33"},"nodeType":"YulFunctionCall","src":"24072:18:33"},{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"24102:6:33"},{"kind":"number","nodeType":"YulLiteral","src":"24110:2:33","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24098:3:33"},"nodeType":"YulFunctionCall","src":"24098:15:33"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"24092:5:33"},"nodeType":"YulFunctionCall","src":"24092:22:33"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"24065:6:33"},"nodeType":"YulFunctionCall","src":"24065:50:33"},"nodeType":"YulExpressionStatement","src":"24065:50:33"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"24135:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"24146:3:33","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24131:3:33"},"nodeType":"YulFunctionCall","src":"24131:19:33"},{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"24162:6:33"},{"kind":"number","nodeType":"YulLiteral","src":"24170:2:33","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24158:3:33"},"nodeType":"YulFunctionCall","src":"24158:15:33"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"24152:5:33"},"nodeType":"YulFunctionCall","src":"24152:22:33"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"24124:6:33"},"nodeType":"YulFunctionCall","src":"24124:51:33"},"nodeType":"YulExpressionStatement","src":"24124:51:33"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"24195:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"24206:4:33","type":"","value":"0xa0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24191:3:33"},"nodeType":"YulFunctionCall","src":"24191:20:33"},{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"24223:6:33"},{"kind":"number","nodeType":"YulLiteral","src":"24231:3:33","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24219:3:33"},"nodeType":"YulFunctionCall","src":"24219:16:33"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"24213:5:33"},"nodeType":"YulFunctionCall","src":"24213:23:33"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"24184:6:33"},"nodeType":"YulFunctionCall","src":"24184:53:33"},"nodeType":"YulExpressionStatement","src":"24184:53:33"},{"nodeType":"YulAssignment","src":"24246:14:33","value":{"name":"tail_1","nodeType":"YulIdentifier","src":"24254:6:33"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"24246:4:33"}]}]},"name":"abi_encode_tuple_t_struct$_ExactInputParams_$3936_memory_ptr__to_t_struct$_ExactInputParams_$3936_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"23729:9:33","type":""},{"name":"value0","nodeType":"YulTypedName","src":"23740:6:33","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"23751:4:33","type":""}],"src":"23591:675:33"},{"body":{"nodeType":"YulBlock","src":"24452:637:33","statements":[{"nodeType":"YulAssignment","src":"24462:27:33","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"24474:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"24485:3:33","type":"","value":"256"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24470:3:33"},"nodeType":"YulFunctionCall","src":"24470:19:33"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"24462:4:33"}]},{"nodeType":"YulVariableDeclaration","src":"24498:52:33","value":{"kind":"number","nodeType":"YulLiteral","src":"24508:42:33","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"24502:2:33","type":""}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"24566:9:33"},{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"24587:6:33"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"24581:5:33"},"nodeType":"YulFunctionCall","src":"24581:13:33"},{"name":"_1","nodeType":"YulIdentifier","src":"24596:2:33"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"24577:3:33"},"nodeType":"YulFunctionCall","src":"24577:22:33"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"24559:6:33"},"nodeType":"YulFunctionCall","src":"24559:41:33"},"nodeType":"YulExpressionStatement","src":"24559:41:33"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"24620:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"24631:4:33","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24616:3:33"},"nodeType":"YulFunctionCall","src":"24616:20:33"},{"arguments":[{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"24652:6:33"},{"kind":"number","nodeType":"YulLiteral","src":"24660:4:33","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24648:3:33"},"nodeType":"YulFunctionCall","src":"24648:17:33"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"24642:5:33"},"nodeType":"YulFunctionCall","src":"24642:24:33"},{"name":"_1","nodeType":"YulIdentifier","src":"24668:2:33"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"24638:3:33"},"nodeType":"YulFunctionCall","src":"24638:33:33"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"24609:6:33"},"nodeType":"YulFunctionCall","src":"24609:63:33"},"nodeType":"YulExpressionStatement","src":"24609:63:33"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"24692:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"24703:4:33","type":"","value":"0x40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24688:3:33"},"nodeType":"YulFunctionCall","src":"24688:20:33"},{"arguments":[{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"24724:6:33"},{"kind":"number","nodeType":"YulLiteral","src":"24732:4:33","type":"","value":"0x40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24720:3:33"},"nodeType":"YulFunctionCall","src":"24720:17:33"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"24714:5:33"},"nodeType":"YulFunctionCall","src":"24714:24:33"},{"kind":"number","nodeType":"YulLiteral","src":"24740:8:33","type":"","value":"0xffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"24710:3:33"},"nodeType":"YulFunctionCall","src":"24710:39:33"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"24681:6:33"},"nodeType":"YulFunctionCall","src":"24681:69:33"},"nodeType":"YulExpressionStatement","src":"24681:69:33"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"24770:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"24781:4:33","type":"","value":"0x60"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24766:3:33"},"nodeType":"YulFunctionCall","src":"24766:20:33"},{"arguments":[{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"24802:6:33"},{"kind":"number","nodeType":"YulLiteral","src":"24810:4:33","type":"","value":"0x60"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24798:3:33"},"nodeType":"YulFunctionCall","src":"24798:17:33"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"24792:5:33"},"nodeType":"YulFunctionCall","src":"24792:24:33"},{"name":"_1","nodeType":"YulIdentifier","src":"24818:2:33"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"24788:3:33"},"nodeType":"YulFunctionCall","src":"24788:33:33"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"24759:6:33"},"nodeType":"YulFunctionCall","src":"24759:63:33"},"nodeType":"YulExpressionStatement","src":"24759:63:33"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"24842:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"24853:4:33","type":"","value":"0x80"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24838:3:33"},"nodeType":"YulFunctionCall","src":"24838:20:33"},{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"24870:6:33"},{"kind":"number","nodeType":"YulLiteral","src":"24878:4:33","type":"","value":"0x80"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24866:3:33"},"nodeType":"YulFunctionCall","src":"24866:17:33"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"24860:5:33"},"nodeType":"YulFunctionCall","src":"24860:24:33"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"24831:6:33"},"nodeType":"YulFunctionCall","src":"24831:54:33"},"nodeType":"YulExpressionStatement","src":"24831:54:33"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"24905:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"24916:4:33","type":"","value":"0xa0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24901:3:33"},"nodeType":"YulFunctionCall","src":"24901:20:33"},{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"24933:6:33"},{"kind":"number","nodeType":"YulLiteral","src":"24941:4:33","type":"","value":"0xa0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24929:3:33"},"nodeType":"YulFunctionCall","src":"24929:17:33"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"24923:5:33"},"nodeType":"YulFunctionCall","src":"24923:24:33"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"24894:6:33"},"nodeType":"YulFunctionCall","src":"24894:54:33"},"nodeType":"YulExpressionStatement","src":"24894:54:33"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"24968:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"24979:4:33","type":"","value":"0xc0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24964:3:33"},"nodeType":"YulFunctionCall","src":"24964:20:33"},{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"24996:6:33"},{"kind":"number","nodeType":"YulLiteral","src":"25004:4:33","type":"","value":"0xc0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24992:3:33"},"nodeType":"YulFunctionCall","src":"24992:17:33"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"24986:5:33"},"nodeType":"YulFunctionCall","src":"24986:24:33"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"24957:6:33"},"nodeType":"YulFunctionCall","src":"24957:54:33"},"nodeType":"YulExpressionStatement","src":"24957:54:33"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"25031:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"25042:4:33","type":"","value":"0xe0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25027:3:33"},"nodeType":"YulFunctionCall","src":"25027:20:33"},{"arguments":[{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"25063:6:33"},{"kind":"number","nodeType":"YulLiteral","src":"25071:4:33","type":"","value":"0xe0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25059:3:33"},"nodeType":"YulFunctionCall","src":"25059:17:33"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"25053:5:33"},"nodeType":"YulFunctionCall","src":"25053:24:33"},{"name":"_1","nodeType":"YulIdentifier","src":"25079:2:33"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"25049:3:33"},"nodeType":"YulFunctionCall","src":"25049:33:33"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"25020:6:33"},"nodeType":"YulFunctionCall","src":"25020:63:33"},"nodeType":"YulExpressionStatement","src":"25020:63:33"}]},"name":"abi_encode_tuple_t_struct$_ExactInputSingleParams_$3916_memory_ptr__to_t_struct$_ExactInputSingleParams_$3916_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"24421:9:33","type":""},{"name":"value0","nodeType":"YulTypedName","src":"24432:6:33","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"24443:4:33","type":""}],"src":"24271:818:33"},{"body":{"nodeType":"YulBlock","src":"25399:848:33","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"25416:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"25427:3:33","type":"","value":"224"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"25409:6:33"},"nodeType":"YulFunctionCall","src":"25409:22:33"},"nodeType":"YulExpressionStatement","src":"25409:22:33"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"25451:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"25462:3:33","type":"","value":"224"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25447:3:33"},"nodeType":"YulFunctionCall","src":"25447:19:33"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"25474:6:33"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"25468:5:33"},"nodeType":"YulFunctionCall","src":"25468:13:33"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"25440:6:33"},"nodeType":"YulFunctionCall","src":"25440:42:33"},"nodeType":"YulExpressionStatement","src":"25440:42:33"},{"nodeType":"YulVariableDeclaration","src":"25491:44:33","value":{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"25521:6:33"},{"kind":"number","nodeType":"YulLiteral","src":"25529:4:33","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25517:3:33"},"nodeType":"YulFunctionCall","src":"25517:17:33"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"25511:5:33"},"nodeType":"YulFunctionCall","src":"25511:24:33"},"variables":[{"name":"memberValue0","nodeType":"YulTypedName","src":"25495:12:33","type":""}]},{"expression":{"arguments":[{"name":"memberValue0","nodeType":"YulIdentifier","src":"25569:12:33"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"25587:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"25598:3:33","type":"","value":"256"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25583:3:33"},"nodeType":"YulFunctionCall","src":"25583:19:33"}],"functionName":{"name":"abi_encode_enum_SwapKind","nodeType":"YulIdentifier","src":"25544:24:33"},"nodeType":"YulFunctionCall","src":"25544:59:33"},"nodeType":"YulExpressionStatement","src":"25544:59:33"},{"nodeType":"YulVariableDeclaration","src":"25612:46:33","value":{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"25644:6:33"},{"kind":"number","nodeType":"YulLiteral","src":"25652:4:33","type":"","value":"0x40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25640:3:33"},"nodeType":"YulFunctionCall","src":"25640:17:33"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"25634:5:33"},"nodeType":"YulFunctionCall","src":"25634:24:33"},"variables":[{"name":"memberValue0_1","nodeType":"YulTypedName","src":"25616:14:33","type":""}]},{"nodeType":"YulVariableDeclaration","src":"25667:52:33","value":{"kind":"number","nodeType":"YulLiteral","src":"25677:42:33","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"25671:2:33","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"25739:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"25750:3:33","type":"","value":"288"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25735:3:33"},"nodeType":"YulFunctionCall","src":"25735:19:33"},{"arguments":[{"name":"memberValue0_1","nodeType":"YulIdentifier","src":"25760:14:33"},{"name":"_1","nodeType":"YulIdentifier","src":"25776:2:33"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"25756:3:33"},"nodeType":"YulFunctionCall","src":"25756:23:33"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"25728:6:33"},"nodeType":"YulFunctionCall","src":"25728:52:33"},"nodeType":"YulExpressionStatement","src":"25728:52:33"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"25800:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"25811:3:33","type":"","value":"320"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25796:3:33"},"nodeType":"YulFunctionCall","src":"25796:19:33"},{"arguments":[{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"25831:6:33"},{"kind":"number","nodeType":"YulLiteral","src":"25839:4:33","type":"","value":"0x60"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25827:3:33"},"nodeType":"YulFunctionCall","src":"25827:17:33"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"25821:5:33"},"nodeType":"YulFunctionCall","src":"25821:24:33"},{"name":"_1","nodeType":"YulIdentifier","src":"25847:2:33"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"25817:3:33"},"nodeType":"YulFunctionCall","src":"25817:33:33"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"25789:6:33"},"nodeType":"YulFunctionCall","src":"25789:62:33"},"nodeType":"YulExpressionStatement","src":"25789:62:33"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"25871:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"25882:3:33","type":"","value":"352"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25867:3:33"},"nodeType":"YulFunctionCall","src":"25867:19:33"},{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"25898:6:33"},{"kind":"number","nodeType":"YulLiteral","src":"25906:4:33","type":"","value":"0x80"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25894:3:33"},"nodeType":"YulFunctionCall","src":"25894:17:33"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"25888:5:33"},"nodeType":"YulFunctionCall","src":"25888:24:33"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"25860:6:33"},"nodeType":"YulFunctionCall","src":"25860:53:33"},"nodeType":"YulExpressionStatement","src":"25860:53:33"},{"nodeType":"YulVariableDeclaration","src":"25922:46:33","value":{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"25954:6:33"},{"kind":"number","nodeType":"YulLiteral","src":"25962:4:33","type":"","value":"0xa0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25950:3:33"},"nodeType":"YulFunctionCall","src":"25950:17:33"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"25944:5:33"},"nodeType":"YulFunctionCall","src":"25944:24:33"},"variables":[{"name":"memberValue0_2","nodeType":"YulTypedName","src":"25926:14:33","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"25988:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"25999:3:33","type":"","value":"384"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25984:3:33"},"nodeType":"YulFunctionCall","src":"25984:19:33"},{"kind":"number","nodeType":"YulLiteral","src":"26005:4:33","type":"","value":"0xc0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"25977:6:33"},"nodeType":"YulFunctionCall","src":"25977:33:33"},"nodeType":"YulExpressionStatement","src":"25977:33:33"},{"nodeType":"YulAssignment","src":"26019:61:33","value":{"arguments":[{"name":"memberValue0_2","nodeType":"YulIdentifier","src":"26044:14:33"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"26064:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"26075:3:33","type":"","value":"416"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"26060:3:33"},"nodeType":"YulFunctionCall","src":"26060:19:33"}],"functionName":{"name":"abi_encode_bytes","nodeType":"YulIdentifier","src":"26027:16:33"},"nodeType":"YulFunctionCall","src":"26027:53:33"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"26019:4:33"}]},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"26122:6:33"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"26134:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"26145:4:33","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"26130:3:33"},"nodeType":"YulFunctionCall","src":"26130:20:33"}],"functionName":{"name":"abi_encode_struct_FundManagement","nodeType":"YulIdentifier","src":"26089:32:33"},"nodeType":"YulFunctionCall","src":"26089:62:33"},"nodeType":"YulExpressionStatement","src":"26089:62:33"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"26171:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"26182:4:33","type":"","value":"0xa0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"26167:3:33"},"nodeType":"YulFunctionCall","src":"26167:20:33"},{"name":"value2","nodeType":"YulIdentifier","src":"26189:6:33"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"26160:6:33"},"nodeType":"YulFunctionCall","src":"26160:36:33"},"nodeType":"YulExpressionStatement","src":"26160:36:33"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"26216:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"26227:4:33","type":"","value":"0xc0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"26212:3:33"},"nodeType":"YulFunctionCall","src":"26212:20:33"},{"name":"value3","nodeType":"YulIdentifier","src":"26234:6:33"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"26205:6:33"},"nodeType":"YulFunctionCall","src":"26205:36:33"},"nodeType":"YulExpressionStatement","src":"26205:36:33"}]},"name":"abi_encode_tuple_t_struct$_SingleSwap_$5783_memory_ptr_t_struct$_FundManagement_$5803_memory_ptr_t_uint256_t_uint256__to_t_struct$_SingleSwap_$5783_memory_ptr_t_struct$_FundManagement_$5803_memory_ptr_t_uint256_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"25344:9:33","type":""},{"name":"value3","nodeType":"YulTypedName","src":"25355:6:33","type":""},{"name":"value2","nodeType":"YulTypedName","src":"25363:6:33","type":""},{"name":"value1","nodeType":"YulTypedName","src":"25371:6:33","type":""},{"name":"value0","nodeType":"YulTypedName","src":"25379:6:33","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"25390:4:33","type":""}],"src":"25094:1153:33"},{"body":{"nodeType":"YulBlock","src":"26353:76:33","statements":[{"nodeType":"YulAssignment","src":"26363:26:33","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"26375:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"26386:2:33","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"26371:3:33"},"nodeType":"YulFunctionCall","src":"26371:18:33"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"26363:4:33"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"26405:9:33"},{"name":"value0","nodeType":"YulIdentifier","src":"26416:6:33"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"26398:6:33"},"nodeType":"YulFunctionCall","src":"26398:25:33"},"nodeType":"YulExpressionStatement","src":"26398:25:33"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"26322:9:33","type":""},{"name":"value0","nodeType":"YulTypedName","src":"26333:6:33","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"26344:4:33","type":""}],"src":"26252:177:33"},{"body":{"nodeType":"YulBlock","src":"26697:334:33","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"26714:9:33"},{"name":"value0","nodeType":"YulIdentifier","src":"26725:6:33"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"26707:6:33"},"nodeType":"YulFunctionCall","src":"26707:25:33"},"nodeType":"YulExpressionStatement","src":"26707:25:33"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"26752:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"26763:2:33","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"26748:3:33"},"nodeType":"YulFunctionCall","src":"26748:18:33"},{"name":"value1","nodeType":"YulIdentifier","src":"26768:6:33"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"26741:6:33"},"nodeType":"YulFunctionCall","src":"26741:34:33"},"nodeType":"YulExpressionStatement","src":"26741:34:33"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"26795:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"26806:2:33","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"26791:3:33"},"nodeType":"YulFunctionCall","src":"26791:18:33"},{"kind":"number","nodeType":"YulLiteral","src":"26811:3:33","type":"","value":"160"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"26784:6:33"},"nodeType":"YulFunctionCall","src":"26784:31:33"},"nodeType":"YulExpressionStatement","src":"26784:31:33"},{"nodeType":"YulAssignment","src":"26824:65:33","value":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"26861:6:33"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"26873:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"26884:3:33","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"26869:3:33"},"nodeType":"YulFunctionCall","src":"26869:19:33"}],"functionName":{"name":"abi_encode_array_address_dyn","nodeType":"YulIdentifier","src":"26832:28:33"},"nodeType":"YulFunctionCall","src":"26832:57:33"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"26824:4:33"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"26909:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"26920:2:33","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"26905:3:33"},"nodeType":"YulFunctionCall","src":"26905:18:33"},{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"26929:6:33"},{"kind":"number","nodeType":"YulLiteral","src":"26937:42:33","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"26925:3:33"},"nodeType":"YulFunctionCall","src":"26925:55:33"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"26898:6:33"},"nodeType":"YulFunctionCall","src":"26898:83:33"},"nodeType":"YulExpressionStatement","src":"26898:83:33"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"27001:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"27012:3:33","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"26997:3:33"},"nodeType":"YulFunctionCall","src":"26997:19:33"},{"name":"value4","nodeType":"YulIdentifier","src":"27018:6:33"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"26990:6:33"},"nodeType":"YulFunctionCall","src":"26990:35:33"},"nodeType":"YulExpressionStatement","src":"26990:35:33"}]},"name":"abi_encode_tuple_t_uint256_t_uint256_t_array$_t_address_$dyn_memory_ptr_t_address_t_uint256__to_t_uint256_t_uint256_t_array$_t_address_$dyn_memory_ptr_t_address_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"26634:9:33","type":""},{"name":"value4","nodeType":"YulTypedName","src":"26645:6:33","type":""},{"name":"value3","nodeType":"YulTypedName","src":"26653:6:33","type":""},{"name":"value2","nodeType":"YulTypedName","src":"26661:6:33","type":""},{"name":"value1","nodeType":"YulTypedName","src":"26669:6:33","type":""},{"name":"value0","nodeType":"YulTypedName","src":"26677:6:33","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"26688:4:33","type":""}],"src":"26434:597:33"},{"body":{"nodeType":"YulBlock","src":"27241:272:33","statements":[{"nodeType":"YulAssignment","src":"27251:27:33","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"27263:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"27274:3:33","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"27259:3:33"},"nodeType":"YulFunctionCall","src":"27259:19:33"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"27251:4:33"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"27294:9:33"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"27309:6:33"},{"kind":"number","nodeType":"YulLiteral","src":"27317:4:33","type":"","value":"0xff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"27305:3:33"},"nodeType":"YulFunctionCall","src":"27305:17:33"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"27287:6:33"},"nodeType":"YulFunctionCall","src":"27287:36:33"},"nodeType":"YulExpressionStatement","src":"27287:36:33"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"27343:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"27354:2:33","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"27339:3:33"},"nodeType":"YulFunctionCall","src":"27339:18:33"},{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"27363:6:33"},{"kind":"number","nodeType":"YulLiteral","src":"27371:4:33","type":"","value":"0xff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"27359:3:33"},"nodeType":"YulFunctionCall","src":"27359:17:33"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"27332:6:33"},"nodeType":"YulFunctionCall","src":"27332:45:33"},"nodeType":"YulExpressionStatement","src":"27332:45:33"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"27397:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"27408:2:33","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"27393:3:33"},"nodeType":"YulFunctionCall","src":"27393:18:33"},{"name":"value2","nodeType":"YulIdentifier","src":"27413:6:33"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"27386:6:33"},"nodeType":"YulFunctionCall","src":"27386:34:33"},"nodeType":"YulExpressionStatement","src":"27386:34:33"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"27440:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"27451:2:33","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"27436:3:33"},"nodeType":"YulFunctionCall","src":"27436:18:33"},{"name":"value3","nodeType":"YulIdentifier","src":"27456:6:33"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"27429:6:33"},"nodeType":"YulFunctionCall","src":"27429:34:33"},"nodeType":"YulExpressionStatement","src":"27429:34:33"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"27483:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"27494:3:33","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"27479:3:33"},"nodeType":"YulFunctionCall","src":"27479:19:33"},{"name":"value4","nodeType":"YulIdentifier","src":"27500:6:33"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"27472:6:33"},"nodeType":"YulFunctionCall","src":"27472:35:33"},"nodeType":"YulExpressionStatement","src":"27472:35:33"}]},"name":"abi_encode_tuple_t_uint8_t_uint8_t_uint256_t_uint256_t_uint256__to_t_uint8_t_uint8_t_uint256_t_uint256_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"27178:9:33","type":""},{"name":"value4","nodeType":"YulTypedName","src":"27189:6:33","type":""},{"name":"value3","nodeType":"YulTypedName","src":"27197:6:33","type":""},{"name":"value2","nodeType":"YulTypedName","src":"27205:6:33","type":""},{"name":"value1","nodeType":"YulTypedName","src":"27213:6:33","type":""},{"name":"value0","nodeType":"YulTypedName","src":"27221:6:33","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"27232:4:33","type":""}],"src":"27036:477:33"},{"body":{"nodeType":"YulBlock","src":"27563:289:33","statements":[{"nodeType":"YulAssignment","src":"27573:19:33","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"27589:2:33","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"27583:5:33"},"nodeType":"YulFunctionCall","src":"27583:9:33"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"27573:6:33"}]},{"nodeType":"YulVariableDeclaration","src":"27601:117:33","value":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"27623:6:33"},{"arguments":[{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"27639:4:33"},{"kind":"number","nodeType":"YulLiteral","src":"27645:2:33","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"27635:3:33"},"nodeType":"YulFunctionCall","src":"27635:13:33"},{"kind":"number","nodeType":"YulLiteral","src":"27650:66:33","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"27631:3:33"},"nodeType":"YulFunctionCall","src":"27631:86:33"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"27619:3:33"},"nodeType":"YulFunctionCall","src":"27619:99:33"},"variables":[{"name":"newFreePtr","nodeType":"YulTypedName","src":"27605:10:33","type":""}]},{"body":{"nodeType":"YulBlock","src":"27793:22:33","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"27795:16:33"},"nodeType":"YulFunctionCall","src":"27795:18:33"},"nodeType":"YulExpressionStatement","src":"27795:18:33"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"27736:10:33"},{"kind":"number","nodeType":"YulLiteral","src":"27748:18:33","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"27733:2:33"},"nodeType":"YulFunctionCall","src":"27733:34:33"},{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"27772:10:33"},{"name":"memPtr","nodeType":"YulIdentifier","src":"27784:6:33"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"27769:2:33"},"nodeType":"YulFunctionCall","src":"27769:22:33"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"27730:2:33"},"nodeType":"YulFunctionCall","src":"27730:62:33"},"nodeType":"YulIf","src":"27727:2:33"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"27831:2:33","type":"","value":"64"},{"name":"newFreePtr","nodeType":"YulIdentifier","src":"27835:10:33"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"27824:6:33"},"nodeType":"YulFunctionCall","src":"27824:22:33"},"nodeType":"YulExpressionStatement","src":"27824:22:33"}]},"name":"allocate_memory","nodeType":"YulFunctionDefinition","parameters":[{"name":"size","nodeType":"YulTypedName","src":"27543:4:33","type":""}],"returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"27552:6:33","type":""}],"src":"27518:334:33"},{"body":{"nodeType":"YulBlock","src":"27926:114:33","statements":[{"body":{"nodeType":"YulBlock","src":"27970:22:33","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"27972:16:33"},"nodeType":"YulFunctionCall","src":"27972:18:33"},"nodeType":"YulExpressionStatement","src":"27972:18:33"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"27942:6:33"},{"kind":"number","nodeType":"YulLiteral","src":"27950:18:33","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"27939:2:33"},"nodeType":"YulFunctionCall","src":"27939:30:33"},"nodeType":"YulIf","src":"27936:2:33"},{"nodeType":"YulAssignment","src":"28001:33:33","value":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"28017:1:33","type":"","value":"5"},{"name":"length","nodeType":"YulIdentifier","src":"28020:6:33"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"28013:3:33"},"nodeType":"YulFunctionCall","src":"28013:14:33"},{"kind":"number","nodeType":"YulLiteral","src":"28029:4:33","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"28009:3:33"},"nodeType":"YulFunctionCall","src":"28009:25:33"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"28001:4:33"}]}]},"name":"array_allocation_size_array_address_dyn","nodeType":"YulFunctionDefinition","parameters":[{"name":"length","nodeType":"YulTypedName","src":"27906:6:33","type":""}],"returnVariables":[{"name":"size","nodeType":"YulTypedName","src":"27917:4:33","type":""}],"src":"27857:183:33"},{"body":{"nodeType":"YulBlock","src":"28094:236:33","statements":[{"body":{"nodeType":"YulBlock","src":"28124:174:33","statements":[{"expression":{"arguments":[{"name":"diff","nodeType":"YulIdentifier","src":"28145:4:33"},{"kind":"number","nodeType":"YulLiteral","src":"28151:77:33","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"28138:6:33"},"nodeType":"YulFunctionCall","src":"28138:91:33"},"nodeType":"YulExpressionStatement","src":"28138:91:33"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"28249:1:33","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"28252:4:33","type":"","value":"0x11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"28242:6:33"},"nodeType":"YulFunctionCall","src":"28242:15:33"},"nodeType":"YulExpressionStatement","src":"28242:15:33"},{"expression":{"arguments":[{"name":"diff","nodeType":"YulIdentifier","src":"28277:4:33"},{"kind":"number","nodeType":"YulLiteral","src":"28283:4:33","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"28270:6:33"},"nodeType":"YulFunctionCall","src":"28270:18:33"},"nodeType":"YulExpressionStatement","src":"28270:18:33"}]},"condition":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"28110:1:33"},{"name":"y","nodeType":"YulIdentifier","src":"28113:1:33"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"28107:2:33"},"nodeType":"YulFunctionCall","src":"28107:8:33"},"nodeType":"YulIf","src":"28104:2:33"},{"nodeType":"YulAssignment","src":"28307:17:33","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"28319:1:33"},{"name":"y","nodeType":"YulIdentifier","src":"28322:1:33"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"28315:3:33"},"nodeType":"YulFunctionCall","src":"28315:9:33"},"variableNames":[{"name":"diff","nodeType":"YulIdentifier","src":"28307:4:33"}]}]},"name":"checked_sub_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"28076:1:33","type":""},{"name":"y","nodeType":"YulTypedName","src":"28079:1:33","type":""}],"returnVariables":[{"name":"diff","nodeType":"YulTypedName","src":"28085:4:33","type":""}],"src":"28045:285:33"},{"body":{"nodeType":"YulBlock","src":"28388:205:33","statements":[{"nodeType":"YulVariableDeclaration","src":"28398:10:33","value":{"kind":"number","nodeType":"YulLiteral","src":"28407:1:33","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"28402:1:33","type":""}]},{"body":{"nodeType":"YulBlock","src":"28467:63:33","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"28492:3:33"},{"name":"i","nodeType":"YulIdentifier","src":"28497:1:33"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"28488:3:33"},"nodeType":"YulFunctionCall","src":"28488:11:33"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"28511:3:33"},{"name":"i","nodeType":"YulIdentifier","src":"28516:1:33"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"28507:3:33"},"nodeType":"YulFunctionCall","src":"28507:11:33"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"28501:5:33"},"nodeType":"YulFunctionCall","src":"28501:18:33"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"28481:6:33"},"nodeType":"YulFunctionCall","src":"28481:39:33"},"nodeType":"YulExpressionStatement","src":"28481:39:33"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"28428:1:33"},{"name":"length","nodeType":"YulIdentifier","src":"28431:6:33"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"28425:2:33"},"nodeType":"YulFunctionCall","src":"28425:13:33"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"28439:19:33","statements":[{"nodeType":"YulAssignment","src":"28441:15:33","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"28450:1:33"},{"kind":"number","nodeType":"YulLiteral","src":"28453:2:33","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"28446:3:33"},"nodeType":"YulFunctionCall","src":"28446:10:33"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"28441:1:33"}]}]},"pre":{"nodeType":"YulBlock","src":"28421:3:33","statements":[]},"src":"28417:113:33"},{"body":{"nodeType":"YulBlock","src":"28556:31:33","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"28569:3:33"},{"name":"length","nodeType":"YulIdentifier","src":"28574:6:33"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"28565:3:33"},"nodeType":"YulFunctionCall","src":"28565:16:33"},{"kind":"number","nodeType":"YulLiteral","src":"28583:1:33","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"28558:6:33"},"nodeType":"YulFunctionCall","src":"28558:27:33"},"nodeType":"YulExpressionStatement","src":"28558:27:33"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"28545:1:33"},{"name":"length","nodeType":"YulIdentifier","src":"28548:6:33"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"28542:2:33"},"nodeType":"YulFunctionCall","src":"28542:13:33"},"nodeType":"YulIf","src":"28539:2:33"}]},"name":"copy_memory_to_memory","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"28366:3:33","type":""},{"name":"dst","nodeType":"YulTypedName","src":"28371:3:33","type":""},{"name":"length","nodeType":"YulTypedName","src":"28376:6:33","type":""}],"src":"28335:258:33"},{"body":{"nodeType":"YulBlock","src":"28630:152:33","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"28647:1:33","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"28650:77:33","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"28640:6:33"},"nodeType":"YulFunctionCall","src":"28640:88:33"},"nodeType":"YulExpressionStatement","src":"28640:88:33"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"28744:1:33","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"28747:4:33","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"28737:6:33"},"nodeType":"YulFunctionCall","src":"28737:15:33"},"nodeType":"YulExpressionStatement","src":"28737:15:33"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"28768:1:33","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"28771:4:33","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"28761:6:33"},"nodeType":"YulFunctionCall","src":"28761:15:33"},"nodeType":"YulExpressionStatement","src":"28761:15:33"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"28598:184:33"},{"body":{"nodeType":"YulBlock","src":"28832:109:33","statements":[{"body":{"nodeType":"YulBlock","src":"28919:16:33","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"28928:1:33","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"28931:1:33","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"28921:6:33"},"nodeType":"YulFunctionCall","src":"28921:12:33"},"nodeType":"YulExpressionStatement","src":"28921:12:33"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"28855:5:33"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"28866:5:33"},{"kind":"number","nodeType":"YulLiteral","src":"28873:42:33","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"28862:3:33"},"nodeType":"YulFunctionCall","src":"28862:54:33"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"28852:2:33"},"nodeType":"YulFunctionCall","src":"28852:65:33"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"28845:6:33"},"nodeType":"YulFunctionCall","src":"28845:73:33"},"nodeType":"YulIf","src":"28842:2:33"}]},"name":"validator_revert_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"28821:5:33","type":""}],"src":"28787:154:33"},{"body":{"nodeType":"YulBlock","src":"28989:71:33","statements":[{"body":{"nodeType":"YulBlock","src":"29038:16:33","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"29047:1:33","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"29050:1:33","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"29040:6:33"},"nodeType":"YulFunctionCall","src":"29040:12:33"},"nodeType":"YulExpressionStatement","src":"29040:12:33"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"29012:5:33"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"29023:5:33"},{"kind":"number","nodeType":"YulLiteral","src":"29030:4:33","type":"","value":"0xff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"29019:3:33"},"nodeType":"YulFunctionCall","src":"29019:16:33"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"29009:2:33"},"nodeType":"YulFunctionCall","src":"29009:27:33"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"29002:6:33"},"nodeType":"YulFunctionCall","src":"29002:35:33"},"nodeType":"YulIf","src":"28999:2:33"}]},"name":"validator_revert_uint8","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"28978:5:33","type":""}],"src":"28946:114:33"}]},"contents":"{\n    { }\n    function abi_decode_array_address_dyn_fromMemory(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(array, array) }\n        let _1 := mload(offset)\n        let _2 := 0x20\n        let dst := allocate_memory(array_allocation_size_array_address_dyn(_1))\n        let dst_1 := dst\n        mstore(dst, _1)\n        dst := add(dst, _2)\n        let src := add(offset, _2)\n        if gt(add(add(offset, shl(5, _1)), _2), end) { revert(array, array) }\n        let i := array\n        for { } lt(i, _1) { i := add(i, 1) }\n        {\n            let value := mload(src)\n            validator_revert_address(value)\n            mstore(dst, value)\n            dst := add(dst, _2)\n            src := add(src, _2)\n        }\n        array := dst_1\n    }\n    function abi_decode_array_uint256_dyn_fromMemory(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(array, array) }\n        let _1 := mload(offset)\n        let _2 := 0x20\n        let dst := allocate_memory(array_allocation_size_array_address_dyn(_1))\n        let dst_1 := dst\n        mstore(dst, _1)\n        dst := add(dst, _2)\n        let src := add(offset, _2)\n        if gt(add(add(offset, shl(5, _1)), _2), end) { revert(array, array) }\n        let i := array\n        for { } lt(i, _1) { i := add(i, 1) }\n        {\n            mstore(dst, mload(src))\n            dst := add(dst, _2)\n            src := add(src, _2)\n        }\n        array := dst_1\n    }\n    function abi_decode_uint24_fromMemory(offset) -> value\n    {\n        value := mload(offset)\n        if iszero(eq(value, and(value, 0xffffff))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        let value := mload(headStart)\n        validator_revert_address(value)\n        value0 := value\n    }\n    function abi_decode_tuple_t_address_payable_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        let value := mload(headStart)\n        validator_revert_address(value)\n        value0 := value\n    }\n    function abi_decode_tuple_t_addresst_uint8_fromMemory(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(value1, value1) }\n        let value := mload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        let value_1 := mload(add(headStart, 32))\n        validator_revert_uint8(value_1)\n        value1 := value_1\n    }\n    function abi_decode_tuple_t_array$_t_address_$dyn_memory_ptr_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        let offset := mload(headStart)\n        if gt(offset, 0xffffffffffffffff) { revert(value0, value0) }\n        value0 := abi_decode_array_address_dyn_fromMemory(add(headStart, offset), dataEnd)\n    }\n    function abi_decode_tuple_t_array$_t_address_$dyn_memory_ptrt_array$_t_bytes32_$dyn_memory_ptr_fromMemory(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(value0, value0) }\n        let offset := mload(headStart)\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(value0, value0) }\n        value0 := abi_decode_array_address_dyn_fromMemory(add(headStart, offset), dataEnd)\n        let _2 := 32\n        let offset_1 := mload(add(headStart, _2))\n        if gt(offset_1, _1) { revert(value1, value1) }\n        let _3 := add(headStart, offset_1)\n        if iszero(slt(add(_3, 0x1f), dataEnd)) { revert(value1, value1) }\n        let _4 := mload(_3)\n        let dst := allocate_memory(array_allocation_size_array_address_dyn(_4))\n        let dst_1 := dst\n        mstore(dst, _4)\n        dst := add(dst, _2)\n        let src := add(_3, _2)\n        if gt(add(add(_3, shl(5, _4)), _2), dataEnd) { revert(value1, value1) }\n        let i := value1\n        for { } lt(i, _4) { i := add(i, 1) }\n        {\n            mstore(dst, mload(src))\n            dst := add(dst, _2)\n            src := add(src, _2)\n        }\n        value1 := dst_1\n    }\n    function abi_decode_tuple_t_array$_t_address_$dyn_memory_ptrt_array$_t_uint24_$dyn_memory_ptr_fromMemory(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(value0, value0) }\n        let offset := mload(headStart)\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(value0, value0) }\n        value0 := abi_decode_array_address_dyn_fromMemory(add(headStart, offset), dataEnd)\n        let _2 := 32\n        let offset_1 := mload(add(headStart, _2))\n        if gt(offset_1, _1) { revert(value1, value1) }\n        let _3 := add(headStart, offset_1)\n        if iszero(slt(add(_3, 0x1f), dataEnd)) { revert(value1, value1) }\n        let _4 := mload(_3)\n        let dst := allocate_memory(array_allocation_size_array_address_dyn(_4))\n        let dst_1 := dst\n        mstore(dst, _4)\n        dst := add(dst, _2)\n        let src := add(_3, _2)\n        if gt(add(add(_3, shl(5, _4)), _2), dataEnd) { revert(value1, value1) }\n        let i := value1\n        for { } lt(i, _4) { i := add(i, 1) }\n        {\n            mstore(dst, abi_decode_uint24_fromMemory(src))\n            dst := add(dst, _2)\n            src := add(src, _2)\n        }\n        value1 := dst_1\n    }\n    function abi_decode_tuple_t_array$_t_address_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptrt_uint256_fromMemory(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(value2, value2) }\n        let offset := mload(headStart)\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(value2, value2) }\n        value0 := abi_decode_array_address_dyn_fromMemory(add(headStart, offset), dataEnd)\n        let offset_1 := mload(add(headStart, 32))\n        if gt(offset_1, _1) { revert(value2, value2) }\n        value1 := abi_decode_array_uint256_dyn_fromMemory(add(headStart, offset_1), dataEnd)\n        value2 := mload(add(headStart, 64))\n    }\n    function abi_decode_tuple_t_array$_t_int256_$dyn_memory_ptr_fromMemory(headStart, dataEnd) -> value0\n    {\n        let _1 := 32\n        if slt(sub(dataEnd, headStart), _1) { revert(value0, value0) }\n        let offset := mload(headStart)\n        if gt(offset, 0xffffffffffffffff) { revert(value0, value0) }\n        let _2 := add(headStart, offset)\n        if iszero(slt(add(_2, 0x1f), dataEnd)) { revert(value0, value0) }\n        let _3 := mload(_2)\n        let dst := allocate_memory(array_allocation_size_array_address_dyn(_3))\n        let dst_1 := dst\n        mstore(dst, _3)\n        dst := add(dst, _1)\n        let src := add(_2, _1)\n        if gt(add(add(_2, shl(5, _3)), _1), dataEnd) { revert(value0, value0) }\n        let i := value0\n        for { } lt(i, _3) { i := add(i, 1) }\n        {\n            mstore(dst, mload(src))\n            dst := add(dst, _1)\n            src := add(src, _1)\n        }\n        value0 := dst_1\n    }\n    function abi_decode_tuple_t_array$_t_uint256_$dyn_memory_ptr_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        let offset := mload(headStart)\n        if gt(offset, 0xffffffffffffffff) { revert(value0, value0) }\n        value0 := abi_decode_array_uint256_dyn_fromMemory(add(headStart, offset), dataEnd)\n    }\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        let value := mload(headStart)\n        if iszero(eq(value, iszero(iszero(value)))) { revert(value0, value0) }\n        value0 := value\n    }\n    function abi_decode_tuple_t_bytes32_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        value0 := mload(headStart)\n    }\n    function abi_decode_tuple_t_uint24_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        value0 := abi_decode_uint24_fromMemory(headStart)\n    }\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        value0 := mload(headStart)\n    }\n    function abi_decode_tuple_t_uint8_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        let value := mload(headStart)\n        validator_revert_uint8(value)\n        value0 := value\n    }\n    function abi_decode_tuple_t_uint8t_addresst_addresst_uint256t_uint256t_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5\n    {\n        if slt(sub(dataEnd, headStart), 192) { revert(value2, value2) }\n        let value := calldataload(headStart)\n        validator_revert_uint8(value)\n        value0 := value\n        let _1 := 32\n        let value_1 := calldataload(add(headStart, _1))\n        validator_revert_address(value_1)\n        value1 := value_1\n        let value_2 := calldataload(add(headStart, 64))\n        validator_revert_address(value_2)\n        value2 := value_2\n        value3 := calldataload(add(headStart, 96))\n        value4 := calldataload(add(headStart, 128))\n        let offset := calldataload(add(headStart, 160))\n        let _2 := 0xffffffffffffffff\n        if gt(offset, _2) { revert(value5, value5) }\n        let _3 := add(headStart, offset)\n        if iszero(slt(add(_3, 0x1f), dataEnd)) { revert(value5, value5) }\n        let _4 := calldataload(_3)\n        if gt(_4, _2) { panic_error_0x41() }\n        let array := allocate_memory(add(and(add(_4, 0x1f), 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0), _1))\n        mstore(array, _4)\n        if gt(add(add(_3, _4), _1), dataEnd) { revert(value5, value5) }\n        calldatacopy(add(array, _1), add(_3, _1), _4)\n        mstore(add(add(array, _4), _1), value5)\n        value5 := array\n    }\n    function abi_encode_array_address_dyn(value, pos) -> end\n    {\n        let length := mload(value)\n        mstore(pos, length)\n        let _1 := 0x20\n        pos := add(pos, _1)\n        let srcPtr := add(value, _1)\n        let i := end\n        for { } lt(i, length) { i := add(i, 1) }\n        {\n            mstore(pos, and(mload(srcPtr), 0xffffffffffffffffffffffffffffffffffffffff))\n            pos := add(pos, _1)\n            srcPtr := add(srcPtr, _1)\n        }\n        end := pos\n    }\n    function abi_encode_array_int256_dyn(value, pos) -> end\n    {\n        let length := mload(value)\n        mstore(pos, length)\n        let _1 := 0x20\n        pos := add(pos, _1)\n        let srcPtr := add(value, _1)\n        let i := end\n        for { } lt(i, length) { i := add(i, 1) }\n        {\n            mstore(pos, mload(srcPtr))\n            pos := add(pos, _1)\n            srcPtr := add(srcPtr, _1)\n        }\n        end := pos\n    }\n    function abi_encode_bytes(value, pos) -> end\n    {\n        let length := mload(value)\n        mstore(pos, length)\n        copy_memory_to_memory(add(value, 0x20), add(pos, 0x20), length)\n        end := add(add(pos, and(add(length, 31), 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0)), 0x20)\n    }\n    function abi_encode_enum_SwapKind(value, pos)\n    {\n        if iszero(lt(value, 2))\n        {\n            mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n            mstore(4, 0x21)\n            revert(0, 0x24)\n        }\n        mstore(pos, value)\n    }\n    function abi_encode_struct_FundManagement(value, pos)\n    {\n        let _1 := 0xffffffffffffffffffffffffffffffffffffffff\n        mstore(pos, and(mload(value), _1))\n        mstore(add(pos, 0x20), iszero(iszero(mload(add(value, 0x20)))))\n        mstore(add(pos, 0x40), and(mload(add(value, 0x40)), _1))\n        mstore(add(pos, 0x60), iszero(iszero(mload(add(value, 0x60)))))\n    }\n    function abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value0) -> end\n    {\n        let length := mload(value0)\n        copy_memory_to_memory(add(value0, 0x20), pos, length)\n        end := add(pos, length)\n    }\n    function abi_encode_tuple_packed_t_bytes_memory_ptr_t_address__to_t_bytes_memory_ptr_t_address__nonPadded_inplace_fromStack_reversed(pos, value1, value0) -> end\n    {\n        let length := mload(value0)\n        copy_memory_to_memory(add(value0, 0x20), pos, length)\n        let end_1 := add(pos, length)\n        mstore(end_1, and(shl(96, value1), 0xffffffffffffffffffffffffffffffffffffffff000000000000000000000000))\n        end := add(end_1, 20)\n    }\n    function abi_encode_tuple_packed_t_bytes_memory_ptr_t_uint24__to_t_bytes_memory_ptr_t_uint24__nonPadded_inplace_fromStack_reversed(pos, value1, value0) -> end\n    {\n        let length := mload(value0)\n        copy_memory_to_memory(add(value0, 0x20), pos, length)\n        let end_1 := add(pos, length)\n        mstore(end_1, and(shl(232, value1), 0xffffff0000000000000000000000000000000000000000000000000000000000))\n        end := add(end_1, 3)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n    }\n    function abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        let _1 := 0xffffffffffffffffffffffffffffffffffffffff\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n    }\n    function abi_encode_tuple_t_address_t_address_t_uint24__to_t_address_t_address_t_uint24__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        let _1 := 0xffffffffffffffffffffffffffffffffffffffff\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), and(value2, 0xffffff))\n    }\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_enum$_SwapKind_$5769_t_array$_t_struct$_BatchSwapStep_$5794_memory_ptr_$dyn_memory_ptr_t_array$_t_address_$dyn_memory_ptr_t_struct$_FundManagement_$5803_memory_ptr_t_array$_t_int256_$dyn_memory_ptr_t_uint256__to_t_uint8_t_array$_t_struct$_BatchSwapStep_$5794_memory_ptr_$dyn_memory_ptr_t_array$_t_address_$dyn_memory_ptr_t_struct$_FundManagement_$5803_memory_ptr_t_array$_t_int256_$dyn_memory_ptr_t_uint256__fromStack_reversed(headStart, value5, value4, value3, value2, value1, value0) -> tail\n    {\n        let _1 := 288\n        let tail_1 := add(headStart, _1)\n        abi_encode_enum_SwapKind(value0, headStart)\n        let _2 := 32\n        mstore(add(headStart, _2), _1)\n        let pos := tail_1\n        let length := mload(value1)\n        mstore(tail_1, length)\n        let _3 := 320\n        pos := add(headStart, _3)\n        let tail_2 := add(add(headStart, shl(5, length)), _3)\n        let srcPtr := add(value1, _2)\n        let i := tail\n        for { } lt(i, length) { i := add(i, 1) }\n        {\n            mstore(pos, add(sub(tail_2, headStart), 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffec0))\n            let _4 := mload(srcPtr)\n            let _5 := 0xa0\n            mstore(tail_2, mload(_4))\n            mstore(add(tail_2, _2), mload(add(_4, _2)))\n            let _6 := 0x40\n            mstore(add(tail_2, _6), mload(add(_4, _6)))\n            let _7 := 0x60\n            mstore(add(tail_2, _7), mload(add(_4, _7)))\n            let _8 := 0x80\n            let memberValue0 := mload(add(_4, _8))\n            mstore(add(tail_2, _8), _5)\n            tail_2 := abi_encode_bytes(memberValue0, add(tail_2, _5))\n            srcPtr := add(srcPtr, _2)\n            pos := add(pos, _2)\n        }\n        mstore(add(headStart, 0x40), sub(tail_2, headStart))\n        let tail_3 := abi_encode_array_address_dyn(value2, tail_2)\n        abi_encode_struct_FundManagement(value3, add(headStart, 0x60))\n        mstore(add(headStart, 224), sub(tail_3, headStart))\n        tail := abi_encode_array_int256_dyn(value4, tail_3)\n        mstore(add(headStart, 256), value5)\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        tail := abi_encode_bytes(value0, add(headStart, 32))\n    }\n    function abi_encode_tuple_t_stringliteral_0932a94ff52ccbad8aa0d10631f5a1d64f1bc3a1b4af2eb31a63fa91d9514653__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"BALANCER_INVALID_BATCH_AMOUNT_IN\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_250825b91a441035041aa19c47dca116183d1965aa3af31049d8bb22daeaca26__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 19)\n        mstore(add(headStart, 64), \"1INCH_V5_MIN_AMOUNT\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_2dcd7e06206a1c88f04eb4fd1c9ebebaf21c4fee53df6088a8778fd0c6308ba0__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 24)\n        mstore(add(headStart, 64), \"INVALID_UNISWAP_POOL_FEE\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_316b7cdf461641c0913c2eef4903d44fb8ebf510c9c6a5d8e9dc1df97827889d__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 28)\n        mstore(add(headStart, 64), \"INVALID_BALANCER_POOL_TOKENS\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_4c4756d62952d105f77979d4c1b28506a71eed0131395424dfb3a5ae68650cc3__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 14)\n        mstore(add(headStart, 64), \"INVALID_SOURCE\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Address: insufficient balance fo\")\n        mstore(add(headStart, 96), \"r call\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_601328a88770133c0441e5fef15dc309a1dd06ee6bcaddda0c7e394090784c86__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 31)\n        mstore(add(headStart, 64), \"INVALID_UNISWAP_V3_INPUT_LENGTH\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_66cbe35eb6666c92304a8cb76d93a701850dd3d2002f6d45447de944a39de107__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 24)\n        mstore(add(headStart, 64), \"INVALID_BALANCER_POOL_ID\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_74e6d3a4204092bea305532ded31d3763fc378e46be3884a93ceff08a0761807__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"SafeCast: value must be positive\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_7d53102d364230849b66935ee94d95d6509cab71f6498d129b923063a4d51836__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"BALANCER_INVALID_BATCH_AMOUNT_OU\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_893d73b372bd066c89d4a33be85bdd8036ae33c71f36d2c1583a20b63f7fcf27__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 22)\n        mstore(add(headStart, 64), \"PARASWAP_V5_MIN_AMOUNT\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 29)\n        mstore(add(headStart, 64), \"Address: call to non-contract\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_d70dcf21692b3c91b4c5fbb89ed57f464aa42efbe5b0ea96c4acb7c080144227__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 40)\n        mstore(add(headStart, 64), \"SafeCast: value doesn't fit in a\")\n        mstore(add(headStart, 96), \"n int256\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 42)\n        mstore(add(headStart, 64), \"SafeERC20: ERC20 operation did n\")\n        mstore(add(headStart, 96), \"ot succeed\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_e3360c1aa242a694a0a30f9b3474b7c9673cb4d060b27b23ff6dffb88815edc4__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 23)\n        mstore(add(headStart, 64), \"HOP_INVALID_DATA_LENGTH\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_e40c26701b18ead1b939f999c70ae24cebfc5e0c2f0c824ccb75645cabcd8b92__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"INVALID_BALANCER_V2_INPUT_LENGTH\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_ef945ddb1bfdc0da870feb4560d868b047642b4ac7f2fb7f8b7c51cb4a411e25__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 54)\n        mstore(add(headStart, 64), \"SafeERC20: approve from non-zero\")\n        mstore(add(headStart, 96), \" to non-zero allowance\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_f8d7622446eb6d816555364a8a930f59f2926f9542740772751f6125f42d96ac__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 20)\n        mstore(add(headStart, 64), \"INVALID_UNISWAP_POOL\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_struct$_ExactInputParams_$3936_memory_ptr__to_t_struct$_ExactInputParams_$3936_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        let memberValue0 := mload(value0)\n        mstore(add(headStart, 32), 0xa0)\n        let tail_1 := abi_encode_bytes(memberValue0, add(headStart, 192))\n        mstore(add(headStart, 64), and(mload(add(value0, 32)), 0xffffffffffffffffffffffffffffffffffffffff))\n        mstore(add(headStart, 96), mload(add(value0, 64)))\n        mstore(add(headStart, 128), mload(add(value0, 96)))\n        mstore(add(headStart, 0xa0), mload(add(value0, 128)))\n        tail := tail_1\n    }\n    function abi_encode_tuple_t_struct$_ExactInputSingleParams_$3916_memory_ptr__to_t_struct$_ExactInputSingleParams_$3916_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 256)\n        let _1 := 0xffffffffffffffffffffffffffffffffffffffff\n        mstore(headStart, and(mload(value0), _1))\n        mstore(add(headStart, 0x20), and(mload(add(value0, 0x20)), _1))\n        mstore(add(headStart, 0x40), and(mload(add(value0, 0x40)), 0xffffff))\n        mstore(add(headStart, 0x60), and(mload(add(value0, 0x60)), _1))\n        mstore(add(headStart, 0x80), mload(add(value0, 0x80)))\n        mstore(add(headStart, 0xa0), mload(add(value0, 0xa0)))\n        mstore(add(headStart, 0xc0), mload(add(value0, 0xc0)))\n        mstore(add(headStart, 0xe0), and(mload(add(value0, 0xe0)), _1))\n    }\n    function abi_encode_tuple_t_struct$_SingleSwap_$5783_memory_ptr_t_struct$_FundManagement_$5803_memory_ptr_t_uint256_t_uint256__to_t_struct$_SingleSwap_$5783_memory_ptr_t_struct$_FundManagement_$5803_memory_ptr_t_uint256_t_uint256__fromStack_reversed(headStart, value3, value2, value1, value0) -> tail\n    {\n        mstore(headStart, 224)\n        mstore(add(headStart, 224), mload(value0))\n        let memberValue0 := mload(add(value0, 0x20))\n        abi_encode_enum_SwapKind(memberValue0, add(headStart, 256))\n        let memberValue0_1 := mload(add(value0, 0x40))\n        let _1 := 0xffffffffffffffffffffffffffffffffffffffff\n        mstore(add(headStart, 288), and(memberValue0_1, _1))\n        mstore(add(headStart, 320), and(mload(add(value0, 0x60)), _1))\n        mstore(add(headStart, 352), mload(add(value0, 0x80)))\n        let memberValue0_2 := mload(add(value0, 0xa0))\n        mstore(add(headStart, 384), 0xc0)\n        tail := abi_encode_bytes(memberValue0_2, add(headStart, 416))\n        abi_encode_struct_FundManagement(value1, add(headStart, 0x20))\n        mstore(add(headStart, 0xa0), value2)\n        mstore(add(headStart, 0xc0), value3)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_uint256_t_uint256_t_array$_t_address_$dyn_memory_ptr_t_address_t_uint256__to_t_uint256_t_uint256_t_array$_t_address_$dyn_memory_ptr_t_address_t_uint256__fromStack_reversed(headStart, value4, value3, value2, value1, value0) -> tail\n    {\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), 160)\n        tail := abi_encode_array_address_dyn(value2, add(headStart, 160))\n        mstore(add(headStart, 96), and(value3, 0xffffffffffffffffffffffffffffffffffffffff))\n        mstore(add(headStart, 128), value4)\n    }\n    function abi_encode_tuple_t_uint8_t_uint8_t_uint256_t_uint256_t_uint256__to_t_uint8_t_uint8_t_uint256_t_uint256_t_uint256__fromStack_reversed(headStart, value4, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 160)\n        mstore(headStart, and(value0, 0xff))\n        mstore(add(headStart, 32), and(value1, 0xff))\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), value3)\n        mstore(add(headStart, 128), value4)\n    }\n    function allocate_memory(size) -> memPtr\n    {\n        memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(size, 31), 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0))\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n    function array_allocation_size_array_address_dyn(length) -> size\n    {\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n        size := add(shl(5, length), 0x20)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        if lt(x, y)\n        {\n            mstore(diff, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n            mstore(4, 0x11)\n            revert(diff, 0x24)\n        }\n        diff := sub(x, y)\n    }\n    function copy_memory_to_memory(src, dst, length)\n    {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length) { mstore(add(dst, length), 0) }\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function validator_revert_address(value)\n    {\n        if iszero(eq(value, and(value, 0xffffffffffffffffffffffffffffffffffffffff))) { revert(0, 0) }\n    }\n    function validator_revert_uint8(value)\n    {\n        if iszero(eq(value, and(value, 0xff))) { revert(0, 0) }\n    }\n}","id":33,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{"445":[{"length":32,"start":133}],"4233":[{"length":32,"start":930},{"length":32,"start":6104},{"length":32,"start":6875},{"length":32,"start":8815},{"length":32,"start":9083}],"4836":[{"length":32,"start":1838},{"length":32,"start":1880}],"4940":[{"length":32,"start":1157},{"length":32,"start":1327}],"5056":[{"length":32,"start":675},{"length":32,"start":3264},{"length":32,"start":3659},{"length":32,"start":3825},{"length":32,"start":4043}],"5335":[{"length":32,"start":836},{"length":32,"start":4650},{"length":32,"start":5044},{"length":32,"start":8106}]},"linkReferences":{},"object":"608060405234801561001057600080fd5b50600436106100415760003560e01c806344ba1fca146100465780637b10399914610080578063a231a780146100bf575b600080fd5b61006d7f3689005aec026df754d93d88502592c01be0cfc074fb2a14f1cd3f426b51aa1881565b6040519081526020015b60405180910390f35b6100a77f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b039091168152602001610077565b61006d6100cd366004612c48565b6000808760ff1660058111156100f357634e487b7160e01b600052602160045260246000fd5b9050600081600581111561011757634e487b7160e01b600052602160045260246000fd5b14156101325761012a8787878787610292565b915050610288565b600181600581111561015457634e487b7160e01b600052602160045260246000fd5b14156101675761012a8787878787610333565b600281600581111561018957634e487b7160e01b600052602160045260246000fd5b141561019c5761012a8787878787610391565b60038160058111156101be57634e487b7160e01b600052602160045260246000fd5b14156101d15761012a87878787876103ea565b60048160058111156101f357634e487b7160e01b600052602160045260246000fd5b14156102065761012a8787878787610688565b600581600581111561022857634e487b7160e01b600052602160045260246000fd5b141561023b5761012a87878787876108b0565b60405162461bcd60e51b815260206004820152600e60248201527f494e56414c49445f534f5552434500000000000000000000000000000000000060448201526064015b60405180910390fd5b9695505050505050565b60006102c86001600160a01b0387167f000000000000000000000000000000000000000000000000000000000000000086610b21565b6000808351146102e4576102df8787878787610cba565b6102f0565b6102f087878787610eeb565b905080600182516103019190613183565b8151811061031f57634e487b7160e01b600052603260045260246000fd5b602002602001015191505095945050505050565b60006103696001600160a01b0387167f000000000000000000000000000000000000000000000000000000000000000086610b21565b60208251146103845761037f8686868686611069565b610288565b61028886868686866112c8565b60006103c76001600160a01b0387167f000000000000000000000000000000000000000000000000000000000000000086610b21565b60208251146103dd5761037f8686868686611440565b6102888686868686611a1c565b6040517f70a0823100000000000000000000000000000000000000000000000000000000815230600482015260009081906001600160a01b038716906370a082319060240160206040518083038186803b15801561044757600080fd5b505afa15801561045b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061047f9190612bfa565b905060007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663d2c4b5986040518163ffffffff1660e01b815260040160206040518083038186803b1580156104dc57600080fd5b505afa1580156104f0573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061051491906128ab565b905061052a6001600160a01b0389168288610b21565b61058a7f0000000000000000000000000000000000000000000000000000000000000000856040518060400160405280601781526020017f50415241535741505f56355f535741505f4641494c4544000000000000000000815250611b70565b506040517f70a082310000000000000000000000000000000000000000000000000000000081523060048201526000906001600160a01b038916906370a082319060240160206040518083038186803b1580156105e657600080fd5b505afa1580156105fa573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061061e9190612bfa565b905061062a8382613183565b93508584101561067c5760405162461bcd60e51b815260206004820152601660248201527f50415241535741505f56355f4d494e5f414d4f554e5400000000000000000000604482015260640161027f565b50505095945050505050565b6040517f70a0823100000000000000000000000000000000000000000000000000000000815230600482015260009081906001600160a01b038716906370a082319060240160206040518083038186803b1580156106e557600080fd5b505afa1580156106f9573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061071d9190612bfa565b90506107536001600160a01b0388167f000000000000000000000000000000000000000000000000000000000000000087610b21565b6107b37f0000000000000000000000000000000000000000000000000000000000000000846040518060400160405280601481526020017f31494e43485f56355f535741505f4641494c4544000000000000000000000000815250611b70565b506040517f70a082310000000000000000000000000000000000000000000000000000000081523060048201526000906001600160a01b038816906370a082319060240160206040518083038186803b15801561080f57600080fd5b505afa158015610823573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108479190612bfa565b90506108538282613183565b9250848310156108a55760405162461bcd60e51b815260206004820152601360248201527f31494e43485f56355f4d494e5f414d4f554e5400000000000000000000000000604482015260640161027f565b505095945050505050565b600060208251146109035760405162461bcd60e51b815260206004820152601760248201527f484f505f494e56414c49445f444154415f4c454e475448000000000000000000604482015260640161027f565b60008280602001905181019061091991906128ab565b6040517f66c0bd240000000000000000000000000000000000000000000000000000000081526001600160a01b0389811660048301529192508291600091908316906366c0bd249060240160206040518083038186803b15801561097c57600080fd5b505afa158015610990573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109b49190612c2c565b6040517f66c0bd240000000000000000000000000000000000000000000000000000000081526001600160a01b038a811660048301529192506000918416906366c0bd249060240160206040518083038186803b158015610a1457600080fd5b505afa158015610a28573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a4c9190612c2c565b9050610a626001600160a01b038b16858a610b21565b6040517f9169558600000000000000000000000000000000000000000000000000000000815260ff80841660048301528216602482015260448101899052606481018890524260848201526001600160a01b0384169063916955869060a401602060405180830381600087803b158015610adb57600080fd5b505af1158015610aef573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b139190612bfa565b9a9950505050505050505050565b801580610bc357506040517fdd62ed3e0000000000000000000000000000000000000000000000000000000081523060048201526001600160a01b03838116602483015284169063dd62ed3e9060440160206040518083038186803b158015610b8957600080fd5b505afa158015610b9d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610bc19190612bfa565b155b610c355760405162461bcd60e51b815260206004820152603660248201527f5361666545524332303a20617070726f76652066726f6d206e6f6e2d7a65726f60448201527f20746f206e6f6e2d7a65726f20616c6c6f77616e636500000000000000000000606482015260840161027f565b604080516001600160a01b038416602482015260448082018490528251808303909101815260649091019091526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167f095ea7b300000000000000000000000000000000000000000000000000000000179052610cb5908490611b89565b505050565b606060007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663c45a01556040518163ffffffff1660e01b815260040160206040518083038186803b158015610d1757600080fd5b505afa158015610d2b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d4f91906128ab565b9050600083806020019051810190610d679190612900565b90506000610d7689838a611c6e565b905060005b81517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff01811015610e1a57610e1284838381518110610dca57634e487b7160e01b600052603260045260246000fd5b602002602001015184610de7600186611dfc90919063ffffffff16565b81518110610e0557634e487b7160e01b600052603260045260246000fd5b6020026020010151611e00565b600101610d7b565b506040517f38ed17390000000000000000000000000000000000000000000000000000000081526001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016906338ed173990610e88908a908a908690309042906004016130f2565b600060405180830381600087803b158015610ea257600080fd5b505af1158015610eb6573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610ede9190810190612ba7565b9998505050505050505050565b606060007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663c45a01556040518163ffffffff1660e01b815260040160206040518083038186803b158015610f4857600080fd5b505afa158015610f5c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f8091906128ab565b90506000610f8e8787611efc565b9050610f9b828888611e00565b6040517f38ed17390000000000000000000000000000000000000000000000000000000081526001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016906338ed17399061100890889088908690309042906004016130f2565b600060405180830381600087803b15801561102257600080fd5b505af1158015611036573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261105e9190810190612ba7565b979650505050505050565b60008060008380602001905181019061108291906129f7565b815191935091506001018151146110db5760405162461bcd60e51b815260206004820152601f60248201527f494e56414c49445f554e49535741505f56335f494e5055545f4c454e47544800604482015260640161027f565b60006110e5611fa6565b905060006110f48a858b611c6e565b905060005b835181101561119e576111968383838151811061112657634e487b7160e01b600052603260045260246000fd5b602002602001015184611143600186611dfc90919063ffffffff16565b8151811061116157634e487b7160e01b600052603260045260246000fd5b602002602001015187858151811061118957634e487b7160e01b600052603260045260246000fd5b602002602001015161203e565b6001016110f9565b506111da6040518060a001604052806060815260200160006001600160a01b031681526020016000815260200160008152602001600081525090565b6111e48285612171565b8152606081018990526080810188905230602082015242604080830191909152517fc04b8d590000000000000000000000000000000000000000000000000000000081527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169063c04b8d5990611267908490600401612fdc565b602060405180830381600087803b15801561128157600080fd5b505af1158015611295573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112b99190612bfa565b9b9a5050505050505050505050565b600080828060200190518101906112df9190612c12565b90506112f46112ec611fa6565b88888461203e565b6040805161010081018252600060e082019081526001600160a01b038a811683528981166020840190815262ffffff8681168587019081523060608701908152426080880190815260a088018e815260c089018e815299517f414bf389000000000000000000000000000000000000000000000000000000008152895188166004820152955187166024870152925190931660448501525184166064840152905160848301525160a4820152935160c48501529051811660e484015290917f00000000000000000000000000000000000000000000000000000000000000009091169063414bf38990610104015b602060405180830381600087803b1580156113fc57600080fd5b505af1158015611410573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906114349190612bfa565b98975050505050505050565b600080600083806020019051810190611459919061293b565b815191935091506001018151146114b25760405162461bcd60e51b815260206004820181905260248201527f494e56414c49445f42414c414e4345525f56325f494e5055545f4c454e475448604482015260640161027f565b60006114bf89848a611c6e565b905060005b8251811015611568576115608382815181106114f057634e487b7160e01b600052603260045260246000fd5b602002602001015183838151811061151857634e487b7160e01b600052603260045260246000fd5b602002602001015184611535600186611dfc90919063ffffffff16565b8151811061155357634e487b7160e01b600052603260045260246000fd5b602002602001015161223d565b6001016114c4565b5080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0160008167ffffffffffffffff8111156115b657634e487b7160e01b600052604160045260246000fd5b60405190808252806020026020018201604052801561161c57816020015b6116096040518060a0016040528060008019168152602001600081526020016000815260200160008152602001606081525090565b8152602001906001900390816115d45790505b50905060005b828110156116c657600082828151811061164c57634e487b7160e01b600052603260045260246000fd5b6020026020010151905081600014611665576000611667565b8a5b6060820152855186908390811061168e57634e487b7160e01b600052603260045260246000fd5b602090810291909101810151825281810183905260018301604080840182905280516000815292830190526080909201529050611622565b506000835167ffffffffffffffff8111156116f157634e487b7160e01b600052604160045260246000fd5b60405190808252806020026020018201604052801561171a578160200160208202803683370190505b5090506117268a612465565b8160008151811061174757634e487b7160e01b600052603260045260246000fd5b6020026020010181815250506117847fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff6117808b612465565b0290565b815182907fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff01815181106117c857634e487b7160e01b600052603260045260246000fd5b60200260200101818152505060007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663945bcec96000858861185760408051608081018252600080825260208201819052918101829052606081019190915250604080516080810182523080825260006020830181905292820152606081019190915290565b87426040518763ffffffff1660e01b815260040161187a96959493929190612e92565b600060405180830381600087803b15801561189457600080fd5b505af11580156118a8573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526118d09190810190612b14565b90506000816118ea60018451611df790919063ffffffff16565b8151811061190857634e487b7160e01b600052603260045260246000fd5b60200260200101519050600081126119625760405162461bcd60e51b815260206004820181905260248201527f42414c414e4345525f494e56414c49445f42415443485f414d4f554e545f4f55604482015260640161027f565b8b6119948360008151811061198757634e487b7160e01b600052603260045260246000fd5b6020026020010151612505565b146119e15760405162461bcd60e51b815260206004820181905260248201527f42414c414e4345525f494e56414c49445f42415443485f414d4f554e545f494e604482015260640161027f565b611a0a817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0290565b9e9d5050505050505050505050505050565b60008082806020019051810190611a339190612bfa565b9050611a4081888861223d565b611a8c6040805160c0810190915260008082526020820190815260200160006001600160a01b0316815260200160006001600160a01b0316815260200160008152602001606081525090565b818152600060208201819052506001600160a01b038881166040838101919091529088166060830152608082018790528051600080825260208201909252905060a08201526001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000166352bbbe2982611b4f60408051608081018252600080825260208201819052918101829052606081019190915250604080516080810182523080825260006020830181905292820152606081019190915290565b88426040518563ffffffff1660e01b81526004016113e29493929190613035565b6060611b7f8484600085612557565b90505b9392505050565b6000611bde826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b0316611b709092919063ffffffff16565b805190915015610cb55780806020019051810190611bfc9190612bda565b610cb55760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e60448201527f6f74207375636365656400000000000000000000000000000000000000000000606482015260840161027f565b815160609060020167ffffffffffffffff811115611c9c57634e487b7160e01b600052604160045260246000fd5b604051908082528060200260200182016040528015611cc5578160200160208202803683370190505b5090508381600081518110611cea57634e487b7160e01b600052603260045260246000fd5b60200260200101906001600160a01b031690816001600160a01b03168152505060005b8351811015611d9a57838181518110611d3657634e487b7160e01b600052603260045260246000fd5b602002602001015182611d53600184611dfc90919063ffffffff16565b81518110611d7157634e487b7160e01b600052603260045260246000fd5b6001600160a01b0390921660209283029190910190910152611d938160010190565b9050611d0d565b508181611db260018651611dfc90919063ffffffff16565b81518110611dd057634e487b7160e01b600052603260045260246000fd5b60200260200101906001600160a01b031690816001600160a01b0316815250509392505050565b900390565b0190565b6040517fe6a439050000000000000000000000000000000000000000000000000000000081526001600160a01b03838116600483015282811660248301526000919085169063e6a439059060440160206040518083038186803b158015611e6657600080fd5b505afa158015611e7a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611e9e91906128ab565b90506001600160a01b038116611ef65760405162461bcd60e51b815260206004820152601460248201527f494e56414c49445f554e49535741505f504f4f4c000000000000000000000000604482015260640161027f565b50505050565b60408051600280825260608083018452926020830190803683370190505090508281600081518110611f3e57634e487b7160e01b600052603260045260246000fd5b60200260200101906001600160a01b031690816001600160a01b0316815250508181600181518110611f8057634e487b7160e01b600052603260045260246000fd5b60200260200101906001600160a01b031690816001600160a01b03168152505092915050565b60007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663c45a01556040518163ffffffff1660e01b815260040160206040518083038186803b15801561200157600080fd5b505afa158015612015573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061203991906128ab565b905090565b600080836001600160a01b0316856001600160a01b031610612061578385612064565b84845b6040517f1698ee820000000000000000000000000000000000000000000000000000000081526001600160a01b038084166004830152808316602483015262ffffff87166044830152929450909250600091881690631698ee829060640160206040518083038186803b1580156120da57600080fd5b505afa1580156120ee573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061211291906128ab565b6001600160a01b031614156121695760405162461bcd60e51b815260206004820152601860248201527f494e56414c49445f554e49535741505f504f4f4c5f4645450000000000000000604482015260640161027f565b505050505050565b60408051600080825260208201909252905b8251811015612201576121f78382815181106121af57634e487b7160e01b600052603260045260246000fd5b60200260200101516121f18684815181106121da57634e487b7160e01b600052603260045260246000fd5b60200260200101518561269490919063ffffffff16565b906126c0565b9150600101612183565b50611b828383518151811061222657634e487b7160e01b600052603260045260246000fd5b60200260200101518261269490919063ffffffff16565b6040517ff6c00927000000000000000000000000000000000000000000000000000000008152600481018490526000907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169063f6c0092790602401604080518083038186803b1580156122b857600080fd5b505afa1580156122cc573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906122f091906128c7565b5090506001600160a01b0381166123495760405162461bcd60e51b815260206004820152601860248201527f494e56414c49445f42414c414e4345525f504f4f4c5f49440000000000000000604482015260640161027f565b6040517ff94d4668000000000000000000000000000000000000000000000000000000008152600481018590526000907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169063f94d46689060240160006040518083038186803b1580156123c557600080fd5b505afa1580156123d9573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526124019190810190612aaa565b5090915061241290508185856126d5565b61245e5760405162461bcd60e51b815260206004820152601c60248201527f494e56414c49445f42414c414e4345525f504f4f4c5f544f4b454e5300000000604482015260640161027f565b5050505050565b60007f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8211156124fd5760405162461bcd60e51b815260206004820152602860248201527f53616665436173743a2076616c756520646f65736e27742066697420696e206160448201527f6e20696e74323536000000000000000000000000000000000000000000000000606482015260840161027f565b50805b919050565b6000808212156124fd5760405162461bcd60e51b815260206004820181905260248201527f53616665436173743a2076616c7565206d75737420626520706f736974697665604482015260640161027f565b6060824710156125cf5760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f60448201527f722063616c6c0000000000000000000000000000000000000000000000000000606482015260840161027f565b6001600160a01b0385163b6126265760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604482015260640161027f565b600080866001600160a01b031685876040516126429190612de2565b60006040518083038185875af1925050503d806000811461267f576040519150601f19603f3d011682016040523d82523d6000602084013e612684565b606091505b509150915061105e82828661278a565b606082826040516020016126a9929190612dfe565b604051602081830303815290604052905092915050565b606082826040516020016126a9929190612e48565b60008080805b865181101561277857856001600160a01b031687828151811061270e57634e487b7160e01b600052603260045260246000fd5b60200260200101516001600160a01b0316141561272a57600192505b846001600160a01b031687828151811061275457634e487b7160e01b600052603260045260246000fd5b60200260200101516001600160a01b0316141561277057600191505b6001016126db565b50818015610288575095945050505050565b60608315612799575081611b82565b8251156127a95782518084602001fd5b8160405162461bcd60e51b815260040161027f9190612fc9565b600082601f8301126127d3578081fd5b815160206127e86127e38361315f565b61312e565b80838252828201915082860187848660051b8901011115612807578586fd5b855b8581101561282e57815161281c816131e8565b84529284019290840190600101612809565b5090979650505050505050565b600082601f83011261284b578081fd5b8151602061285b6127e38361315f565b80838252828201915082860187848660051b890101111561287a578586fd5b855b8581101561282e5781518452928401929084019060010161287c565b805162ffffff8116811461250057600080fd5b6000602082840312156128bc578081fd5b8151611b82816131e8565b600080604083850312156128d9578081fd5b82516128e4816131e8565b60208401519092506128f581613200565b809150509250929050565b600060208284031215612911578081fd5b815167ffffffffffffffff811115612927578182fd5b612933848285016127c3565b949350505050565b6000806040838503121561294d578182fd5b825167ffffffffffffffff80821115612964578384fd5b612970868387016127c3565b9350602091508185015181811115612986578384fd5b85019050601f81018613612998578283fd5b80516129a66127e38261315f565b80828252848201915084840189868560051b87010111156129c5578687fd5b8694505b838510156129e75780518352600194909401939185019185016129c9565b5080955050505050509250929050565b60008060408385031215612a09578182fd5b825167ffffffffffffffff80821115612a20578384fd5b612a2c868387016127c3565b9350602091508185015181811115612a42578384fd5b85019050601f81018613612a54578283fd5b8051612a626127e38261315f565b80828252848201915084840189868560051b8701011115612a81578687fd5b8694505b838510156129e757612a9681612898565b835260019490940193918501918501612a85565b600080600060608486031215612abe578081fd5b835167ffffffffffffffff80821115612ad5578283fd5b612ae1878388016127c3565b94506020860151915080821115612af6578283fd5b50612b038682870161283b565b925050604084015190509250925092565b60006020808385031215612b26578182fd5b825167ffffffffffffffff811115612b3c578283fd5b8301601f81018513612b4c578283fd5b8051612b5a6127e38261315f565b80828252848201915084840188868560051b8701011115612b79578687fd5b8694505b83851015612b9b578051835260019490940193918501918501612b7d565b50979650505050505050565b600060208284031215612bb8578081fd5b815167ffffffffffffffff811115612bce578182fd5b6129338482850161283b565b600060208284031215612beb578081fd5b81518015158114611b82578182fd5b600060208284031215612c0b578081fd5b5051919050565b600060208284031215612c23578081fd5b611b8282612898565b600060208284031215612c3d578081fd5b8151611b8281613200565b60008060008060008060c08789031215612c60578384fd5b8635612c6b81613200565b9550602087810135612c7c816131e8565b95506040880135612c8c816131e8565b9450606088013593506080880135925060a088013567ffffffffffffffff80821115612cb6578384fd5b818a0191508a601f830112612cc9578384fd5b813581811115612cdb57612cdb6131d2565b612ced84601f19601f8401160161312e565b91508082528b84828501011115612d02578485fd5b808484018584013784848284010152508093505050509295509295509295565b6000815180845260208085019450808401835b83811015612d5a5781516001600160a01b031687529582019590820190600101612d35565b509495945050505050565b6000815180845260208085019450808401835b83811015612d5a57815187529582019590820190600101612d78565b60008151808452612dac8160208601602086016131a6565b601f01601f19169290920160200192915050565b60028110612dde57634e487b7160e01b600052602160045260246000fd5b9052565b60008251612df48184602087016131a6565b9190910192915050565b60008351612e108184602088016131a6565b60609390931b7fffffffffffffffffffffffffffffffffffffffff000000000000000000000000169190920190815260140192915050565b60008351612e5a8184602088016131a6565b60e89390931b7fffffff0000000000000000000000000000000000000000000000000000000000169190920190815260030192915050565b6000610120808301612ea4848b612dc0565b60208481019290925288519081905261014080850192600583901b8601909101918a8201855b82811015612f4a578785037ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffec00186528151805186528481015185870152604080820151908701526060808201519087015260809081015160a091870182905290612f3681880183612d94565b978601979650505090830190600101612eca565b505050508381036040850152612f608189612d22565b915050612fa260608401876001600160a01b03808251168352602082015115156020840152806040830151166040840152506060810151151560608301525050565b82810360e0840152612fb48186612d65565b91505082610100830152979650505050505050565b600060208252611b826020830184612d94565b600060208252825160a06020840152612ff860c0840182612d94565b90506001600160a01b0360208501511660408401526040840151606084015260608401516080840152608084015160a08401528091505092915050565b600060e08252855160e08301526020860151613055610100840182612dc0565b5060408601516001600160a01b03908116610120840152606087015116610140830152608086015161016083015260a086015160c061018084015261309e6101a0840182612d94565b9150506130e060208301866001600160a01b03808251168352602082015115156020840152806040830151166040840152506060810151151560608301525050565b60a082019390935260c0015292915050565b600086825285602083015260a0604083015261311160a0830186612d22565b6001600160a01b0394909416606083015250608001529392505050565b604051601f8201601f1916810167ffffffffffffffff81118282101715613157576131576131d2565b604052919050565b600067ffffffffffffffff821115613179576131796131d2565b5060051b60200190565b6000828210156131a157634e487b7160e01b81526011600452602481fd5b500390565b60005b838110156131c15781810151838201526020016131a9565b83811115611ef65750506000910152565b634e487b7160e01b600052604160045260246000fd5b6001600160a01b03811681146131fd57600080fd5b50565b60ff811681146131fd57600080fdfea26469706673582212205419c496f8641090590a91e365ca55d66994f9c29f959d931b1c4fbaefe5432c64736f6c63430008030033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x41 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x44BA1FCA EQ PUSH2 0x46 JUMPI DUP1 PUSH4 0x7B103999 EQ PUSH2 0x80 JUMPI DUP1 PUSH4 0xA231A780 EQ PUSH2 0xBF JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x6D PUSH32 0x3689005AEC026DF754D93D88502592C01BE0CFC074FB2A14F1CD3F426B51AA18 DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xA7 PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x77 JUMP JUMPDEST PUSH2 0x6D PUSH2 0xCD CALLDATASIZE PUSH1 0x4 PUSH2 0x2C48 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP8 PUSH1 0xFF AND PUSH1 0x5 DUP2 GT ISZERO PUSH2 0xF3 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 PUSH1 0x5 DUP2 GT ISZERO PUSH2 0x117 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST EQ ISZERO PUSH2 0x132 JUMPI PUSH2 0x12A DUP8 DUP8 DUP8 DUP8 DUP8 PUSH2 0x292 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x288 JUMP JUMPDEST PUSH1 0x1 DUP2 PUSH1 0x5 DUP2 GT ISZERO PUSH2 0x154 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST EQ ISZERO PUSH2 0x167 JUMPI PUSH2 0x12A DUP8 DUP8 DUP8 DUP8 DUP8 PUSH2 0x333 JUMP JUMPDEST PUSH1 0x2 DUP2 PUSH1 0x5 DUP2 GT ISZERO PUSH2 0x189 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST EQ ISZERO PUSH2 0x19C JUMPI PUSH2 0x12A DUP8 DUP8 DUP8 DUP8 DUP8 PUSH2 0x391 JUMP JUMPDEST PUSH1 0x3 DUP2 PUSH1 0x5 DUP2 GT ISZERO PUSH2 0x1BE JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST EQ ISZERO PUSH2 0x1D1 JUMPI PUSH2 0x12A DUP8 DUP8 DUP8 DUP8 DUP8 PUSH2 0x3EA JUMP JUMPDEST PUSH1 0x4 DUP2 PUSH1 0x5 DUP2 GT ISZERO PUSH2 0x1F3 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST EQ ISZERO PUSH2 0x206 JUMPI PUSH2 0x12A DUP8 DUP8 DUP8 DUP8 DUP8 PUSH2 0x688 JUMP JUMPDEST PUSH1 0x5 DUP2 PUSH1 0x5 DUP2 GT ISZERO PUSH2 0x228 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST EQ ISZERO PUSH2 0x23B JUMPI PUSH2 0x12A DUP8 DUP8 DUP8 DUP8 DUP8 PUSH2 0x8B0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x494E56414C49445F534F55524345000000000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2C8 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND PUSH32 0x0 DUP7 PUSH2 0xB21 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 MLOAD EQ PUSH2 0x2E4 JUMPI PUSH2 0x2DF DUP8 DUP8 DUP8 DUP8 DUP8 PUSH2 0xCBA JUMP JUMPDEST PUSH2 0x2F0 JUMP JUMPDEST PUSH2 0x2F0 DUP8 DUP8 DUP8 DUP8 PUSH2 0xEEB JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x1 DUP3 MLOAD PUSH2 0x301 SWAP2 SWAP1 PUSH2 0x3183 JUMP JUMPDEST DUP2 MLOAD DUP2 LT PUSH2 0x31F JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP2 POP POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x369 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND PUSH32 0x0 DUP7 PUSH2 0xB21 JUMP JUMPDEST PUSH1 0x20 DUP3 MLOAD EQ PUSH2 0x384 JUMPI PUSH2 0x37F DUP7 DUP7 DUP7 DUP7 DUP7 PUSH2 0x1069 JUMP JUMPDEST PUSH2 0x288 JUMP JUMPDEST PUSH2 0x288 DUP7 DUP7 DUP7 DUP7 DUP7 PUSH2 0x12C8 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3C7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND PUSH32 0x0 DUP7 PUSH2 0xB21 JUMP JUMPDEST PUSH1 0x20 DUP3 MLOAD EQ PUSH2 0x3DD JUMPI PUSH2 0x37F DUP7 DUP7 DUP7 DUP7 DUP7 PUSH2 0x1440 JUMP JUMPDEST PUSH2 0x288 DUP7 DUP7 DUP7 DUP7 DUP7 PUSH2 0x1A1C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x70A0823100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x0 SWAP1 DUP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x447 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x45B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x47F SWAP2 SWAP1 PUSH2 0x2BFA JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xD2C4B598 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x4DC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x4F0 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x514 SWAP2 SWAP1 PUSH2 0x28AB JUMP JUMPDEST SWAP1 POP PUSH2 0x52A PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP10 AND DUP3 DUP9 PUSH2 0xB21 JUMP JUMPDEST PUSH2 0x58A PUSH32 0x0 DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x17 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x50415241535741505F56355F535741505F4641494C4544000000000000000000 DUP2 MSTORE POP PUSH2 0x1B70 JUMP JUMPDEST POP PUSH1 0x40 MLOAD PUSH32 0x70A0823100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP10 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x5E6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x5FA JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x61E SWAP2 SWAP1 PUSH2 0x2BFA JUMP JUMPDEST SWAP1 POP PUSH2 0x62A DUP4 DUP3 PUSH2 0x3183 JUMP JUMPDEST SWAP4 POP DUP6 DUP5 LT ISZERO PUSH2 0x67C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x50415241535741505F56355F4D494E5F414D4F554E5400000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x27F JUMP JUMPDEST POP POP POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x70A0823100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x0 SWAP1 DUP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x6E5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x6F9 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x71D SWAP2 SWAP1 PUSH2 0x2BFA JUMP JUMPDEST SWAP1 POP PUSH2 0x753 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND PUSH32 0x0 DUP8 PUSH2 0xB21 JUMP JUMPDEST PUSH2 0x7B3 PUSH32 0x0 DUP5 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x14 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x31494E43485F56355F535741505F4641494C4544000000000000000000000000 DUP2 MSTORE POP PUSH2 0x1B70 JUMP JUMPDEST POP PUSH1 0x40 MLOAD PUSH32 0x70A0823100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x80F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x823 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x847 SWAP2 SWAP1 PUSH2 0x2BFA JUMP JUMPDEST SWAP1 POP PUSH2 0x853 DUP3 DUP3 PUSH2 0x3183 JUMP JUMPDEST SWAP3 POP DUP5 DUP4 LT ISZERO PUSH2 0x8A5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x31494E43485F56355F4D494E5F414D4F554E5400000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x27F JUMP JUMPDEST POP POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 MLOAD EQ PUSH2 0x903 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x484F505F494E56414C49445F444154415F4C454E475448000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x27F JUMP JUMPDEST PUSH1 0x0 DUP3 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x919 SWAP2 SWAP1 PUSH2 0x28AB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x66C0BD2400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP10 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE SWAP2 SWAP3 POP DUP3 SWAP2 PUSH1 0x0 SWAP2 SWAP1 DUP4 AND SWAP1 PUSH4 0x66C0BD24 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x97C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x990 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x9B4 SWAP2 SWAP1 PUSH2 0x2C2C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x66C0BD2400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP11 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE SWAP2 SWAP3 POP PUSH1 0x0 SWAP2 DUP5 AND SWAP1 PUSH4 0x66C0BD24 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xA14 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xA28 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xA4C SWAP2 SWAP1 PUSH2 0x2C2C JUMP JUMPDEST SWAP1 POP PUSH2 0xA62 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP12 AND DUP6 DUP11 PUSH2 0xB21 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x9169558600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0xFF DUP1 DUP5 AND PUSH1 0x4 DUP4 ADD MSTORE DUP3 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD DUP10 SWAP1 MSTORE PUSH1 0x64 DUP2 ADD DUP9 SWAP1 MSTORE TIMESTAMP PUSH1 0x84 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 PUSH4 0x91695586 SWAP1 PUSH1 0xA4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xADB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xAEF JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xB13 SWAP2 SWAP1 PUSH2 0x2BFA JUMP JUMPDEST SWAP11 SWAP10 POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST DUP1 ISZERO DUP1 PUSH2 0xBC3 JUMPI POP PUSH1 0x40 MLOAD PUSH32 0xDD62ED3E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x24 DUP4 ADD MSTORE DUP5 AND SWAP1 PUSH4 0xDD62ED3E SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xB89 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xB9D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xBC1 SWAP2 SWAP1 PUSH2 0x2BFA JUMP JUMPDEST ISZERO JUMPDEST PUSH2 0xC35 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x36 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5361666545524332303A20617070726F76652066726F6D206E6F6E2D7A65726F PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x20746F206E6F6E2D7A65726F20616C6C6F77616E636500000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x27F JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP1 DUP3 ADD DUP5 SWAP1 MSTORE DUP3 MLOAD DUP1 DUP4 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH1 0x64 SWAP1 SWAP2 ADD SWAP1 SWAP2 MSTORE PUSH1 0x20 DUP2 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x95EA7B300000000000000000000000000000000000000000000000000000000 OR SWAP1 MSTORE PUSH2 0xCB5 SWAP1 DUP5 SWAP1 PUSH2 0x1B89 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xC45A0155 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xD17 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xD2B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xD4F SWAP2 SWAP1 PUSH2 0x28AB JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP4 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0xD67 SWAP2 SWAP1 PUSH2 0x2900 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0xD76 DUP10 DUP4 DUP11 PUSH2 0x1C6E JUMP JUMPDEST SWAP1 POP PUSH1 0x0 JUMPDEST DUP2 MLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF ADD DUP2 LT ISZERO PUSH2 0xE1A JUMPI PUSH2 0xE12 DUP5 DUP4 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0xDCA JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP5 PUSH2 0xDE7 PUSH1 0x1 DUP7 PUSH2 0x1DFC SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP2 MLOAD DUP2 LT PUSH2 0xE05 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x1E00 JUMP JUMPDEST PUSH1 0x1 ADD PUSH2 0xD7B JUMP JUMPDEST POP PUSH1 0x40 MLOAD PUSH32 0x38ED173900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND SWAP1 PUSH4 0x38ED1739 SWAP1 PUSH2 0xE88 SWAP1 DUP11 SWAP1 DUP11 SWAP1 DUP7 SWAP1 ADDRESS SWAP1 TIMESTAMP SWAP1 PUSH1 0x4 ADD PUSH2 0x30F2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xEA2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xEB6 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD PUSH1 0x40 MSTORE PUSH2 0xEDE SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH2 0x2BA7 JUMP JUMPDEST SWAP10 SWAP9 POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xC45A0155 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xF48 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xF5C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xF80 SWAP2 SWAP1 PUSH2 0x28AB JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0xF8E DUP8 DUP8 PUSH2 0x1EFC JUMP JUMPDEST SWAP1 POP PUSH2 0xF9B DUP3 DUP9 DUP9 PUSH2 0x1E00 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x38ED173900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND SWAP1 PUSH4 0x38ED1739 SWAP1 PUSH2 0x1008 SWAP1 DUP9 SWAP1 DUP9 SWAP1 DUP7 SWAP1 ADDRESS SWAP1 TIMESTAMP SWAP1 PUSH1 0x4 ADD PUSH2 0x30F2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1022 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1036 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD PUSH1 0x40 MSTORE PUSH2 0x105E SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH2 0x2BA7 JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x1082 SWAP2 SWAP1 PUSH2 0x29F7 JUMP JUMPDEST DUP2 MLOAD SWAP2 SWAP4 POP SWAP2 POP PUSH1 0x1 ADD DUP2 MLOAD EQ PUSH2 0x10DB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x494E56414C49445F554E49535741505F56335F494E5055545F4C454E47544800 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x27F JUMP JUMPDEST PUSH1 0x0 PUSH2 0x10E5 PUSH2 0x1FA6 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x10F4 DUP11 DUP6 DUP12 PUSH2 0x1C6E JUMP JUMPDEST SWAP1 POP PUSH1 0x0 JUMPDEST DUP4 MLOAD DUP2 LT ISZERO PUSH2 0x119E JUMPI PUSH2 0x1196 DUP4 DUP4 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x1126 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP5 PUSH2 0x1143 PUSH1 0x1 DUP7 PUSH2 0x1DFC SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP2 MLOAD DUP2 LT PUSH2 0x1161 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP8 DUP6 DUP2 MLOAD DUP2 LT PUSH2 0x1189 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x203E JUMP JUMPDEST PUSH1 0x1 ADD PUSH2 0x10F9 JUMP JUMPDEST POP PUSH2 0x11DA PUSH1 0x40 MLOAD DUP1 PUSH1 0xA0 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x60 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH2 0x11E4 DUP3 DUP6 PUSH2 0x2171 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x60 DUP2 ADD DUP10 SWAP1 MSTORE PUSH1 0x80 DUP2 ADD DUP9 SWAP1 MSTORE ADDRESS PUSH1 0x20 DUP3 ADD MSTORE TIMESTAMP PUSH1 0x40 DUP1 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE MLOAD PUSH32 0xC04B8D5900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0xC04B8D59 SWAP1 PUSH2 0x1267 SWAP1 DUP5 SWAP1 PUSH1 0x4 ADD PUSH2 0x2FDC JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1281 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1295 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x12B9 SWAP2 SWAP1 PUSH2 0x2BFA JUMP JUMPDEST SWAP12 SWAP11 POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x12DF SWAP2 SWAP1 PUSH2 0x2C12 JUMP JUMPDEST SWAP1 POP PUSH2 0x12F4 PUSH2 0x12EC PUSH2 0x1FA6 JUMP JUMPDEST DUP9 DUP9 DUP5 PUSH2 0x203E JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH2 0x100 DUP2 ADD DUP3 MSTORE PUSH1 0x0 PUSH1 0xE0 DUP3 ADD SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP11 DUP2 AND DUP4 MSTORE DUP10 DUP2 AND PUSH1 0x20 DUP5 ADD SWAP1 DUP2 MSTORE PUSH3 0xFFFFFF DUP7 DUP2 AND DUP6 DUP8 ADD SWAP1 DUP2 MSTORE ADDRESS PUSH1 0x60 DUP8 ADD SWAP1 DUP2 MSTORE TIMESTAMP PUSH1 0x80 DUP9 ADD SWAP1 DUP2 MSTORE PUSH1 0xA0 DUP9 ADD DUP15 DUP2 MSTORE PUSH1 0xC0 DUP10 ADD DUP15 DUP2 MSTORE SWAP10 MLOAD PUSH32 0x414BF38900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE DUP10 MLOAD DUP9 AND PUSH1 0x4 DUP3 ADD MSTORE SWAP6 MLOAD DUP8 AND PUSH1 0x24 DUP8 ADD MSTORE SWAP3 MLOAD SWAP1 SWAP4 AND PUSH1 0x44 DUP6 ADD MSTORE MLOAD DUP5 AND PUSH1 0x64 DUP5 ADD MSTORE SWAP1 MLOAD PUSH1 0x84 DUP4 ADD MSTORE MLOAD PUSH1 0xA4 DUP3 ADD MSTORE SWAP4 MLOAD PUSH1 0xC4 DUP6 ADD MSTORE SWAP1 MLOAD DUP2 AND PUSH1 0xE4 DUP5 ADD MSTORE SWAP1 SWAP2 PUSH32 0x0 SWAP1 SWAP2 AND SWAP1 PUSH4 0x414BF389 SWAP1 PUSH2 0x104 ADD JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x13FC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1410 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1434 SWAP2 SWAP1 PUSH2 0x2BFA JUMP JUMPDEST SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x1459 SWAP2 SWAP1 PUSH2 0x293B JUMP JUMPDEST DUP2 MLOAD SWAP2 SWAP4 POP SWAP2 POP PUSH1 0x1 ADD DUP2 MLOAD EQ PUSH2 0x14B2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x494E56414C49445F42414C414E4345525F56325F494E5055545F4C454E475448 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x27F JUMP JUMPDEST PUSH1 0x0 PUSH2 0x14BF DUP10 DUP5 DUP11 PUSH2 0x1C6E JUMP JUMPDEST SWAP1 POP PUSH1 0x0 JUMPDEST DUP3 MLOAD DUP2 LT ISZERO PUSH2 0x1568 JUMPI PUSH2 0x1560 DUP4 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x14F0 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP4 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x1518 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP5 PUSH2 0x1535 PUSH1 0x1 DUP7 PUSH2 0x1DFC SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP2 MLOAD DUP2 LT PUSH2 0x1553 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x223D JUMP JUMPDEST PUSH1 0x1 ADD PUSH2 0x14C4 JUMP JUMPDEST POP DUP1 MLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF ADD PUSH1 0x0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x15B6 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x161C JUMPI DUP2 PUSH1 0x20 ADD JUMPDEST PUSH2 0x1609 PUSH1 0x40 MLOAD DUP1 PUSH1 0xA0 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP1 NOT AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x60 DUP2 MSTORE POP SWAP1 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0x15D4 JUMPI SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x16C6 JUMPI PUSH1 0x0 DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x164C JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP1 POP DUP2 PUSH1 0x0 EQ PUSH2 0x1665 JUMPI PUSH1 0x0 PUSH2 0x1667 JUMP JUMPDEST DUP11 JUMPDEST PUSH1 0x60 DUP3 ADD MSTORE DUP6 MLOAD DUP7 SWAP1 DUP4 SWAP1 DUP2 LT PUSH2 0x168E JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD DUP2 ADD MLOAD DUP3 MSTORE DUP2 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x1 DUP4 ADD PUSH1 0x40 DUP1 DUP5 ADD DUP3 SWAP1 MSTORE DUP1 MLOAD PUSH1 0x0 DUP2 MSTORE SWAP3 DUP4 ADD SWAP1 MSTORE PUSH1 0x80 SWAP1 SWAP3 ADD MSTORE SWAP1 POP PUSH2 0x1622 JUMP JUMPDEST POP PUSH1 0x0 DUP4 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x16F1 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x171A JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH2 0x1726 DUP11 PUSH2 0x2465 JUMP JUMPDEST DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x1747 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP PUSH2 0x1784 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH2 0x1780 DUP12 PUSH2 0x2465 JUMP JUMPDEST MUL SWAP1 JUMP JUMPDEST DUP2 MLOAD DUP3 SWAP1 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF ADD DUP2 MLOAD DUP2 LT PUSH2 0x17C8 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP PUSH1 0x0 PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x945BCEC9 PUSH1 0x0 DUP6 DUP9 PUSH2 0x1857 PUSH1 0x40 DUP1 MLOAD PUSH1 0x80 DUP2 ADD DUP3 MSTORE PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD DUP2 SWAP1 MSTORE SWAP2 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x60 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x80 DUP2 ADD DUP3 MSTORE ADDRESS DUP1 DUP3 MSTORE PUSH1 0x0 PUSH1 0x20 DUP4 ADD DUP2 SWAP1 MSTORE SWAP3 DUP3 ADD MSTORE PUSH1 0x60 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP1 JUMP JUMPDEST DUP8 TIMESTAMP PUSH1 0x40 MLOAD DUP8 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x187A SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2E92 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1894 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x18A8 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD PUSH1 0x40 MSTORE PUSH2 0x18D0 SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH2 0x2B14 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 PUSH2 0x18EA PUSH1 0x1 DUP5 MLOAD PUSH2 0x1DF7 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP2 MLOAD DUP2 LT PUSH2 0x1908 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP1 POP PUSH1 0x0 DUP2 SLT PUSH2 0x1962 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x42414C414E4345525F494E56414C49445F42415443485F414D4F554E545F4F55 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x27F JUMP JUMPDEST DUP12 PUSH2 0x1994 DUP4 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x1987 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x2505 JUMP JUMPDEST EQ PUSH2 0x19E1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x42414C414E4345525F494E56414C49445F42415443485F414D4F554E545F494E PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x27F JUMP JUMPDEST PUSH2 0x1A0A DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL SWAP1 JUMP JUMPDEST SWAP15 SWAP14 POP POP POP POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x1A33 SWAP2 SWAP1 PUSH2 0x2BFA JUMP JUMPDEST SWAP1 POP PUSH2 0x1A40 DUP2 DUP9 DUP9 PUSH2 0x223D JUMP JUMPDEST PUSH2 0x1A8C PUSH1 0x40 DUP1 MLOAD PUSH1 0xC0 DUP2 ADD SWAP1 SWAP2 MSTORE PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x60 DUP2 MSTORE POP SWAP1 JUMP JUMPDEST DUP2 DUP2 MSTORE PUSH1 0x0 PUSH1 0x20 DUP3 ADD DUP2 SWAP1 MSTORE POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 DUP2 AND PUSH1 0x40 DUP4 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP1 DUP9 AND PUSH1 0x60 DUP4 ADD MSTORE PUSH1 0x80 DUP3 ADD DUP8 SWAP1 MSTORE DUP1 MLOAD PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 SWAP3 MSTORE SWAP1 POP PUSH1 0xA0 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND PUSH4 0x52BBBE29 DUP3 PUSH2 0x1B4F PUSH1 0x40 DUP1 MLOAD PUSH1 0x80 DUP2 ADD DUP3 MSTORE PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD DUP2 SWAP1 MSTORE SWAP2 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x60 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x80 DUP2 ADD DUP3 MSTORE ADDRESS DUP1 DUP3 MSTORE PUSH1 0x0 PUSH1 0x20 DUP4 ADD DUP2 SWAP1 MSTORE SWAP3 DUP3 ADD MSTORE PUSH1 0x60 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP1 JUMP JUMPDEST DUP9 TIMESTAMP PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x13E2 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3035 JUMP JUMPDEST PUSH1 0x60 PUSH2 0x1B7F DUP5 DUP5 PUSH1 0x0 DUP6 PUSH2 0x2557 JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1BDE DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564 DUP2 MSTORE POP DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1B70 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP1 MLOAD SWAP1 SWAP2 POP ISZERO PUSH2 0xCB5 JUMPI DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x1BFC SWAP2 SWAP1 PUSH2 0x2BDA JUMP JUMPDEST PUSH2 0xCB5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5361666545524332303A204552433230206F7065726174696F6E20646964206E PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6F74207375636365656400000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x27F JUMP JUMPDEST DUP2 MLOAD PUSH1 0x60 SWAP1 PUSH1 0x2 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1C9C JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x1CC5 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP DUP4 DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x1CEA JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE POP POP PUSH1 0x0 JUMPDEST DUP4 MLOAD DUP2 LT ISZERO PUSH2 0x1D9A JUMPI DUP4 DUP2 DUP2 MLOAD DUP2 LT PUSH2 0x1D36 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP3 PUSH2 0x1D53 PUSH1 0x1 DUP5 PUSH2 0x1DFC SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP2 MLOAD DUP2 LT PUSH2 0x1D71 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND PUSH1 0x20 SWAP3 DUP4 MUL SWAP2 SWAP1 SWAP2 ADD SWAP1 SWAP2 ADD MSTORE PUSH2 0x1D93 DUP2 PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST SWAP1 POP PUSH2 0x1D0D JUMP JUMPDEST POP DUP2 DUP2 PUSH2 0x1DB2 PUSH1 0x1 DUP7 MLOAD PUSH2 0x1DFC SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP2 MLOAD DUP2 LT PUSH2 0x1DD0 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST SWAP1 SUB SWAP1 JUMP JUMPDEST ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0xE6A4390500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE DUP3 DUP2 AND PUSH1 0x24 DUP4 ADD MSTORE PUSH1 0x0 SWAP2 SWAP1 DUP6 AND SWAP1 PUSH4 0xE6A43905 SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1E66 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1E7A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1E9E SWAP2 SWAP1 PUSH2 0x28AB JUMP JUMPDEST SWAP1 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x1EF6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x494E56414C49445F554E49535741505F504F4F4C000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x27F JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x2 DUP1 DUP3 MSTORE PUSH1 0x60 DUP1 DUP4 ADD DUP5 MSTORE SWAP3 PUSH1 0x20 DUP4 ADD SWAP1 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP POP SWAP1 POP DUP3 DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x1F3E JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE POP POP DUP2 DUP2 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x1F80 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xC45A0155 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2001 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2015 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2039 SWAP2 SWAP1 PUSH2 0x28AB JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND LT PUSH2 0x2061 JUMPI DUP4 DUP6 PUSH2 0x2064 JUMP JUMPDEST DUP5 DUP5 JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x1698EE8200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND PUSH1 0x4 DUP4 ADD MSTORE DUP1 DUP4 AND PUSH1 0x24 DUP4 ADD MSTORE PUSH3 0xFFFFFF DUP8 AND PUSH1 0x44 DUP4 ADD MSTORE SWAP3 SWAP5 POP SWAP1 SWAP3 POP PUSH1 0x0 SWAP2 DUP9 AND SWAP1 PUSH4 0x1698EE82 SWAP1 PUSH1 0x64 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x20DA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x20EE JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2112 SWAP2 SWAP1 PUSH2 0x28AB JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO PUSH2 0x2169 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x494E56414C49445F554E49535741505F504F4F4C5F4645450000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x27F JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 SWAP3 MSTORE SWAP1 JUMPDEST DUP3 MLOAD DUP2 LT ISZERO PUSH2 0x2201 JUMPI PUSH2 0x21F7 DUP4 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x21AF JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x21F1 DUP7 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x21DA JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP6 PUSH2 0x2694 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 PUSH2 0x26C0 JUMP JUMPDEST SWAP2 POP PUSH1 0x1 ADD PUSH2 0x2183 JUMP JUMPDEST POP PUSH2 0x1B82 DUP4 DUP4 MLOAD DUP2 MLOAD DUP2 LT PUSH2 0x2226 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP3 PUSH2 0x2694 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0xF6C0092700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0xF6C00927 SWAP1 PUSH1 0x24 ADD PUSH1 0x40 DUP1 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x22B8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x22CC JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x22F0 SWAP2 SWAP1 PUSH2 0x28C7 JUMP JUMPDEST POP SWAP1 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x2349 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x494E56414C49445F42414C414E4345525F504F4F4C5F49440000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x27F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0xF94D466800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP6 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0xF94D4668 SWAP1 PUSH1 0x24 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x23C5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x23D9 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD PUSH1 0x40 MSTORE PUSH2 0x2401 SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH2 0x2AAA JUMP JUMPDEST POP SWAP1 SWAP2 POP PUSH2 0x2412 SWAP1 POP DUP2 DUP6 DUP6 PUSH2 0x26D5 JUMP JUMPDEST PUSH2 0x245E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x494E56414C49445F42414C414E4345525F504F4F4C5F544F4B454E5300000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x27F JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x24FD JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x28 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x53616665436173743A2076616C756520646F65736E27742066697420696E2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6E20696E74323536000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x27F JUMP JUMPDEST POP DUP1 JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 SLT ISZERO PUSH2 0x24FD JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x53616665436173743A2076616C7565206D75737420626520706F736974697665 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x27F JUMP JUMPDEST PUSH1 0x60 DUP3 SELFBALANCE LT ISZERO PUSH2 0x25CF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A20696E73756666696369656E742062616C616E636520666F PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x722063616C6C0000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x27F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND EXTCODESIZE PUSH2 0x2626 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x27F JUMP JUMPDEST PUSH1 0x0 DUP1 DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 DUP8 PUSH1 0x40 MLOAD PUSH2 0x2642 SWAP2 SWAP1 PUSH2 0x2DE2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x267F JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x2684 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x105E DUP3 DUP3 DUP7 PUSH2 0x278A JUMP JUMPDEST PUSH1 0x60 DUP3 DUP3 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x26A9 SWAP3 SWAP2 SWAP1 PUSH2 0x2DFE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 DUP3 DUP3 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x26A9 SWAP3 SWAP2 SWAP1 PUSH2 0x2E48 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP1 DUP1 JUMPDEST DUP7 MLOAD DUP2 LT ISZERO PUSH2 0x2778 JUMPI DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP8 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x270E JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO PUSH2 0x272A JUMPI PUSH1 0x1 SWAP3 POP JUMPDEST DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP8 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x2754 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO PUSH2 0x2770 JUMPI PUSH1 0x1 SWAP2 POP JUMPDEST PUSH1 0x1 ADD PUSH2 0x26DB JUMP JUMPDEST POP DUP2 DUP1 ISZERO PUSH2 0x288 JUMPI POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP4 ISZERO PUSH2 0x2799 JUMPI POP DUP2 PUSH2 0x1B82 JUMP JUMPDEST DUP3 MLOAD ISZERO PUSH2 0x27A9 JUMPI DUP3 MLOAD DUP1 DUP5 PUSH1 0x20 ADD REVERT JUMPDEST DUP2 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x27F SWAP2 SWAP1 PUSH2 0x2FC9 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x27D3 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x20 PUSH2 0x27E8 PUSH2 0x27E3 DUP4 PUSH2 0x315F JUMP JUMPDEST PUSH2 0x312E JUMP JUMPDEST DUP1 DUP4 DUP3 MSTORE DUP3 DUP3 ADD SWAP2 POP DUP3 DUP7 ADD DUP8 DUP5 DUP7 PUSH1 0x5 SHL DUP10 ADD ADD GT ISZERO PUSH2 0x2807 JUMPI DUP6 DUP7 REVERT JUMPDEST DUP6 JUMPDEST DUP6 DUP2 LT ISZERO PUSH2 0x282E JUMPI DUP2 MLOAD PUSH2 0x281C DUP2 PUSH2 0x31E8 JUMP JUMPDEST DUP5 MSTORE SWAP3 DUP5 ADD SWAP3 SWAP1 DUP5 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x2809 JUMP JUMPDEST POP SWAP1 SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x284B JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x20 PUSH2 0x285B PUSH2 0x27E3 DUP4 PUSH2 0x315F JUMP JUMPDEST DUP1 DUP4 DUP3 MSTORE DUP3 DUP3 ADD SWAP2 POP DUP3 DUP7 ADD DUP8 DUP5 DUP7 PUSH1 0x5 SHL DUP10 ADD ADD GT ISZERO PUSH2 0x287A JUMPI DUP6 DUP7 REVERT JUMPDEST DUP6 JUMPDEST DUP6 DUP2 LT ISZERO PUSH2 0x282E JUMPI DUP2 MLOAD DUP5 MSTORE SWAP3 DUP5 ADD SWAP3 SWAP1 DUP5 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x287C JUMP JUMPDEST DUP1 MLOAD PUSH3 0xFFFFFF DUP2 AND DUP2 EQ PUSH2 0x2500 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x28BC JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x1B82 DUP2 PUSH2 0x31E8 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x28D9 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP3 MLOAD PUSH2 0x28E4 DUP2 PUSH2 0x31E8 JUMP JUMPDEST PUSH1 0x20 DUP5 ADD MLOAD SWAP1 SWAP3 POP PUSH2 0x28F5 DUP2 PUSH2 0x3200 JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2911 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2927 JUMPI DUP2 DUP3 REVERT JUMPDEST PUSH2 0x2933 DUP5 DUP3 DUP6 ADD PUSH2 0x27C3 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x294D JUMPI DUP2 DUP3 REVERT JUMPDEST DUP3 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x2964 JUMPI DUP4 DUP5 REVERT JUMPDEST PUSH2 0x2970 DUP7 DUP4 DUP8 ADD PUSH2 0x27C3 JUMP JUMPDEST SWAP4 POP PUSH1 0x20 SWAP2 POP DUP2 DUP6 ADD MLOAD DUP2 DUP2 GT ISZERO PUSH2 0x2986 JUMPI DUP4 DUP5 REVERT JUMPDEST DUP6 ADD SWAP1 POP PUSH1 0x1F DUP2 ADD DUP7 SGT PUSH2 0x2998 JUMPI DUP3 DUP4 REVERT JUMPDEST DUP1 MLOAD PUSH2 0x29A6 PUSH2 0x27E3 DUP3 PUSH2 0x315F JUMP JUMPDEST DUP1 DUP3 DUP3 MSTORE DUP5 DUP3 ADD SWAP2 POP DUP5 DUP5 ADD DUP10 DUP7 DUP6 PUSH1 0x5 SHL DUP8 ADD ADD GT ISZERO PUSH2 0x29C5 JUMPI DUP7 DUP8 REVERT JUMPDEST DUP7 SWAP5 POP JUMPDEST DUP4 DUP6 LT ISZERO PUSH2 0x29E7 JUMPI DUP1 MLOAD DUP4 MSTORE PUSH1 0x1 SWAP5 SWAP1 SWAP5 ADD SWAP4 SWAP2 DUP6 ADD SWAP2 DUP6 ADD PUSH2 0x29C9 JUMP JUMPDEST POP DUP1 SWAP6 POP POP POP POP POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2A09 JUMPI DUP2 DUP3 REVERT JUMPDEST DUP3 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x2A20 JUMPI DUP4 DUP5 REVERT JUMPDEST PUSH2 0x2A2C DUP7 DUP4 DUP8 ADD PUSH2 0x27C3 JUMP JUMPDEST SWAP4 POP PUSH1 0x20 SWAP2 POP DUP2 DUP6 ADD MLOAD DUP2 DUP2 GT ISZERO PUSH2 0x2A42 JUMPI DUP4 DUP5 REVERT JUMPDEST DUP6 ADD SWAP1 POP PUSH1 0x1F DUP2 ADD DUP7 SGT PUSH2 0x2A54 JUMPI DUP3 DUP4 REVERT JUMPDEST DUP1 MLOAD PUSH2 0x2A62 PUSH2 0x27E3 DUP3 PUSH2 0x315F JUMP JUMPDEST DUP1 DUP3 DUP3 MSTORE DUP5 DUP3 ADD SWAP2 POP DUP5 DUP5 ADD DUP10 DUP7 DUP6 PUSH1 0x5 SHL DUP8 ADD ADD GT ISZERO PUSH2 0x2A81 JUMPI DUP7 DUP8 REVERT JUMPDEST DUP7 SWAP5 POP JUMPDEST DUP4 DUP6 LT ISZERO PUSH2 0x29E7 JUMPI PUSH2 0x2A96 DUP2 PUSH2 0x2898 JUMP JUMPDEST DUP4 MSTORE PUSH1 0x1 SWAP5 SWAP1 SWAP5 ADD SWAP4 SWAP2 DUP6 ADD SWAP2 DUP6 ADD PUSH2 0x2A85 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x2ABE JUMPI DUP1 DUP2 REVERT JUMPDEST DUP4 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x2AD5 JUMPI DUP3 DUP4 REVERT JUMPDEST PUSH2 0x2AE1 DUP8 DUP4 DUP9 ADD PUSH2 0x27C3 JUMP JUMPDEST SWAP5 POP PUSH1 0x20 DUP7 ADD MLOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x2AF6 JUMPI DUP3 DUP4 REVERT JUMPDEST POP PUSH2 0x2B03 DUP7 DUP3 DUP8 ADD PUSH2 0x283B JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 DUP5 ADD MLOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2B26 JUMPI DUP2 DUP3 REVERT JUMPDEST DUP3 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2B3C JUMPI DUP3 DUP4 REVERT JUMPDEST DUP4 ADD PUSH1 0x1F DUP2 ADD DUP6 SGT PUSH2 0x2B4C JUMPI DUP3 DUP4 REVERT JUMPDEST DUP1 MLOAD PUSH2 0x2B5A PUSH2 0x27E3 DUP3 PUSH2 0x315F JUMP JUMPDEST DUP1 DUP3 DUP3 MSTORE DUP5 DUP3 ADD SWAP2 POP DUP5 DUP5 ADD DUP9 DUP7 DUP6 PUSH1 0x5 SHL DUP8 ADD ADD GT ISZERO PUSH2 0x2B79 JUMPI DUP7 DUP8 REVERT JUMPDEST DUP7 SWAP5 POP JUMPDEST DUP4 DUP6 LT ISZERO PUSH2 0x2B9B JUMPI DUP1 MLOAD DUP4 MSTORE PUSH1 0x1 SWAP5 SWAP1 SWAP5 ADD SWAP4 SWAP2 DUP6 ADD SWAP2 DUP6 ADD PUSH2 0x2B7D JUMP JUMPDEST POP SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2BB8 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2BCE JUMPI DUP2 DUP3 REVERT JUMPDEST PUSH2 0x2933 DUP5 DUP3 DUP6 ADD PUSH2 0x283B JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2BEB JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x1B82 JUMPI DUP2 DUP3 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2C0B JUMPI DUP1 DUP2 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2C23 JUMPI DUP1 DUP2 REVERT JUMPDEST PUSH2 0x1B82 DUP3 PUSH2 0x2898 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2C3D JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x1B82 DUP2 PUSH2 0x3200 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0xC0 DUP8 DUP10 SUB SLT ISZERO PUSH2 0x2C60 JUMPI DUP4 DUP5 REVERT JUMPDEST DUP7 CALLDATALOAD PUSH2 0x2C6B DUP2 PUSH2 0x3200 JUMP JUMPDEST SWAP6 POP PUSH1 0x20 DUP8 DUP2 ADD CALLDATALOAD PUSH2 0x2C7C DUP2 PUSH2 0x31E8 JUMP JUMPDEST SWAP6 POP PUSH1 0x40 DUP9 ADD CALLDATALOAD PUSH2 0x2C8C DUP2 PUSH2 0x31E8 JUMP JUMPDEST SWAP5 POP PUSH1 0x60 DUP9 ADD CALLDATALOAD SWAP4 POP PUSH1 0x80 DUP9 ADD CALLDATALOAD SWAP3 POP PUSH1 0xA0 DUP9 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x2CB6 JUMPI DUP4 DUP5 REVERT JUMPDEST DUP2 DUP11 ADD SWAP2 POP DUP11 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x2CC9 JUMPI DUP4 DUP5 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x2CDB JUMPI PUSH2 0x2CDB PUSH2 0x31D2 JUMP JUMPDEST PUSH2 0x2CED DUP5 PUSH1 0x1F NOT PUSH1 0x1F DUP5 ADD AND ADD PUSH2 0x312E JUMP JUMPDEST SWAP2 POP DUP1 DUP3 MSTORE DUP12 DUP5 DUP3 DUP6 ADD ADD GT ISZERO PUSH2 0x2D02 JUMPI DUP5 DUP6 REVERT JUMPDEST DUP1 DUP5 DUP5 ADD DUP6 DUP5 ADD CALLDATACOPY DUP5 DUP5 DUP3 DUP5 ADD ADD MSTORE POP DUP1 SWAP4 POP POP POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 POP SWAP3 SWAP6 JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH1 0x20 DUP1 DUP6 ADD SWAP5 POP DUP1 DUP5 ADD DUP4 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x2D5A JUMPI DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP8 MSTORE SWAP6 DUP3 ADD SWAP6 SWAP1 DUP3 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x2D35 JUMP JUMPDEST POP SWAP5 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH1 0x20 DUP1 DUP6 ADD SWAP5 POP DUP1 DUP5 ADD DUP4 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x2D5A JUMPI DUP2 MLOAD DUP8 MSTORE SWAP6 DUP3 ADD SWAP6 SWAP1 DUP3 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x2D78 JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH2 0x2DAC DUP2 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP7 ADD PUSH2 0x31A6 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x2 DUP2 LT PUSH2 0x2DDE JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 MSTORE JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD PUSH2 0x2DF4 DUP2 DUP5 PUSH1 0x20 DUP8 ADD PUSH2 0x31A6 JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP4 MLOAD PUSH2 0x2E10 DUP2 DUP5 PUSH1 0x20 DUP9 ADD PUSH2 0x31A6 JUMP JUMPDEST PUSH1 0x60 SWAP4 SWAP1 SWAP4 SHL PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF000000000000000000000000 AND SWAP2 SWAP1 SWAP3 ADD SWAP1 DUP2 MSTORE PUSH1 0x14 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP4 MLOAD PUSH2 0x2E5A DUP2 DUP5 PUSH1 0x20 DUP9 ADD PUSH2 0x31A6 JUMP JUMPDEST PUSH1 0xE8 SWAP4 SWAP1 SWAP4 SHL PUSH32 0xFFFFFF0000000000000000000000000000000000000000000000000000000000 AND SWAP2 SWAP1 SWAP3 ADD SWAP1 DUP2 MSTORE PUSH1 0x3 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x120 DUP1 DUP4 ADD PUSH2 0x2EA4 DUP5 DUP12 PUSH2 0x2DC0 JUMP JUMPDEST PUSH1 0x20 DUP5 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE DUP9 MLOAD SWAP1 DUP2 SWAP1 MSTORE PUSH2 0x140 DUP1 DUP6 ADD SWAP3 PUSH1 0x5 DUP4 SWAP1 SHL DUP7 ADD SWAP1 SWAP2 ADD SWAP2 DUP11 DUP3 ADD DUP6 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x2F4A JUMPI DUP8 DUP6 SUB PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEC0 ADD DUP7 MSTORE DUP2 MLOAD DUP1 MLOAD DUP7 MSTORE DUP5 DUP2 ADD MLOAD DUP6 DUP8 ADD MSTORE PUSH1 0x40 DUP1 DUP3 ADD MLOAD SWAP1 DUP8 ADD MSTORE PUSH1 0x60 DUP1 DUP3 ADD MLOAD SWAP1 DUP8 ADD MSTORE PUSH1 0x80 SWAP1 DUP2 ADD MLOAD PUSH1 0xA0 SWAP2 DUP8 ADD DUP3 SWAP1 MSTORE SWAP1 PUSH2 0x2F36 DUP2 DUP9 ADD DUP4 PUSH2 0x2D94 JUMP JUMPDEST SWAP8 DUP7 ADD SWAP8 SWAP7 POP POP POP SWAP1 DUP4 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x2ECA JUMP JUMPDEST POP POP POP POP DUP4 DUP2 SUB PUSH1 0x40 DUP6 ADD MSTORE PUSH2 0x2F60 DUP2 DUP10 PUSH2 0x2D22 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x2FA2 PUSH1 0x60 DUP5 ADD DUP8 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP3 MLOAD AND DUP4 MSTORE PUSH1 0x20 DUP3 ADD MLOAD ISZERO ISZERO PUSH1 0x20 DUP5 ADD MSTORE DUP1 PUSH1 0x40 DUP4 ADD MLOAD AND PUSH1 0x40 DUP5 ADD MSTORE POP PUSH1 0x60 DUP2 ADD MLOAD ISZERO ISZERO PUSH1 0x60 DUP4 ADD MSTORE POP POP JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0xE0 DUP5 ADD MSTORE PUSH2 0x2FB4 DUP2 DUP7 PUSH2 0x2D65 JUMP JUMPDEST SWAP2 POP POP DUP3 PUSH2 0x100 DUP4 ADD MSTORE SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 MSTORE PUSH2 0x1B82 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x2D94 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 MSTORE DUP3 MLOAD PUSH1 0xA0 PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x2FF8 PUSH1 0xC0 DUP5 ADD DUP3 PUSH2 0x2D94 JUMP JUMPDEST SWAP1 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH1 0x20 DUP6 ADD MLOAD AND PUSH1 0x40 DUP5 ADD MSTORE PUSH1 0x40 DUP5 ADD MLOAD PUSH1 0x60 DUP5 ADD MSTORE PUSH1 0x60 DUP5 ADD MLOAD PUSH1 0x80 DUP5 ADD MSTORE PUSH1 0x80 DUP5 ADD MLOAD PUSH1 0xA0 DUP5 ADD MSTORE DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xE0 DUP3 MSTORE DUP6 MLOAD PUSH1 0xE0 DUP4 ADD MSTORE PUSH1 0x20 DUP7 ADD MLOAD PUSH2 0x3055 PUSH2 0x100 DUP5 ADD DUP3 PUSH2 0x2DC0 JUMP JUMPDEST POP PUSH1 0x40 DUP7 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND PUSH2 0x120 DUP5 ADD MSTORE PUSH1 0x60 DUP8 ADD MLOAD AND PUSH2 0x140 DUP4 ADD MSTORE PUSH1 0x80 DUP7 ADD MLOAD PUSH2 0x160 DUP4 ADD MSTORE PUSH1 0xA0 DUP7 ADD MLOAD PUSH1 0xC0 PUSH2 0x180 DUP5 ADD MSTORE PUSH2 0x309E PUSH2 0x1A0 DUP5 ADD DUP3 PUSH2 0x2D94 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x30E0 PUSH1 0x20 DUP4 ADD DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP3 MLOAD AND DUP4 MSTORE PUSH1 0x20 DUP3 ADD MLOAD ISZERO ISZERO PUSH1 0x20 DUP5 ADD MSTORE DUP1 PUSH1 0x40 DUP4 ADD MLOAD AND PUSH1 0x40 DUP5 ADD MSTORE POP PUSH1 0x60 DUP2 ADD MLOAD ISZERO ISZERO PUSH1 0x60 DUP4 ADD MSTORE POP POP JUMP JUMPDEST PUSH1 0xA0 DUP3 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0xC0 ADD MSTORE SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP7 DUP3 MSTORE DUP6 PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0xA0 PUSH1 0x40 DUP4 ADD MSTORE PUSH2 0x3111 PUSH1 0xA0 DUP4 ADD DUP7 PUSH2 0x2D22 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP5 SWAP1 SWAP5 AND PUSH1 0x60 DUP4 ADD MSTORE POP PUSH1 0x80 ADD MSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND DUP2 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x3157 JUMPI PUSH2 0x3157 PUSH2 0x31D2 JUMP JUMPDEST PUSH1 0x40 MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x3179 JUMPI PUSH2 0x3179 PUSH2 0x31D2 JUMP JUMPDEST POP PUSH1 0x5 SHL PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x31A1 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 DUP2 REVERT JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x31C1 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x31A9 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x1EF6 JUMPI POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x31FD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0xFF DUP2 AND DUP2 EQ PUSH2 0x31FD JUMPI PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SLOAD NOT 0xC4 SWAP7 0xF8 PUSH5 0x1090590A91 0xE3 PUSH6 0xCA55D66994F9 0xC2 SWAP16 SWAP6 SWAP14 SWAP4 SHL SHR 0x4F 0xBA 0xEF 0xE5 NUMBER 0x2C PUSH5 0x736F6C6343 STOP ADDMOD SUB STOP CALLER ","sourceMap":"1791:2693:22:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2094:72;;2139:27;2094:72;;;;;14595:25:33;;;14583:2;14568:18;2094:72:22;;;;;;;;1340:42:4;;;;;;;;-1:-1:-1;;;;;13332:55:33;;;13314:74;;13302:2;13287:18;1340:42:4;13269:125:33;3520:962:22;;;;;;:::i;:::-;3723:17;3752:8;3770:6;3763:14;;;;;;;;-1:-1:-1;;;3763:14:22;;;;;;;;;3752:25;-1:-1:-1;3796:16:22;3791:1;:21;;;;;;-1:-1:-1;;;3791:21:22;;;;;;;;;;3787:688;;;3821:63;3836:7;3845:8;3855;3865:12;3879:4;3821:14;:63::i;:::-;3814:70;;;;;3787:688;3908:16;3903:1;:21;;;;;;-1:-1:-1;;;3903:21:22;;;;;;;;;;3899:576;;;3933:63;3948:7;3957:8;3967;3977:12;3991:4;3933:14;:63::i;3899:576::-;4020:17;4015:1;:22;;;;;;-1:-1:-1;;;4015:22:22;;;;;;;;;;4011:464;;;4046:64;4062:7;4071:8;4081;4091:12;4105:4;4046:15;:64::i;4011:464::-;4134:17;4129:1;:22;;;;;;-1:-1:-1;;;4129:22:22;;;;;;;;;;4125:350;;;4160:64;4176:7;4185:8;4195;4205:12;4219:4;4160:15;:64::i;4125:350::-;4248:16;4243:1;:21;;;;;;-1:-1:-1;;;4243:21:22;;;;;;;;;;4239:236;;;4273:63;4288:7;4297:8;4307;4317:12;4331:4;4273:14;:63::i;4239:236::-;4360:10;4355:1;:15;;;;;;-1:-1:-1;;;4355:15:22;;;;;;;;;;4351:124;;;4379:57;4388:7;4397:8;4407;4417:12;4431:4;4379:8;:57::i;4351:124::-;4451:24;;-1:-1:-1;;;4451:24:22;;18594:2:33;4451:24:22;;;18576:21:33;18633:2;18613:18;;;18606:30;18672:16;18652:18;;;18645:44;18706:18;;4451:24:22;;;;;;;;3520:962;;;;;;;;;:::o;2230:569:27:-;2412:17;2441:63;-1:-1:-1;;;;;2441:27:27;;2477:15;2495:8;2441:27;:63::i;:::-;2514:24;1507:1;2541:4;:11;:46;:207;;2680:68;2700:7;2709:8;2719;2729:12;2743:4;2680:19;:68::i;:::-;2541:207;;;2602:63;2623:7;2632:8;2642;2652:12;2602:20;:63::i;:::-;2514:234;;2765:7;2790:1;2773:7;:14;:18;;;;:::i;:::-;2765:27;;;;;;-1:-1:-1;;;2765:27:27;;;;;;;;;;;;;;;2758:34;;;2230:569;;;;;;;:::o;2296:531:28:-;2478:17;2507:63;-1:-1:-1;;;;;2507:27:28;;2543:15;2561:8;2507:27;:63::i;:::-;1577:2;2599:4;:11;:46;:221;;2752:68;2772:7;2781:8;2791;2801:12;2815:4;2752:19;:68::i;:::-;2599:221;;;2664:69;2685:7;2694:8;2704;2714:12;2728:4;2664:20;:69::i;2186:534:23:-;2369:17;2398:63;-1:-1:-1;;;;;2398:27:23;;2434:15;2452:8;2398:27;:63::i;:::-;1451:2;2490:4;:11;:46;:223;;2644:69;2665:7;2674:8;2684;2694:12;2708:4;2644:20;:69::i;2490:223::-;2555:70;2577:7;2586:8;2596;2606:12;2620:4;2555:21;:70::i;1828:724:26:-;2064:41;;;;;2099:4;2064:41;;;13314:74:33;2011:17:26;;;;-1:-1:-1;;;;;2064:26:26;;;;;13287:18:33;;2064:41:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2040:65;;2116:26;2145:18;-1:-1:-1;;;;;2145:40:26;;:42;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2116:71;-1:-1:-1;2197:57:26;-1:-1:-1;;;;;2197:27:26;;2116:71;2245:8;2197:27;:57::i;:::-;2264:82;2293:18;2314:4;2264:82;;;;;;;;;;;;;;;;;:20;:82::i;:::-;-1:-1:-1;2382:41:26;;;;;2417:4;2382:41;;;13314:74:33;2357:22:26;;-1:-1:-1;;;;;2382:26:26;;;;;13287:18:33;;2382:41:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2357:66;-1:-1:-1;2445:30:26;2462:13;2357:66;2445:30;:::i;:::-;2433:42;;2506:12;2493:9;:25;;2485:60;;;;-1:-1:-1;;;2485:60:26;;20779:2:33;2485:60:26;;;20761:21:33;20818:2;20798:18;;;20791:30;20857:24;20837:18;;;20830:52;20899:18;;2485:60:26;20751:172:33;2485:60:26;1828:724;;;;;;;;;;:::o;1843:639:25:-;2078:41;;;;;2113:4;2078:41;;;13314:74:33;2025:17:25;;;;-1:-1:-1;;;;;2078:26:25;;;;;13287:18:33;;2078:41:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2054:65;-1:-1:-1;2130:63:25;-1:-1:-1;;;;;2130:27:25;;2166:15;2184:8;2130:27;:63::i;:::-;2203:76;2232:15;2250:4;2203:76;;;;;;;;;;;;;;;;;:20;:76::i;:::-;-1:-1:-1;2315:41:25;;;;;2350:4;2315:41;;;13314:74:33;2290:22:25;;-1:-1:-1;;;;;2315:26:25;;;;;13287:18:33;;2315:41:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2290:66;-1:-1:-1;2378:30:25;2395:13;2290:66;2378:30;:::i;:::-;2366:42;;2439:12;2426:9;:25;;2418:57;;;;-1:-1:-1;;;2418:57:25;;17536:2:33;2418:57:25;;;17518:21:33;17575:2;17555:18;;;17548:30;17614:21;17594:18;;;17587:49;17653:18;;2418:57:25;17508:169:33;2418:57:25;1843:639;;;;;;;;;:::o;1488:664:24:-;1634:17;1140:2;1675:4;:11;:39;1667:75;;;;-1:-1:-1;;;1667:75:24;;22308:2:33;1667:75:24;;;22290:21:33;22347:2;22327:18;;;22320:30;22386:25;22366:18;;;22359:53;22429:18;;1667:75:24;22280:173:33;1667:75:24;1752:22;1788:4;1777:27;;;;;;;;;;;;:::i;:::-;1889:30;;;;;-1:-1:-1;;;;;13332:55:33;;;1889:30:24;;;13314:74:33;1752:52:24;;-1:-1:-1;1752:52:24;;1815:16;;1889:21;;;;;;13287:18:33;;1889:30:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1951:31;;;;;-1:-1:-1;;;;;13332:55:33;;;1951:31:24;;;13314:74:33;1868:51:24;;-1:-1:-1;1929:19:24;;1951:21;;;;;13287:18:33;;1951:31:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1929:53;-1:-1:-1;1993:53:24;-1:-1:-1;;;;;1993:27:24;;2021:14;2037:8;1993:27;:53::i;:::-;2063:82;;;;;27317:4:33;27305:17;;;2063:82:24;;;27287:36:33;27359:17;;27339:18;;;27332:45;27393:18;;;27386:34;;;27436:18;;;27429:34;;;2129:15:24;27479:19:33;;;27472:35;-1:-1:-1;;;;;2063:12:24;;;;;27259:19:33;;2063:82:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2056:89;1488:664;-1:-1:-1;;;;;;;;;;1488:664:24:o;1475:603:11:-;1830:10;;;1829:62;;-1:-1:-1;1846:39:11;;;;;1870:4;1846:39;;;13634:34:33;-1:-1:-1;;;;;13704:15:33;;;13684:18;;;13677:43;1846:15:11;;;;;13546:18:33;;1846:39:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:44;1829:62;1808:163;;;;-1:-1:-1;;;1808:163:11;;23021:2:33;1808:163:11;;;23003:21:33;23060:2;23040:18;;;23033:30;23099:34;23079:18;;;23072:62;23170:24;23150:18;;;23143:52;23212:19;;1808:163:11;22993:244:33;1808:163:11;2008:62;;;-1:-1:-1;;;;;14339:55:33;;2008:62:11;;;14321:74:33;14411:18;;;;14404:34;;;2008:62:11;;;;;;;;;;14294:18:33;;;;2008:62:11;;;;;;;;;;2031:22;2008:62;;;1981:90;;2001:5;;1981:19;:90::i;:::-;1475:603;;;:::o;4018:814:27:-;4204:16;4232:15;4250;-1:-1:-1;;;;;4250:23:27;;:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4232:43;;4285:26;4325:4;4314:29;;;;;;;;;;;;:::i;:::-;4285:58;;4353:23;4379:41;4391:7;4400:9;4411:8;4379:11;:41::i;:::-;4353:67;;4547:9;4542:163;4566:13;;1221:5:1;;4562:1:27;:33;4542:163;;;4634:60;4648:7;4657:6;4664:1;4657:9;;;;;;-1:-1:-1;;;4657:9:27;;;;;;;;;;;;;;;4668:6;4675:17;4690:1;4675;:14;;:17;;;;:::i;:::-;4668:25;;;;;;-1:-1:-1;;;4668:25:27;;;;;;;;;;;;;;;4634:13;:60::i;:::-;4616:1;1007:5:1;4542:163:27;;;-1:-1:-1;4721:104:27;;;;;-1:-1:-1;;;;;4721:15:27;:40;;;;:104;;4762:8;;4772:12;;4786:6;;4802:4;;4809:15;;4721:104;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;4721:104:27;;;;;;;;;;;;:::i;:::-;4714:111;4018:814;-1:-1:-1;;;;;;;;;4018:814:27:o;3118:458::-;3256:16;3288:15;3306;-1:-1:-1;;;;;3306:23:27;;:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3288:43;;3341:23;3367:30;3379:7;3388:8;3367:11;:30::i;:::-;3341:56;;3407:41;3421:7;3430;3439:8;3407:13;:41::i;:::-;3465:104;;;;;-1:-1:-1;;;;;3465:15:27;:40;;;;:104;;3506:8;;3516:12;;3530:6;;3546:4;;3553:15;;3465:104;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;3465:104:27;;;;;;;;;;;;:::i;:::-;3458:111;3118:458;-1:-1:-1;;;;;;;3118:458:27:o;4422:1228:28:-;4608:17;4638:26;4666:20;4701:4;4690:39;;;;;;;;;;;;:::i;:::-;4856:16;;;;-1:-1:-1;4637:92:28;-1:-1:-1;4886:1:28;1007:5:1;4841:4:28;:11;:47;4833:91;;;;-1:-1:-1;;;4833:91:28;;19344:2:33;4833:91:28;;;19326:21:33;19383:2;19363:18;;;19356:30;19422:33;19402:18;;;19395:61;19473:18;;4833:91:28;19316:181:33;4833:91:28;4935:15;4953:19;:17;:19::i;:::-;4935:37;;4982:23;5008:41;5020:7;5029:9;5040:8;5008:11;:41::i;:::-;4982:67;;5176:9;5171:154;5195:4;:11;5191:1;:15;5171:154;;;5245:69;5259:7;5268:6;5275:1;5268:9;;;;;;-1:-1:-1;;;5268:9:28;;;;;;;;;;;;;;;5279:6;5286:17;5301:1;5286;:14;;:17;;;;:::i;:::-;5279:25;;;;;;-1:-1:-1;;;5279:25:28;;;;;;;;;;;;;;;5306:4;5311:1;5306:7;;;;;;-1:-1:-1;;;5306:7:28;;;;;;;;;;;;;;;5245:13;:69::i;:::-;5227:1;1007:5:1;5171:154:28;;;;5335:41;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5335:41:28;5399:29;5415:6;5423:4;5399:15;:29::i;:::-;5386:42;;5438:14;;;:25;;;5473:22;;;:37;;;5546:4;5520:15;;;:31;5578:15;-1:-1:-1;5561:14:28;;;:32;;;;5610:33;;;;:15;-1:-1:-1;;;;;5610:26:28;;;;:33;;5386:5;;5610:33;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5603:40;4422:1228;-1:-1:-1;;;;;;;;;;;4422:1228:28:o;3213:739::-;3400:17;3429:10;3453:4;3442:26;;;;;;;;;;;;:::i;:::-;3429:39;;3478:58;3492:19;:17;:19::i;:::-;3513:7;3522:8;3532:3;3478:13;:58::i;:::-;-1:-1:-1;;;;;;;;;;;;;;;;;;;;3604:23:28;;;;;3637:25;;;-1:-1:-1;;;3637:25:28;;;3672:15;;;;-1:-1:-1;;;3672:15:28;;;3723:4;-1:-1:-1;;;3697:31:28;;;3755:15;-1:-1:-1;;;3738:32:28;;;-1:-1:-1;;;3780:25:28;;;-1:-1:-1;;;3815:37:28;;;3906:39;;;;;24581:13:33;;24577:22;;3906:39:28;;;24559:41:33;24642:24;;24638:33;;24616:20;;;24609:63;24714:24;;24710:39;;;24688:20;;;24681:69;24792:24;24788:33;;24766:20;;;24759:63;24860:24;;24838:20;;;24831:54;24923:24;24901:20;;;24894:54;24986:24;;24964:20;;;24957:54;25053:24;;25049:33;;25027:20;;;25020:63;-1:-1:-1;;3906:15:28;:32;;;;;;24470:19:33;;3906:39:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3899:46;3213:739;-1:-1:-1;;;;;;;;3213:739:28:o;4228:2627:23:-;4415:17;4487:26;4515:24;4554:4;4543:40;;;;;;;;;;;;:::i;:::-;4713:16;;;;-1:-1:-1;4486:97:23;-1:-1:-1;4743:1:23;1007:5:1;4695:7:23;:14;:50;4687:95;;;;-1:-1:-1;;;4687:95:23;;22660:2:33;4687:95:23;;;22642:21:33;;;22679:18;;;22672:30;22738:34;22718:18;;;22711:62;22790:18;;4687:95:23;22632:182:33;4687:95:23;4793:23;4819:41;4831:7;4840:9;4851:8;4819:11;:41::i;:::-;4793:67;;4987:9;4982:151;5006:7;:14;5002:1;:18;4982:151;;;5059:63;5073:7;5081:1;5073:10;;;;;;-1:-1:-1;;;5073:10:23;;;;;;;;;;;;;;;5085:6;5092:1;5085:9;;;;;;-1:-1:-1;;;5085:9:23;;;;;;;;;;;;;;;5096:6;5103:17;5118:1;5103;:14;;:17;;;;:::i;:::-;5096:25;;;;;;-1:-1:-1;;;5096:25:23;;;;;;;;;;;;;;;5059:13;:63::i;:::-;5041:1;1007:5:1;4982:151:23;;;-1:-1:-1;5284:13:23;;1221:5:1;;5268:13:23;1221:5:1;5371:43:23;;;;;;-1:-1:-1;;;5371:43:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5371:43:23;;;;;;;;;;;;;;;;;5323:91;;5429:9;5424:348;5448:5;5444:1;:9;5424:348;;;5492:42;5537:5;5543:1;5537:8;;;;;;-1:-1:-1;;;5537:8:23;;;;;;;;;;;;;;;5492:53;;5573:1;5578;5573:6;:21;;5593:1;5573:21;;;5582:8;5573:21;5559:11;;;:35;5622:10;;:7;;5630:1;;5622:10;;;;-1:-1:-1;;;5622:10:23;;;;;;;;;;;;;;;;;;;;5608:24;;5646:17;;;:21;;;5717:1;1007:5:1;;5681:18:23;;;;:38;;;5749:12;;-1:-1:-1;5749:12:23;;;;;;;5733:13;;;;:28;5455:21;;5424:348;;;;5813:22;5851:6;:13;5838:27;;;;;;-1:-1:-1;;;5838:27:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;5838:27:23;;5813:52;;5887:27;5905:8;5887:17;:27::i;:::-;5875:6;5882:1;5875:9;;;;;;-1:-1:-1;;;5875:9:23;;;;;;;;;;;;;;:39;;;;;6053:48;6098:2;6053:31;6071:12;6053:17;:31::i;:::-;1646:5:1;;1532:136;6053:48:23;6020:13;;;;1221:5:1;;6013:37:23;;;;;;-1:-1:-1;;;6013:37:23;;;;;;;;;;;;;;:88;;;;;6128:23;6154:15;-1:-1:-1;;;;;6154:25:23;;6193:34;6241:5;6260:6;6280:17;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7092:223:23;;;;;;;;7158:4;7092:223;;;-1:-1:-1;7092:223:23;;;;;;;;;;;;;;;;;6974:348;;6280:17;6311:6;6331:15;6154:202;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;6154:202:23;;;;;;;;;;;;:::i;:::-;6128:228;;6483:19;6505:7;6513:30;6541:1;6513:7;:14;:27;;:30;;;;:::i;:::-;6505:39;;;;;;-1:-1:-1;;;6505:39:23;;;;;;;;;;;;;;;6483:61;;6577:1;6562:12;:16;6554:61;;;;-1:-1:-1;;;6554:61:23;;20418:2:33;6554:61:23;;;20400:21:33;;;20437:18;;;20430:30;20496:34;20476:18;;;20469:62;20548:18;;6554:61:23;20390:182:33;6554:61:23;6667:8;6633:30;6652:7;6660:1;6652:10;;;;;;-1:-1:-1;;;6652:10:23;;;;;;;;;;;;;;;6633:18;:30::i;:::-;:42;6625:87;;;;-1:-1:-1;;;6625:87:23;;17175:2:33;6625:87:23;;;17157:21:33;;;17194:18;;;17187:30;17253:34;17233:18;;;17226:62;17305:18;;6625:87:23;17147:182:33;6625:87:23;6818:29;:12;6844:2;1646:5:1;;1532:136;6818:29:23;6803:45;4228:2627;-1:-1:-1;;;;;;;;;;;;;;4228:2627:23:o;3112:683::-;3300:17;3329:14;3357:4;3346:27;;;;;;;;;;;;:::i;:::-;3329:44;;3383:40;3397:6;3405:7;3414:8;3383:13;:40::i;:::-;3434:39;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3434:39:23;3483:20;;;:11;3513:9;;;3483:11;3513:46;;-1:-1:-1;;;;;;3569:22:23;;;:12;;;;:22;;;;3601:24;;;:13;;;:24;3635:11;;;:22;;;3683:12;;-1:-1:-1;3683:12:23;;;;;;;;;;-1:-1:-1;3667:13:23;;;:28;-1:-1:-1;;;;;3712:15:23;:20;;3667:4;3739:17;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7092:223:23;;;;;;;;7158:4;7092:223;;;-1:-1:-1;7092:223:23;;;;;;;;;;;;;;;;;6974:348;;3739:17;3758:12;3772:15;3712:76;;;;;;;;;;;;;;;;;;:::i;3861:223:12:-;3994:12;4025:52;4047:6;4055:4;4061:1;4064:12;4025:21;:52::i;:::-;4018:59;;3861:223;;;;;;:::o;3747:706:11:-;4166:23;4192:69;4220:4;4192:69;;;;;;;;;;;;;;;;;4200:5;-1:-1:-1;;;;;4192:27:11;;;:69;;;;;:::i;:::-;4275:17;;4166:95;;-1:-1:-1;4275:21:11;4271:176;;4370:10;4359:30;;;;;;;;;;;;:::i;:::-;4351:85;;;;-1:-1:-1;;;4351:85:11;;21897:2:33;4351:85:11;;;21879:21:33;21936:2;21916:18;;;21909:30;21975:34;21955:18;;;21948:62;22046:12;22026:18;;;22019:40;22076:19;;4351:85:11;21869:232:33;1662:544:2;1893:8;;1741:23;;1915:1;1007:5:1;1879:39:2;;;;;;-1:-1:-1;;;1879:39:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1879:39:2;;1870:48;;1940:1;1928:6;1935:1;1928:9;;;;;;-1:-1:-1;;;1928:9:2;;;;;;;;;;;;;;:13;-1:-1:-1;;;;;1928:13:2;;;-1:-1:-1;;;;;1928:13:2;;;;;2069:9;2064:89;2088:1;:8;2084:1;:12;2064:89;;;2149:1;2151;2149:4;;;;;;-1:-1:-1;;;2149:4:2;;;;;;;;;;;;;;;2121:6;2128:17;2143:1;2128;:14;;:17;;;;:::i;:::-;2121:25;;;;;;-1:-1:-1;;;2121:25:2;;;;;;;;;-1:-1:-1;;;;;2121:32:2;;;:25;;;;;;;;;;;:32;2102:17;:1;2117;1007:5:1;;890:139;2102:17:2;2098:21;;2064:89;;;;2198:1;2163:6;2170:24;2192:1;2170;:8;:21;;:24;;;;:::i;:::-;2163:32;;;;;;-1:-1:-1;;;2163:32:2;;;;;;;;;;;;;;:36;-1:-1:-1;;;;;2163:36:2;;;-1:-1:-1;;;;;2163:36:2;;;;;1662:544;;;;;:::o;1104:139:1:-;1221:5;;;1104:139::o;890:::-;1007:5;;890:139::o;5095:228:27:-;5205:50;;;;;-1:-1:-1;;;;;13652:15:33;;;5205:50:27;;;13634:34:33;13704:15;;;13684:18;;;13677:43;5190:12:27;;5205:34;;;;;;13546:18:33;;5205:50:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5190:65;-1:-1:-1;;;;;;5273:18:27;;5265:51;;;;-1:-1:-1;;;5265:51:27;;23444:2:33;5265:51:27;;;23426:21:33;23483:2;23463:18;;;23456:30;23522:22;23502:18;;;23495:50;23562:18;;5265:51:27;23416:170:33;5265:51:27;5095:228;;;;:::o;1403:172:2:-;1506:16;;;1520:1;1506:16;;;1462:23;1506:16;;;;;1462:23;1506:16;;;;;;;;;;-1:-1:-1;1506:16:2;1497:25;;1544:1;1532:6;1539:1;1532:9;;;;;;-1:-1:-1;;;1532:9:2;;;;;;;;;;;;;;:13;-1:-1:-1;;;;;1532:13:2;;;-1:-1:-1;;;;;1532:13:2;;;;;1567:1;1555:6;1562:1;1555:9;;;;;;-1:-1:-1;;;1555:9:2;;;;;;;;;;;;;;:13;-1:-1:-1;;;;;1555:13:2;;;-1:-1:-1;;;;;1555:13:2;;;;;1403:172;;;;:::o;5809:144:28:-;5860:7;5919:15;-1:-1:-1;;;;;5886:58:28;;:60;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5879:67;;5809:144;:::o;6285:318::-;6393:14;6409;6436:6;-1:-1:-1;;;;;6427:15:28;:6;-1:-1:-1;;;;;6427:15:28;;:53;;6465:6;6473;6427:53;;;6446:6;6454;6427:53;6498:55;;;;;-1:-1:-1;;;;;14010:15:33;;;6498:55:28;;;13992:34:33;14062:15;;;14042:18;;;14035:43;14126:8;14114:21;;14094:18;;;14087:49;6392:88:28;;-1:-1:-1;6392:88:28;;-1:-1:-1;6565:1:28;;6498:34;;;;;13904:18:33;;6498:55:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;6498:69:28;;;6490:106;;;;-1:-1:-1;;;6490:106:28;;17884:2:33;6490:106:28;;;17866:21:33;17923:2;17903:18;;;17896:30;17962:26;17942:18;;;17935:54;18006:18;;6490:106:28;17856:174:33;6490:106:28;6285:318;;;;;;:::o;6821:313::-;6951:12;;;6961:1;6951:12;;;;;;;;;;6973:105;6997:4;:11;6993:1;:15;6973:105;;;7040:38;7070:4;7075:1;7070:7;;;;;;-1:-1:-1;;;7070:7:28;;;;;;;;;;;;;;;7040:22;7052:6;7059:1;7052:9;;;;;;-1:-1:-1;;;7052:9:28;;;;;;;;;;;;;;;7040:4;:11;;:22;;;;:::i;:::-;:29;;:38::i;:::-;7033:45;-1:-1:-1;7029:1:28;1007:5:1;6973:105:28;;;;7095:32;7107:6;7114:4;:11;7107:19;;;;;;-1:-1:-1;;;7107:19:28;;;;;;;;;;;;;;;7095:4;:11;;:32;;;;:::i;7600:377:23:-;7713:31;;;;;;;;14595:25:33;;;7695:12:23;;7713:15;-1:-1:-1;;;;;7713:23:23;;;;14568:18:33;;7713:31:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;7694:50:23;-1:-1:-1;;;;;;7762:18:23;;7754:55;;;;-1:-1:-1;;;7754:55:23;;19704:2:33;7754:55:23;;;19686:21:33;19743:2;19723:18;;;19716:30;19782:26;19762:18;;;19755:54;19826:18;;7754:55:23;19676:174:33;7754:55:23;7851:37;;;;;;;;14595:25:33;;;7820:23:23;;7851:15;-1:-1:-1;;;;;7851:29:23;;;;14568:18:33;;7851:37:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;7851:37:23;;;;;;;;;;;;:::i;:::-;-1:-1:-1;7819:69:23;;-1:-1:-1;7906:31:23;;-1:-1:-1;7819:69:23;7922:6;7930;7906:15;:31::i;:::-;7898:72;;;;-1:-1:-1;;;7898:72:23;;18237:2:33;7898:72:23;;;18219:21:33;18276:2;18256:18;;;18249:30;18315;18295:18;;;18288:58;18363:18;;7898:72:23;18209:178:33;7898:72:23;7600:377;;;;;:::o;35228:297:13:-;35284:6;35426:16;35409:5;:34;;35401:87;;;;-1:-1:-1;;;35401:87:13;;21488:2:33;35401:87:13;;;21470:21:33;21527:2;21507:18;;;21500:30;21566:34;21546:18;;;21539:62;21637:10;21617:18;;;21610:38;21665:19;;35401:87:13;21460:230:33;35401:87:13;-1:-1:-1;35512:5:13;35228:297;;;;:::o;17102:168::-;17158:7;17194:1;17185:5;:10;;17177:55;;;;-1:-1:-1;;;17177:55:13;;20057:2:33;17177:55:13;;;20039:21:33;;;20076:18;;;20069:30;20135:34;20115:18;;;20108:62;20187:18;;17177:55:13;20029:182:33;4948:499:12;5113:12;5170:5;5145:21;:30;;5137:81;;;;-1:-1:-1;;;5137:81:12;;18937:2:33;5137:81:12;;;18919:21:33;18976:2;18956:18;;;18949:30;19015:34;18995:18;;;18988:62;19086:8;19066:18;;;19059:36;19112:19;;5137:81:12;18909:228:33;5137:81:12;-1:-1:-1;;;;;1465:19:12;;;5228:60;;;;-1:-1:-1;;;5228:60:12;;21130:2:33;5228:60:12;;;21112:21:33;21169:2;21149:18;;;21142:30;21208:31;21188:18;;;21181:59;21257:18;;5228:60:12;21102:179:33;5228:60:12;5300:12;5314:23;5341:6;-1:-1:-1;;;;;5341:11:12;5360:5;5367:4;5341:31;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5299:73;;;;5389:51;5406:7;5415:10;5427:12;5389:16;:51::i;880:140:3:-;953:12;1001:4;1007:5;984:29;;;;;;;;;:::i;:::-;;;;;;;;;;;;;977:36;;880:140;;;;:::o;1094:139::-;1166:12;1214:4;1220:5;1197:29;;;;;;;;;:::i;958:358:2:-;1043:4;;;;1107:164;1131:3;:10;1127:1;:14;1107:164;;;1194:1;-1:-1:-1;;;;;1184:11:2;:3;1188:1;1184:6;;;;;;-1:-1:-1;;;1184:6:2;;;;;;;;;;;;;;;-1:-1:-1;;;;;1184:11:2;;1180:33;;;1209:4;1197:16;;1180:33;1241:1;-1:-1:-1;;;;;1231:11:2;:3;1235:1;1231:6;;;;;;-1:-1:-1;;;1231:6:2;;;;;;;;;;;;;;;-1:-1:-1;;;;;1231:11:2;;1227:33;;;1256:4;1244:16;;1227:33;1162:1;1007:5:1;1107:164:2;;;;1287:9;:22;;;;-1:-1:-1;1300:9:2;1280:29;-1:-1:-1;;;;;958:358:2:o;7561:742:12:-;7707:12;7735:7;7731:566;;;-1:-1:-1;7765:10:12;7758:17;;7731:566;7876:17;;:21;7872:415;;8120:10;8114:17;8180:15;8167:10;8163:2;8159:19;8152:44;8069:145;8259:12;8252:20;;-1:-1:-1;;;8252:20:12;;;;;;;;:::i;14:765:33:-;;132:3;125:4;117:6;113:17;109:27;99:2;;154:5;147;140:20;99:2;187:6;181:13;213:4;237:60;253:43;293:2;253:43;:::i;:::-;237:60;:::i;:::-;319:3;343:2;338:3;331:15;371:2;366:3;362:12;355:19;;406:2;398:6;394:15;458:3;453:2;447;444:1;440:10;432:6;428:23;424:32;421:41;418:2;;;479:5;472;465:20;418:2;505:5;519:231;533:2;530:1;527:9;519:231;;;597:3;591:10;614:31;639:5;614:31;:::i;:::-;658:18;;696:12;;;;728;;;;551:1;544:9;519:231;;;-1:-1:-1;768:5:33;;89:690;-1:-1:-1;;;;;;;89:690:33:o;784:::-;;902:3;895:4;887:6;883:17;879:27;869:2;;924:5;917;910:20;869:2;957:6;951:13;983:4;1007:60;1023:43;1063:2;1023:43;:::i;1007:60::-;1089:3;1113:2;1108:3;1101:15;1141:2;1136:3;1132:12;1125:19;;1176:2;1168:6;1164:15;1228:3;1223:2;1217;1214:1;1210:10;1202:6;1198:23;1194:32;1191:41;1188:2;;;1249:5;1242;1235:20;1188:2;1275:5;1289:156;1303:2;1300:1;1297:9;1289:156;;;1360:10;;1348:23;;1391:12;;;;1423;;;;1321:1;1314:9;1289:156;;1479:165;1557:13;;1610:8;1599:20;;1589:31;;1579:2;;1634:1;1631;1624:12;1649:261;;1772:2;1760:9;1751:7;1747:23;1743:32;1740:2;;;1793:6;1785;1778:22;1740:2;1830:9;1824:16;1849:31;1874:5;1849:31;:::i;2189:391::-;;;2327:2;2315:9;2306:7;2302:23;2298:32;2295:2;;;2348:6;2340;2333:22;2295:2;2385:9;2379:16;2404:31;2429:5;2404:31;:::i;:::-;2504:2;2489:18;;2483:25;2454:5;;-1:-1:-1;2517:31:33;2483:25;2517:31;:::i;:::-;2567:7;2557:17;;;2285:295;;;;;:::o;2585:383::-;;2733:2;2721:9;2712:7;2708:23;2704:32;2701:2;;;2754:6;2746;2739:22;2701:2;2792:9;2786:16;2825:18;2817:6;2814:30;2811:2;;;2862:6;2854;2847:22;2811:2;2890:72;2954:7;2945:6;2934:9;2930:22;2890:72;:::i;:::-;2880:82;2691:277;-1:-1:-1;;;;2691:277:33:o;2973:1198::-;;;3163:2;3151:9;3142:7;3138:23;3134:32;3131:2;;;3184:6;3176;3169:22;3131:2;3222:9;3216:16;3251:18;3292:2;3284:6;3281:14;3278:2;;;3313:6;3305;3298:22;3278:2;3341:72;3405:7;3396:6;3385:9;3381:22;3341:72;:::i;:::-;3331:82;;3432:2;3422:12;;3480:2;3469:9;3465:18;3459:25;3509:2;3499:8;3496:16;3493:2;;;3530:6;3522;3515:22;3493:2;3558:24;;;-1:-1:-1;3613:4:33;3605:13;;3601:27;-1:-1:-1;3591:2:33;;3647:6;3639;3632:22;3591:2;3681;3675:9;3704:60;3720:43;3760:2;3720:43;:::i;3704:60::-;3786:3;3810:2;3805:3;3798:15;3838:2;3833:3;3829:12;3822:19;;3869:2;3865;3861:11;3917:7;3912:2;3906;3903:1;3899:10;3895:2;3891:19;3887:28;3884:41;3881:2;;;3943:6;3935;3928:22;3881:2;3970:6;3961:15;;3985:156;3999:2;3996:1;3993:9;3985:156;;;4056:10;;4044:23;;4017:1;4010:9;;;;;4087:12;;;;4119;;3985:156;;;3989:3;4160:5;4150:15;;;;;;;3121:1050;;;;;:::o;4176:1220::-;;;4365:2;4353:9;4344:7;4340:23;4336:32;4333:2;;;4386:6;4378;4371:22;4333:2;4424:9;4418:16;4453:18;4494:2;4486:6;4483:14;4480:2;;;4515:6;4507;4500:22;4480:2;4543:72;4607:7;4598:6;4587:9;4583:22;4543:72;:::i;:::-;4533:82;;4634:2;4624:12;;4682:2;4671:9;4667:18;4661:25;4711:2;4701:8;4698:16;4695:2;;;4732:6;4724;4717:22;4695:2;4760:24;;;-1:-1:-1;4815:4:33;4807:13;;4803:27;-1:-1:-1;4793:2:33;;4849:6;4841;4834:22;4793:2;4883;4877:9;4906:60;4922:43;4962:2;4922:43;:::i;4906:60::-;4988:3;5012:2;5007:3;5000:15;5040:2;5035:3;5031:12;5024:19;;5071:2;5067;5063:11;5119:7;5114:2;5108;5105:1;5101:10;5097:2;5093:19;5089:28;5086:41;5083:2;;;5145:6;5137;5130:22;5083:2;5172:6;5163:15;;5187:179;5201:2;5198:1;5195:9;5187:179;;;5258:33;5287:3;5258:33;:::i;:::-;5246:46;;5219:1;5212:9;;;;;5312:12;;;;5344;;5187:179;;5401:705;;;;5608:2;5596:9;5587:7;5583:23;5579:32;5576:2;;;5629:6;5621;5614:22;5576:2;5667:9;5661:16;5696:18;5737:2;5729:6;5726:14;5723:2;;;5758:6;5750;5743:22;5723:2;5786:72;5850:7;5841:6;5830:9;5826:22;5786:72;:::i;:::-;5776:82;;5904:2;5893:9;5889:18;5883:25;5867:41;;5933:2;5923:8;5920:16;5917:2;;;5954:6;5946;5939:22;5917:2;;5982:74;6048:7;6037:8;6026:9;6022:24;5982:74;:::i;:::-;5972:84;;;6096:2;6085:9;6081:18;6075:25;6065:35;;5566:540;;;;;:::o;6111:936::-;;6236:2;6279;6267:9;6258:7;6254:23;6250:32;6247:2;;;6300:6;6292;6285:22;6247:2;6338:9;6332:16;6371:18;6363:6;6360:30;6357:2;;;6408:6;6400;6393:22;6357:2;6436:22;;6489:4;6481:13;;6477:27;-1:-1:-1;6467:2:33;;6523:6;6515;6508:22;6467:2;6557;6551:9;6580:60;6596:43;6636:2;6596:43;:::i;6580:60::-;6662:3;6686:2;6681:3;6674:15;6714:2;6709:3;6705:12;6698:19;;6745:2;6741;6737:11;6793:7;6788:2;6782;6779:1;6775:10;6771:2;6767:19;6763:28;6760:41;6757:2;;;6819:6;6811;6804:22;6757:2;6846:6;6837:15;;6861:156;6875:2;6872:1;6869:9;6861:156;;;6932:10;;6920:23;;6893:1;6886:9;;;;;6963:12;;;;6995;;6861:156;;;-1:-1:-1;7036:5:33;6216:831;-1:-1:-1;;;;;;;6216:831:33:o;7052:383::-;;7200:2;7188:9;7179:7;7175:23;7171:32;7168:2;;;7221:6;7213;7206:22;7168:2;7259:9;7253:16;7292:18;7284:6;7281:30;7278:2;;;7329:6;7321;7314:22;7278:2;7357:72;7421:7;7412:6;7401:9;7397:22;7357:72;:::i;7440:297::-;;7560:2;7548:9;7539:7;7535:23;7531:32;7528:2;;;7581:6;7573;7566:22;7528:2;7618:9;7612:16;7671:5;7664:13;7657:21;7650:5;7647:32;7637:2;;7698:6;7690;7683:22;7742:194;;7865:2;7853:9;7844:7;7840:23;7836:32;7833:2;;;7886:6;7878;7871:22;7833:2;-1:-1:-1;7914:16:33;;7823:113;-1:-1:-1;7823:113:33:o;7941:216::-;;8063:2;8051:9;8042:7;8038:23;8034:32;8031:2;;;8084:6;8076;8069:22;8031:2;8112:39;8141:9;8112:39;:::i;8361:257::-;;8482:2;8470:9;8461:7;8457:23;8453:32;8450:2;;;8503:6;8495;8488:22;8450:2;8540:9;8534:16;8559:29;8582:5;8559:29;:::i;8623:1419::-;;;;;;;8827:3;8815:9;8806:7;8802:23;8798:33;8795:2;;;8849:6;8841;8834:22;8795:2;8893:9;8880:23;8912:29;8935:5;8912:29;:::i;:::-;8960:5;-1:-1:-1;8984:2:33;9023:18;;;9010:32;9051:33;9010:32;9051:33;:::i;:::-;9103:7;-1:-1:-1;9162:2:33;9147:18;;9134:32;9175:33;9134:32;9175:33;:::i;:::-;9227:7;-1:-1:-1;9281:2:33;9266:18;;9253:32;;-1:-1:-1;9332:3:33;9317:19;;9304:33;;-1:-1:-1;9388:3:33;9373:19;;9360:33;9412:18;9442:14;;;9439:2;;;9474:6;9466;9459:22;9439:2;9517:6;9506:9;9502:22;9492:32;;9562:7;9555:4;9551:2;9547:13;9543:27;9533:2;;9589:6;9581;9574:22;9533:2;9630;9617:16;9652:2;9648;9645:10;9642:2;;;9658:18;;:::i;:::-;9700:112;9808:2;-1:-1:-1;;9732:4:33;9728:2;9724:13;9720:86;9716:95;9700:112;:::i;:::-;9687:125;;9835:2;9828:5;9821:17;9875:7;9870:2;9865;9861;9857:11;9853:20;9850:33;9847:2;;;9901:6;9893;9886:22;9847:2;9961;9956;9952;9948:11;9943:2;9936:5;9932:14;9919:45;10005:6;10000:2;9995;9988:5;9984:14;9980:23;9973:39;;10031:5;10021:15;;;;;8785:1257;;;;;;;;:::o;10047:486::-;;10138:5;10132:12;10165:6;10160:3;10153:19;10191:4;10220:2;10215:3;10211:12;10204:19;;10257:2;10250:5;10246:14;10278:3;10290:218;10304:6;10301:1;10298:13;10290:218;;;10369:13;;-1:-1:-1;;;;;10365:62:33;10353:75;;10448:12;;;;10483:15;;;;10326:1;10319:9;10290:218;;;-1:-1:-1;10524:3:33;;10108:425;-1:-1:-1;;;;;10108:425:33:o;10538:436::-;;10628:5;10622:12;10655:6;10650:3;10643:19;10681:4;10710:2;10705:3;10701:12;10694:19;;10747:2;10740:5;10736:14;10768:3;10780:169;10794:6;10791:1;10788:13;10780:169;;;10855:13;;10843:26;;10889:12;;;;10924:15;;;;10816:1;10809:9;10780:169;;10979:316;;11058:5;11052:12;11085:6;11080:3;11073:19;11101:63;11157:6;11150:4;11145:3;11141:14;11134:4;11127:5;11123:16;11101:63;:::i;:::-;11209:2;11197:15;-1:-1:-1;;11193:88:33;11184:98;;;;11284:4;11180:109;;11028:267;-1:-1:-1;;11028:267:33:o;11300:293::-;11380:1;11373:5;11370:12;11360:2;;-1:-1:-1;;;11413:1:33;11406:88;11517:4;11514:1;11507:15;11545:4;11542:1;11535:15;11360:2;11569:18;;11350:243::o;11981:274::-;;12148:6;12142:13;12164:53;12210:6;12205:3;12198:4;12190:6;12186:17;12164:53;:::i;:::-;12233:16;;;;;12118:137;-1:-1:-1;;12118:137:33:o;12260:450::-;;12455:6;12449:13;12471:53;12517:6;12512:3;12505:4;12497:6;12493:17;12471:53;:::i;:::-;12593:2;12589:15;;;;12606:66;12585:88;12546:16;;;;12571:103;;;12701:2;12690:14;;12425:285;-1:-1:-1;;12425:285:33:o;12715:448::-;;12908:6;12902:13;12924:53;12970:6;12965:3;12958:4;12950:6;12946:17;12924:53;:::i;:::-;13046:3;13042:16;;;;13060:66;13038:89;12999:16;;;;13024:104;;;13155:1;13144:13;;12878:285;-1:-1:-1;;12878:285:33:o;14631:2113::-;;15177:3;15218:2;15207:9;15203:18;15230:43;15263:9;15255:6;15230:43;:::i;:::-;15292:2;15310:18;;;15303:30;;;;15382:13;;15404:22;;;;15445:3;15464:18;;;;15528:1;15524:14;;;15509:30;;15505:39;;;;15567:15;;;15600:4;15613:762;15627:6;15624:1;15621:13;15613:762;;;15692:22;;;15716:66;15688:95;15676:108;;15807:13;;15875:9;;15860:25;;15928:11;;;15922:18;15905:15;;;15898:43;15964:4;16011:11;;;16005:18;15988:15;;;15981:43;16047:4;16094:11;;;16088:18;16071:15;;;16064:43;16130:4;16173:11;;;16167:18;15843:4;16205:15;;;16198:27;;;16167:18;16248:47;16279:15;;;16167:18;16248:47;:::i;:::-;16353:12;;;;16238:57;-1:-1:-1;;;16318:15:33;;;;15649:1;15642:9;15613:762;;;15617:3;;;;16425:9;16417:6;16413:22;16406:4;16395:9;16391:20;16384:52;16459:44;16496:6;16488;16459:44;:::i;:::-;16445:58;;;16512:62;16568:4;16557:9;16553:20;16545:6;-1:-1:-1;;;;;11757:2:33;11749:5;11743:12;11739:21;11734:3;11727:34;11824:4;11817:5;11813:16;11807:23;11800:31;11793:39;11786:4;11781:3;11777:14;11770:63;11894:2;11886:4;11879:5;11875:16;11869:23;11865:32;11858:4;11853:3;11849:14;11842:56;;11961:4;11954:5;11950:16;11944:23;11937:31;11930:39;11923:4;11918:3;11914:14;11907:63;11656:320;;;16512:62;16623:9;16615:6;16611:22;16605:3;16594:9;16590:19;16583:51;16651:43;16687:6;16679;16651:43;:::i;:::-;16643:51;;;16731:6;16725:3;16714:9;16710:19;16703:35;15157:1587;;;;;;;;;:::o;16749:219::-;;16898:2;16887:9;16880:21;16918:44;16958:2;16947:9;16943:18;16935:6;16918:44;:::i;23591:675::-;;23788:2;23777:9;23770:21;23826:6;23820:13;23869:4;23864:2;23853:9;23849:18;23842:32;23897:51;23943:3;23932:9;23928:19;23914:12;23897:51;:::i;:::-;23883:65;;-1:-1:-1;;;;;24006:2:33;23998:6;23994:15;23988:22;23984:71;23979:2;23968:9;23964:18;23957:99;24110:2;24102:6;24098:15;24092:22;24087:2;24076:9;24072:18;24065:50;24170:2;24162:6;24158:15;24152:22;24146:3;24135:9;24131:19;24124:51;24231:3;24223:6;24219:16;24213:23;24206:4;24195:9;24191:20;24184:53;24254:6;24246:14;;;23760:506;;;;:::o;25094:1153::-;;25427:3;25416:9;25409:22;25474:6;25468:13;25462:3;25451:9;25447:19;25440:42;25529:4;25521:6;25517:17;25511:24;25544:59;25598:3;25587:9;25583:19;25569:12;25544:59;:::i;:::-;-1:-1:-1;25652:4:33;25640:17;;25634:24;-1:-1:-1;;;;;25756:23:33;;;25750:3;25735:19;;25728:52;25839:4;25827:17;;25821:24;25817:33;25811:3;25796:19;;25789:62;25906:4;25894:17;;25888:24;25882:3;25867:19;;25860:53;25962:4;25950:17;;25944:24;26005:4;25999:3;25984:19;;25977:33;26027:53;26075:3;26060:19;;25944:24;26027:53;:::i;:::-;26019:61;;;26089:62;26145:4;26134:9;26130:20;26122:6;-1:-1:-1;;;;;11757:2:33;11749:5;11743:12;11739:21;11734:3;11727:34;11824:4;11817:5;11813:16;11807:23;11800:31;11793:39;11786:4;11781:3;11777:14;11770:63;11894:2;11886:4;11879:5;11875:16;11869:23;11865:32;11858:4;11853:3;11849:14;11842:56;;11961:4;11954:5;11950:16;11944:23;11937:31;11930:39;11923:4;11918:3;11914:14;11907:63;11656:320;;;26089:62;26182:4;26167:20;;26160:36;;;;26227:4;26212:20;26205:36;25399:848;;-1:-1:-1;;25399:848:33:o;26434:597::-;;26725:6;26714:9;26707:25;26768:6;26763:2;26752:9;26748:18;26741:34;26811:3;26806:2;26795:9;26791:18;26784:31;26832:57;26884:3;26873:9;26869:19;26861:6;26832:57;:::i;:::-;-1:-1:-1;;;;;26925:55:33;;;;26920:2;26905:18;;26898:83;-1:-1:-1;27012:3:33;26997:19;26990:35;26824:65;26697:334;-1:-1:-1;;;26697:334:33:o;27518:::-;27589:2;27583:9;27645:2;27635:13;;-1:-1:-1;;27631:86:33;27619:99;;27748:18;27733:34;;27769:22;;;27730:62;27727:2;;;27795:18;;:::i;:::-;27831:2;27824:22;27563:289;;-1:-1:-1;27563:289:33:o;27857:183::-;;27950:18;27942:6;27939:30;27936:2;;;27972:18;;:::i;:::-;-1:-1:-1;28017:1:33;28013:14;28029:4;28009:25;;27926:114::o;28045:285::-;;28113:1;28110;28107:8;28104:2;;;-1:-1:-1;;;28145:4:33;28138:91;28252:4;28249:1;28242:15;28283:4;28277;28270:18;28104:2;-1:-1:-1;28315:9:33;;28094:236::o;28335:258::-;28407:1;28417:113;28431:6;28428:1;28425:13;28417:113;;;28507:11;;;28501:18;28488:11;;;28481:39;28453:2;28446:10;28417:113;;;28548:6;28545:1;28542:13;28539:2;;;-1:-1:-1;;28583:1:33;28565:16;;28558:27;28388:205::o;28598:184::-;-1:-1:-1;;;28647:1:33;28640:88;28747:4;28744:1;28737:15;28771:4;28768:1;28761:15;28787:154;-1:-1:-1;;;;;28866:5:33;28862:54;28855:5;28852:65;28842:2;;28931:1;28928;28921:12;28842:2;28832:109;:::o;28946:114::-;29030:4;29023:5;29019:16;29012:5;29009:27;28999:2;;29050:1;29047;29040:12"},"methodIdentifiers":{"NAMESPACE()":"44ba1fca","registry()":"7b103999","swap(uint8,address,address,uint256,uint256,bytes)":"a231a780"}},"metadata":"{\"compiler\":{\"version\":\"0.8.3+commit.8d00100c\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"uniswapV2Router\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"uniswapV3Router\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"balancerV2Vault\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"paraswapV5Augustus\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"oneInchV5Router\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"registry\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"NAMESPACE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"registry\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"source\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"tokenIn\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenOut\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minAmountOut\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"swap\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Swap Connector implementation that interfaces with Uniswap V2, Uniswap V3, Balancer V2, Paraswap V5, 1inch V5, and Hop. It inherits from BaseImplementation which means it's implementation can be used directly from the Mimic Registry, it does not require initialization. IMPORTANT! As many other implementations in this repo, this contract is intended to be used as a LIBRARY, not a contract. Due to limitations of the Solidity compiler, it's not possible to work with immutable variables in libraries yet. Therefore, we are relying on contracts without storage variables so they can be safely delegate-called if desired.\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the SwapConnector contract\",\"params\":{\"balancerV2Vault\":\"Balancer V2 vault reference\",\"paraswapV5Augustus\":\"Paraswap V5 augustus reference\",\"registry\":\"Address of the Mimic Registry\",\"uniswapV2Router\":\"Uniswap V2 router reference\",\"uniswapV3Router\":\"Uniswap V3 router reference\"}},\"swap(uint8,address,address,uint256,uint256,bytes)\":{\"details\":\"Swaps two tokens\",\"params\":{\"amountIn\":\"Amount of tokenIn being swapped\",\"data\":\"Encoded data to specify different swap parameters depending on the source picked\",\"minAmountOut\":\"Minimum amount of tokenOut willing to receive\",\"source\":\"Source to execute the requested swap\",\"tokenIn\":\"Token being sent\",\"tokenOut\":\"Token being received\"}}},\"stateVariables\":{\"NAMESPACE\":{\"details\":\"Tells the namespace under which the implementation is registered in the Mimic Registry\"}},\"title\":\"SwapConnector\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/SwapConnector.sol\":\"SwapConnector\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":10000},\"remappings\":[]},\"sources\":{\"@mimic-fi/v2-helpers/contracts/auth/IAuthorizer.sol\":{\"keccak256\":\"0x7e5d1c440a02d16c3d62d8ca982749b4cf044ba14e0a40c4f2fe23257a5304d2\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://bdad507d0bdc80eb1ca9fc01d4ef4ff5e0258b631305033b5945aad85fa5068a\",\"dweb:/ipfs/QmaRdsSorrzkxYpeTNMrZvH5RbbM9JYPQ9HyNAcQGmXNAe\"]},\"@mimic-fi/v2-helpers/contracts/math/UncheckedMath.sol\":{\"keccak256\":\"0x0521515cc3d9bb160250175613575c85286db3f308f522dc98bbf637efa78bfb\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://acd315fd1ef1d6408682ba6f7943470361baefff1a5675da40aab21673e42b55\",\"dweb:/ipfs/QmSg9WHAMVLk9i2rR8DQSomXLaKBW9gWcTRAwzbdxMLU7h\"]},\"@mimic-fi/v2-helpers/contracts/utils/Arrays.sol\":{\"keccak256\":\"0x369b3db3de25b981dcf879c6c5e46f709bb1cd356a876599ebee1d9a5d680fc0\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://6b9355a89b1acdbe8d4e26b74da1995b400a15a08372e07eeaa1ff2c939b66ba\",\"dweb:/ipfs/QmdHFHEu3DXXK6CNfHXY4J2j8KC3bQxLZgPssrttNYwS56\"]},\"@mimic-fi/v2-helpers/contracts/utils/Bytes.sol\":{\"keccak256\":\"0xb354327b816ba2f9934fabe96b26aff0376f6cc6bb4cbd2b2ad61bfe35b8e43a\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://8d512e742720f564112735dfb1d7e2057c534608f2ab5813e439ca4d8d808e3a\",\"dweb:/ipfs/QmbW9MwYR4JAP1UQ56MLH743vHsByFHAv7sszkduu5G8bD\"]},\"@mimic-fi/v2-registry/contracts/implementations/BaseImplementation.sol\":{\"keccak256\":\"0xef331bd88660d3c89ea771c3a8a4392412a409f886411d740d056d547ca4098e\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://5615ee18477db1336aaa7908852e5b5f90a07d8bf90568ef87bab9043f19d819\",\"dweb:/ipfs/QmYJhtFsJAKsAjbbnFJbKxqxVzkQwxs6s3FehKfHZSouAo\"]},\"@mimic-fi/v2-registry/contracts/implementations/IImplementation.sol\":{\"keccak256\":\"0x621ffadea8fdc214f95fa95ff480ebc7f5f51d9678544883def90b59a3851f78\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://9933e44069dee9bf8410f405d734b1320e2b26f11108e723576f9df6ff410b59\",\"dweb:/ipfs/QmfEmrt9bRhjN86BJRST7ZSjkDjegJgd9JtLheizUNzDwN\"]},\"@mimic-fi/v2-registry/contracts/registry/IRegistry.sol\":{\"keccak256\":\"0xeb2662066535134308d0ba955c88e7de4a17d1681b148371dd6dd4b581b2f381\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://7d8f6509d822fea1cea9b6b81a9745fdcdfad4199e69cd3562ffeb234d0e3eac\",\"dweb:/ipfs/QmS74Fkt8nyoGUyNhrqmqrCXQcmboBciFY7zLSwpjytFtU\"]},\"@openzeppelin/contracts/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x2a21b14ff90012878752f230d3ffd5c3405e5938d06c97a7d89c0a64561d0d66\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3313a8f9bb1f9476857c9050067b31982bf2140b83d84f3bc0cec1f62bbe947f\",\"dweb:/ipfs/Qma17Pk8NRe7aB4UD3jjVxk7nSFaov3eQyv86hcyqkwJRV\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd\",\"dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8\"]},\"@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol\":{\"keccak256\":\"0xf41ca991f30855bf80ffd11e9347856a517b977f0a6c2d52e6421a99b7840329\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b2717fd2bdac99daa960a6de500754ea1b932093c946388c381da48658234b95\",\"dweb:/ipfs/QmP6QVMn6UeA3ByahyJbYQr5M6coHKBKsf3ySZSfbyA8R7\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x032807210d1d7d218963d7355d62e021a84bf1b3339f4f50be2f63b53cccaf29\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://11756f42121f6541a35a8339ea899ee7514cfaa2e6d740625fcc844419296aa6\",\"dweb:/ipfs/QmekMuk6BY4DAjzeXr4MSbKdgoqqsZnA8JPtuyWc6CwXHf\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xd6153ce99bcdcce22b124f755e72553295be6abcd63804cfdffceb188b8bef10\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://35c47bece3c03caaa07fab37dd2bb3413bfbca20db7bd9895024390e0a469487\",\"dweb:/ipfs/QmPGWT2x3QHcKxqe6gRmAkdakhbaRgx3DLzcakHz5M4eXG\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x02686c31ccb9ee77a299fa5f47327af5271f251a707a0e24f321957166ff0434\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cb562d8ae1da31249ca0d8553df9f89ef4c3c110a018c4449dde68ae30e51ec1\",\"dweb:/ipfs/QmUwxjtTUYB89ymeV46TZPmTsGnYrKNcgTHk7MQA1MG3hj\"]},\"@uniswap/v2-core/contracts/interfaces/IUniswapV2Factory.sol\":{\"keccak256\":\"0xe5905c0989cf5a865ed9bb7b9252536ca011c5b744017a82a7d4443b9c00a891\",\"urls\":[\"bzz-raw://5d2a90a0a796491507462a3da18c3f8819721d571572d765a2207c35bf0a0389\",\"dweb:/ipfs/Qmf9ACYiT3qzjgsYuhm866FBdiBpRMXAPpQhSFbgqcyhHt\"]},\"@uniswap/v2-periphery/contracts/interfaces/IUniswapV2Router01.sol\":{\"keccak256\":\"0x8a3c5c449d4b7cd76513ed6995f4b86e4a86f222c770f8442f5fc128ce29b4d2\",\"urls\":[\"bzz-raw://1df63ca373dafae3bd0ee7fe70f890a1dc7c45ed869c01de68413e0e97ff9deb\",\"dweb:/ipfs/QmefJgEYGUL8KX7kQKYTrDweF8GB7yjy3nw5Bmqzryg7PG\"]},\"@uniswap/v2-periphery/contracts/interfaces/IUniswapV2Router02.sol\":{\"keccak256\":\"0x744e30c133bd0f7ca9e7163433cf6d72f45c6bb1508c2c9c02f1a6db796ae59d\",\"urls\":[\"bzz-raw://9bf2f4454ad63d4cff03a0630e787d9e8a9deed80aec89682cd8ad6379d9ef8c\",\"dweb:/ipfs/Qme51hQNR2wpax7ooUadhtqLtXm8ffeVVYyubLkTT4wMCG\"]},\"@uniswap/v3-core/contracts/interfaces/IUniswapV3Factory.sol\":{\"keccak256\":\"0xcc3d0c93fc9ac0febbe09f941b465b57f750bcf3b48432da0b97dc289cfdc489\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://b9379ad954680c44a0bc523b314ae4c4da735f9fe1d02aa56ea5bdba6f1136f2\",\"dweb:/ipfs/QmZXdgQNXKAckrXWz9R3mc47F1fvDvr28a2ewJrwNAw71B\"]},\"@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol\":{\"keccak256\":\"0x3f485fb1a44e8fbeadefb5da07d66edab3cfe809f0ac4074b1e54e3eb3c4cf69\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://095ce0626b41318c772b3ebf19d548282607f6a8f3d6c41c13edfbd5370c8652\",\"dweb:/ipfs/QmVDZfJJ89UUCE1hMyzqpkZAtQ8jUsBgZNE5AMRG7RzRFS\"]},\"@uniswap/v3-periphery/contracts/interfaces/IPeripheryImmutableState.sol\":{\"keccak256\":\"0x7affcfeb5127c0925a71d6a65345e117c33537523aeca7bc98085ead8452519d\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://e16b291294210e71cb0f20cd0afe62ae2dc6878d627f5ccc19c4dc9cd80aec3f\",\"dweb:/ipfs/QmQGitSyBr26nour81BZmpmDMyJpvZRqHQZvnCD1Acb127\"]},\"@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol\":{\"keccak256\":\"0x9bfaf1feb32814623e627ab70f2409760b15d95f1f9b058e2b3399a8bb732975\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://a8a2c3e55965b61bcd91993d8e1d5d34b8b8a63e0fdfce87a85f6af92526fd53\",\"dweb:/ipfs/QmQj2CSCSwqDSU4KMNWxGsN2336Cy64WgpV1X1EHXNZWxM\"]},\"contracts/ISwapConnector.sol\":{\"keccak256\":\"0xe4bbf165e1bd53016dfd29240bad0f53d2376ed53807f9cb73371bb57b343172\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://2a62f166e1d12cc74da9d07a2d7869997c85ac3eba719a8da7d5f4784f5617bd\",\"dweb:/ipfs/QmRbC5RTNLrNvz82iJyssAsSEQVj5SrrvjCED3ANqSiVc9\"]},\"contracts/SwapConnector.sol\":{\"keccak256\":\"0xa12109dbde6c7ca3394ff7cda409e1798e2419da4691d5cfedadb3de712c2421\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://f0f7bcfbf83a251b00f540c7718526bbec389dbbf72400724e2e31b06a0d5fb6\",\"dweb:/ipfs/QmVAtq5YhXhMfFeUzvYt7GR3yxG8v1KTHdSt2DdZdW9QXc\"]},\"contracts/connectors/BalancerV2Connector.sol\":{\"keccak256\":\"0xb746970287ef5a524f9e1b1022155f66fe47c0e384bd3f42b8cea7f3a2903b59\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://93d030cdfa762624a101fd673d685b771e5dd3afa31bd7700326b73cf4d3b7ea\",\"dweb:/ipfs/QmeWXsfAADdseEAi7mGupNAvYU69ybY7DGNX9N95TphMrH\"]},\"contracts/connectors/HopSwapConnector.sol\":{\"keccak256\":\"0xf466314feee255a312bf6405cef2e33fdddfe63ad3e8b5ceb784de6579556f58\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://16dd798938b1b630cdb0f5bbd7813f9c0f761a7044a90abf75b632197a7c5149\",\"dweb:/ipfs/QmUYUdtdNRC1Rvnt74cBxbB9tPzVnPFvngBjFn6RoUSK6S\"]},\"contracts/connectors/OneInchV5Connector.sol\":{\"keccak256\":\"0xaf7c0b81a37a9388d418a72f46efc2b844b983504e34075d3628b8a37a1b922f\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://a8b1fdce251c0c997ea28b65d811e2c286e5043d78bbd11adc51019982c3a543\",\"dweb:/ipfs/QmRfcTmk6rcbMYcRd8xKxVT6EnR8yQLmP7mCDZNSq6ShKh\"]},\"contracts/connectors/ParaswapV5Connector.sol\":{\"keccak256\":\"0x5f2f96324f523404bf5ecb8b377961b146fbc6dc5372ca632a246d9363522941\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://ca02031fb5e5981cf8bbae3cde7afda31fd4f513283604f3da2fbf8592f9d78a\",\"dweb:/ipfs/QmeXtjpwY8GsWZgdRD7Kyr5C6Q1NjKZ4Mk1SDit2tkNGZA\"]},\"contracts/connectors/UniswapV2Connector.sol\":{\"keccak256\":\"0x0e9336da28fe1ba8e50291b8f75aa152d965bdf2703be754be9ab3748cb82bf6\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://038c72f1b3b1aa2b795d60d5f4b7bdab819d750d72632fb44253661a3641b1d6\",\"dweb:/ipfs/QmQxirx2nsTjLLzQCvQB9EtFgS1YcY7z6cinT67h27ncnF\"]},\"contracts/connectors/UniswapV3Connector.sol\":{\"keccak256\":\"0x78881f74a40bcfe403e1c6353125ac1f434bbcbddf2bf81fedd00d189dd3729c\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://30ddf83e63359f6b5d9f0e7615f03b36a556127758581d53fbf705a9e33e60d3\",\"dweb:/ipfs/QmS1BVRaBTVbKBbUGmRHoEbmSJz6LDETaMQE8yQ329uBzb\"]},\"contracts/interfaces/IBalancerV2Vault.sol\":{\"keccak256\":\"0xd489492d96e7f466fbf543d85d55a2f05a2742651ef09bd20aa0ca5a623fe0a0\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://0e3ad7ee96966997abcafadff76053cf4c7db583ff7d7450c2827802ec45195d\",\"dweb:/ipfs/QmTv1Kp5vrGDR9o5RrHLQ3ubGgaPWsDJaoG5kMoqsUpx1q\"]},\"contracts/interfaces/IHopSwap.sol\":{\"keccak256\":\"0x24ba9897e89ca22ad5478c557019e9cecab51a2e6dce35bc0620a176324365b7\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://a5c4c0624794093523fb1a507764d2d7a11af9a84176ab7d0beb180f2fd3a162\",\"dweb:/ipfs/QmYVovnSuBxSZgShQoceixeWbRrKcUPL9c64YmBemxrbj8\"]},\"contracts/interfaces/IOneInchV5AggregationRouter.sol\":{\"keccak256\":\"0x6b2d3d4d9cbc3ac7bff1a3e9e8160189ad75388bc92f7d754758afe2e2f092ce\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://e444b9b7cf7f5b3d4bbc80d7161c64177ae68777be7fef5b475c6c86fa6c9209\",\"dweb:/ipfs/QmTUUV6nbDnVYkzJTgRCEKBRN7faeXjVG4Sbs2gxx2yvFk\"]},\"contracts/interfaces/IParaswapV5Augustus.sol\":{\"keccak256\":\"0xe2893d66c064791d1fd0aa102565cad6ef2b141007dfb3a90ee8b02ace35deb9\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://94c1eba11b3553cce212795afddc713946b8939068aaae2c631d219b3457a54d\",\"dweb:/ipfs/QmYpZpxW6ADtYA4qPsqDJg92gn2YdmZwr9K1scoXHNPm3s\"]}},\"version\":1}"}},"contracts/connectors/BalancerV2Connector.sol":{"BalancerV2Connector":{"abi":[{"inputs":[{"internalType":"address","name":"_balancerV2Vault","type":"address"}],"stateMutability":"nonpayable","type":"constructor"}],"evm":{"bytecode":{"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:326:33","statements":[{"nodeType":"YulBlock","src":"6:3:33","statements":[]},{"body":{"nodeType":"YulBlock","src":"95:229:33","statements":[{"body":{"nodeType":"YulBlock","src":"141:26:33","statements":[{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"150:6:33"},{"name":"value0","nodeType":"YulIdentifier","src":"158:6:33"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"143:6:33"},"nodeType":"YulFunctionCall","src":"143:22:33"},"nodeType":"YulExpressionStatement","src":"143:22:33"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"116:7:33"},{"name":"headStart","nodeType":"YulIdentifier","src":"125:9:33"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"112:3:33"},"nodeType":"YulFunctionCall","src":"112:23:33"},{"kind":"number","nodeType":"YulLiteral","src":"137:2:33","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"108:3:33"},"nodeType":"YulFunctionCall","src":"108:32:33"},"nodeType":"YulIf","src":"105:2:33"},{"nodeType":"YulVariableDeclaration","src":"176:29:33","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"195:9:33"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"189:5:33"},"nodeType":"YulFunctionCall","src":"189:16:33"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"180:5:33","type":""}]},{"body":{"nodeType":"YulBlock","src":"268:26:33","statements":[{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"277:6:33"},{"name":"value0","nodeType":"YulIdentifier","src":"285:6:33"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"270:6:33"},"nodeType":"YulFunctionCall","src":"270:22:33"},"nodeType":"YulExpressionStatement","src":"270:22:33"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"227:5:33"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"238:5:33"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"253:3:33","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"258:1:33","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"249:3:33"},"nodeType":"YulFunctionCall","src":"249:11:33"},{"kind":"number","nodeType":"YulLiteral","src":"262:1:33","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"245:3:33"},"nodeType":"YulFunctionCall","src":"245:19:33"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"234:3:33"},"nodeType":"YulFunctionCall","src":"234:31:33"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"224:2:33"},"nodeType":"YulFunctionCall","src":"224:42:33"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"217:6:33"},"nodeType":"YulFunctionCall","src":"217:50:33"},"nodeType":"YulIf","src":"214:2:33"},{"nodeType":"YulAssignment","src":"303:15:33","value":{"name":"value","nodeType":"YulIdentifier","src":"313:5:33"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"303:6:33"}]}]},"name":"abi_decode_tuple_t_address_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"61:9:33","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"72:7:33","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"84:6:33","type":""}],"src":"14:310:33"}]},"contents":"{\n    { }\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        let value := mload(headStart)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(value0, value0) }\n        value0 := value\n    }\n}","id":33,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"60a0604052348015600f57600080fd5b5060405160c138038060c1833981016040819052602a91603e565b60601b6001600160601b031916608052606a565b600060208284031215604e578081fd5b81516001600160a01b03811681146063578182fd5b9392505050565b60805160601c603f608260003960005050603f6000f3fe6080604052600080fdfea26469706673582212203b6f7c6c83bfa34763e5d4b7ad8a5aaffa409e4c2117806ea47d09d54fa6d80f64736f6c63430008030033","opcodes":"PUSH1 0xA0 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH1 0xC1 CODESIZE SUB DUP1 PUSH1 0xC1 DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH1 0x2A SWAP2 PUSH1 0x3E JUMP JUMPDEST PUSH1 0x60 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB NOT AND PUSH1 0x80 MSTORE PUSH1 0x6A JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH1 0x4E JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH1 0x63 JUMPI DUP2 DUP3 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH1 0x60 SHR PUSH1 0x3F PUSH1 0x82 PUSH1 0x0 CODECOPY PUSH1 0x0 POP POP PUSH1 0x3F PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 EXTCODESIZE PUSH16 0x7C6C83BFA34763E5D4B7AD8A5AAFFA40 SWAP15 0x4C 0x21 OR DUP1 PUSH15 0xA47D09D54FA6D80F64736F6C634300 ADDMOD SUB STOP CALLER ","sourceMap":"1153:6826:23:-:0;;;1686:107;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1734:52;;-1:-1:-1;;;;;;1734:52:23;;;1153:6826;;14:310:33;;137:2;125:9;116:7;112:23;108:32;105:2;;;158:6;150;143:22;105:2;189:16;;-1:-1:-1;;;;;234:31:33;;224:42;;214:2;;285:6;277;270:22;214:2;313:5;95:229;-1:-1:-1;;;95:229:33:o;:::-;1153:6826:23;;;;;;;;;;;;"},"deployedBytecode":{"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"6080604052600080fdfea26469706673582212203b6f7c6c83bfa34763e5d4b7ad8a5aaffa409e4c2117806ea47d09d54fa6d80f64736f6c63430008030033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 EXTCODESIZE PUSH16 0x7C6C83BFA34763E5D4B7AD8A5AAFFA40 SWAP15 0x4C 0x21 OR DUP1 PUSH15 0xA47D09D54FA6D80F64736F6C634300 ADDMOD SUB STOP CALLER ","sourceMap":"1153:6826:23:-:0;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.3+commit.8d00100c\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_balancerV2Vault\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"}],\"devdoc\":{\"details\":\"Interfaces with Balancer V2 to swap tokens\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the BalancerV2Connector contract\",\"params\":{\"_balancerV2Vault\":\"Balancer V2 vault reference\"}}},\"title\":\"BalancerV2Connector\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/connectors/BalancerV2Connector.sol\":\"BalancerV2Connector\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":10000},\"remappings\":[]},\"sources\":{\"@mimic-fi/v2-helpers/contracts/math/UncheckedMath.sol\":{\"keccak256\":\"0x0521515cc3d9bb160250175613575c85286db3f308f522dc98bbf637efa78bfb\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://acd315fd1ef1d6408682ba6f7943470361baefff1a5675da40aab21673e42b55\",\"dweb:/ipfs/QmSg9WHAMVLk9i2rR8DQSomXLaKBW9gWcTRAwzbdxMLU7h\"]},\"@mimic-fi/v2-helpers/contracts/utils/Arrays.sol\":{\"keccak256\":\"0x369b3db3de25b981dcf879c6c5e46f709bb1cd356a876599ebee1d9a5d680fc0\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://6b9355a89b1acdbe8d4e26b74da1995b400a15a08372e07eeaa1ff2c939b66ba\",\"dweb:/ipfs/QmdHFHEu3DXXK6CNfHXY4J2j8KC3bQxLZgPssrttNYwS56\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol\":{\"keccak256\":\"0xf41ca991f30855bf80ffd11e9347856a517b977f0a6c2d52e6421a99b7840329\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b2717fd2bdac99daa960a6de500754ea1b932093c946388c381da48658234b95\",\"dweb:/ipfs/QmP6QVMn6UeA3ByahyJbYQr5M6coHKBKsf3ySZSfbyA8R7\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x032807210d1d7d218963d7355d62e021a84bf1b3339f4f50be2f63b53cccaf29\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://11756f42121f6541a35a8339ea899ee7514cfaa2e6d740625fcc844419296aa6\",\"dweb:/ipfs/QmekMuk6BY4DAjzeXr4MSbKdgoqqsZnA8JPtuyWc6CwXHf\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xd6153ce99bcdcce22b124f755e72553295be6abcd63804cfdffceb188b8bef10\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://35c47bece3c03caaa07fab37dd2bb3413bfbca20db7bd9895024390e0a469487\",\"dweb:/ipfs/QmPGWT2x3QHcKxqe6gRmAkdakhbaRgx3DLzcakHz5M4eXG\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x02686c31ccb9ee77a299fa5f47327af5271f251a707a0e24f321957166ff0434\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cb562d8ae1da31249ca0d8553df9f89ef4c3c110a018c4449dde68ae30e51ec1\",\"dweb:/ipfs/QmUwxjtTUYB89ymeV46TZPmTsGnYrKNcgTHk7MQA1MG3hj\"]},\"contracts/connectors/BalancerV2Connector.sol\":{\"keccak256\":\"0xb746970287ef5a524f9e1b1022155f66fe47c0e384bd3f42b8cea7f3a2903b59\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://93d030cdfa762624a101fd673d685b771e5dd3afa31bd7700326b73cf4d3b7ea\",\"dweb:/ipfs/QmeWXsfAADdseEAi7mGupNAvYU69ybY7DGNX9N95TphMrH\"]},\"contracts/interfaces/IBalancerV2Vault.sol\":{\"keccak256\":\"0xd489492d96e7f466fbf543d85d55a2f05a2742651ef09bd20aa0ca5a623fe0a0\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://0e3ad7ee96966997abcafadff76053cf4c7db583ff7d7450c2827802ec45195d\",\"dweb:/ipfs/QmTv1Kp5vrGDR9o5RrHLQ3ubGgaPWsDJaoG5kMoqsUpx1q\"]}},\"version\":1}"}},"contracts/connectors/HopSwapConnector.sol":{"HopSwapConnector":{"abi":[],"evm":{"bytecode":{"generatedSources":[],"linkReferences":{},"object":"6080604052348015600f57600080fd5b50603f80601d6000396000f3fe6080604052600080fdfea2646970667358221220b655a2ecc3748b97fff96aaec4a1577f2b8721da47866bf3aae9c2ac2809294064736f6c63430008030033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x3F DUP1 PUSH1 0x1D PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB6 SSTORE LOG2 0xEC 0xC3 PUSH21 0x8B97FFF96AAEC4A1577F2B8721DA47866BF3AAE9C2 0xAC 0x28 MULMOD 0x29 BLOCKHASH PUSH5 0x736F6C6343 STOP ADDMOD SUB STOP CALLER ","sourceMap":"958:1196:24:-:0;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"6080604052600080fdfea2646970667358221220b655a2ecc3748b97fff96aaec4a1577f2b8721da47866bf3aae9c2ac2809294064736f6c63430008030033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB6 SSTORE LOG2 0xEC 0xC3 PUSH21 0x8B97FFF96AAEC4A1577F2B8721DA47866BF3AAE9C2 0xAC 0x28 MULMOD 0x29 BLOCKHASH PUSH5 0x736F6C6343 STOP ADDMOD SUB STOP CALLER ","sourceMap":"958:1196:24:-:0;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.3+commit.8d00100c\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Interfaces with Hop Swap to swap tokens\",\"kind\":\"dev\",\"methods\":{},\"title\":\"HopSwapConnector\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/connectors/HopSwapConnector.sol\":\"HopSwapConnector\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":10000},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol\":{\"keccak256\":\"0xf41ca991f30855bf80ffd11e9347856a517b977f0a6c2d52e6421a99b7840329\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b2717fd2bdac99daa960a6de500754ea1b932093c946388c381da48658234b95\",\"dweb:/ipfs/QmP6QVMn6UeA3ByahyJbYQr5M6coHKBKsf3ySZSfbyA8R7\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x032807210d1d7d218963d7355d62e021a84bf1b3339f4f50be2f63b53cccaf29\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://11756f42121f6541a35a8339ea899ee7514cfaa2e6d740625fcc844419296aa6\",\"dweb:/ipfs/QmekMuk6BY4DAjzeXr4MSbKdgoqqsZnA8JPtuyWc6CwXHf\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xd6153ce99bcdcce22b124f755e72553295be6abcd63804cfdffceb188b8bef10\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://35c47bece3c03caaa07fab37dd2bb3413bfbca20db7bd9895024390e0a469487\",\"dweb:/ipfs/QmPGWT2x3QHcKxqe6gRmAkdakhbaRgx3DLzcakHz5M4eXG\"]},\"contracts/connectors/HopSwapConnector.sol\":{\"keccak256\":\"0xf466314feee255a312bf6405cef2e33fdddfe63ad3e8b5ceb784de6579556f58\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://16dd798938b1b630cdb0f5bbd7813f9c0f761a7044a90abf75b632197a7c5149\",\"dweb:/ipfs/QmUYUdtdNRC1Rvnt74cBxbB9tPzVnPFvngBjFn6RoUSK6S\"]},\"contracts/interfaces/IHopSwap.sol\":{\"keccak256\":\"0x24ba9897e89ca22ad5478c557019e9cecab51a2e6dce35bc0620a176324365b7\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://a5c4c0624794093523fb1a507764d2d7a11af9a84176ab7d0beb180f2fd3a162\",\"dweb:/ipfs/QmYVovnSuBxSZgShQoceixeWbRrKcUPL9c64YmBemxrbj8\"]}},\"version\":1}"}},"contracts/connectors/OneInchV5Connector.sol":{"OneInchV5Connector":{"abi":[{"inputs":[{"internalType":"address","name":"_oneInchV5Router","type":"address"}],"stateMutability":"nonpayable","type":"constructor"}],"evm":{"bytecode":{"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:326:33","statements":[{"nodeType":"YulBlock","src":"6:3:33","statements":[]},{"body":{"nodeType":"YulBlock","src":"95:229:33","statements":[{"body":{"nodeType":"YulBlock","src":"141:26:33","statements":[{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"150:6:33"},{"name":"value0","nodeType":"YulIdentifier","src":"158:6:33"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"143:6:33"},"nodeType":"YulFunctionCall","src":"143:22:33"},"nodeType":"YulExpressionStatement","src":"143:22:33"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"116:7:33"},{"name":"headStart","nodeType":"YulIdentifier","src":"125:9:33"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"112:3:33"},"nodeType":"YulFunctionCall","src":"112:23:33"},{"kind":"number","nodeType":"YulLiteral","src":"137:2:33","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"108:3:33"},"nodeType":"YulFunctionCall","src":"108:32:33"},"nodeType":"YulIf","src":"105:2:33"},{"nodeType":"YulVariableDeclaration","src":"176:29:33","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"195:9:33"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"189:5:33"},"nodeType":"YulFunctionCall","src":"189:16:33"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"180:5:33","type":""}]},{"body":{"nodeType":"YulBlock","src":"268:26:33","statements":[{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"277:6:33"},{"name":"value0","nodeType":"YulIdentifier","src":"285:6:33"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"270:6:33"},"nodeType":"YulFunctionCall","src":"270:22:33"},"nodeType":"YulExpressionStatement","src":"270:22:33"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"227:5:33"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"238:5:33"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"253:3:33","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"258:1:33","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"249:3:33"},"nodeType":"YulFunctionCall","src":"249:11:33"},{"kind":"number","nodeType":"YulLiteral","src":"262:1:33","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"245:3:33"},"nodeType":"YulFunctionCall","src":"245:19:33"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"234:3:33"},"nodeType":"YulFunctionCall","src":"234:31:33"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"224:2:33"},"nodeType":"YulFunctionCall","src":"224:42:33"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"217:6:33"},"nodeType":"YulFunctionCall","src":"217:50:33"},"nodeType":"YulIf","src":"214:2:33"},{"nodeType":"YulAssignment","src":"303:15:33","value":{"name":"value","nodeType":"YulIdentifier","src":"313:5:33"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"303:6:33"}]}]},"name":"abi_decode_tuple_t_address_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"61:9:33","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"72:7:33","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"84:6:33","type":""}],"src":"14:310:33"}]},"contents":"{\n    { }\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        let value := mload(headStart)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(value0, value0) }\n        value0 := value\n    }\n}","id":33,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"60a0604052348015600f57600080fd5b5060405160c138038060c1833981016040819052602a91603e565b60601b6001600160601b031916608052606a565b600060208284031215604e578081fd5b81516001600160a01b03811681146063578182fd5b9392505050565b60805160601c603f608260003960005050603f6000f3fe6080604052600080fdfea2646970667358221220487289d2c4ba0702bc32215c59280d0cca624c1735eae9e61d15ad1f2c8e878b64736f6c63430008030033","opcodes":"PUSH1 0xA0 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH1 0xC1 CODESIZE SUB DUP1 PUSH1 0xC1 DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH1 0x2A SWAP2 PUSH1 0x3E JUMP JUMPDEST PUSH1 0x60 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB NOT AND PUSH1 0x80 MSTORE PUSH1 0x6A JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH1 0x4E JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH1 0x63 JUMPI DUP2 DUP3 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH1 0x60 SHR PUSH1 0x3F PUSH1 0x82 PUSH1 0x0 CODECOPY PUSH1 0x0 POP POP PUSH1 0x3F PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x48 PUSH19 0x89D2C4BA0702BC32215C59280D0CCA624C1735 0xEA 0xE9 0xE6 SAR ISZERO 0xAD 0x1F 0x2C DUP15 DUP8 DUP12 PUSH5 0x736F6C6343 STOP ADDMOD SUB STOP CALLER ","sourceMap":"1031:1453:25:-:0;;;1355:118;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1403:63;;-1:-1:-1;;;;;;1403:63:25;;;1031:1453;;14:310:33;;137:2;125:9;116:7;112:23;108:32;105:2;;;158:6;150;143:22;105:2;189:16;;-1:-1:-1;;;;;234:31:33;;224:42;;214:2;;285:6;277;270:22;214:2;313:5;95:229;-1:-1:-1;;;95:229:33:o;:::-;1031:1453:25;;;;;;;;;;;;"},"deployedBytecode":{"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"6080604052600080fdfea2646970667358221220487289d2c4ba0702bc32215c59280d0cca624c1735eae9e61d15ad1f2c8e878b64736f6c63430008030033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x48 PUSH19 0x89D2C4BA0702BC32215C59280D0CCA624C1735 0xEA 0xE9 0xE6 SAR ISZERO 0xAD 0x1F 0x2C DUP15 DUP8 DUP12 PUSH5 0x736F6C6343 STOP ADDMOD SUB STOP CALLER ","sourceMap":"1031:1453:25:-:0;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.3+commit.8d00100c\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_oneInchV5Router\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"}],\"devdoc\":{\"details\":\"Interfaces with 1inch V5 to swap tokens\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the OneInchV5Connector contract\",\"params\":{\"_oneInchV5Router\":\"1inch aggregation router v5 reference\"}}},\"title\":\"OneInchV5Connector\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/connectors/OneInchV5Connector.sol\":\"OneInchV5Connector\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":10000},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol\":{\"keccak256\":\"0xf41ca991f30855bf80ffd11e9347856a517b977f0a6c2d52e6421a99b7840329\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b2717fd2bdac99daa960a6de500754ea1b932093c946388c381da48658234b95\",\"dweb:/ipfs/QmP6QVMn6UeA3ByahyJbYQr5M6coHKBKsf3ySZSfbyA8R7\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x032807210d1d7d218963d7355d62e021a84bf1b3339f4f50be2f63b53cccaf29\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://11756f42121f6541a35a8339ea899ee7514cfaa2e6d740625fcc844419296aa6\",\"dweb:/ipfs/QmekMuk6BY4DAjzeXr4MSbKdgoqqsZnA8JPtuyWc6CwXHf\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xd6153ce99bcdcce22b124f755e72553295be6abcd63804cfdffceb188b8bef10\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://35c47bece3c03caaa07fab37dd2bb3413bfbca20db7bd9895024390e0a469487\",\"dweb:/ipfs/QmPGWT2x3QHcKxqe6gRmAkdakhbaRgx3DLzcakHz5M4eXG\"]},\"contracts/connectors/OneInchV5Connector.sol\":{\"keccak256\":\"0xaf7c0b81a37a9388d418a72f46efc2b844b983504e34075d3628b8a37a1b922f\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://a8b1fdce251c0c997ea28b65d811e2c286e5043d78bbd11adc51019982c3a543\",\"dweb:/ipfs/QmRfcTmk6rcbMYcRd8xKxVT6EnR8yQLmP7mCDZNSq6ShKh\"]},\"contracts/interfaces/IOneInchV5AggregationRouter.sol\":{\"keccak256\":\"0x6b2d3d4d9cbc3ac7bff1a3e9e8160189ad75388bc92f7d754758afe2e2f092ce\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://e444b9b7cf7f5b3d4bbc80d7161c64177ae68777be7fef5b475c6c86fa6c9209\",\"dweb:/ipfs/QmTUUV6nbDnVYkzJTgRCEKBRN7faeXjVG4Sbs2gxx2yvFk\"]}},\"version\":1}"}},"contracts/connectors/ParaswapV5Connector.sol":{"ParaswapV5Connector":{"abi":[{"inputs":[{"internalType":"address","name":"_paraswapV5Augustus","type":"address"}],"stateMutability":"nonpayable","type":"constructor"}],"evm":{"bytecode":{"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:326:33","statements":[{"nodeType":"YulBlock","src":"6:3:33","statements":[]},{"body":{"nodeType":"YulBlock","src":"95:229:33","statements":[{"body":{"nodeType":"YulBlock","src":"141:26:33","statements":[{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"150:6:33"},{"name":"value0","nodeType":"YulIdentifier","src":"158:6:33"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"143:6:33"},"nodeType":"YulFunctionCall","src":"143:22:33"},"nodeType":"YulExpressionStatement","src":"143:22:33"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"116:7:33"},{"name":"headStart","nodeType":"YulIdentifier","src":"125:9:33"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"112:3:33"},"nodeType":"YulFunctionCall","src":"112:23:33"},{"kind":"number","nodeType":"YulLiteral","src":"137:2:33","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"108:3:33"},"nodeType":"YulFunctionCall","src":"108:32:33"},"nodeType":"YulIf","src":"105:2:33"},{"nodeType":"YulVariableDeclaration","src":"176:29:33","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"195:9:33"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"189:5:33"},"nodeType":"YulFunctionCall","src":"189:16:33"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"180:5:33","type":""}]},{"body":{"nodeType":"YulBlock","src":"268:26:33","statements":[{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"277:6:33"},{"name":"value0","nodeType":"YulIdentifier","src":"285:6:33"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"270:6:33"},"nodeType":"YulFunctionCall","src":"270:22:33"},"nodeType":"YulExpressionStatement","src":"270:22:33"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"227:5:33"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"238:5:33"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"253:3:33","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"258:1:33","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"249:3:33"},"nodeType":"YulFunctionCall","src":"249:11:33"},{"kind":"number","nodeType":"YulLiteral","src":"262:1:33","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"245:3:33"},"nodeType":"YulFunctionCall","src":"245:19:33"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"234:3:33"},"nodeType":"YulFunctionCall","src":"234:31:33"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"224:2:33"},"nodeType":"YulFunctionCall","src":"224:42:33"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"217:6:33"},"nodeType":"YulFunctionCall","src":"217:50:33"},"nodeType":"YulIf","src":"214:2:33"},{"nodeType":"YulAssignment","src":"303:15:33","value":{"name":"value","nodeType":"YulIdentifier","src":"313:5:33"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"303:6:33"}]}]},"name":"abi_decode_tuple_t_address_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"61:9:33","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"72:7:33","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"84:6:33","type":""}],"src":"14:310:33"}]},"contents":"{\n    { }\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        let value := mload(headStart)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(value0, value0) }\n        value0 := value\n    }\n}","id":33,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"60a0604052348015600f57600080fd5b5060405160c138038060c1833981016040819052602a91603e565b60601b6001600160601b031916608052606a565b600060208284031215604e578081fd5b81516001600160a01b03811681146063578182fd5b9392505050565b60805160601c603f608260003960005050603f6000f3fe6080604052600080fdfea26469706673582212200ecf2cc5bdf2e58bb91afca551a6e498959f3afa7f2fdc69980954074e07c50864736f6c63430008030033","opcodes":"PUSH1 0xA0 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH1 0xC1 CODESIZE SUB DUP1 PUSH1 0xC1 DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH1 0x2A SWAP2 PUSH1 0x3E JUMP JUMPDEST PUSH1 0x60 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB NOT AND PUSH1 0x80 MSTORE PUSH1 0x6A JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH1 0x4E JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH1 0x63 JUMPI DUP2 DUP3 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH1 0x60 SHR PUSH1 0x3F PUSH1 0x82 PUSH1 0x0 CODECOPY PUSH1 0x0 POP POP PUSH1 0x3F PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE 0xCF 0x2C 0xC5 0xBD CALLCODE 0xE5 DUP12 0xB9 BYTE 0xFC 0xA5 MLOAD 0xA6 0xE4 SWAP9 SWAP6 SWAP16 GASPRICE STATICCALL PUSH32 0x2FDC69980954074E07C50864736F6C6343000803003300000000000000000000 ","sourceMap":"1027:1527:26:-:0;;;1344:119;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1395:61;;-1:-1:-1;;;;;;1395:61:26;;;1027:1527;;14:310:33;;137:2;125:9;116:7;112:23;108:32;105:2;;;158:6;150;143:22;105:2;189:16;;-1:-1:-1;;;;;234:31:33;;224:42;;214:2;;285:6;277;270:22;214:2;313:5;95:229;-1:-1:-1;;;95:229:33:o;:::-;1027:1527:26;;;;;;;;;;;;"},"deployedBytecode":{"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"6080604052600080fdfea26469706673582212200ecf2cc5bdf2e58bb91afca551a6e498959f3afa7f2fdc69980954074e07c50864736f6c63430008030033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE 0xCF 0x2C 0xC5 0xBD CALLCODE 0xE5 DUP12 0xB9 BYTE 0xFC 0xA5 MLOAD 0xA6 0xE4 SWAP9 SWAP6 SWAP16 GASPRICE STATICCALL PUSH32 0x2FDC69980954074E07C50864736F6C6343000803003300000000000000000000 ","sourceMap":"1027:1527:26:-:0;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.3+commit.8d00100c\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_paraswapV5Augustus\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"}],\"devdoc\":{\"details\":\"Interfaces with Paraswap V5 to swap tokens\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the ParaswapV5Connector contract\",\"params\":{\"_paraswapV5Augustus\":\"Paraswap V5 augusts reference\"}}},\"title\":\"ParaswapV5Connector\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/connectors/ParaswapV5Connector.sol\":\"ParaswapV5Connector\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":10000},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol\":{\"keccak256\":\"0xf41ca991f30855bf80ffd11e9347856a517b977f0a6c2d52e6421a99b7840329\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b2717fd2bdac99daa960a6de500754ea1b932093c946388c381da48658234b95\",\"dweb:/ipfs/QmP6QVMn6UeA3ByahyJbYQr5M6coHKBKsf3ySZSfbyA8R7\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x032807210d1d7d218963d7355d62e021a84bf1b3339f4f50be2f63b53cccaf29\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://11756f42121f6541a35a8339ea899ee7514cfaa2e6d740625fcc844419296aa6\",\"dweb:/ipfs/QmekMuk6BY4DAjzeXr4MSbKdgoqqsZnA8JPtuyWc6CwXHf\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xd6153ce99bcdcce22b124f755e72553295be6abcd63804cfdffceb188b8bef10\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://35c47bece3c03caaa07fab37dd2bb3413bfbca20db7bd9895024390e0a469487\",\"dweb:/ipfs/QmPGWT2x3QHcKxqe6gRmAkdakhbaRgx3DLzcakHz5M4eXG\"]},\"contracts/connectors/ParaswapV5Connector.sol\":{\"keccak256\":\"0x5f2f96324f523404bf5ecb8b377961b146fbc6dc5372ca632a246d9363522941\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://ca02031fb5e5981cf8bbae3cde7afda31fd4f513283604f3da2fbf8592f9d78a\",\"dweb:/ipfs/QmeXtjpwY8GsWZgdRD7Kyr5C6Q1NjKZ4Mk1SDit2tkNGZA\"]},\"contracts/interfaces/IParaswapV5Augustus.sol\":{\"keccak256\":\"0xe2893d66c064791d1fd0aa102565cad6ef2b141007dfb3a90ee8b02ace35deb9\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://94c1eba11b3553cce212795afddc713946b8939068aaae2c631d219b3457a54d\",\"dweb:/ipfs/QmYpZpxW6ADtYA4qPsqDJg92gn2YdmZwr9K1scoXHNPm3s\"]}},\"version\":1}"}},"contracts/connectors/UniswapV2Connector.sol":{"UniswapV2Connector":{"abi":[{"inputs":[{"internalType":"address","name":"_uniswapV2Router","type":"address"}],"stateMutability":"nonpayable","type":"constructor"}],"evm":{"bytecode":{"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:326:33","statements":[{"nodeType":"YulBlock","src":"6:3:33","statements":[]},{"body":{"nodeType":"YulBlock","src":"95:229:33","statements":[{"body":{"nodeType":"YulBlock","src":"141:26:33","statements":[{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"150:6:33"},{"name":"value0","nodeType":"YulIdentifier","src":"158:6:33"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"143:6:33"},"nodeType":"YulFunctionCall","src":"143:22:33"},"nodeType":"YulExpressionStatement","src":"143:22:33"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"116:7:33"},{"name":"headStart","nodeType":"YulIdentifier","src":"125:9:33"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"112:3:33"},"nodeType":"YulFunctionCall","src":"112:23:33"},{"kind":"number","nodeType":"YulLiteral","src":"137:2:33","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"108:3:33"},"nodeType":"YulFunctionCall","src":"108:32:33"},"nodeType":"YulIf","src":"105:2:33"},{"nodeType":"YulVariableDeclaration","src":"176:29:33","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"195:9:33"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"189:5:33"},"nodeType":"YulFunctionCall","src":"189:16:33"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"180:5:33","type":""}]},{"body":{"nodeType":"YulBlock","src":"268:26:33","statements":[{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"277:6:33"},{"name":"value0","nodeType":"YulIdentifier","src":"285:6:33"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"270:6:33"},"nodeType":"YulFunctionCall","src":"270:22:33"},"nodeType":"YulExpressionStatement","src":"270:22:33"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"227:5:33"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"238:5:33"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"253:3:33","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"258:1:33","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"249:3:33"},"nodeType":"YulFunctionCall","src":"249:11:33"},{"kind":"number","nodeType":"YulLiteral","src":"262:1:33","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"245:3:33"},"nodeType":"YulFunctionCall","src":"245:19:33"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"234:3:33"},"nodeType":"YulFunctionCall","src":"234:31:33"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"224:2:33"},"nodeType":"YulFunctionCall","src":"224:42:33"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"217:6:33"},"nodeType":"YulFunctionCall","src":"217:50:33"},"nodeType":"YulIf","src":"214:2:33"},{"nodeType":"YulAssignment","src":"303:15:33","value":{"name":"value","nodeType":"YulIdentifier","src":"313:5:33"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"303:6:33"}]}]},"name":"abi_decode_tuple_t_address_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"61:9:33","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"72:7:33","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"84:6:33","type":""}],"src":"14:310:33"}]},"contents":"{\n    { }\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        let value := mload(headStart)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(value0, value0) }\n        value0 := value\n    }\n}","id":33,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"60a0604052348015600f57600080fd5b5060405160c138038060c1833981016040819052602a91603e565b60601b6001600160601b031916608052606a565b600060208284031215604e578081fd5b81516001600160a01b03811681146063578182fd5b9392505050565b60805160601c603f608260003960005050603f6000f3fe6080604052600080fdfea264697066735822122087cc03cb070a140be83d9deb3124bc192fe643d964b0e2e195187967fb54fabe64736f6c63430008030033","opcodes":"PUSH1 0xA0 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH1 0xC1 CODESIZE SUB DUP1 PUSH1 0xC1 DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH1 0x2A SWAP2 PUSH1 0x3E JUMP JUMPDEST PUSH1 0x60 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB NOT AND PUSH1 0x80 MSTORE PUSH1 0x6A JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH1 0x4E JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH1 0x63 JUMPI DUP2 DUP3 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH1 0x60 SHR PUSH1 0x3F PUSH1 0x82 PUSH1 0x0 CODECOPY PUSH1 0x0 POP POP PUSH1 0x3F PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP8 0xCC SUB 0xCB SMOD EXP EQ SIGNEXTEND 0xE8 RETURNDATASIZE SWAP14 0xEB BALANCE 0x24 0xBC NOT 0x2F 0xE6 NUMBER 0xD9 PUSH5 0xB0E2E19518 PUSH26 0x67FB54FABE64736F6C6343000803003300000000000000000000 ","sourceMap":"1270:4055:27:-:0;;;1742:109;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1790:54;;-1:-1:-1;;;;;;1790:54:27;;;1270:4055;;14:310:33;;137:2;125:9;116:7;112:23;108:32;105:2;;;158:6;150;143:22;105:2;189:16;;-1:-1:-1;;;;;234:31:33;;224:42;;214:2;;285:6;277;270:22;214:2;313:5;95:229;-1:-1:-1;;;95:229:33:o;:::-;1270:4055:27;;;;;;;;;;;;"},"deployedBytecode":{"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"6080604052600080fdfea264697066735822122087cc03cb070a140be83d9deb3124bc192fe643d964b0e2e195187967fb54fabe64736f6c63430008030033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP8 0xCC SUB 0xCB SMOD EXP EQ SIGNEXTEND 0xE8 RETURNDATASIZE SWAP14 0xEB BALANCE 0x24 0xBC NOT 0x2F 0xE6 NUMBER 0xD9 PUSH5 0xB0E2E19518 PUSH26 0x67FB54FABE64736F6C6343000803003300000000000000000000 ","sourceMap":"1270:4055:27:-:0;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.3+commit.8d00100c\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_uniswapV2Router\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"}],\"devdoc\":{\"details\":\"Interfaces with Uniswap V2 to swap tokens\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the UniswapV2Connector contract\",\"params\":{\"_uniswapV2Router\":\"Uniswap V2 router reference\"}}},\"title\":\"UniswapV2Connector\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/connectors/UniswapV2Connector.sol\":\"UniswapV2Connector\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":10000},\"remappings\":[]},\"sources\":{\"@mimic-fi/v2-helpers/contracts/math/UncheckedMath.sol\":{\"keccak256\":\"0x0521515cc3d9bb160250175613575c85286db3f308f522dc98bbf637efa78bfb\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://acd315fd1ef1d6408682ba6f7943470361baefff1a5675da40aab21673e42b55\",\"dweb:/ipfs/QmSg9WHAMVLk9i2rR8DQSomXLaKBW9gWcTRAwzbdxMLU7h\"]},\"@mimic-fi/v2-helpers/contracts/utils/Arrays.sol\":{\"keccak256\":\"0x369b3db3de25b981dcf879c6c5e46f709bb1cd356a876599ebee1d9a5d680fc0\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://6b9355a89b1acdbe8d4e26b74da1995b400a15a08372e07eeaa1ff2c939b66ba\",\"dweb:/ipfs/QmdHFHEu3DXXK6CNfHXY4J2j8KC3bQxLZgPssrttNYwS56\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd\",\"dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8\"]},\"@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol\":{\"keccak256\":\"0xf41ca991f30855bf80ffd11e9347856a517b977f0a6c2d52e6421a99b7840329\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b2717fd2bdac99daa960a6de500754ea1b932093c946388c381da48658234b95\",\"dweb:/ipfs/QmP6QVMn6UeA3ByahyJbYQr5M6coHKBKsf3ySZSfbyA8R7\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x032807210d1d7d218963d7355d62e021a84bf1b3339f4f50be2f63b53cccaf29\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://11756f42121f6541a35a8339ea899ee7514cfaa2e6d740625fcc844419296aa6\",\"dweb:/ipfs/QmekMuk6BY4DAjzeXr4MSbKdgoqqsZnA8JPtuyWc6CwXHf\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xd6153ce99bcdcce22b124f755e72553295be6abcd63804cfdffceb188b8bef10\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://35c47bece3c03caaa07fab37dd2bb3413bfbca20db7bd9895024390e0a469487\",\"dweb:/ipfs/QmPGWT2x3QHcKxqe6gRmAkdakhbaRgx3DLzcakHz5M4eXG\"]},\"@uniswap/v2-core/contracts/interfaces/IUniswapV2Factory.sol\":{\"keccak256\":\"0xe5905c0989cf5a865ed9bb7b9252536ca011c5b744017a82a7d4443b9c00a891\",\"urls\":[\"bzz-raw://5d2a90a0a796491507462a3da18c3f8819721d571572d765a2207c35bf0a0389\",\"dweb:/ipfs/Qmf9ACYiT3qzjgsYuhm866FBdiBpRMXAPpQhSFbgqcyhHt\"]},\"@uniswap/v2-periphery/contracts/interfaces/IUniswapV2Router01.sol\":{\"keccak256\":\"0x8a3c5c449d4b7cd76513ed6995f4b86e4a86f222c770f8442f5fc128ce29b4d2\",\"urls\":[\"bzz-raw://1df63ca373dafae3bd0ee7fe70f890a1dc7c45ed869c01de68413e0e97ff9deb\",\"dweb:/ipfs/QmefJgEYGUL8KX7kQKYTrDweF8GB7yjy3nw5Bmqzryg7PG\"]},\"@uniswap/v2-periphery/contracts/interfaces/IUniswapV2Router02.sol\":{\"keccak256\":\"0x744e30c133bd0f7ca9e7163433cf6d72f45c6bb1508c2c9c02f1a6db796ae59d\",\"urls\":[\"bzz-raw://9bf2f4454ad63d4cff03a0630e787d9e8a9deed80aec89682cd8ad6379d9ef8c\",\"dweb:/ipfs/Qme51hQNR2wpax7ooUadhtqLtXm8ffeVVYyubLkTT4wMCG\"]},\"contracts/connectors/UniswapV2Connector.sol\":{\"keccak256\":\"0x0e9336da28fe1ba8e50291b8f75aa152d965bdf2703be754be9ab3748cb82bf6\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://038c72f1b3b1aa2b795d60d5f4b7bdab819d750d72632fb44253661a3641b1d6\",\"dweb:/ipfs/QmQxirx2nsTjLLzQCvQB9EtFgS1YcY7z6cinT67h27ncnF\"]}},\"version\":1}"}},"contracts/connectors/UniswapV3Connector.sol":{"UniswapV3Connector":{"abi":[{"inputs":[{"internalType":"address","name":"_uniswapV3Router","type":"address"}],"stateMutability":"nonpayable","type":"constructor"}],"evm":{"bytecode":{"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:326:33","statements":[{"nodeType":"YulBlock","src":"6:3:33","statements":[]},{"body":{"nodeType":"YulBlock","src":"95:229:33","statements":[{"body":{"nodeType":"YulBlock","src":"141:26:33","statements":[{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"150:6:33"},{"name":"value0","nodeType":"YulIdentifier","src":"158:6:33"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"143:6:33"},"nodeType":"YulFunctionCall","src":"143:22:33"},"nodeType":"YulExpressionStatement","src":"143:22:33"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"116:7:33"},{"name":"headStart","nodeType":"YulIdentifier","src":"125:9:33"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"112:3:33"},"nodeType":"YulFunctionCall","src":"112:23:33"},{"kind":"number","nodeType":"YulLiteral","src":"137:2:33","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"108:3:33"},"nodeType":"YulFunctionCall","src":"108:32:33"},"nodeType":"YulIf","src":"105:2:33"},{"nodeType":"YulVariableDeclaration","src":"176:29:33","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"195:9:33"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"189:5:33"},"nodeType":"YulFunctionCall","src":"189:16:33"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"180:5:33","type":""}]},{"body":{"nodeType":"YulBlock","src":"268:26:33","statements":[{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"277:6:33"},{"name":"value0","nodeType":"YulIdentifier","src":"285:6:33"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"270:6:33"},"nodeType":"YulFunctionCall","src":"270:22:33"},"nodeType":"YulExpressionStatement","src":"270:22:33"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"227:5:33"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"238:5:33"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"253:3:33","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"258:1:33","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"249:3:33"},"nodeType":"YulFunctionCall","src":"249:11:33"},{"kind":"number","nodeType":"YulLiteral","src":"262:1:33","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"245:3:33"},"nodeType":"YulFunctionCall","src":"245:19:33"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"234:3:33"},"nodeType":"YulFunctionCall","src":"234:31:33"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"224:2:33"},"nodeType":"YulFunctionCall","src":"224:42:33"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"217:6:33"},"nodeType":"YulFunctionCall","src":"217:50:33"},"nodeType":"YulIf","src":"214:2:33"},{"nodeType":"YulAssignment","src":"303:15:33","value":{"name":"value","nodeType":"YulIdentifier","src":"313:5:33"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"303:6:33"}]}]},"name":"abi_decode_tuple_t_address_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"61:9:33","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"72:7:33","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"84:6:33","type":""}],"src":"14:310:33"}]},"contents":"{\n    { }\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        let value := mload(headStart)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(value0, value0) }\n        value0 := value\n    }\n}","id":33,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"60a0604052348015600f57600080fd5b5060405160c138038060c1833981016040819052602a91603e565b60601b6001600160601b031916608052606a565b600060208284031215604e578081fd5b81516001600160a01b03811681146063578182fd5b9392505050565b60805160601c603f608260003960005050603f6000f3fe6080604052600080fdfea2646970667358221220f5835104d739562f28e08ac5e4356b66483a6128a0e2eea8a0da3326a1b4d75c64736f6c63430008030033","opcodes":"PUSH1 0xA0 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH1 0xC1 CODESIZE SUB DUP1 PUSH1 0xC1 DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH1 0x2A SWAP2 PUSH1 0x3E JUMP JUMPDEST PUSH1 0x60 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB NOT AND PUSH1 0x80 MSTORE PUSH1 0x6A JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH1 0x4E JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH1 0x63 JUMPI DUP2 DUP3 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH1 0x60 SHR PUSH1 0x3F PUSH1 0x82 PUSH1 0x0 CODECOPY PUSH1 0x0 POP POP PUSH1 0x3F PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CREATE2 DUP4 MLOAD DIV 0xD7 CODECOPY JUMP 0x2F 0x28 0xE0 DUP11 0xC5 0xE4 CALLDATALOAD PUSH12 0x66483A6128A0E2EEA8A0DA33 0x26 LOG1 0xB4 0xD7 0x5C PUSH5 0x736F6C6343 STOP ADDMOD SUB STOP CALLER ","sourceMap":"1326:5810:28:-:0;;;1806:102;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1854:47;;-1:-1:-1;;;;;;1854:47:28;;;1326:5810;;14:310:33;;137:2;125:9;116:7;112:23;108:32;105:2;;;158:6;150;143:22;105:2;189:16;;-1:-1:-1;;;;;234:31:33;;224:42;;214:2;;285:6;277;270:22;214:2;313:5;95:229;-1:-1:-1;;;95:229:33:o;:::-;1326:5810:28;;;;;;;;;;;;"},"deployedBytecode":{"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"6080604052600080fdfea2646970667358221220f5835104d739562f28e08ac5e4356b66483a6128a0e2eea8a0da3326a1b4d75c64736f6c63430008030033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CREATE2 DUP4 MLOAD DIV 0xD7 CODECOPY JUMP 0x2F 0x28 0xE0 DUP11 0xC5 0xE4 CALLDATALOAD PUSH12 0x66483A6128A0E2EEA8A0DA33 0x26 LOG1 0xB4 0xD7 0x5C PUSH5 0x736F6C6343 STOP ADDMOD SUB STOP CALLER ","sourceMap":"1326:5810:28:-:0;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.3+commit.8d00100c\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_uniswapV3Router\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"}],\"devdoc\":{\"details\":\"Interfaces with Uniswap V3 to swap tokens\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the UniswapV3Connector contract\",\"params\":{\"_uniswapV3Router\":\"Uniswap V3 router reference\"}}},\"title\":\"UniswapV3Connector\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/connectors/UniswapV3Connector.sol\":\"UniswapV3Connector\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":10000},\"remappings\":[]},\"sources\":{\"@mimic-fi/v2-helpers/contracts/math/UncheckedMath.sol\":{\"keccak256\":\"0x0521515cc3d9bb160250175613575c85286db3f308f522dc98bbf637efa78bfb\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://acd315fd1ef1d6408682ba6f7943470361baefff1a5675da40aab21673e42b55\",\"dweb:/ipfs/QmSg9WHAMVLk9i2rR8DQSomXLaKBW9gWcTRAwzbdxMLU7h\"]},\"@mimic-fi/v2-helpers/contracts/utils/Arrays.sol\":{\"keccak256\":\"0x369b3db3de25b981dcf879c6c5e46f709bb1cd356a876599ebee1d9a5d680fc0\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://6b9355a89b1acdbe8d4e26b74da1995b400a15a08372e07eeaa1ff2c939b66ba\",\"dweb:/ipfs/QmdHFHEu3DXXK6CNfHXY4J2j8KC3bQxLZgPssrttNYwS56\"]},\"@mimic-fi/v2-helpers/contracts/utils/Bytes.sol\":{\"keccak256\":\"0xb354327b816ba2f9934fabe96b26aff0376f6cc6bb4cbd2b2ad61bfe35b8e43a\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://8d512e742720f564112735dfb1d7e2057c534608f2ab5813e439ca4d8d808e3a\",\"dweb:/ipfs/QmbW9MwYR4JAP1UQ56MLH743vHsByFHAv7sszkduu5G8bD\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol\":{\"keccak256\":\"0xf41ca991f30855bf80ffd11e9347856a517b977f0a6c2d52e6421a99b7840329\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b2717fd2bdac99daa960a6de500754ea1b932093c946388c381da48658234b95\",\"dweb:/ipfs/QmP6QVMn6UeA3ByahyJbYQr5M6coHKBKsf3ySZSfbyA8R7\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x032807210d1d7d218963d7355d62e021a84bf1b3339f4f50be2f63b53cccaf29\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://11756f42121f6541a35a8339ea899ee7514cfaa2e6d740625fcc844419296aa6\",\"dweb:/ipfs/QmekMuk6BY4DAjzeXr4MSbKdgoqqsZnA8JPtuyWc6CwXHf\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xd6153ce99bcdcce22b124f755e72553295be6abcd63804cfdffceb188b8bef10\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://35c47bece3c03caaa07fab37dd2bb3413bfbca20db7bd9895024390e0a469487\",\"dweb:/ipfs/QmPGWT2x3QHcKxqe6gRmAkdakhbaRgx3DLzcakHz5M4eXG\"]},\"@uniswap/v3-core/contracts/interfaces/IUniswapV3Factory.sol\":{\"keccak256\":\"0xcc3d0c93fc9ac0febbe09f941b465b57f750bcf3b48432da0b97dc289cfdc489\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://b9379ad954680c44a0bc523b314ae4c4da735f9fe1d02aa56ea5bdba6f1136f2\",\"dweb:/ipfs/QmZXdgQNXKAckrXWz9R3mc47F1fvDvr28a2ewJrwNAw71B\"]},\"@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol\":{\"keccak256\":\"0x3f485fb1a44e8fbeadefb5da07d66edab3cfe809f0ac4074b1e54e3eb3c4cf69\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://095ce0626b41318c772b3ebf19d548282607f6a8f3d6c41c13edfbd5370c8652\",\"dweb:/ipfs/QmVDZfJJ89UUCE1hMyzqpkZAtQ8jUsBgZNE5AMRG7RzRFS\"]},\"@uniswap/v3-periphery/contracts/interfaces/IPeripheryImmutableState.sol\":{\"keccak256\":\"0x7affcfeb5127c0925a71d6a65345e117c33537523aeca7bc98085ead8452519d\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://e16b291294210e71cb0f20cd0afe62ae2dc6878d627f5ccc19c4dc9cd80aec3f\",\"dweb:/ipfs/QmQGitSyBr26nour81BZmpmDMyJpvZRqHQZvnCD1Acb127\"]},\"@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol\":{\"keccak256\":\"0x9bfaf1feb32814623e627ab70f2409760b15d95f1f9b058e2b3399a8bb732975\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://a8a2c3e55965b61bcd91993d8e1d5d34b8b8a63e0fdfce87a85f6af92526fd53\",\"dweb:/ipfs/QmQj2CSCSwqDSU4KMNWxGsN2336Cy64WgpV1X1EHXNZWxM\"]},\"contracts/connectors/UniswapV3Connector.sol\":{\"keccak256\":\"0x78881f74a40bcfe403e1c6353125ac1f434bbcbddf2bf81fedd00d189dd3729c\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://30ddf83e63359f6b5d9f0e7615f03b36a556127758581d53fbf705a9e33e60d3\",\"dweb:/ipfs/QmS1BVRaBTVbKBbUGmRHoEbmSJz6LDETaMQE8yQ329uBzb\"]}},\"version\":1}"}},"contracts/interfaces/IBalancerV2Vault.sol":{"IBalancerV2Vault":{"abi":[{"inputs":[{"internalType":"enum IBalancerV2Vault.SwapKind","name":"kind","type":"uint8"},{"components":[{"internalType":"bytes32","name":"poolId","type":"bytes32"},{"internalType":"uint256","name":"assetInIndex","type":"uint256"},{"internalType":"uint256","name":"assetOutIndex","type":"uint256"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"bytes","name":"userData","type":"bytes"}],"internalType":"struct IBalancerV2Vault.BatchSwapStep[]","name":"swaps","type":"tuple[]"},{"internalType":"address[]","name":"assets","type":"address[]"},{"components":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"bool","name":"fromInternalBalance","type":"bool"},{"internalType":"address payable","name":"recipient","type":"address"},{"internalType":"bool","name":"toInternalBalance","type":"bool"}],"internalType":"struct IBalancerV2Vault.FundManagement","name":"funds","type":"tuple"},{"internalType":"int256[]","name":"limits","type":"int256[]"},{"internalType":"uint256","name":"deadline","type":"uint256"}],"name":"batchSwap","outputs":[{"internalType":"int256[]","name":"","type":"int256[]"}],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"poolId","type":"bytes32"}],"name":"getPool","outputs":[{"internalType":"address","name":"","type":"address"},{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"poolId","type":"bytes32"}],"name":"getPoolTokens","outputs":[{"internalType":"address[]","name":"tokens","type":"address[]"},{"internalType":"uint256[]","name":"balances","type":"uint256[]"},{"internalType":"uint256","name":"lastChangeBlock","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"components":[{"internalType":"bytes32","name":"poolId","type":"bytes32"},{"internalType":"enum IBalancerV2Vault.SwapKind","name":"kind","type":"uint8"},{"internalType":"address","name":"assetIn","type":"address"},{"internalType":"address","name":"assetOut","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"bytes","name":"userData","type":"bytes"}],"internalType":"struct IBalancerV2Vault.SingleSwap","name":"singleSwap","type":"tuple"},{"components":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"bool","name":"fromInternalBalance","type":"bool"},{"internalType":"address payable","name":"recipient","type":"address"},{"internalType":"bool","name":"toInternalBalance","type":"bool"}],"internalType":"struct IBalancerV2Vault.FundManagement","name":"funds","type":"tuple"},{"internalType":"uint256","name":"limit","type":"uint256"},{"internalType":"uint256","name":"deadline","type":"uint256"}],"name":"swap","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"payable","type":"function"}],"evm":{"bytecode":{"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"batchSwap(uint8,(bytes32,uint256,uint256,uint256,bytes)[],address[],(address,bool,address,bool),int256[],uint256)":"945bcec9","getPool(bytes32)":"f6c00927","getPoolTokens(bytes32)":"f94d4668","swap((bytes32,uint8,address,address,uint256,bytes),(address,bool,address,bool),uint256,uint256)":"52bbbe29"}},"metadata":"{\"compiler\":{\"version\":\"0.8.3+commit.8d00100c\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"enum IBalancerV2Vault.SwapKind\",\"name\":\"kind\",\"type\":\"uint8\"},{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"poolId\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"assetInIndex\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"assetOutIndex\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"userData\",\"type\":\"bytes\"}],\"internalType\":\"struct IBalancerV2Vault.BatchSwapStep[]\",\"name\":\"swaps\",\"type\":\"tuple[]\"},{\"internalType\":\"address[]\",\"name\":\"assets\",\"type\":\"address[]\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"fromInternalBalance\",\"type\":\"bool\"},{\"internalType\":\"address payable\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"toInternalBalance\",\"type\":\"bool\"}],\"internalType\":\"struct IBalancerV2Vault.FundManagement\",\"name\":\"funds\",\"type\":\"tuple\"},{\"internalType\":\"int256[]\",\"name\":\"limits\",\"type\":\"int256[]\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"batchSwap\",\"outputs\":[{\"internalType\":\"int256[]\",\"name\":\"\",\"type\":\"int256[]\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"poolId\",\"type\":\"bytes32\"}],\"name\":\"getPool\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"poolId\",\"type\":\"bytes32\"}],\"name\":\"getPoolTokens\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"tokens\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"balances\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256\",\"name\":\"lastChangeBlock\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"poolId\",\"type\":\"bytes32\"},{\"internalType\":\"enum IBalancerV2Vault.SwapKind\",\"name\":\"kind\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"assetIn\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"assetOut\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"userData\",\"type\":\"bytes\"}],\"internalType\":\"struct IBalancerV2Vault.SingleSwap\",\"name\":\"singleSwap\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"fromInternalBalance\",\"type\":\"bool\"},{\"internalType\":\"address payable\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"toInternalBalance\",\"type\":\"bool\"}],\"internalType\":\"struct IBalancerV2Vault.FundManagement\",\"name\":\"funds\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"limit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swap\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/IBalancerV2Vault.sol\":\"IBalancerV2Vault\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":10000},\"remappings\":[]},\"sources\":{\"contracts/interfaces/IBalancerV2Vault.sol\":{\"keccak256\":\"0xd489492d96e7f466fbf543d85d55a2f05a2742651ef09bd20aa0ca5a623fe0a0\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://0e3ad7ee96966997abcafadff76053cf4c7db583ff7d7450c2827802ec45195d\",\"dweb:/ipfs/QmTv1Kp5vrGDR9o5RrHLQ3ubGgaPWsDJaoG5kMoqsUpx1q\"]}},\"version\":1}"}},"contracts/interfaces/IHopSwap.sol":{"IHopSwap":{"abi":[{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"getTokenIndex","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint8","name":"tokenIndexFrom","type":"uint8"},{"internalType":"uint8","name":"tokenIndexTo","type":"uint8"},{"internalType":"uint256","name":"dx","type":"uint256"},{"internalType":"uint256","name":"minDy","type":"uint256"},{"internalType":"uint256","name":"deadline","type":"uint256"}],"name":"swap","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"getTokenIndex(address)":"66c0bd24","swap(uint8,uint8,uint256,uint256,uint256)":"91695586"}},"metadata":"{\"compiler\":{\"version\":\"0.8.3+commit.8d00100c\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"getTokenIndex\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"tokenIndexFrom\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"tokenIndexTo\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"dx\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minDy\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swap\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/IHopSwap.sol\":\"IHopSwap\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":10000},\"remappings\":[]},\"sources\":{\"contracts/interfaces/IHopSwap.sol\":{\"keccak256\":\"0x24ba9897e89ca22ad5478c557019e9cecab51a2e6dce35bc0620a176324365b7\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://a5c4c0624794093523fb1a507764d2d7a11af9a84176ab7d0beb180f2fd3a162\",\"dweb:/ipfs/QmYVovnSuBxSZgShQoceixeWbRrKcUPL9c64YmBemxrbj8\"]}},\"version\":1}"}},"contracts/interfaces/IOneInchV5AggregationRouter.sol":{"IAggregationExecutor":{"abi":[{"inputs":[{"internalType":"address","name":"msgSender","type":"address"}],"name":"execute","outputs":[],"stateMutability":"payable","type":"function"}],"evm":{"bytecode":{"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"execute(address)":"4b64e492"}},"metadata":"{\"compiler\":{\"version\":\"0.8.3+commit.8d00100c\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"msgSender\",\"type\":\"address\"}],\"name\":\"execute\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"execute(address)\":{\"notice\":\"propagates information about original msg.sender and executes arbitrary data\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/IOneInchV5AggregationRouter.sol\":\"IAggregationExecutor\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":10000},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"contracts/interfaces/IOneInchV5AggregationRouter.sol\":{\"keccak256\":\"0x6b2d3d4d9cbc3ac7bff1a3e9e8160189ad75388bc92f7d754758afe2e2f092ce\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://e444b9b7cf7f5b3d4bbc80d7161c64177ae68777be7fef5b475c6c86fa6c9209\",\"dweb:/ipfs/QmTUUV6nbDnVYkzJTgRCEKBRN7faeXjVG4Sbs2gxx2yvFk\"]}},\"version\":1}"},"IOneInchV5AggregationRouter":{"abi":[{"inputs":[{"internalType":"contract IAggregationExecutor","name":"executor","type":"address"},{"components":[{"internalType":"contract IERC20","name":"srcToken","type":"address"},{"internalType":"contract IERC20","name":"dstToken","type":"address"},{"internalType":"address payable","name":"srcReceiver","type":"address"},{"internalType":"address payable","name":"dstReceiver","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"uint256","name":"minReturnAmount","type":"uint256"},{"internalType":"uint256","name":"flags","type":"uint256"}],"internalType":"struct IOneInchV5AggregationRouter.SwapDescription","name":"desc","type":"tuple"},{"internalType":"bytes","name":"permit","type":"bytes"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"swap","outputs":[{"internalType":"uint256","name":"returnAmount","type":"uint256"},{"internalType":"uint256","name":"spentAmount","type":"uint256"}],"stateMutability":"payable","type":"function"}],"evm":{"bytecode":{"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"swap(address,(address,address,address,address,uint256,uint256,uint256),bytes,bytes)":"12aa3caf"}},"metadata":"{\"compiler\":{\"version\":\"0.8.3+commit.8d00100c\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract IAggregationExecutor\",\"name\":\"executor\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"contract IERC20\",\"name\":\"srcToken\",\"type\":\"address\"},{\"internalType\":\"contract IERC20\",\"name\":\"dstToken\",\"type\":\"address\"},{\"internalType\":\"address payable\",\"name\":\"srcReceiver\",\"type\":\"address\"},{\"internalType\":\"address payable\",\"name\":\"dstReceiver\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minReturnAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"flags\",\"type\":\"uint256\"}],\"internalType\":\"struct IOneInchV5AggregationRouter.SwapDescription\",\"name\":\"desc\",\"type\":\"tuple\"},{\"internalType\":\"bytes\",\"name\":\"permit\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"swap\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"returnAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"spentAmount\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"swap(address,(address,address,address,address,uint256,uint256,uint256),bytes,bytes)\":{\"details\":\"router keeps 1 wei of every token on the contract balance for gas optimisations reasons. This affects first swap of every token by leaving 1 wei on the contract.\",\"params\":{\"data\":\"Encoded calls that `caller` should execute in between of swaps\",\"desc\":\"Swap description\",\"executor\":\"Aggregation executor that executes calls described in `data`\",\"permit\":\"Should contain valid permit that can be used in `IERC20Permit.permit` calls.\"},\"returns\":{\"returnAmount\":\"Resulting token amount\",\"spentAmount\":\"Source token amount\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"swap(address,(address,address,address,address,uint256,uint256,uint256),bytes,bytes)\":{\"notice\":\"Performs a swap, delegating all calls encoded in `data` to `executor`. See tests for usage examples\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/IOneInchV5AggregationRouter.sol\":\"IOneInchV5AggregationRouter\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":10000},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"contracts/interfaces/IOneInchV5AggregationRouter.sol\":{\"keccak256\":\"0x6b2d3d4d9cbc3ac7bff1a3e9e8160189ad75388bc92f7d754758afe2e2f092ce\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://e444b9b7cf7f5b3d4bbc80d7161c64177ae68777be7fef5b475c6c86fa6c9209\",\"dweb:/ipfs/QmTUUV6nbDnVYkzJTgRCEKBRN7faeXjVG4Sbs2gxx2yvFk\"]}},\"version\":1}"}},"contracts/interfaces/IParaswapV5Augustus.sol":{"IParaswapV5Augustus":{"abi":[{"inputs":[],"name":"getTokenTransferProxy","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"getTokenTransferProxy()":"d2c4b598"}},"metadata":"{\"compiler\":{\"version\":\"0.8.3+commit.8d00100c\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"getTokenTransferProxy\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/IParaswapV5Augustus.sol\":\"IParaswapV5Augustus\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":10000},\"remappings\":[]},\"sources\":{\"contracts/interfaces/IParaswapV5Augustus.sol\":{\"keccak256\":\"0xe2893d66c064791d1fd0aa102565cad6ef2b141007dfb3a90ee8b02ace35deb9\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://94c1eba11b3553cce212795afddc713946b8939068aaae2c631d219b3457a54d\",\"dweb:/ipfs/QmYpZpxW6ADtYA4qPsqDJg92gn2YdmZwr9K1scoXHNPm3s\"]}},\"version\":1}"}}}}}