{"id":"2af2c900a2e63b94d8748a716a370c32","_format":"hh-sol-build-info-1","solcVersion":"0.8.3","solcLongVersion":"0.8.3+commit.8d00100c","input":{"language":"Solidity","sources":{"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\ninterface AggregatorV3Interface {\n  function decimals() external view returns (uint8);\n\n  function description() external view returns (string memory);\n\n  function version() external view returns (uint256);\n\n  // getRoundData and latestRoundData should both raise \"No data present\"\n  // if they do not have data to report, instead of returning unset values\n  // which could be misinterpreted as actual reported values.\n  function getRoundData(uint80 _roundId)\n    external\n    view\n    returns (\n      uint80 roundId,\n      int256 answer,\n      uint256 startedAt,\n      uint256 updatedAt,\n      uint80 answeredInRound\n    );\n\n  function latestRoundData()\n    external\n    view\n    returns (\n      uint80 roundId,\n      int256 answer,\n      uint256 startedAt,\n      uint256 updatedAt,\n      uint80 answeredInRound\n    );\n}\n"},"@mimic-fi/v2-helpers/contracts/auth/IAuthorizer.sol":{"content":"// SPDX-License-Identifier: GPL-3.0-or-later\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n\n// You should have received a copy of the GNU General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\npragma solidity >=0.8.0;\n\n/**\n * @title IAuthorizer\n */\ninterface IAuthorizer {\n    /**\n     * @dev Emitted when an account is authorized to call a function\n     */\n    event Authorized(address indexed who, bytes4 what);\n\n    /**\n     * @dev Emitted when an account is unauthorized to call a function\n     */\n    event Unauthorized(address indexed who, bytes4 what);\n\n    /**\n     * @dev Authorizes someone to call a function. Sender must be authorize to do so.\n     * @param who Address to be authorized\n     * @param what Function selector to be granted\n     */\n    function authorize(address who, bytes4 what) external;\n\n    /**\n     * @dev Unauthorizes someone to call a function. Sender must be authorize to do so.\n     * @param who Address to be unauthorized\n     * @param what Function selector to be revoked\n     */\n    function unauthorize(address who, bytes4 what) external;\n\n    /**\n     * @dev Tells whether someone is allowed to call a function or not. It returns true if it's allowed to anyone.\n     * @param who Address asking permission for\n     * @param what Function selector asking permission for\n     */\n    function isAuthorized(address who, bytes4 what) external view returns (bool);\n}\n"},"@mimic-fi/v2-helpers/contracts/math/FixedPoint.sol":{"content":"// SPDX-License-Identifier: GPL-3.0-or-later\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n\n// You should have received a copy of the GNU General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\npragma solidity ^0.8.0;\n\n/**\n * @title FixedPoint\n * @dev Math library to operate with fixed point values with 18 decimals\n */\nlibrary FixedPoint {\n    // 1 in fixed point value: 18 decimal places\n    uint256 internal constant ONE = 1e18;\n\n    /**\n     * @dev Multiplies two fixed point numbers rounding down\n     */\n    function mulDown(uint256 a, uint256 b) internal pure returns (uint256) {\n        unchecked {\n            uint256 product = a * b;\n            require(a == 0 || product / a == b, 'MUL_OVERFLOW');\n            return product / ONE;\n        }\n    }\n\n    /**\n     * @dev Multiplies two fixed point numbers rounding up\n     */\n    function mulUp(uint256 a, uint256 b) internal pure returns (uint256) {\n        unchecked {\n            uint256 product = a * b;\n            require(a == 0 || product / a == b, 'MUL_OVERFLOW');\n            return product == 0 ? 0 : (((product - 1) / ONE) + 1);\n        }\n    }\n\n    /**\n     * @dev Divides two fixed point numbers rounding down\n     */\n    function divDown(uint256 a, uint256 b) internal pure returns (uint256) {\n        unchecked {\n            require(b != 0, 'ZERO_DIVISION');\n            if (a == 0) return 0;\n            uint256 aInflated = a * ONE;\n            require(aInflated / a == ONE, 'DIV_INTERNAL');\n            return aInflated / b;\n        }\n    }\n\n    /**\n     * @dev Divides two fixed point numbers rounding up\n     */\n    function divUp(uint256 a, uint256 b) internal pure returns (uint256) {\n        unchecked {\n            require(b != 0, 'ZERO_DIVISION');\n            if (a == 0) return 0;\n            uint256 aInflated = a * ONE;\n            require(aInflated / a == ONE, 'DIV_INTERNAL');\n            return ((aInflated - 1) / b) + 1;\n        }\n    }\n}\n"},"@mimic-fi/v2-helpers/contracts/math/UncheckedMath.sol":{"content":"// SPDX-License-Identifier: GPL-3.0-or-later\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n\n// You should have received a copy of the GNU General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\npragma solidity ^0.8.0;\n\n/**\n * @title UncheckedMath\n * @dev Math library to perform unchecked operations\n */\nlibrary UncheckedMath {\n    /**\n     * @dev Unsafely adds two unsigned integers\n     */\n    function uncheckedAdd(uint256 a, uint256 b) internal pure returns (uint256) {\n        unchecked {\n            return a + b;\n        }\n    }\n\n    /**\n     * @dev Unsafely subtracts two unsigned integers\n     */\n    function uncheckedSub(uint256 a, uint256 b) internal pure returns (uint256) {\n        unchecked {\n            return a - b;\n        }\n    }\n\n    /**\n     * @dev Unsafely multiplies two unsigned integers\n     */\n    function uncheckedMul(uint256 a, uint256 b) internal pure returns (uint256) {\n        unchecked {\n            return a * b;\n        }\n    }\n\n    /**\n     * @dev Unsafely multiplies two signed integers\n     */\n    function uncheckedMul(int256 a, int256 b) internal pure returns (int256) {\n        unchecked {\n            return a * b;\n        }\n    }\n\n    /**\n     * @dev Unsafely divides two unsigned integers\n     */\n    function uncheckedDiv(uint256 a, uint256 b) internal pure returns (uint256) {\n        unchecked {\n            return a / b;\n        }\n    }\n}\n"},"@mimic-fi/v2-registry/contracts/implementations/BaseImplementation.sol":{"content":"// SPDX-License-Identifier: GPL-3.0-or-later\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n\n// You should have received a copy of the GNU General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\npragma solidity ^0.8.0;\n\nimport '@openzeppelin/contracts/proxy/utils/Initializable.sol';\n\nimport './IImplementation.sol';\nimport '../registry/IRegistry.sol';\n\n/**\n * @title BaseImplementation\n * @dev This implementation contract comes with an immutable reference to an implementations registry where it should\n * be registered as well (checked during initialization). It allows requesting new instances of other registered\n * implementations to as another safety check to make sure valid instances are referenced in case it's needed.\n */\nabstract contract BaseImplementation is IImplementation {\n    // Immutable implementations registry reference\n    address public immutable override registry;\n\n    /**\n     * @dev Creates a new BaseImplementation\n     * @param _registry Address of the Mimic Registry where dependencies will be validated against\n     */\n    constructor(address _registry) {\n        registry = _registry;\n    }\n\n    /**\n     * @dev Internal function to validate a new dependency that must be registered as stateless.\n     * It checks the new dependency is registered, not deprecated, and stateless.\n     * @param dependency New stateless dependency to be set\n     */\n    function _validateStatelessDependency(address dependency) internal view {\n        require(_validateDependency(dependency), 'DEPENDENCY_NOT_STATELESS');\n    }\n\n    /**\n     * @dev Internal function to validate a new dependency that cannot be registered as stateless.\n     * It checks the new dependency is registered, not deprecated, and not stateful.\n     * @param dependency New stateful dependency to be set\n     */\n    function _validateStatefulDependency(address dependency) internal view {\n        require(!_validateDependency(dependency), 'DEPENDENCY_NOT_STATEFUL');\n    }\n\n    /**\n     * @dev Internal function to validate a new dependency. It checks the dependency is registered and not deprecated.\n     * @param dependency New dependency to be set\n     * @return Whether the dependency is stateless or not\n     */\n    function _validateDependency(address dependency) private view returns (bool) {\n        (bool stateless, bool deprecated, bytes32 namespace) = IRegistry(registry).implementationData(dependency);\n        require(namespace != bytes32(0), 'DEPENDENCY_NOT_REGISTERED');\n        require(!deprecated, 'DEPENDENCY_DEPRECATED');\n        return stateless;\n    }\n}\n"},"@mimic-fi/v2-registry/contracts/implementations/IImplementation.sol":{"content":"// SPDX-License-Identifier: GPL-3.0-or-later\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n\n// You should have received a copy of the GNU General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\npragma solidity >=0.8.0;\n\n// solhint-disable func-name-mixedcase\n\n/**\n * @title IImplementation\n * @dev Implementation interface that must be followed for implementations to be registered in the Mimic Registry\n */\ninterface IImplementation {\n    /**\n     * @dev Tells the namespace under which the implementation is registered in the Mimic Registry\n     */\n    function NAMESPACE() external view returns (bytes32);\n\n    /**\n     * @dev Tells the address of the Mimic Registry\n     */\n    function registry() external view returns (address);\n}\n"},"@mimic-fi/v2-registry/contracts/registry/IRegistry.sol":{"content":"// SPDX-License-Identifier: GPL-3.0-or-later\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n\n// You should have received a copy of the GNU General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\npragma solidity >=0.8.0;\n\nimport '@mimic-fi/v2-helpers/contracts/auth/IAuthorizer.sol';\n\n/**\n * @title IRegistry\n * @dev Registry interface, it must follow the IAuthorizer interface.\n */\ninterface IRegistry is IAuthorizer {\n    /**\n     * @dev Emitted every time a new implementation is registered\n     */\n    event Registered(bytes32 indexed namespace, address indexed implementation, bool stateless);\n\n    /**\n     * @dev Emitted every time an implementation is deprecated\n     */\n    event Deprecated(bytes32 indexed namespace, address indexed implementation);\n\n    /**\n     * @dev Tells the data of an implementation:\n     * @param implementation Address of the implementation to request it's data\n     */\n    function implementationData(address implementation)\n        external\n        view\n        returns (bool stateless, bool deprecated, bytes32 namespace);\n\n    /**\n     * @dev Tells if a specific implementation is registered under a certain namespace and it's not deprecated\n     * @param namespace Namespace asking for\n     * @param implementation Address of the implementation to be checked\n     */\n    function isActive(bytes32 namespace, address implementation) external view returns (bool);\n\n    /**\n     * @dev Registers a new implementation for a given namespace\n     * @param namespace Namespace to be used for the implementation\n     * @param implementation Address of the implementation to be registered\n     * @param stateless Whether the implementation is stateless or not\n     */\n    function register(bytes32 namespace, address implementation, bool stateless) external;\n\n    /**\n     * @dev Deprecates a registered implementation\n     * @param implementation Address of the implementation to be deprecated\n     */\n    function deprecate(address implementation) external;\n}\n"},"@openzeppelin/contracts/proxy/utils/Initializable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.7.0) (proxy/utils/Initializable.sol)\n\npragma solidity ^0.8.2;\n\nimport \"../../utils/Address.sol\";\n\n/**\n * @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\n * behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\n * external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\n * function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\n *\n * The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\n * reused. This mechanism prevents re-execution of each \"step\" but allows the creation of new initialization steps in\n * case an upgrade adds a module that needs to be initialized.\n *\n * For example:\n *\n * [.hljs-theme-light.nopadding]\n * ```\n * contract MyToken is ERC20Upgradeable {\n *     function initialize() initializer public {\n *         __ERC20_init(\"MyToken\", \"MTK\");\n *     }\n * }\n * contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\n *     function initializeV2() reinitializer(2) public {\n *         __ERC20Permit_init(\"MyToken\");\n *     }\n * }\n * ```\n *\n * TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\n * possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\n *\n * CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\n * that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\n *\n * [CAUTION]\n * ====\n * Avoid leaving a contract uninitialized.\n *\n * An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\n * contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\n * the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\n *\n * [.hljs-theme-light.nopadding]\n * ```\n * /// @custom:oz-upgrades-unsafe-allow constructor\n * constructor() {\n *     _disableInitializers();\n * }\n * ```\n * ====\n */\nabstract contract Initializable {\n    /**\n     * @dev Indicates that the contract has been initialized.\n     * @custom:oz-retyped-from bool\n     */\n    uint8 private _initialized;\n\n    /**\n     * @dev Indicates that the contract is in the process of being initialized.\n     */\n    bool private _initializing;\n\n    /**\n     * @dev Triggered when the contract has been initialized or reinitialized.\n     */\n    event Initialized(uint8 version);\n\n    /**\n     * @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\n     * `onlyInitializing` functions can be used to initialize parent contracts. Equivalent to `reinitializer(1)`.\n     */\n    modifier initializer() {\n        bool isTopLevelCall = !_initializing;\n        require(\n            (isTopLevelCall && _initialized < 1) || (!Address.isContract(address(this)) && _initialized == 1),\n            \"Initializable: contract is already initialized\"\n        );\n        _initialized = 1;\n        if (isTopLevelCall) {\n            _initializing = true;\n        }\n        _;\n        if (isTopLevelCall) {\n            _initializing = false;\n            emit Initialized(1);\n        }\n    }\n\n    /**\n     * @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\n     * contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\n     * used to initialize parent contracts.\n     *\n     * `initializer` is equivalent to `reinitializer(1)`, so a reinitializer may be used after the original\n     * initialization step. This is essential to configure modules that are added through upgrades and that require\n     * initialization.\n     *\n     * Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\n     * a contract, executing them in the right order is up to the developer or operator.\n     */\n    modifier reinitializer(uint8 version) {\n        require(!_initializing && _initialized < version, \"Initializable: contract is already initialized\");\n        _initialized = version;\n        _initializing = true;\n        _;\n        _initializing = false;\n        emit Initialized(version);\n    }\n\n    /**\n     * @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\n     * {initializer} and {reinitializer} modifiers, directly or indirectly.\n     */\n    modifier onlyInitializing() {\n        require(_initializing, \"Initializable: contract is not initializing\");\n        _;\n    }\n\n    /**\n     * @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\n     * Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\n     * to any version. It is recommended to use this to lock implementation contracts that are designed to be called\n     * through proxies.\n     */\n    function _disableInitializers() internal virtual {\n        require(!_initializing, \"Initializable: contract is initializing\");\n        if (_initialized < type(uint8).max) {\n            _initialized = type(uint8).max;\n            emit Initialized(type(uint8).max);\n        }\n    }\n}\n"},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/extensions/IERC20Metadata.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../IERC20.sol\";\n\n/**\n * @dev Interface for the optional metadata functions from the ERC20 standard.\n *\n * _Available since v4.1._\n */\ninterface IERC20Metadata is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n"},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the amount of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the amount of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves `amount` tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Moves `amount` tokens from `from` to `to` using the\n     * allowance mechanism. `amount` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(\n        address from,\n        address to,\n        uint256 amount\n    ) external returns (bool);\n}\n"},"@openzeppelin/contracts/utils/Address.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.7.0) (utils/Address.sol)\n\npragma solidity ^0.8.1;\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary Address {\n    /**\n     * @dev Returns true if `account` is a contract.\n     *\n     * [IMPORTANT]\n     * ====\n     * It is unsafe to assume that an address for which this function returns\n     * false is an externally-owned account (EOA) and not a contract.\n     *\n     * Among others, `isContract` will return false for the following\n     * types of addresses:\n     *\n     *  - an externally-owned account\n     *  - a contract in construction\n     *  - an address where a contract will be created\n     *  - an address where a contract lived, but was destroyed\n     * ====\n     *\n     * [IMPORTANT]\n     * ====\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\n     *\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n     * constructor.\n     * ====\n     */\n    function isContract(address account) internal view returns (bool) {\n        // This method relies on extcodesize/address.code.length, which returns 0\n        // for contracts in construction, since the code is only stored at the end\n        // of the constructor execution.\n\n        return account.code.length > 0;\n    }\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        require(address(this).balance >= amount, \"Address: insufficient balance\");\n\n        (bool success, ) = recipient.call{value: amount}(\"\");\n        require(success, \"Address: unable to send value, recipient may have reverted\");\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain `call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason, it is bubbled up by this\n     * function (like regular Solidity function calls).\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionCall(target, data, \"Address: low-level call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n     * `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, value, \"Address: low-level call with value failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        require(address(this).balance >= value, \"Address: insufficient balance for call\");\n        require(isContract(target), \"Address: call to non-contract\");\n\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\n        return verifyCallResult(success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\n        return functionStaticCall(target, data, \"Address: low-level static call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal view returns (bytes memory) {\n        require(isContract(target), \"Address: static call to non-contract\");\n\n        (bool success, bytes memory returndata) = target.staticcall(data);\n        return verifyCallResult(success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionDelegateCall(target, data, \"Address: low-level delegate call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        require(isContract(target), \"Address: delegate call to non-contract\");\n\n        (bool success, bytes memory returndata) = target.delegatecall(data);\n        return verifyCallResult(success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Tool to verifies that a low level call was successful, and revert if it wasn't, either by bubbling the\n     * revert reason using the provided one.\n     *\n     * _Available since v4.3._\n     */\n    function verifyCallResult(\n        bool success,\n        bytes memory returndata,\n        string memory errorMessage\n    ) internal pure returns (bytes memory) {\n        if (success) {\n            return returndata;\n        } else {\n            // Look for revert reason and bubble it up if present\n            if (returndata.length > 0) {\n                // The easiest way to bubble the revert reason is using memory via assembly\n                /// @solidity memory-safe-assembly\n                assembly {\n                    let returndata_size := mload(returndata)\n                    revert(add(32, returndata), returndata_size)\n                }\n            } else {\n                revert(errorMessage);\n            }\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/math/SafeCast.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.7.0) (utils/math/SafeCast.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Wrappers over Solidity's uintXX/intXX casting operators with added overflow\n * checks.\n *\n * Downcasting from uint256/int256 in Solidity does not revert on overflow. This can\n * easily result in undesired exploitation or bugs, since developers usually\n * assume that overflows raise errors. `SafeCast` restores this intuition by\n * reverting the transaction when such an operation overflows.\n *\n * Using this library instead of the unchecked operations eliminates an entire\n * class of bugs, so it's recommended to use it always.\n *\n * Can be combined with {SafeMath} and {SignedSafeMath} to extend it to smaller types, by performing\n * all math on `uint256` and `int256` and then downcasting.\n */\nlibrary SafeCast {\n    /**\n     * @dev Returns the downcasted uint248 from uint256, reverting on\n     * overflow (when the input is greater than largest uint248).\n     *\n     * Counterpart to Solidity's `uint248` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 248 bits\n     *\n     * _Available since v4.7._\n     */\n    function toUint248(uint256 value) internal pure returns (uint248) {\n        require(value <= type(uint248).max, \"SafeCast: value doesn't fit in 248 bits\");\n        return uint248(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint240 from uint256, reverting on\n     * overflow (when the input is greater than largest uint240).\n     *\n     * Counterpart to Solidity's `uint240` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 240 bits\n     *\n     * _Available since v4.7._\n     */\n    function toUint240(uint256 value) internal pure returns (uint240) {\n        require(value <= type(uint240).max, \"SafeCast: value doesn't fit in 240 bits\");\n        return uint240(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint232 from uint256, reverting on\n     * overflow (when the input is greater than largest uint232).\n     *\n     * Counterpart to Solidity's `uint232` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 232 bits\n     *\n     * _Available since v4.7._\n     */\n    function toUint232(uint256 value) internal pure returns (uint232) {\n        require(value <= type(uint232).max, \"SafeCast: value doesn't fit in 232 bits\");\n        return uint232(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint224 from uint256, reverting on\n     * overflow (when the input is greater than largest uint224).\n     *\n     * Counterpart to Solidity's `uint224` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 224 bits\n     *\n     * _Available since v4.2._\n     */\n    function toUint224(uint256 value) internal pure returns (uint224) {\n        require(value <= type(uint224).max, \"SafeCast: value doesn't fit in 224 bits\");\n        return uint224(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint216 from uint256, reverting on\n     * overflow (when the input is greater than largest uint216).\n     *\n     * Counterpart to Solidity's `uint216` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 216 bits\n     *\n     * _Available since v4.7._\n     */\n    function toUint216(uint256 value) internal pure returns (uint216) {\n        require(value <= type(uint216).max, \"SafeCast: value doesn't fit in 216 bits\");\n        return uint216(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint208 from uint256, reverting on\n     * overflow (when the input is greater than largest uint208).\n     *\n     * Counterpart to Solidity's `uint208` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 208 bits\n     *\n     * _Available since v4.7._\n     */\n    function toUint208(uint256 value) internal pure returns (uint208) {\n        require(value <= type(uint208).max, \"SafeCast: value doesn't fit in 208 bits\");\n        return uint208(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint200 from uint256, reverting on\n     * overflow (when the input is greater than largest uint200).\n     *\n     * Counterpart to Solidity's `uint200` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 200 bits\n     *\n     * _Available since v4.7._\n     */\n    function toUint200(uint256 value) internal pure returns (uint200) {\n        require(value <= type(uint200).max, \"SafeCast: value doesn't fit in 200 bits\");\n        return uint200(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint192 from uint256, reverting on\n     * overflow (when the input is greater than largest uint192).\n     *\n     * Counterpart to Solidity's `uint192` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 192 bits\n     *\n     * _Available since v4.7._\n     */\n    function toUint192(uint256 value) internal pure returns (uint192) {\n        require(value <= type(uint192).max, \"SafeCast: value doesn't fit in 192 bits\");\n        return uint192(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint184 from uint256, reverting on\n     * overflow (when the input is greater than largest uint184).\n     *\n     * Counterpart to Solidity's `uint184` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 184 bits\n     *\n     * _Available since v4.7._\n     */\n    function toUint184(uint256 value) internal pure returns (uint184) {\n        require(value <= type(uint184).max, \"SafeCast: value doesn't fit in 184 bits\");\n        return uint184(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint176 from uint256, reverting on\n     * overflow (when the input is greater than largest uint176).\n     *\n     * Counterpart to Solidity's `uint176` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 176 bits\n     *\n     * _Available since v4.7._\n     */\n    function toUint176(uint256 value) internal pure returns (uint176) {\n        require(value <= type(uint176).max, \"SafeCast: value doesn't fit in 176 bits\");\n        return uint176(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint168 from uint256, reverting on\n     * overflow (when the input is greater than largest uint168).\n     *\n     * Counterpart to Solidity's `uint168` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 168 bits\n     *\n     * _Available since v4.7._\n     */\n    function toUint168(uint256 value) internal pure returns (uint168) {\n        require(value <= type(uint168).max, \"SafeCast: value doesn't fit in 168 bits\");\n        return uint168(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint160 from uint256, reverting on\n     * overflow (when the input is greater than largest uint160).\n     *\n     * Counterpart to Solidity's `uint160` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 160 bits\n     *\n     * _Available since v4.7._\n     */\n    function toUint160(uint256 value) internal pure returns (uint160) {\n        require(value <= type(uint160).max, \"SafeCast: value doesn't fit in 160 bits\");\n        return uint160(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint152 from uint256, reverting on\n     * overflow (when the input is greater than largest uint152).\n     *\n     * Counterpart to Solidity's `uint152` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 152 bits\n     *\n     * _Available since v4.7._\n     */\n    function toUint152(uint256 value) internal pure returns (uint152) {\n        require(value <= type(uint152).max, \"SafeCast: value doesn't fit in 152 bits\");\n        return uint152(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint144 from uint256, reverting on\n     * overflow (when the input is greater than largest uint144).\n     *\n     * Counterpart to Solidity's `uint144` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 144 bits\n     *\n     * _Available since v4.7._\n     */\n    function toUint144(uint256 value) internal pure returns (uint144) {\n        require(value <= type(uint144).max, \"SafeCast: value doesn't fit in 144 bits\");\n        return uint144(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint136 from uint256, reverting on\n     * overflow (when the input is greater than largest uint136).\n     *\n     * Counterpart to Solidity's `uint136` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 136 bits\n     *\n     * _Available since v4.7._\n     */\n    function toUint136(uint256 value) internal pure returns (uint136) {\n        require(value <= type(uint136).max, \"SafeCast: value doesn't fit in 136 bits\");\n        return uint136(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint128 from uint256, reverting on\n     * overflow (when the input is greater than largest uint128).\n     *\n     * Counterpart to Solidity's `uint128` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 128 bits\n     *\n     * _Available since v2.5._\n     */\n    function toUint128(uint256 value) internal pure returns (uint128) {\n        require(value <= type(uint128).max, \"SafeCast: value doesn't fit in 128 bits\");\n        return uint128(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint120 from uint256, reverting on\n     * overflow (when the input is greater than largest uint120).\n     *\n     * Counterpart to Solidity's `uint120` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 120 bits\n     *\n     * _Available since v4.7._\n     */\n    function toUint120(uint256 value) internal pure returns (uint120) {\n        require(value <= type(uint120).max, \"SafeCast: value doesn't fit in 120 bits\");\n        return uint120(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint112 from uint256, reverting on\n     * overflow (when the input is greater than largest uint112).\n     *\n     * Counterpart to Solidity's `uint112` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 112 bits\n     *\n     * _Available since v4.7._\n     */\n    function toUint112(uint256 value) internal pure returns (uint112) {\n        require(value <= type(uint112).max, \"SafeCast: value doesn't fit in 112 bits\");\n        return uint112(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint104 from uint256, reverting on\n     * overflow (when the input is greater than largest uint104).\n     *\n     * Counterpart to Solidity's `uint104` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 104 bits\n     *\n     * _Available since v4.7._\n     */\n    function toUint104(uint256 value) internal pure returns (uint104) {\n        require(value <= type(uint104).max, \"SafeCast: value doesn't fit in 104 bits\");\n        return uint104(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint96 from uint256, reverting on\n     * overflow (when the input is greater than largest uint96).\n     *\n     * Counterpart to Solidity's `uint96` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 96 bits\n     *\n     * _Available since v4.2._\n     */\n    function toUint96(uint256 value) internal pure returns (uint96) {\n        require(value <= type(uint96).max, \"SafeCast: value doesn't fit in 96 bits\");\n        return uint96(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint88 from uint256, reverting on\n     * overflow (when the input is greater than largest uint88).\n     *\n     * Counterpart to Solidity's `uint88` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 88 bits\n     *\n     * _Available since v4.7._\n     */\n    function toUint88(uint256 value) internal pure returns (uint88) {\n        require(value <= type(uint88).max, \"SafeCast: value doesn't fit in 88 bits\");\n        return uint88(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint80 from uint256, reverting on\n     * overflow (when the input is greater than largest uint80).\n     *\n     * Counterpart to Solidity's `uint80` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 80 bits\n     *\n     * _Available since v4.7._\n     */\n    function toUint80(uint256 value) internal pure returns (uint80) {\n        require(value <= type(uint80).max, \"SafeCast: value doesn't fit in 80 bits\");\n        return uint80(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint72 from uint256, reverting on\n     * overflow (when the input is greater than largest uint72).\n     *\n     * Counterpart to Solidity's `uint72` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 72 bits\n     *\n     * _Available since v4.7._\n     */\n    function toUint72(uint256 value) internal pure returns (uint72) {\n        require(value <= type(uint72).max, \"SafeCast: value doesn't fit in 72 bits\");\n        return uint72(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint64 from uint256, reverting on\n     * overflow (when the input is greater than largest uint64).\n     *\n     * Counterpart to Solidity's `uint64` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 64 bits\n     *\n     * _Available since v2.5._\n     */\n    function toUint64(uint256 value) internal pure returns (uint64) {\n        require(value <= type(uint64).max, \"SafeCast: value doesn't fit in 64 bits\");\n        return uint64(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint56 from uint256, reverting on\n     * overflow (when the input is greater than largest uint56).\n     *\n     * Counterpart to Solidity's `uint56` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 56 bits\n     *\n     * _Available since v4.7._\n     */\n    function toUint56(uint256 value) internal pure returns (uint56) {\n        require(value <= type(uint56).max, \"SafeCast: value doesn't fit in 56 bits\");\n        return uint56(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint48 from uint256, reverting on\n     * overflow (when the input is greater than largest uint48).\n     *\n     * Counterpart to Solidity's `uint48` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 48 bits\n     *\n     * _Available since v4.7._\n     */\n    function toUint48(uint256 value) internal pure returns (uint48) {\n        require(value <= type(uint48).max, \"SafeCast: value doesn't fit in 48 bits\");\n        return uint48(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint40 from uint256, reverting on\n     * overflow (when the input is greater than largest uint40).\n     *\n     * Counterpart to Solidity's `uint40` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 40 bits\n     *\n     * _Available since v4.7._\n     */\n    function toUint40(uint256 value) internal pure returns (uint40) {\n        require(value <= type(uint40).max, \"SafeCast: value doesn't fit in 40 bits\");\n        return uint40(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint32 from uint256, reverting on\n     * overflow (when the input is greater than largest uint32).\n     *\n     * Counterpart to Solidity's `uint32` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 32 bits\n     *\n     * _Available since v2.5._\n     */\n    function toUint32(uint256 value) internal pure returns (uint32) {\n        require(value <= type(uint32).max, \"SafeCast: value doesn't fit in 32 bits\");\n        return uint32(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint24 from uint256, reverting on\n     * overflow (when the input is greater than largest uint24).\n     *\n     * Counterpart to Solidity's `uint24` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 24 bits\n     *\n     * _Available since v4.7._\n     */\n    function toUint24(uint256 value) internal pure returns (uint24) {\n        require(value <= type(uint24).max, \"SafeCast: value doesn't fit in 24 bits\");\n        return uint24(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint16 from uint256, reverting on\n     * overflow (when the input is greater than largest uint16).\n     *\n     * Counterpart to Solidity's `uint16` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 16 bits\n     *\n     * _Available since v2.5._\n     */\n    function toUint16(uint256 value) internal pure returns (uint16) {\n        require(value <= type(uint16).max, \"SafeCast: value doesn't fit in 16 bits\");\n        return uint16(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint8 from uint256, reverting on\n     * overflow (when the input is greater than largest uint8).\n     *\n     * Counterpart to Solidity's `uint8` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 8 bits\n     *\n     * _Available since v2.5._\n     */\n    function toUint8(uint256 value) internal pure returns (uint8) {\n        require(value <= type(uint8).max, \"SafeCast: value doesn't fit in 8 bits\");\n        return uint8(value);\n    }\n\n    /**\n     * @dev Converts a signed int256 into an unsigned uint256.\n     *\n     * Requirements:\n     *\n     * - input must be greater than or equal to 0.\n     *\n     * _Available since v3.0._\n     */\n    function toUint256(int256 value) internal pure returns (uint256) {\n        require(value >= 0, \"SafeCast: value must be positive\");\n        return uint256(value);\n    }\n\n    /**\n     * @dev Returns the downcasted int248 from int256, reverting on\n     * overflow (when the input is less than smallest int248 or\n     * greater than largest int248).\n     *\n     * Counterpart to Solidity's `int248` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 248 bits\n     *\n     * _Available since v4.7._\n     */\n    function toInt248(int256 value) internal pure returns (int248) {\n        require(value >= type(int248).min && value <= type(int248).max, \"SafeCast: value doesn't fit in 248 bits\");\n        return int248(value);\n    }\n\n    /**\n     * @dev Returns the downcasted int240 from int256, reverting on\n     * overflow (when the input is less than smallest int240 or\n     * greater than largest int240).\n     *\n     * Counterpart to Solidity's `int240` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 240 bits\n     *\n     * _Available since v4.7._\n     */\n    function toInt240(int256 value) internal pure returns (int240) {\n        require(value >= type(int240).min && value <= type(int240).max, \"SafeCast: value doesn't fit in 240 bits\");\n        return int240(value);\n    }\n\n    /**\n     * @dev Returns the downcasted int232 from int256, reverting on\n     * overflow (when the input is less than smallest int232 or\n     * greater than largest int232).\n     *\n     * Counterpart to Solidity's `int232` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 232 bits\n     *\n     * _Available since v4.7._\n     */\n    function toInt232(int256 value) internal pure returns (int232) {\n        require(value >= type(int232).min && value <= type(int232).max, \"SafeCast: value doesn't fit in 232 bits\");\n        return int232(value);\n    }\n\n    /**\n     * @dev Returns the downcasted int224 from int256, reverting on\n     * overflow (when the input is less than smallest int224 or\n     * greater than largest int224).\n     *\n     * Counterpart to Solidity's `int224` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 224 bits\n     *\n     * _Available since v4.7._\n     */\n    function toInt224(int256 value) internal pure returns (int224) {\n        require(value >= type(int224).min && value <= type(int224).max, \"SafeCast: value doesn't fit in 224 bits\");\n        return int224(value);\n    }\n\n    /**\n     * @dev Returns the downcasted int216 from int256, reverting on\n     * overflow (when the input is less than smallest int216 or\n     * greater than largest int216).\n     *\n     * Counterpart to Solidity's `int216` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 216 bits\n     *\n     * _Available since v4.7._\n     */\n    function toInt216(int256 value) internal pure returns (int216) {\n        require(value >= type(int216).min && value <= type(int216).max, \"SafeCast: value doesn't fit in 216 bits\");\n        return int216(value);\n    }\n\n    /**\n     * @dev Returns the downcasted int208 from int256, reverting on\n     * overflow (when the input is less than smallest int208 or\n     * greater than largest int208).\n     *\n     * Counterpart to Solidity's `int208` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 208 bits\n     *\n     * _Available since v4.7._\n     */\n    function toInt208(int256 value) internal pure returns (int208) {\n        require(value >= type(int208).min && value <= type(int208).max, \"SafeCast: value doesn't fit in 208 bits\");\n        return int208(value);\n    }\n\n    /**\n     * @dev Returns the downcasted int200 from int256, reverting on\n     * overflow (when the input is less than smallest int200 or\n     * greater than largest int200).\n     *\n     * Counterpart to Solidity's `int200` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 200 bits\n     *\n     * _Available since v4.7._\n     */\n    function toInt200(int256 value) internal pure returns (int200) {\n        require(value >= type(int200).min && value <= type(int200).max, \"SafeCast: value doesn't fit in 200 bits\");\n        return int200(value);\n    }\n\n    /**\n     * @dev Returns the downcasted int192 from int256, reverting on\n     * overflow (when the input is less than smallest int192 or\n     * greater than largest int192).\n     *\n     * Counterpart to Solidity's `int192` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 192 bits\n     *\n     * _Available since v4.7._\n     */\n    function toInt192(int256 value) internal pure returns (int192) {\n        require(value >= type(int192).min && value <= type(int192).max, \"SafeCast: value doesn't fit in 192 bits\");\n        return int192(value);\n    }\n\n    /**\n     * @dev Returns the downcasted int184 from int256, reverting on\n     * overflow (when the input is less than smallest int184 or\n     * greater than largest int184).\n     *\n     * Counterpart to Solidity's `int184` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 184 bits\n     *\n     * _Available since v4.7._\n     */\n    function toInt184(int256 value) internal pure returns (int184) {\n        require(value >= type(int184).min && value <= type(int184).max, \"SafeCast: value doesn't fit in 184 bits\");\n        return int184(value);\n    }\n\n    /**\n     * @dev Returns the downcasted int176 from int256, reverting on\n     * overflow (when the input is less than smallest int176 or\n     * greater than largest int176).\n     *\n     * Counterpart to Solidity's `int176` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 176 bits\n     *\n     * _Available since v4.7._\n     */\n    function toInt176(int256 value) internal pure returns (int176) {\n        require(value >= type(int176).min && value <= type(int176).max, \"SafeCast: value doesn't fit in 176 bits\");\n        return int176(value);\n    }\n\n    /**\n     * @dev Returns the downcasted int168 from int256, reverting on\n     * overflow (when the input is less than smallest int168 or\n     * greater than largest int168).\n     *\n     * Counterpart to Solidity's `int168` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 168 bits\n     *\n     * _Available since v4.7._\n     */\n    function toInt168(int256 value) internal pure returns (int168) {\n        require(value >= type(int168).min && value <= type(int168).max, \"SafeCast: value doesn't fit in 168 bits\");\n        return int168(value);\n    }\n\n    /**\n     * @dev Returns the downcasted int160 from int256, reverting on\n     * overflow (when the input is less than smallest int160 or\n     * greater than largest int160).\n     *\n     * Counterpart to Solidity's `int160` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 160 bits\n     *\n     * _Available since v4.7._\n     */\n    function toInt160(int256 value) internal pure returns (int160) {\n        require(value >= type(int160).min && value <= type(int160).max, \"SafeCast: value doesn't fit in 160 bits\");\n        return int160(value);\n    }\n\n    /**\n     * @dev Returns the downcasted int152 from int256, reverting on\n     * overflow (when the input is less than smallest int152 or\n     * greater than largest int152).\n     *\n     * Counterpart to Solidity's `int152` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 152 bits\n     *\n     * _Available since v4.7._\n     */\n    function toInt152(int256 value) internal pure returns (int152) {\n        require(value >= type(int152).min && value <= type(int152).max, \"SafeCast: value doesn't fit in 152 bits\");\n        return int152(value);\n    }\n\n    /**\n     * @dev Returns the downcasted int144 from int256, reverting on\n     * overflow (when the input is less than smallest int144 or\n     * greater than largest int144).\n     *\n     * Counterpart to Solidity's `int144` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 144 bits\n     *\n     * _Available since v4.7._\n     */\n    function toInt144(int256 value) internal pure returns (int144) {\n        require(value >= type(int144).min && value <= type(int144).max, \"SafeCast: value doesn't fit in 144 bits\");\n        return int144(value);\n    }\n\n    /**\n     * @dev Returns the downcasted int136 from int256, reverting on\n     * overflow (when the input is less than smallest int136 or\n     * greater than largest int136).\n     *\n     * Counterpart to Solidity's `int136` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 136 bits\n     *\n     * _Available since v4.7._\n     */\n    function toInt136(int256 value) internal pure returns (int136) {\n        require(value >= type(int136).min && value <= type(int136).max, \"SafeCast: value doesn't fit in 136 bits\");\n        return int136(value);\n    }\n\n    /**\n     * @dev Returns the downcasted int128 from int256, reverting on\n     * overflow (when the input is less than smallest int128 or\n     * greater than largest int128).\n     *\n     * Counterpart to Solidity's `int128` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 128 bits\n     *\n     * _Available since v3.1._\n     */\n    function toInt128(int256 value) internal pure returns (int128) {\n        require(value >= type(int128).min && value <= type(int128).max, \"SafeCast: value doesn't fit in 128 bits\");\n        return int128(value);\n    }\n\n    /**\n     * @dev Returns the downcasted int120 from int256, reverting on\n     * overflow (when the input is less than smallest int120 or\n     * greater than largest int120).\n     *\n     * Counterpart to Solidity's `int120` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 120 bits\n     *\n     * _Available since v4.7._\n     */\n    function toInt120(int256 value) internal pure returns (int120) {\n        require(value >= type(int120).min && value <= type(int120).max, \"SafeCast: value doesn't fit in 120 bits\");\n        return int120(value);\n    }\n\n    /**\n     * @dev Returns the downcasted int112 from int256, reverting on\n     * overflow (when the input is less than smallest int112 or\n     * greater than largest int112).\n     *\n     * Counterpart to Solidity's `int112` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 112 bits\n     *\n     * _Available since v4.7._\n     */\n    function toInt112(int256 value) internal pure returns (int112) {\n        require(value >= type(int112).min && value <= type(int112).max, \"SafeCast: value doesn't fit in 112 bits\");\n        return int112(value);\n    }\n\n    /**\n     * @dev Returns the downcasted int104 from int256, reverting on\n     * overflow (when the input is less than smallest int104 or\n     * greater than largest int104).\n     *\n     * Counterpart to Solidity's `int104` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 104 bits\n     *\n     * _Available since v4.7._\n     */\n    function toInt104(int256 value) internal pure returns (int104) {\n        require(value >= type(int104).min && value <= type(int104).max, \"SafeCast: value doesn't fit in 104 bits\");\n        return int104(value);\n    }\n\n    /**\n     * @dev Returns the downcasted int96 from int256, reverting on\n     * overflow (when the input is less than smallest int96 or\n     * greater than largest int96).\n     *\n     * Counterpart to Solidity's `int96` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 96 bits\n     *\n     * _Available since v4.7._\n     */\n    function toInt96(int256 value) internal pure returns (int96) {\n        require(value >= type(int96).min && value <= type(int96).max, \"SafeCast: value doesn't fit in 96 bits\");\n        return int96(value);\n    }\n\n    /**\n     * @dev Returns the downcasted int88 from int256, reverting on\n     * overflow (when the input is less than smallest int88 or\n     * greater than largest int88).\n     *\n     * Counterpart to Solidity's `int88` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 88 bits\n     *\n     * _Available since v4.7._\n     */\n    function toInt88(int256 value) internal pure returns (int88) {\n        require(value >= type(int88).min && value <= type(int88).max, \"SafeCast: value doesn't fit in 88 bits\");\n        return int88(value);\n    }\n\n    /**\n     * @dev Returns the downcasted int80 from int256, reverting on\n     * overflow (when the input is less than smallest int80 or\n     * greater than largest int80).\n     *\n     * Counterpart to Solidity's `int80` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 80 bits\n     *\n     * _Available since v4.7._\n     */\n    function toInt80(int256 value) internal pure returns (int80) {\n        require(value >= type(int80).min && value <= type(int80).max, \"SafeCast: value doesn't fit in 80 bits\");\n        return int80(value);\n    }\n\n    /**\n     * @dev Returns the downcasted int72 from int256, reverting on\n     * overflow (when the input is less than smallest int72 or\n     * greater than largest int72).\n     *\n     * Counterpart to Solidity's `int72` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 72 bits\n     *\n     * _Available since v4.7._\n     */\n    function toInt72(int256 value) internal pure returns (int72) {\n        require(value >= type(int72).min && value <= type(int72).max, \"SafeCast: value doesn't fit in 72 bits\");\n        return int72(value);\n    }\n\n    /**\n     * @dev Returns the downcasted int64 from int256, reverting on\n     * overflow (when the input is less than smallest int64 or\n     * greater than largest int64).\n     *\n     * Counterpart to Solidity's `int64` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 64 bits\n     *\n     * _Available since v3.1._\n     */\n    function toInt64(int256 value) internal pure returns (int64) {\n        require(value >= type(int64).min && value <= type(int64).max, \"SafeCast: value doesn't fit in 64 bits\");\n        return int64(value);\n    }\n\n    /**\n     * @dev Returns the downcasted int56 from int256, reverting on\n     * overflow (when the input is less than smallest int56 or\n     * greater than largest int56).\n     *\n     * Counterpart to Solidity's `int56` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 56 bits\n     *\n     * _Available since v4.7._\n     */\n    function toInt56(int256 value) internal pure returns (int56) {\n        require(value >= type(int56).min && value <= type(int56).max, \"SafeCast: value doesn't fit in 56 bits\");\n        return int56(value);\n    }\n\n    /**\n     * @dev Returns the downcasted int48 from int256, reverting on\n     * overflow (when the input is less than smallest int48 or\n     * greater than largest int48).\n     *\n     * Counterpart to Solidity's `int48` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 48 bits\n     *\n     * _Available since v4.7._\n     */\n    function toInt48(int256 value) internal pure returns (int48) {\n        require(value >= type(int48).min && value <= type(int48).max, \"SafeCast: value doesn't fit in 48 bits\");\n        return int48(value);\n    }\n\n    /**\n     * @dev Returns the downcasted int40 from int256, reverting on\n     * overflow (when the input is less than smallest int40 or\n     * greater than largest int40).\n     *\n     * Counterpart to Solidity's `int40` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 40 bits\n     *\n     * _Available since v4.7._\n     */\n    function toInt40(int256 value) internal pure returns (int40) {\n        require(value >= type(int40).min && value <= type(int40).max, \"SafeCast: value doesn't fit in 40 bits\");\n        return int40(value);\n    }\n\n    /**\n     * @dev Returns the downcasted int32 from int256, reverting on\n     * overflow (when the input is less than smallest int32 or\n     * greater than largest int32).\n     *\n     * Counterpart to Solidity's `int32` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 32 bits\n     *\n     * _Available since v3.1._\n     */\n    function toInt32(int256 value) internal pure returns (int32) {\n        require(value >= type(int32).min && value <= type(int32).max, \"SafeCast: value doesn't fit in 32 bits\");\n        return int32(value);\n    }\n\n    /**\n     * @dev Returns the downcasted int24 from int256, reverting on\n     * overflow (when the input is less than smallest int24 or\n     * greater than largest int24).\n     *\n     * Counterpart to Solidity's `int24` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 24 bits\n     *\n     * _Available since v4.7._\n     */\n    function toInt24(int256 value) internal pure returns (int24) {\n        require(value >= type(int24).min && value <= type(int24).max, \"SafeCast: value doesn't fit in 24 bits\");\n        return int24(value);\n    }\n\n    /**\n     * @dev Returns the downcasted int16 from int256, reverting on\n     * overflow (when the input is less than smallest int16 or\n     * greater than largest int16).\n     *\n     * Counterpart to Solidity's `int16` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 16 bits\n     *\n     * _Available since v3.1._\n     */\n    function toInt16(int256 value) internal pure returns (int16) {\n        require(value >= type(int16).min && value <= type(int16).max, \"SafeCast: value doesn't fit in 16 bits\");\n        return int16(value);\n    }\n\n    /**\n     * @dev Returns the downcasted int8 from int256, reverting on\n     * overflow (when the input is less than smallest int8 or\n     * greater than largest int8).\n     *\n     * Counterpart to Solidity's `int8` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 8 bits\n     *\n     * _Available since v3.1._\n     */\n    function toInt8(int256 value) internal pure returns (int8) {\n        require(value >= type(int8).min && value <= type(int8).max, \"SafeCast: value doesn't fit in 8 bits\");\n        return int8(value);\n    }\n\n    /**\n     * @dev Converts an unsigned uint256 into a signed int256.\n     *\n     * Requirements:\n     *\n     * - input must be less than or equal to maxInt256.\n     *\n     * _Available since v3.0._\n     */\n    function toInt256(uint256 value) internal pure returns (int256) {\n        // Note: Unsafe cast below is okay because `type(int256).max` is guaranteed to be positive\n        require(value <= uint256(type(int256).max), \"SafeCast: value doesn't fit in an int256\");\n        return int256(value);\n    }\n}\n"},"contracts/feeds/IPriceFeedProvider.sol":{"content":"// SPDX-License-Identifier: GPL-3.0-or-later\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n\n// You should have received a copy of the GNU General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\npragma solidity >=0.8.0;\n\n/**\n * @title IPriceFeedProvider\n * @dev Contract providing price feed references for (base, quote) token pairs\n */\ninterface IPriceFeedProvider {\n    /**\n     * @dev Emitted every time a price feed is set for (base, quote) pair\n     */\n    event PriceFeedSet(address indexed base, address indexed quote, address feed);\n\n    /**\n     * @dev Tells the price feed address for (base, quote) pair. It returns the zero address if there is no one set.\n     * @param base Token to be rated\n     * @param quote Token used for the price rate\n     */\n    function getPriceFeed(address base, address quote) external view returns (address);\n\n    /**\n     * @dev Sets a of price feed\n     * @param base Token base to be set\n     * @param quote Token quote to be set\n     * @param feed Price feed to be set\n     */\n    function setPriceFeed(address base, address quote, address feed) external;\n\n    /**\n     * @dev Sets a list of price feeds\n     * @param bases List of token bases to be set\n     * @param quotes List of token quotes to be set\n     * @param feeds List of price feeds to be set\n     */\n    function setPriceFeeds(address[] memory bases, address[] memory quotes, address[] memory feeds) external;\n}\n"},"contracts/oracle/IPriceOracle.sol":{"content":"// SPDX-License-Identifier: GPL-3.0-or-later\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n\n// You should have received a copy of the GNU General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\npragma solidity >=0.8.0;\n\nimport '@mimic-fi/v2-registry/contracts/implementations/IImplementation.sol';\n\n/**\n * @title IPriceOracle\n * @dev Oracle that interfaces with external feeds to provide quotes for tokens based on any other token.\n * It must support also `IImplementation`.\n */\ninterface IPriceOracle is IImplementation {\n    /**\n     * @dev Tells the price of a token (base) in a given quote. The response is expressed using the corresponding\n     * number of decimals so that when performing a fixed point product of it by a `base` amount it results in\n     * a value expressed in `quote` decimals. For example, if `base` is ETH and `quote` is USDC, then the returned\n     * value is expected to be expressed using 6 decimals:\n     *\n     * FixedPoint.mul(X[ETH], price[USDC/ETH]) = FixedPoint.mul(X[18], price[6]) = X * price [6]\n     *\n     * @param provider Contract providing the price feeds to use by the oracle\n     * @param base Token to rate\n     * @param quote Token used for the price rate\n     */\n    function getPrice(address provider, address base, address quote) external view returns (uint256);\n}\n"},"contracts/oracle/PriceOracle.sol":{"content":"// SPDX-License-Identifier: GPL-3.0-or-later\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n\n// You should have received a copy of the GNU General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\npragma solidity ^0.8.0;\n\nimport '@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol';\nimport '@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol';\nimport '@openzeppelin/contracts/utils/math/SafeCast.sol';\n\nimport '@mimic-fi/v2-helpers/contracts/math/FixedPoint.sol';\nimport '@mimic-fi/v2-helpers/contracts/math/UncheckedMath.sol';\nimport '@mimic-fi/v2-registry/contracts/implementations/BaseImplementation.sol';\n\nimport './IPriceOracle.sol';\nimport '../feeds/IPriceFeedProvider.sol';\n\n/**\n * @title PriceOracle\n * @dev Oracle that interfaces with external feeds to provide quotes for tokens based on any other token.\n *\n * This Price Oracle only operates with ERC20 tokens, it does not allow querying quotes for any other denomination.\n * Additionally, it only supports external feeds that implement ChainLink's proposed `AggregatorV3Interface` interface.\n *\n * It inherits from BaseImplementation which means it's implementation can be used directly from the Mimic Registry,\n * it does not require initialization.\n *\n * IMPORTANT! As many other implementations in this repo, this contract is intended to be used as a LIBRARY, not\n * a contract. Due to limitations of the Solidity compiler, it's not possible to work with immutable variables in\n * libraries yet. Therefore, we are relying on contracts without storage variables so they can be safely\n * delegate-called if desired.\n */\ncontract PriceOracle is IPriceOracle, BaseImplementation {\n    using FixedPoint for uint256;\n    using UncheckedMath for uint256;\n\n    // Namespace under which the Price Oracle is registered in the Mimic Registry\n    bytes32 public constant override NAMESPACE = keccak256('PRICE_ORACLE');\n\n    // Number of decimals used for fixed point operations: 18\n    uint256 private constant FP_DECIMALS = 18;\n\n    // Maximum number of decimals supported for a token when computing inverse quotes: 36\n    uint256 private constant INVERSE_FEED_MAX_DECIMALS = 36;\n\n    // It allows denoting a single token to pivot between feeds in case a direct path is not available\n    address public immutable pivot;\n\n    /**\n     * @dev Creates a new Price Oracle implementation with references that should be shared among all implementations\n     * @param _pivot Address of the token to be used as the pivot\n     * @param _registry Address of the Mimic Registry to be referenced\n     */\n    constructor(address _pivot, address _registry) BaseImplementation(_registry) {\n        pivot = _pivot;\n    }\n\n    /**\n     * @dev Tells the price of a token (base) in a given quote. The response is expressed using the corresponding\n     * number of decimals so that when performing a fixed point product of it by a `base` amount it results in\n     * a value expressed in `quote` decimals.\n     * @param provider Provider to fetch the price feeds from\n     * @param base Token to rate\n     * @param quote Token used for the price rate\n     */\n    function getPrice(address provider, address base, address quote) external view override returns (uint256) {\n        if (base == quote) return FixedPoint.ONE;\n\n        // If `base * result / 1e18` must be expressed in `quote` decimals, then\n        uint256 baseDecimals = IERC20Metadata(base).decimals();\n        uint256 quoteDecimals = IERC20Metadata(quote).decimals();\n\n        // No need for checked math as an uint8 + FP_DECIMALS (constant) will always fit in an uint256\n        require(baseDecimals <= quoteDecimals.uncheckedAdd(FP_DECIMALS), 'BASE_DECIMALS_TOO_BIG');\n\n        // No need for checked math as we are checking it manually beforehand\n        uint256 resultDecimals = quoteDecimals.uncheckedAdd(FP_DECIMALS).uncheckedSub(baseDecimals);\n        (uint256 price, uint256 decimals) = _getPrice(IPriceFeedProvider(provider), base, quote);\n        return _scalePrice(price, decimals, resultDecimals);\n    }\n\n    /**\n     * @dev Internal function to tell the price of a token (base) in a given quote.\n     * @param provider Provider to fetch the price feeds from\n     * @param base Token to rate\n     * @param quote Token used for the price rate\n     * @return price Requested price rate\n     * @return decimals Decimals of the requested price rate\n     */\n    function _getPrice(IPriceFeedProvider provider, address base, address quote)\n        internal\n        view\n        returns (uint256 price, uint256 decimals)\n    {\n        address feed = provider.getPriceFeed(base, quote);\n        if (feed != address(0)) return _getFeedData(feed);\n\n        address inverseFeed = provider.getPriceFeed(quote, base);\n        if (inverseFeed != address(0)) return _getInversePrice(inverseFeed);\n\n        address baseFeed = provider.getPriceFeed(base, pivot);\n        address quoteFeed = provider.getPriceFeed(quote, pivot);\n        if (baseFeed != address(0) && quoteFeed != address(0)) return _getPivotPrice(baseFeed, quoteFeed);\n\n        revert('MISSING_PRICE_FEED');\n    }\n\n    /**\n     * @dev Internal function to fetch data from a price feed\n     * @param feed Address of the price feed to fetch data from. It must support ChainLink's `AggregatorV3Interface`.\n     * @return price Requested price\n     * @return decimals Decimals of the requested price\n     */\n    function _getFeedData(address feed) internal view returns (uint256 price, uint256 decimals) {\n        decimals = AggregatorV3Interface(feed).decimals();\n        (, int256 priceInt, , , ) = AggregatorV3Interface(feed).latestRoundData();\n        price = SafeCast.toUint256(priceInt);\n    }\n\n    /**\n     * @dev Internal function to report a price based on an inverse feed\n     * @param inverseFeed Price feed of the inverse pair\n     * @return price Requested price rate\n     * @return decimals Decimals of the requested price rate\n     */\n    function _getInversePrice(address inverseFeed) internal view returns (uint256 price, uint256 decimals) {\n        (uint256 inversePrice, uint256 inverseFeedDecimals) = _getFeedData(inverseFeed);\n        require(inverseFeedDecimals <= INVERSE_FEED_MAX_DECIMALS, 'FEED_DECIMALS_TOO_BIG');\n\n        // Prices are requested for different purposes, we are rounding down always to follow a single strategy\n        price = FixedPoint.ONE.divDown(inversePrice);\n        // No need for checked math as we are checking it manually beforehand\n        decimals = INVERSE_FEED_MAX_DECIMALS.uncheckedSub(inverseFeedDecimals);\n    }\n\n    /**\n     * @dev Internal function to report a price based on two relative price feeds\n     * @param baseFeed Price feed of the base token\n     * @param quoteFeed Price feed of the quote token\n     * @return price Requested price rate\n     * @return decimals Decimals of the requested price rate\n     */\n    function _getPivotPrice(address baseFeed, address quoteFeed)\n        internal\n        view\n        returns (uint256 price, uint256 decimals)\n    {\n        (uint256 basePrice, uint256 baseFeedDecimals) = _getFeedData(baseFeed);\n        (uint256 quotePrice, uint256 quoteFeedDecimals) = _getFeedData(quoteFeed);\n\n        // No need for checked math as an uint8 + FP_DECIMALS (constant) will always fit in an uint256\n        require(quoteFeedDecimals <= baseFeedDecimals + FP_DECIMALS, 'QUOTE_FEED_DECIMALS_TOO_BIG');\n\n        // Price is base/quote = (base/pivot) / (quote/pivot)\n        // Prices are requested for different purposes, we are rounding down always to follow a single strategy\n        price = basePrice.divDown(quotePrice);\n        // No need for checked math as we are checking it manually beforehand\n        decimals = baseFeedDecimals.uncheckedAdd(FP_DECIMALS).uncheckedSub(quoteFeedDecimals);\n    }\n\n    /**\n     * @dev Internal function to upscale or downscale a price rate\n     * @param price Value to be scaled\n     * @param priceDecimals Decimals in which `price` is originally represented\n     * @return resultDecimals Decimals requested for the result\n     */\n    function _scalePrice(uint256 price, uint256 priceDecimals, uint256 resultDecimals) internal pure returns (uint256) {\n        return\n            resultDecimals >= priceDecimals\n                ? (price * 10**(resultDecimals.uncheckedSub(priceDecimals)))\n                : (price / 10**(priceDecimals.uncheckedSub(resultDecimals)));\n    }\n}\n"}},"settings":{"optimizer":{"enabled":true,"runs":10000},"outputSelection":{"*":{"*":["abi","evm.bytecode","evm.deployedBytecode","evm.methodIdentifiers","metadata"],"":["ast"]}}}},"output":{"sources":{"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol":{"ast":{"absolutePath":"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol","exportedSymbols":{"AggregatorV3Interface":[45]},"id":46,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"32:23:0"},{"abstract":false,"baseContracts":[],"contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":45,"linearizedBaseContracts":[45],"name":"AggregatorV3Interface","nameLocation":"67:21:0","nodeType":"ContractDefinition","nodes":[{"functionSelector":"313ce567","id":6,"implemented":false,"kind":"function","modifiers":[],"name":"decimals","nameLocation":"102:8:0","nodeType":"FunctionDefinition","parameters":{"id":2,"nodeType":"ParameterList","parameters":[],"src":"110:2:0"},"returnParameters":{"id":5,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6,"src":"136:5:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":3,"name":"uint8","nodeType":"ElementaryTypeName","src":"136:5:0","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"135:7:0"},"scope":45,"src":"93:50:0","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"7284e416","id":11,"implemented":false,"kind":"function","modifiers":[],"name":"description","nameLocation":"156:11:0","nodeType":"FunctionDefinition","parameters":{"id":7,"nodeType":"ParameterList","parameters":[],"src":"167:2:0"},"returnParameters":{"id":10,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":11,"src":"193:13:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":8,"name":"string","nodeType":"ElementaryTypeName","src":"193:6:0","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"192:15:0"},"scope":45,"src":"147:61:0","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"54fd4d50","id":16,"implemented":false,"kind":"function","modifiers":[],"name":"version","nameLocation":"221:7:0","nodeType":"FunctionDefinition","parameters":{"id":12,"nodeType":"ParameterList","parameters":[],"src":"228:2:0"},"returnParameters":{"id":15,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":16,"src":"254:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":13,"name":"uint256","nodeType":"ElementaryTypeName","src":"254:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"253:9:0"},"scope":45,"src":"212:51:0","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"9a6fc8f5","id":31,"implemented":false,"kind":"function","modifiers":[],"name":"getRoundData","nameLocation":"487:12:0","nodeType":"FunctionDefinition","parameters":{"id":19,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18,"mutability":"mutable","name":"_roundId","nameLocation":"507:8:0","nodeType":"VariableDeclaration","scope":31,"src":"500:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"},"typeName":{"id":17,"name":"uint80","nodeType":"ElementaryTypeName","src":"500:6:0","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"visibility":"internal"}],"src":"499:17:0"},"returnParameters":{"id":30,"nodeType":"ParameterList","parameters":[{"constant":false,"id":21,"mutability":"mutable","name":"roundId","nameLocation":"566:7:0","nodeType":"VariableDeclaration","scope":31,"src":"559:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"},"typeName":{"id":20,"name":"uint80","nodeType":"ElementaryTypeName","src":"559:6:0","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"visibility":"internal"},{"constant":false,"id":23,"mutability":"mutable","name":"answer","nameLocation":"588:6:0","nodeType":"VariableDeclaration","scope":31,"src":"581:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":22,"name":"int256","nodeType":"ElementaryTypeName","src":"581:6:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":25,"mutability":"mutable","name":"startedAt","nameLocation":"610:9:0","nodeType":"VariableDeclaration","scope":31,"src":"602:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":24,"name":"uint256","nodeType":"ElementaryTypeName","src":"602:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":27,"mutability":"mutable","name":"updatedAt","nameLocation":"635:9:0","nodeType":"VariableDeclaration","scope":31,"src":"627:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":26,"name":"uint256","nodeType":"ElementaryTypeName","src":"627:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":29,"mutability":"mutable","name":"answeredInRound","nameLocation":"659:15:0","nodeType":"VariableDeclaration","scope":31,"src":"652:22:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"},"typeName":{"id":28,"name":"uint80","nodeType":"ElementaryTypeName","src":"652:6:0","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"visibility":"internal"}],"src":"551:129:0"},"scope":45,"src":"478:203:0","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"feaf968c","id":44,"implemented":false,"kind":"function","modifiers":[],"name":"latestRoundData","nameLocation":"694:15:0","nodeType":"FunctionDefinition","parameters":{"id":32,"nodeType":"ParameterList","parameters":[],"src":"709:2:0"},"returnParameters":{"id":43,"nodeType":"ParameterList","parameters":[{"constant":false,"id":34,"mutability":"mutable","name":"roundId","nameLocation":"761:7:0","nodeType":"VariableDeclaration","scope":44,"src":"754:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"},"typeName":{"id":33,"name":"uint80","nodeType":"ElementaryTypeName","src":"754:6:0","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"visibility":"internal"},{"constant":false,"id":36,"mutability":"mutable","name":"answer","nameLocation":"783:6:0","nodeType":"VariableDeclaration","scope":44,"src":"776:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":35,"name":"int256","nodeType":"ElementaryTypeName","src":"776:6:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":38,"mutability":"mutable","name":"startedAt","nameLocation":"805:9:0","nodeType":"VariableDeclaration","scope":44,"src":"797:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":37,"name":"uint256","nodeType":"ElementaryTypeName","src":"797:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":40,"mutability":"mutable","name":"updatedAt","nameLocation":"830:9:0","nodeType":"VariableDeclaration","scope":44,"src":"822:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":39,"name":"uint256","nodeType":"ElementaryTypeName","src":"822:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":42,"mutability":"mutable","name":"answeredInRound","nameLocation":"854:15:0","nodeType":"VariableDeclaration","scope":44,"src":"847:22:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"},"typeName":{"id":41,"name":"uint80","nodeType":"ElementaryTypeName","src":"847:6:0","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"visibility":"internal"}],"src":"746:129:0"},"scope":45,"src":"685:191:0","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":46,"src":"57:821:0"}],"src":"32:847:0"},"id":0},"@mimic-fi/v2-helpers/contracts/auth/IAuthorizer.sol":{"ast":{"absolutePath":"@mimic-fi/v2-helpers/contracts/auth/IAuthorizer.sol","exportedSymbols":{"IAuthorizer":[89]},"id":90,"license":"GPL-3.0-or-later","nodeType":"SourceUnit","nodes":[{"id":47,"literals":["solidity",">=","0.8",".0"],"nodeType":"PragmaDirective","src":"688:24:1"},{"abstract":false,"baseContracts":[],"contractDependencies":[],"contractKind":"interface","documentation":{"id":48,"nodeType":"StructuredDocumentation","src":"714:29:1","text":" @title IAuthorizer"},"fullyImplemented":false,"id":89,"linearizedBaseContracts":[89],"name":"IAuthorizer","nameLocation":"754:11:1","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":49,"nodeType":"StructuredDocumentation","src":"772:80:1","text":" @dev Emitted when an account is authorized to call a function"},"id":55,"name":"Authorized","nameLocation":"863:10:1","nodeType":"EventDefinition","parameters":{"id":54,"nodeType":"ParameterList","parameters":[{"constant":false,"id":51,"indexed":true,"mutability":"mutable","name":"who","nameLocation":"890:3:1","nodeType":"VariableDeclaration","scope":55,"src":"874:19:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":50,"name":"address","nodeType":"ElementaryTypeName","src":"874:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":53,"indexed":false,"mutability":"mutable","name":"what","nameLocation":"902:4:1","nodeType":"VariableDeclaration","scope":55,"src":"895:11:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":52,"name":"bytes4","nodeType":"ElementaryTypeName","src":"895:6:1","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"873:34:1"},"src":"857:51:1"},{"anonymous":false,"documentation":{"id":56,"nodeType":"StructuredDocumentation","src":"914:82:1","text":" @dev Emitted when an account is unauthorized to call a function"},"id":62,"name":"Unauthorized","nameLocation":"1007:12:1","nodeType":"EventDefinition","parameters":{"id":61,"nodeType":"ParameterList","parameters":[{"constant":false,"id":58,"indexed":true,"mutability":"mutable","name":"who","nameLocation":"1036:3:1","nodeType":"VariableDeclaration","scope":62,"src":"1020:19:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":57,"name":"address","nodeType":"ElementaryTypeName","src":"1020:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":60,"indexed":false,"mutability":"mutable","name":"what","nameLocation":"1048:4:1","nodeType":"VariableDeclaration","scope":62,"src":"1041:11:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":59,"name":"bytes4","nodeType":"ElementaryTypeName","src":"1041:6:1","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"1019:34:1"},"src":"1001:53:1"},{"documentation":{"id":63,"nodeType":"StructuredDocumentation","src":"1060:191:1","text":" @dev Authorizes someone to call a function. Sender must be authorize to do so.\n @param who Address to be authorized\n @param what Function selector to be granted"},"functionSelector":"933f0f3c","id":70,"implemented":false,"kind":"function","modifiers":[],"name":"authorize","nameLocation":"1265:9:1","nodeType":"FunctionDefinition","parameters":{"id":68,"nodeType":"ParameterList","parameters":[{"constant":false,"id":65,"mutability":"mutable","name":"who","nameLocation":"1283:3:1","nodeType":"VariableDeclaration","scope":70,"src":"1275:11:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":64,"name":"address","nodeType":"ElementaryTypeName","src":"1275:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":67,"mutability":"mutable","name":"what","nameLocation":"1295:4:1","nodeType":"VariableDeclaration","scope":70,"src":"1288:11:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":66,"name":"bytes4","nodeType":"ElementaryTypeName","src":"1288:6:1","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"1274:26:1"},"returnParameters":{"id":69,"nodeType":"ParameterList","parameters":[],"src":"1309:0:1"},"scope":89,"src":"1256:54:1","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":71,"nodeType":"StructuredDocumentation","src":"1316:195:1","text":" @dev Unauthorizes someone to call a function. Sender must be authorize to do so.\n @param who Address to be unauthorized\n @param what Function selector to be revoked"},"functionSelector":"6646a436","id":78,"implemented":false,"kind":"function","modifiers":[],"name":"unauthorize","nameLocation":"1525:11:1","nodeType":"FunctionDefinition","parameters":{"id":76,"nodeType":"ParameterList","parameters":[{"constant":false,"id":73,"mutability":"mutable","name":"who","nameLocation":"1545:3:1","nodeType":"VariableDeclaration","scope":78,"src":"1537:11:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":72,"name":"address","nodeType":"ElementaryTypeName","src":"1537:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":75,"mutability":"mutable","name":"what","nameLocation":"1557:4:1","nodeType":"VariableDeclaration","scope":78,"src":"1550:11:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":74,"name":"bytes4","nodeType":"ElementaryTypeName","src":"1550:6:1","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"1536:26:1"},"returnParameters":{"id":77,"nodeType":"ParameterList","parameters":[],"src":"1571:0:1"},"scope":89,"src":"1516:56:1","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":79,"nodeType":"StructuredDocumentation","src":"1578:233:1","text":" @dev Tells whether someone is allowed to call a function or not. It returns true if it's allowed to anyone.\n @param who Address asking permission for\n @param what Function selector asking permission for"},"functionSelector":"d9972b96","id":88,"implemented":false,"kind":"function","modifiers":[],"name":"isAuthorized","nameLocation":"1825:12:1","nodeType":"FunctionDefinition","parameters":{"id":84,"nodeType":"ParameterList","parameters":[{"constant":false,"id":81,"mutability":"mutable","name":"who","nameLocation":"1846:3:1","nodeType":"VariableDeclaration","scope":88,"src":"1838:11:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":80,"name":"address","nodeType":"ElementaryTypeName","src":"1838:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":83,"mutability":"mutable","name":"what","nameLocation":"1858:4:1","nodeType":"VariableDeclaration","scope":88,"src":"1851:11:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":82,"name":"bytes4","nodeType":"ElementaryTypeName","src":"1851:6:1","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"1837:26:1"},"returnParameters":{"id":87,"nodeType":"ParameterList","parameters":[{"constant":false,"id":86,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":88,"src":"1887:4:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":85,"name":"bool","nodeType":"ElementaryTypeName","src":"1887:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1886:6:1"},"scope":89,"src":"1816:77:1","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":90,"src":"744:1151:1"}],"src":"688:1208:1"},"id":1},"@mimic-fi/v2-helpers/contracts/math/FixedPoint.sol":{"ast":{"absolutePath":"@mimic-fi/v2-helpers/contracts/math/FixedPoint.sol","exportedSymbols":{"FixedPoint":[272]},"id":273,"license":"GPL-3.0-or-later","nodeType":"SourceUnit","nodes":[{"id":91,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"688:23:2"},{"abstract":false,"baseContracts":[],"contractDependencies":[],"contractKind":"library","documentation":{"id":92,"nodeType":"StructuredDocumentation","src":"713:101:2","text":" @title FixedPoint\n @dev Math library to operate with fixed point values with 18 decimals"},"fullyImplemented":true,"id":272,"linearizedBaseContracts":[272],"name":"FixedPoint","nameLocation":"823:10:2","nodeType":"ContractDefinition","nodes":[{"constant":true,"id":95,"mutability":"constant","name":"ONE","nameLocation":"915:3:2","nodeType":"VariableDeclaration","scope":272,"src":"889:36:2","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":93,"name":"uint256","nodeType":"ElementaryTypeName","src":"889:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"31653138","id":94,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"921:4:2","typeDescriptions":{"typeIdentifier":"t_rational_1000000000000000000_by_1","typeString":"int_const 1000000000000000000"},"value":"1e18"},"visibility":"internal"},{"body":{"id":129,"nodeType":"Block","src":"1080:173:2","statements":[{"id":128,"nodeType":"UncheckedBlock","src":"1090:157:2","statements":[{"assignments":[106],"declarations":[{"constant":false,"id":106,"mutability":"mutable","name":"product","nameLocation":"1122:7:2","nodeType":"VariableDeclaration","scope":128,"src":"1114:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":105,"name":"uint256","nodeType":"ElementaryTypeName","src":"1114:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":110,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":109,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":107,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":98,"src":"1132:1:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":108,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":100,"src":"1136:1:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1132:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1114:23:2"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":120,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":114,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":112,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":98,"src":"1159:1:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":113,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1164:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1159:6:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":119,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":117,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":115,"name":"product","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":106,"src":"1169:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":116,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":98,"src":"1179:1:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1169:11:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":118,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":100,"src":"1184:1:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1169:16:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"1159:26:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4d554c5f4f564552464c4f57","id":121,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1187:14:2","typeDescriptions":{"typeIdentifier":"t_stringliteral_fc8e0fefa4d024df8227fcb82ff7e326da34efb7a014cc01e5dc28c5c858e972","typeString":"literal_string \"MUL_OVERFLOW\""},"value":"MUL_OVERFLOW"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_fc8e0fefa4d024df8227fcb82ff7e326da34efb7a014cc01e5dc28c5c858e972","typeString":"literal_string \"MUL_OVERFLOW\""}],"id":111,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1151:7:2","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":122,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1151:51:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":123,"nodeType":"ExpressionStatement","src":"1151:51:2"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":126,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":124,"name":"product","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":106,"src":"1223:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":125,"name":"ONE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":95,"src":"1233:3:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1223:13:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":104,"id":127,"nodeType":"Return","src":"1216:20:2"}]}]},"documentation":{"id":96,"nodeType":"StructuredDocumentation","src":"932:72:2","text":" @dev Multiplies two fixed point numbers rounding down"},"id":130,"implemented":true,"kind":"function","modifiers":[],"name":"mulDown","nameLocation":"1018:7:2","nodeType":"FunctionDefinition","parameters":{"id":101,"nodeType":"ParameterList","parameters":[{"constant":false,"id":98,"mutability":"mutable","name":"a","nameLocation":"1034:1:2","nodeType":"VariableDeclaration","scope":130,"src":"1026:9:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":97,"name":"uint256","nodeType":"ElementaryTypeName","src":"1026:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":100,"mutability":"mutable","name":"b","nameLocation":"1045:1:2","nodeType":"VariableDeclaration","scope":130,"src":"1037:9:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":99,"name":"uint256","nodeType":"ElementaryTypeName","src":"1037:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1025:22:2"},"returnParameters":{"id":104,"nodeType":"ParameterList","parameters":[{"constant":false,"id":103,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":130,"src":"1071:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":102,"name":"uint256","nodeType":"ElementaryTypeName","src":"1071:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1070:9:2"},"scope":272,"src":"1009:244:2","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":176,"nodeType":"Block","src":"1403:206:2","statements":[{"id":175,"nodeType":"UncheckedBlock","src":"1413:190:2","statements":[{"assignments":[141],"declarations":[{"constant":false,"id":141,"mutability":"mutable","name":"product","nameLocation":"1445:7:2","nodeType":"VariableDeclaration","scope":175,"src":"1437:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":140,"name":"uint256","nodeType":"ElementaryTypeName","src":"1437:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":145,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":144,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":142,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":133,"src":"1455:1:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":143,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":135,"src":"1459:1:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1455:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1437:23:2"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":155,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":149,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":147,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":133,"src":"1482:1:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":148,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1487:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1482:6:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":154,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":152,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":150,"name":"product","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":141,"src":"1492:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":151,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":133,"src":"1502:1:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1492:11:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":153,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":135,"src":"1507:1:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1492:16:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"1482:26:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4d554c5f4f564552464c4f57","id":156,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1510:14:2","typeDescriptions":{"typeIdentifier":"t_stringliteral_fc8e0fefa4d024df8227fcb82ff7e326da34efb7a014cc01e5dc28c5c858e972","typeString":"literal_string \"MUL_OVERFLOW\""},"value":"MUL_OVERFLOW"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_fc8e0fefa4d024df8227fcb82ff7e326da34efb7a014cc01e5dc28c5c858e972","typeString":"literal_string \"MUL_OVERFLOW\""}],"id":146,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1474:7:2","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":157,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1474:51:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":158,"nodeType":"ExpressionStatement","src":"1474:51:2"},{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":161,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":159,"name":"product","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":141,"src":"1546:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":160,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1557:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1546:12:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":171,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":168,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":165,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":163,"name":"product","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":141,"src":"1568:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":164,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1578:1:2","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1568:11:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":166,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1567:13:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":167,"name":"ONE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":95,"src":"1583:3:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1567:19:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":169,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1566:21:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":170,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1590:1:2","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1566:25:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":172,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1565:27:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":173,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"1546:46:2","trueExpression":{"hexValue":"30","id":162,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1561:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":139,"id":174,"nodeType":"Return","src":"1539:53:2"}]}]},"documentation":{"id":131,"nodeType":"StructuredDocumentation","src":"1259:70:2","text":" @dev Multiplies two fixed point numbers rounding up"},"id":177,"implemented":true,"kind":"function","modifiers":[],"name":"mulUp","nameLocation":"1343:5:2","nodeType":"FunctionDefinition","parameters":{"id":136,"nodeType":"ParameterList","parameters":[{"constant":false,"id":133,"mutability":"mutable","name":"a","nameLocation":"1357:1:2","nodeType":"VariableDeclaration","scope":177,"src":"1349:9:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":132,"name":"uint256","nodeType":"ElementaryTypeName","src":"1349:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":135,"mutability":"mutable","name":"b","nameLocation":"1368:1:2","nodeType":"VariableDeclaration","scope":177,"src":"1360:9:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":134,"name":"uint256","nodeType":"ElementaryTypeName","src":"1360:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1348:22:2"},"returnParameters":{"id":139,"nodeType":"ParameterList","parameters":[{"constant":false,"id":138,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":177,"src":"1394:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":137,"name":"uint256","nodeType":"ElementaryTypeName","src":"1394:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1393:9:2"},"scope":272,"src":"1334:275:2","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":220,"nodeType":"Block","src":"1760:251:2","statements":[{"id":219,"nodeType":"UncheckedBlock","src":"1770:235:2","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":190,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":188,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":182,"src":"1802:1:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":189,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1807:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1802:6:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5a45524f5f4449564953494f4e","id":191,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1810:15:2","typeDescriptions":{"typeIdentifier":"t_stringliteral_b4ddf0afacdcfca0994ec1d43a02032f771ceb61f93a153d4c00908d431f3487","typeString":"literal_string \"ZERO_DIVISION\""},"value":"ZERO_DIVISION"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_b4ddf0afacdcfca0994ec1d43a02032f771ceb61f93a153d4c00908d431f3487","typeString":"literal_string \"ZERO_DIVISION\""}],"id":187,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1794:7:2","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":192,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1794:32:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":193,"nodeType":"ExpressionStatement","src":"1794:32:2"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":196,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":194,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":180,"src":"1844:1:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":195,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1849:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1844:6:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":199,"nodeType":"IfStatement","src":"1840:20:2","trueBody":{"expression":{"hexValue":"30","id":197,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1859:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":186,"id":198,"nodeType":"Return","src":"1852:8:2"}},{"assignments":[201],"declarations":[{"constant":false,"id":201,"mutability":"mutable","name":"aInflated","nameLocation":"1882:9:2","nodeType":"VariableDeclaration","scope":219,"src":"1874:17:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":200,"name":"uint256","nodeType":"ElementaryTypeName","src":"1874:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":205,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":204,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":202,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":180,"src":"1894:1:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":203,"name":"ONE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":95,"src":"1898:3:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1894:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1874:27:2"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":211,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":209,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":207,"name":"aInflated","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":201,"src":"1923:9:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":208,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":180,"src":"1935:1:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1923:13:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":210,"name":"ONE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":95,"src":"1940:3:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1923:20:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4449565f494e5445524e414c","id":212,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1945:14:2","typeDescriptions":{"typeIdentifier":"t_stringliteral_b1350abc64906961ed10db639fd26579f160d63de0c3cb6ad9d983a95be6ee97","typeString":"literal_string \"DIV_INTERNAL\""},"value":"DIV_INTERNAL"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_b1350abc64906961ed10db639fd26579f160d63de0c3cb6ad9d983a95be6ee97","typeString":"literal_string \"DIV_INTERNAL\""}],"id":206,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1915:7:2","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":213,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1915:45:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":214,"nodeType":"ExpressionStatement","src":"1915:45:2"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":217,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":215,"name":"aInflated","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":201,"src":"1981:9:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":216,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":182,"src":"1993:1:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1981:13:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":186,"id":218,"nodeType":"Return","src":"1974:20:2"}]}]},"documentation":{"id":178,"nodeType":"StructuredDocumentation","src":"1615:69:2","text":" @dev Divides two fixed point numbers rounding down"},"id":221,"implemented":true,"kind":"function","modifiers":[],"name":"divDown","nameLocation":"1698:7:2","nodeType":"FunctionDefinition","parameters":{"id":183,"nodeType":"ParameterList","parameters":[{"constant":false,"id":180,"mutability":"mutable","name":"a","nameLocation":"1714:1:2","nodeType":"VariableDeclaration","scope":221,"src":"1706:9:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":179,"name":"uint256","nodeType":"ElementaryTypeName","src":"1706:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":182,"mutability":"mutable","name":"b","nameLocation":"1725:1:2","nodeType":"VariableDeclaration","scope":221,"src":"1717:9:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":181,"name":"uint256","nodeType":"ElementaryTypeName","src":"1717:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1705:22:2"},"returnParameters":{"id":186,"nodeType":"ParameterList","parameters":[{"constant":false,"id":185,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":221,"src":"1751:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":184,"name":"uint256","nodeType":"ElementaryTypeName","src":"1751:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1750:9:2"},"scope":272,"src":"1689:322:2","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":270,"nodeType":"Block","src":"2158:263:2","statements":[{"id":269,"nodeType":"UncheckedBlock","src":"2168:247:2","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":234,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":232,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":226,"src":"2200:1:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":233,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2205:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2200:6:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5a45524f5f4449564953494f4e","id":235,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2208:15:2","typeDescriptions":{"typeIdentifier":"t_stringliteral_b4ddf0afacdcfca0994ec1d43a02032f771ceb61f93a153d4c00908d431f3487","typeString":"literal_string \"ZERO_DIVISION\""},"value":"ZERO_DIVISION"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_b4ddf0afacdcfca0994ec1d43a02032f771ceb61f93a153d4c00908d431f3487","typeString":"literal_string \"ZERO_DIVISION\""}],"id":231,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2192:7:2","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":236,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2192:32:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":237,"nodeType":"ExpressionStatement","src":"2192:32:2"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":240,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":238,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":224,"src":"2242:1:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":239,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2247:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2242:6:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":243,"nodeType":"IfStatement","src":"2238:20:2","trueBody":{"expression":{"hexValue":"30","id":241,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2257:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":230,"id":242,"nodeType":"Return","src":"2250:8:2"}},{"assignments":[245],"declarations":[{"constant":false,"id":245,"mutability":"mutable","name":"aInflated","nameLocation":"2280:9:2","nodeType":"VariableDeclaration","scope":269,"src":"2272:17:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":244,"name":"uint256","nodeType":"ElementaryTypeName","src":"2272:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":249,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":248,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":246,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":224,"src":"2292:1:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":247,"name":"ONE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":95,"src":"2296:3:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2292:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2272:27:2"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":255,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":253,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":251,"name":"aInflated","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":245,"src":"2321:9:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":252,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":224,"src":"2333:1:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2321:13:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":254,"name":"ONE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":95,"src":"2338:3:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2321:20:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4449565f494e5445524e414c","id":256,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2343:14:2","typeDescriptions":{"typeIdentifier":"t_stringliteral_b1350abc64906961ed10db639fd26579f160d63de0c3cb6ad9d983a95be6ee97","typeString":"literal_string \"DIV_INTERNAL\""},"value":"DIV_INTERNAL"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_b1350abc64906961ed10db639fd26579f160d63de0c3cb6ad9d983a95be6ee97","typeString":"literal_string \"DIV_INTERNAL\""}],"id":250,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2313:7:2","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":257,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2313:45:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":258,"nodeType":"ExpressionStatement","src":"2313:45:2"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":267,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":264,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":261,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":259,"name":"aInflated","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":245,"src":"2381:9:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":260,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2393:1:2","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"2381:13:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":262,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2380:15:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":263,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":226,"src":"2398:1:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2380:19:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":265,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2379:21:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":266,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2403:1:2","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"2379:25:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":230,"id":268,"nodeType":"Return","src":"2372:32:2"}]}]},"documentation":{"id":222,"nodeType":"StructuredDocumentation","src":"2017:67:2","text":" @dev Divides two fixed point numbers rounding up"},"id":271,"implemented":true,"kind":"function","modifiers":[],"name":"divUp","nameLocation":"2098:5:2","nodeType":"FunctionDefinition","parameters":{"id":227,"nodeType":"ParameterList","parameters":[{"constant":false,"id":224,"mutability":"mutable","name":"a","nameLocation":"2112:1:2","nodeType":"VariableDeclaration","scope":271,"src":"2104:9:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":223,"name":"uint256","nodeType":"ElementaryTypeName","src":"2104:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":226,"mutability":"mutable","name":"b","nameLocation":"2123:1:2","nodeType":"VariableDeclaration","scope":271,"src":"2115:9:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":225,"name":"uint256","nodeType":"ElementaryTypeName","src":"2115:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2103:22:2"},"returnParameters":{"id":230,"nodeType":"ParameterList","parameters":[{"constant":false,"id":229,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":271,"src":"2149:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":228,"name":"uint256","nodeType":"ElementaryTypeName","src":"2149:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2148:9:2"},"scope":272,"src":"2089:332:2","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":273,"src":"815:1608:2"}],"src":"688:1736:2"},"id":2},"@mimic-fi/v2-helpers/contracts/math/UncheckedMath.sol":{"ast":{"absolutePath":"@mimic-fi/v2-helpers/contracts/math/UncheckedMath.sol","exportedSymbols":{"UncheckedMath":[356]},"id":357,"license":"GPL-3.0-or-later","nodeType":"SourceUnit","nodes":[{"id":274,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"688:23:3"},{"abstract":false,"baseContracts":[],"contractDependencies":[],"contractKind":"library","documentation":{"id":275,"nodeType":"StructuredDocumentation","src":"713:84:3","text":" @title UncheckedMath\n @dev Math library to perform unchecked operations"},"fullyImplemented":true,"id":356,"linearizedBaseContracts":[356],"name":"UncheckedMath","nameLocation":"806:13:3","nodeType":"ContractDefinition","nodes":[{"body":{"id":290,"nodeType":"Block","src":"966:63:3","statements":[{"id":289,"nodeType":"UncheckedBlock","src":"976:47:3","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":287,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":285,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":278,"src":"1007:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":286,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":280,"src":"1011:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1007:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":284,"id":288,"nodeType":"Return","src":"1000:12:3"}]}]},"documentation":{"id":276,"nodeType":"StructuredDocumentation","src":"826:59:3","text":" @dev Unsafely adds two unsigned integers"},"id":291,"implemented":true,"kind":"function","modifiers":[],"name":"uncheckedAdd","nameLocation":"899:12:3","nodeType":"FunctionDefinition","parameters":{"id":281,"nodeType":"ParameterList","parameters":[{"constant":false,"id":278,"mutability":"mutable","name":"a","nameLocation":"920:1:3","nodeType":"VariableDeclaration","scope":291,"src":"912:9:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":277,"name":"uint256","nodeType":"ElementaryTypeName","src":"912:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":280,"mutability":"mutable","name":"b","nameLocation":"931:1:3","nodeType":"VariableDeclaration","scope":291,"src":"923:9:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":279,"name":"uint256","nodeType":"ElementaryTypeName","src":"923:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"911:22:3"},"returnParameters":{"id":284,"nodeType":"ParameterList","parameters":[{"constant":false,"id":283,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":291,"src":"957:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":282,"name":"uint256","nodeType":"ElementaryTypeName","src":"957:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"956:9:3"},"scope":356,"src":"890:139:3","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":306,"nodeType":"Block","src":"1180:63:3","statements":[{"id":305,"nodeType":"UncheckedBlock","src":"1190:47:3","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":303,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":301,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":294,"src":"1221:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":302,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":296,"src":"1225:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1221:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":300,"id":304,"nodeType":"Return","src":"1214:12:3"}]}]},"documentation":{"id":292,"nodeType":"StructuredDocumentation","src":"1035:64:3","text":" @dev Unsafely subtracts two unsigned integers"},"id":307,"implemented":true,"kind":"function","modifiers":[],"name":"uncheckedSub","nameLocation":"1113:12:3","nodeType":"FunctionDefinition","parameters":{"id":297,"nodeType":"ParameterList","parameters":[{"constant":false,"id":294,"mutability":"mutable","name":"a","nameLocation":"1134:1:3","nodeType":"VariableDeclaration","scope":307,"src":"1126:9:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":293,"name":"uint256","nodeType":"ElementaryTypeName","src":"1126:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":296,"mutability":"mutable","name":"b","nameLocation":"1145:1:3","nodeType":"VariableDeclaration","scope":307,"src":"1137:9:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":295,"name":"uint256","nodeType":"ElementaryTypeName","src":"1137:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1125:22:3"},"returnParameters":{"id":300,"nodeType":"ParameterList","parameters":[{"constant":false,"id":299,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":307,"src":"1171:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":298,"name":"uint256","nodeType":"ElementaryTypeName","src":"1171:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1170:9:3"},"scope":356,"src":"1104:139:3","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":322,"nodeType":"Block","src":"1395:63:3","statements":[{"id":321,"nodeType":"UncheckedBlock","src":"1405:47:3","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":319,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":317,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":310,"src":"1436:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":318,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":312,"src":"1440:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1436:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":316,"id":320,"nodeType":"Return","src":"1429:12:3"}]}]},"documentation":{"id":308,"nodeType":"StructuredDocumentation","src":"1249:65:3","text":" @dev Unsafely multiplies two unsigned integers"},"id":323,"implemented":true,"kind":"function","modifiers":[],"name":"uncheckedMul","nameLocation":"1328:12:3","nodeType":"FunctionDefinition","parameters":{"id":313,"nodeType":"ParameterList","parameters":[{"constant":false,"id":310,"mutability":"mutable","name":"a","nameLocation":"1349:1:3","nodeType":"VariableDeclaration","scope":323,"src":"1341:9:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":309,"name":"uint256","nodeType":"ElementaryTypeName","src":"1341:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":312,"mutability":"mutable","name":"b","nameLocation":"1360:1:3","nodeType":"VariableDeclaration","scope":323,"src":"1352:9:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":311,"name":"uint256","nodeType":"ElementaryTypeName","src":"1352:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1340:22:3"},"returnParameters":{"id":316,"nodeType":"ParameterList","parameters":[{"constant":false,"id":315,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":323,"src":"1386:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":314,"name":"uint256","nodeType":"ElementaryTypeName","src":"1386:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1385:9:3"},"scope":356,"src":"1319:139:3","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":338,"nodeType":"Block","src":"1605:63:3","statements":[{"id":337,"nodeType":"UncheckedBlock","src":"1615:47:3","statements":[{"expression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":335,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":333,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":326,"src":"1646:1:3","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":334,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":328,"src":"1650:1:3","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1646:5:3","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":332,"id":336,"nodeType":"Return","src":"1639:12:3"}]}]},"documentation":{"id":324,"nodeType":"StructuredDocumentation","src":"1464:63:3","text":" @dev Unsafely multiplies two signed integers"},"id":339,"implemented":true,"kind":"function","modifiers":[],"name":"uncheckedMul","nameLocation":"1541:12:3","nodeType":"FunctionDefinition","parameters":{"id":329,"nodeType":"ParameterList","parameters":[{"constant":false,"id":326,"mutability":"mutable","name":"a","nameLocation":"1561:1:3","nodeType":"VariableDeclaration","scope":339,"src":"1554:8:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":325,"name":"int256","nodeType":"ElementaryTypeName","src":"1554:6:3","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":328,"mutability":"mutable","name":"b","nameLocation":"1571:1:3","nodeType":"VariableDeclaration","scope":339,"src":"1564:8:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":327,"name":"int256","nodeType":"ElementaryTypeName","src":"1564:6:3","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1553:20:3"},"returnParameters":{"id":332,"nodeType":"ParameterList","parameters":[{"constant":false,"id":331,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":339,"src":"1597:6:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":330,"name":"int256","nodeType":"ElementaryTypeName","src":"1597:6:3","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1596:8:3"},"scope":356,"src":"1532:136:3","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":354,"nodeType":"Block","src":"1817:63:3","statements":[{"id":353,"nodeType":"UncheckedBlock","src":"1827:47:3","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":351,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":349,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":342,"src":"1858:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":350,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":344,"src":"1862:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1858:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":348,"id":352,"nodeType":"Return","src":"1851:12:3"}]}]},"documentation":{"id":340,"nodeType":"StructuredDocumentation","src":"1674:62:3","text":" @dev Unsafely divides two unsigned integers"},"id":355,"implemented":true,"kind":"function","modifiers":[],"name":"uncheckedDiv","nameLocation":"1750:12:3","nodeType":"FunctionDefinition","parameters":{"id":345,"nodeType":"ParameterList","parameters":[{"constant":false,"id":342,"mutability":"mutable","name":"a","nameLocation":"1771:1:3","nodeType":"VariableDeclaration","scope":355,"src":"1763:9:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":341,"name":"uint256","nodeType":"ElementaryTypeName","src":"1763:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":344,"mutability":"mutable","name":"b","nameLocation":"1782:1:3","nodeType":"VariableDeclaration","scope":355,"src":"1774:9:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":343,"name":"uint256","nodeType":"ElementaryTypeName","src":"1774:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1762:22:3"},"returnParameters":{"id":348,"nodeType":"ParameterList","parameters":[{"constant":false,"id":347,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":355,"src":"1808:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":346,"name":"uint256","nodeType":"ElementaryTypeName","src":"1808:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1807:9:3"},"scope":356,"src":"1741:139:3","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":357,"src":"798:1084:3"}],"src":"688:1195:3"},"id":3},"@mimic-fi/v2-registry/contracts/implementations/BaseImplementation.sol":{"ast":{"absolutePath":"@mimic-fi/v2-registry/contracts/implementations/BaseImplementation.sol","exportedSymbols":{"Address":[1074],"BaseImplementation":[448],"IAuthorizer":[89],"IImplementation":[464],"IRegistry":[525],"Initializable":[676]},"id":449,"license":"GPL-3.0-or-later","nodeType":"SourceUnit","nodes":[{"id":358,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"688:23:4"},{"absolutePath":"@openzeppelin/contracts/proxy/utils/Initializable.sol","file":"@openzeppelin/contracts/proxy/utils/Initializable.sol","id":359,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":449,"sourceUnit":677,"src":"713:63:4","symbolAliases":[],"unitAlias":""},{"absolutePath":"@mimic-fi/v2-registry/contracts/implementations/IImplementation.sol","file":"./IImplementation.sol","id":360,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":449,"sourceUnit":465,"src":"778:31:4","symbolAliases":[],"unitAlias":""},{"absolutePath":"@mimic-fi/v2-registry/contracts/registry/IRegistry.sol","file":"../registry/IRegistry.sol","id":361,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":449,"sourceUnit":526,"src":"810:35:4","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":363,"name":"IImplementation","nodeType":"IdentifierPath","referencedDeclaration":464,"src":"1266:15:4"},"id":364,"nodeType":"InheritanceSpecifier","src":"1266:15:4"}],"contractDependencies":[464],"contractKind":"contract","documentation":{"id":362,"nodeType":"StructuredDocumentation","src":"847:378:4","text":" @title BaseImplementation\n @dev This implementation contract comes with an immutable reference to an implementations registry where it should\n be registered as well (checked during initialization). It allows requesting new instances of other registered\n implementations to as another safety check to make sure valid instances are referenced in case it's needed."},"fullyImplemented":false,"id":448,"linearizedBaseContracts":[448,464],"name":"BaseImplementation","nameLocation":"1244:18:4","nodeType":"ContractDefinition","nodes":[{"baseFunctions":[463],"constant":false,"functionSelector":"7b103999","id":367,"mutability":"immutable","name":"registry","nameLocation":"1374:8:4","nodeType":"VariableDeclaration","overrides":{"id":366,"nodeType":"OverrideSpecifier","overrides":[],"src":"1365:8:4"},"scope":448,"src":"1340:42:4","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":365,"name":"address","nodeType":"ElementaryTypeName","src":"1340:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"public"},{"body":{"id":377,"nodeType":"Block","src":"1580:37:4","statements":[{"expression":{"id":375,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":373,"name":"registry","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":367,"src":"1590:8:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":374,"name":"_registry","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":370,"src":"1601:9:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1590:20:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":376,"nodeType":"ExpressionStatement","src":"1590:20:4"}]},"documentation":{"id":368,"nodeType":"StructuredDocumentation","src":"1389:155:4","text":" @dev Creates a new BaseImplementation\n @param _registry Address of the Mimic Registry where dependencies will be validated against"},"id":378,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":371,"nodeType":"ParameterList","parameters":[{"constant":false,"id":370,"mutability":"mutable","name":"_registry","nameLocation":"1569:9:4","nodeType":"VariableDeclaration","scope":378,"src":"1561:17:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":369,"name":"address","nodeType":"ElementaryTypeName","src":"1561:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1560:19:4"},"returnParameters":{"id":372,"nodeType":"ParameterList","parameters":[],"src":"1580:0:4"},"scope":448,"src":"1549:68:4","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":391,"nodeType":"Block","src":"1950:85:4","statements":[{"expression":{"arguments":[{"arguments":[{"id":386,"name":"dependency","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":381,"src":"1988:10:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":385,"name":"_validateDependency","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":447,"src":"1968:19:4","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_bool_$","typeString":"function (address) view returns (bool)"}},"id":387,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1968:31:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"444550454e44454e43595f4e4f545f53544154454c455353","id":388,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2001:26:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_33e7caeaeb13f3dd7003d49fd2bf0210a3c8ba3a01cca653fef5909dfda34f5b","typeString":"literal_string \"DEPENDENCY_NOT_STATELESS\""},"value":"DEPENDENCY_NOT_STATELESS"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_33e7caeaeb13f3dd7003d49fd2bf0210a3c8ba3a01cca653fef5909dfda34f5b","typeString":"literal_string \"DEPENDENCY_NOT_STATELESS\""}],"id":384,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1960:7:4","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":389,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1960:68:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":390,"nodeType":"ExpressionStatement","src":"1960:68:4"}]},"documentation":{"id":379,"nodeType":"StructuredDocumentation","src":"1623:250:4","text":" @dev Internal function to validate a new dependency that must be registered as stateless.\n It checks the new dependency is registered, not deprecated, and stateless.\n @param dependency New stateless dependency to be set"},"id":392,"implemented":true,"kind":"function","modifiers":[],"name":"_validateStatelessDependency","nameLocation":"1887:28:4","nodeType":"FunctionDefinition","parameters":{"id":382,"nodeType":"ParameterList","parameters":[{"constant":false,"id":381,"mutability":"mutable","name":"dependency","nameLocation":"1924:10:4","nodeType":"VariableDeclaration","scope":392,"src":"1916:18:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":380,"name":"address","nodeType":"ElementaryTypeName","src":"1916:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1915:20:4"},"returnParameters":{"id":383,"nodeType":"ParameterList","parameters":[],"src":"1950:0:4"},"scope":448,"src":"1878:157:4","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":406,"nodeType":"Block","src":"2371:85:4","statements":[{"expression":{"arguments":[{"id":402,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"2389:32:4","subExpression":{"arguments":[{"id":400,"name":"dependency","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":395,"src":"2410:10:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":399,"name":"_validateDependency","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":447,"src":"2390:19:4","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_bool_$","typeString":"function (address) view returns (bool)"}},"id":401,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2390:31:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"444550454e44454e43595f4e4f545f535441544546554c","id":403,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2423:25:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_e8c9c5707c7558388f15b095cd2d761beecde20a447b3260c35b1e715fcae11e","typeString":"literal_string \"DEPENDENCY_NOT_STATEFUL\""},"value":"DEPENDENCY_NOT_STATEFUL"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_e8c9c5707c7558388f15b095cd2d761beecde20a447b3260c35b1e715fcae11e","typeString":"literal_string \"DEPENDENCY_NOT_STATEFUL\""}],"id":398,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2381:7:4","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":404,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2381:68:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":405,"nodeType":"ExpressionStatement","src":"2381:68:4"}]},"documentation":{"id":393,"nodeType":"StructuredDocumentation","src":"2041:254:4","text":" @dev Internal function to validate a new dependency that cannot be registered as stateless.\n It checks the new dependency is registered, not deprecated, and not stateful.\n @param dependency New stateful dependency to be set"},"id":407,"implemented":true,"kind":"function","modifiers":[],"name":"_validateStatefulDependency","nameLocation":"2309:27:4","nodeType":"FunctionDefinition","parameters":{"id":396,"nodeType":"ParameterList","parameters":[{"constant":false,"id":395,"mutability":"mutable","name":"dependency","nameLocation":"2345:10:4","nodeType":"VariableDeclaration","scope":407,"src":"2337:18:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":394,"name":"address","nodeType":"ElementaryTypeName","src":"2337:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2336:20:4"},"returnParameters":{"id":397,"nodeType":"ParameterList","parameters":[],"src":"2371:0:4"},"scope":448,"src":"2300:156:4","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":446,"nodeType":"Block","src":"2782:274:4","statements":[{"assignments":[416,418,420],"declarations":[{"constant":false,"id":416,"mutability":"mutable","name":"stateless","nameLocation":"2798:9:4","nodeType":"VariableDeclaration","scope":446,"src":"2793:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":415,"name":"bool","nodeType":"ElementaryTypeName","src":"2793:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":418,"mutability":"mutable","name":"deprecated","nameLocation":"2814:10:4","nodeType":"VariableDeclaration","scope":446,"src":"2809:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":417,"name":"bool","nodeType":"ElementaryTypeName","src":"2809:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":420,"mutability":"mutable","name":"namespace","nameLocation":"2834:9:4","nodeType":"VariableDeclaration","scope":446,"src":"2826:17:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":419,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2826:7:4","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":427,"initialValue":{"arguments":[{"id":425,"name":"dependency","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":410,"src":"2886:10:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"arguments":[{"id":422,"name":"registry","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":367,"src":"2857:8:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":421,"name":"IRegistry","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":525,"src":"2847:9:4","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IRegistry_$525_$","typeString":"type(contract IRegistry)"}},"id":423,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2847:19:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IRegistry_$525","typeString":"contract IRegistry"}},"id":424,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"implementationData","nodeType":"MemberAccess","referencedDeclaration":498,"src":"2847:38:4","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_bool_$_t_bool_$_t_bytes32_$","typeString":"function (address) view external returns (bool,bool,bytes32)"}},"id":426,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2847:50:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bool_$_t_bytes32_$","typeString":"tuple(bool,bool,bytes32)"}},"nodeType":"VariableDeclarationStatement","src":"2792:105:4"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":434,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":429,"name":"namespace","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":420,"src":"2915:9:4","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":432,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2936:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":431,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2928:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":430,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2928:7:4","typeDescriptions":{}}},"id":433,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2928:10:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"2915:23:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"444550454e44454e43595f4e4f545f52454749535445524544","id":435,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2940:27:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_778fd9d4b718f8239ef06eb57325f48f8e9ee99421da069e57617a6f513bfb7b","typeString":"literal_string \"DEPENDENCY_NOT_REGISTERED\""},"value":"DEPENDENCY_NOT_REGISTERED"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_778fd9d4b718f8239ef06eb57325f48f8e9ee99421da069e57617a6f513bfb7b","typeString":"literal_string \"DEPENDENCY_NOT_REGISTERED\""}],"id":428,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2907:7:4","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":436,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2907:61:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":437,"nodeType":"ExpressionStatement","src":"2907:61:4"},{"expression":{"arguments":[{"id":440,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"2986:11:4","subExpression":{"id":439,"name":"deprecated","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":418,"src":"2987:10:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"444550454e44454e43595f44455052454341544544","id":441,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2999:23:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_df8a3f58698e280c36562d600ce03d49987f51611989025dd75e965cd317041f","typeString":"literal_string \"DEPENDENCY_DEPRECATED\""},"value":"DEPENDENCY_DEPRECATED"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_df8a3f58698e280c36562d600ce03d49987f51611989025dd75e965cd317041f","typeString":"literal_string \"DEPENDENCY_DEPRECATED\""}],"id":438,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2978:7:4","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":442,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2978:45:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":443,"nodeType":"ExpressionStatement","src":"2978:45:4"},{"expression":{"id":444,"name":"stateless","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":416,"src":"3040:9:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":414,"id":445,"nodeType":"Return","src":"3033:16:4"}]},"documentation":{"id":408,"nodeType":"StructuredDocumentation","src":"2462:238:4","text":" @dev Internal function to validate a new dependency. It checks the dependency is registered and not deprecated.\n @param dependency New dependency to be set\n @return Whether the dependency is stateless or not"},"id":447,"implemented":true,"kind":"function","modifiers":[],"name":"_validateDependency","nameLocation":"2714:19:4","nodeType":"FunctionDefinition","parameters":{"id":411,"nodeType":"ParameterList","parameters":[{"constant":false,"id":410,"mutability":"mutable","name":"dependency","nameLocation":"2742:10:4","nodeType":"VariableDeclaration","scope":447,"src":"2734:18:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":409,"name":"address","nodeType":"ElementaryTypeName","src":"2734:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2733:20:4"},"returnParameters":{"id":414,"nodeType":"ParameterList","parameters":[{"constant":false,"id":413,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":447,"src":"2776:4:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":412,"name":"bool","nodeType":"ElementaryTypeName","src":"2776:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2775:6:4"},"scope":448,"src":"2705:351:4","stateMutability":"view","virtual":false,"visibility":"private"}],"scope":449,"src":"1226:1832:4"}],"src":"688:2371:4"},"id":4},"@mimic-fi/v2-registry/contracts/implementations/IImplementation.sol":{"ast":{"absolutePath":"@mimic-fi/v2-registry/contracts/implementations/IImplementation.sol","exportedSymbols":{"IImplementation":[464]},"id":465,"license":"GPL-3.0-or-later","nodeType":"SourceUnit","nodes":[{"id":450,"literals":["solidity",">=","0.8",".0"],"nodeType":"PragmaDirective","src":"688:24:5"},{"abstract":false,"baseContracts":[],"contractDependencies":[],"contractKind":"interface","documentation":{"id":451,"nodeType":"StructuredDocumentation","src":"754:147:5","text":" @title IImplementation\n @dev Implementation interface that must be followed for implementations to be registered in the Mimic Registry"},"fullyImplemented":false,"id":464,"linearizedBaseContracts":[464],"name":"IImplementation","nameLocation":"912:15:5","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":452,"nodeType":"StructuredDocumentation","src":"934:110:5","text":" @dev Tells the namespace under which the implementation is registered in the Mimic Registry"},"functionSelector":"44ba1fca","id":457,"implemented":false,"kind":"function","modifiers":[],"name":"NAMESPACE","nameLocation":"1058:9:5","nodeType":"FunctionDefinition","parameters":{"id":453,"nodeType":"ParameterList","parameters":[],"src":"1067:2:5"},"returnParameters":{"id":456,"nodeType":"ParameterList","parameters":[{"constant":false,"id":455,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":457,"src":"1093:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":454,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1093:7:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1092:9:5"},"scope":464,"src":"1049:53:5","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":458,"nodeType":"StructuredDocumentation","src":"1108:63:5","text":" @dev Tells the address of the Mimic Registry"},"functionSelector":"7b103999","id":463,"implemented":false,"kind":"function","modifiers":[],"name":"registry","nameLocation":"1185:8:5","nodeType":"FunctionDefinition","parameters":{"id":459,"nodeType":"ParameterList","parameters":[],"src":"1193:2:5"},"returnParameters":{"id":462,"nodeType":"ParameterList","parameters":[{"constant":false,"id":461,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":463,"src":"1219:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":460,"name":"address","nodeType":"ElementaryTypeName","src":"1219:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1218:9:5"},"scope":464,"src":"1176:52:5","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":465,"src":"902:328:5"}],"src":"688:543:5"},"id":5},"@mimic-fi/v2-registry/contracts/registry/IRegistry.sol":{"ast":{"absolutePath":"@mimic-fi/v2-registry/contracts/registry/IRegistry.sol","exportedSymbols":{"IAuthorizer":[89],"IRegistry":[525]},"id":526,"license":"GPL-3.0-or-later","nodeType":"SourceUnit","nodes":[{"id":466,"literals":["solidity",">=","0.8",".0"],"nodeType":"PragmaDirective","src":"688:24:6"},{"absolutePath":"@mimic-fi/v2-helpers/contracts/auth/IAuthorizer.sol","file":"@mimic-fi/v2-helpers/contracts/auth/IAuthorizer.sol","id":467,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":526,"sourceUnit":90,"src":"714:61:6","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":469,"name":"IAuthorizer","nodeType":"IdentifierPath","referencedDeclaration":89,"src":"898:11:6"},"id":470,"nodeType":"InheritanceSpecifier","src":"898:11:6"}],"contractDependencies":[89],"contractKind":"interface","documentation":{"id":468,"nodeType":"StructuredDocumentation","src":"777:97:6","text":" @title IRegistry\n @dev Registry interface, it must follow the IAuthorizer interface."},"fullyImplemented":false,"id":525,"linearizedBaseContracts":[525,89],"name":"IRegistry","nameLocation":"885:9:6","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":471,"nodeType":"StructuredDocumentation","src":"916:77:6","text":" @dev Emitted every time a new implementation is registered"},"id":479,"name":"Registered","nameLocation":"1004:10:6","nodeType":"EventDefinition","parameters":{"id":478,"nodeType":"ParameterList","parameters":[{"constant":false,"id":473,"indexed":true,"mutability":"mutable","name":"namespace","nameLocation":"1031:9:6","nodeType":"VariableDeclaration","scope":479,"src":"1015:25:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":472,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1015:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":475,"indexed":true,"mutability":"mutable","name":"implementation","nameLocation":"1058:14:6","nodeType":"VariableDeclaration","scope":479,"src":"1042:30:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":474,"name":"address","nodeType":"ElementaryTypeName","src":"1042:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":477,"indexed":false,"mutability":"mutable","name":"stateless","nameLocation":"1079:9:6","nodeType":"VariableDeclaration","scope":479,"src":"1074:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":476,"name":"bool","nodeType":"ElementaryTypeName","src":"1074:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1014:75:6"},"src":"998:92:6"},{"anonymous":false,"documentation":{"id":480,"nodeType":"StructuredDocumentation","src":"1096:74:6","text":" @dev Emitted every time an implementation is deprecated"},"id":486,"name":"Deprecated","nameLocation":"1181:10:6","nodeType":"EventDefinition","parameters":{"id":485,"nodeType":"ParameterList","parameters":[{"constant":false,"id":482,"indexed":true,"mutability":"mutable","name":"namespace","nameLocation":"1208:9:6","nodeType":"VariableDeclaration","scope":486,"src":"1192:25:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":481,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1192:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":484,"indexed":true,"mutability":"mutable","name":"implementation","nameLocation":"1235:14:6","nodeType":"VariableDeclaration","scope":486,"src":"1219:30:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":483,"name":"address","nodeType":"ElementaryTypeName","src":"1219:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1191:59:6"},"src":"1175:76:6"},{"documentation":{"id":487,"nodeType":"StructuredDocumentation","src":"1257:140:6","text":" @dev Tells the data of an implementation:\n @param implementation Address of the implementation to request it's data"},"functionSelector":"9235dcf8","id":498,"implemented":false,"kind":"function","modifiers":[],"name":"implementationData","nameLocation":"1411:18:6","nodeType":"FunctionDefinition","parameters":{"id":490,"nodeType":"ParameterList","parameters":[{"constant":false,"id":489,"mutability":"mutable","name":"implementation","nameLocation":"1438:14:6","nodeType":"VariableDeclaration","scope":498,"src":"1430:22:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":488,"name":"address","nodeType":"ElementaryTypeName","src":"1430:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1429:24:6"},"returnParameters":{"id":497,"nodeType":"ParameterList","parameters":[{"constant":false,"id":492,"mutability":"mutable","name":"stateless","nameLocation":"1506:9:6","nodeType":"VariableDeclaration","scope":498,"src":"1501:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":491,"name":"bool","nodeType":"ElementaryTypeName","src":"1501:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":494,"mutability":"mutable","name":"deprecated","nameLocation":"1522:10:6","nodeType":"VariableDeclaration","scope":498,"src":"1517:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":493,"name":"bool","nodeType":"ElementaryTypeName","src":"1517:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":496,"mutability":"mutable","name":"namespace","nameLocation":"1542:9:6","nodeType":"VariableDeclaration","scope":498,"src":"1534:17:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":495,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1534:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1500:52:6"},"scope":525,"src":"1402:151:6","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":499,"nodeType":"StructuredDocumentation","src":"1559:240:6","text":" @dev Tells if a specific implementation is registered under a certain namespace and it's not deprecated\n @param namespace Namespace asking for\n @param implementation Address of the implementation to be checked"},"functionSelector":"ca0f8f3b","id":508,"implemented":false,"kind":"function","modifiers":[],"name":"isActive","nameLocation":"1813:8:6","nodeType":"FunctionDefinition","parameters":{"id":504,"nodeType":"ParameterList","parameters":[{"constant":false,"id":501,"mutability":"mutable","name":"namespace","nameLocation":"1830:9:6","nodeType":"VariableDeclaration","scope":508,"src":"1822:17:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":500,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1822:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":503,"mutability":"mutable","name":"implementation","nameLocation":"1849:14:6","nodeType":"VariableDeclaration","scope":508,"src":"1841:22:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":502,"name":"address","nodeType":"ElementaryTypeName","src":"1841:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1821:43:6"},"returnParameters":{"id":507,"nodeType":"ParameterList","parameters":[{"constant":false,"id":506,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":508,"src":"1888:4:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":505,"name":"bool","nodeType":"ElementaryTypeName","src":"1888:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1887:6:6"},"scope":525,"src":"1804:90:6","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":509,"nodeType":"StructuredDocumentation","src":"1900:291:6","text":" @dev Registers a new implementation for a given namespace\n @param namespace Namespace to be used for the implementation\n @param implementation Address of the implementation to be registered\n @param stateless Whether the implementation is stateless or not"},"functionSelector":"678449d4","id":518,"implemented":false,"kind":"function","modifiers":[],"name":"register","nameLocation":"2205:8:6","nodeType":"FunctionDefinition","parameters":{"id":516,"nodeType":"ParameterList","parameters":[{"constant":false,"id":511,"mutability":"mutable","name":"namespace","nameLocation":"2222:9:6","nodeType":"VariableDeclaration","scope":518,"src":"2214:17:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":510,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2214:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":513,"mutability":"mutable","name":"implementation","nameLocation":"2241:14:6","nodeType":"VariableDeclaration","scope":518,"src":"2233:22:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":512,"name":"address","nodeType":"ElementaryTypeName","src":"2233:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":515,"mutability":"mutable","name":"stateless","nameLocation":"2262:9:6","nodeType":"VariableDeclaration","scope":518,"src":"2257:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":514,"name":"bool","nodeType":"ElementaryTypeName","src":"2257:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2213:59:6"},"returnParameters":{"id":517,"nodeType":"ParameterList","parameters":[],"src":"2281:0:6"},"scope":525,"src":"2196:86:6","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":519,"nodeType":"StructuredDocumentation","src":"2288:138:6","text":" @dev Deprecates a registered implementation\n @param implementation Address of the implementation to be deprecated"},"functionSelector":"0753c30c","id":524,"implemented":false,"kind":"function","modifiers":[],"name":"deprecate","nameLocation":"2440:9:6","nodeType":"FunctionDefinition","parameters":{"id":522,"nodeType":"ParameterList","parameters":[{"constant":false,"id":521,"mutability":"mutable","name":"implementation","nameLocation":"2458:14:6","nodeType":"VariableDeclaration","scope":524,"src":"2450:22:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":520,"name":"address","nodeType":"ElementaryTypeName","src":"2450:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2449:24:6"},"returnParameters":{"id":523,"nodeType":"ParameterList","parameters":[],"src":"2482:0:6"},"scope":525,"src":"2431:52:6","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":526,"src":"875:1610:6"}],"src":"688:1798:6"},"id":6},"@openzeppelin/contracts/proxy/utils/Initializable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/proxy/utils/Initializable.sol","exportedSymbols":{"Address":[1074],"Initializable":[676]},"id":677,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":527,"literals":["solidity","^","0.8",".2"],"nodeType":"PragmaDirective","src":"113:23:7"},{"absolutePath":"@openzeppelin/contracts/utils/Address.sol","file":"../../utils/Address.sol","id":528,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":677,"sourceUnit":1075,"src":"138:33:7","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[],"contractDependencies":[],"contractKind":"contract","documentation":{"id":529,"nodeType":"StructuredDocumentation","src":"173:2198:7","text":" @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\n behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\n external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\n function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\n The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\n reused. This mechanism prevents re-execution of each \"step\" but allows the creation of new initialization steps in\n case an upgrade adds a module that needs to be initialized.\n For example:\n [.hljs-theme-light.nopadding]\n ```\n contract MyToken is ERC20Upgradeable {\n     function initialize() initializer public {\n         __ERC20_init(\"MyToken\", \"MTK\");\n     }\n }\n contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\n     function initializeV2() reinitializer(2) public {\n         __ERC20Permit_init(\"MyToken\");\n     }\n }\n ```\n TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\n possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\n CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\n that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\n [CAUTION]\n ====\n Avoid leaving a contract uninitialized.\n An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\n contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\n the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\n [.hljs-theme-light.nopadding]\n ```\n /// @custom:oz-upgrades-unsafe-allow constructor\n constructor() {\n     _disableInitializers();\n }\n ```\n ===="},"fullyImplemented":true,"id":676,"linearizedBaseContracts":[676],"name":"Initializable","nameLocation":"2390:13:7","nodeType":"ContractDefinition","nodes":[{"constant":false,"documentation":{"id":530,"nodeType":"StructuredDocumentation","src":"2410:109:7","text":" @dev Indicates that the contract has been initialized.\n @custom:oz-retyped-from bool"},"id":532,"mutability":"mutable","name":"_initialized","nameLocation":"2538:12:7","nodeType":"VariableDeclaration","scope":676,"src":"2524:26:7","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":531,"name":"uint8","nodeType":"ElementaryTypeName","src":"2524:5:7","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"private"},{"constant":false,"documentation":{"id":533,"nodeType":"StructuredDocumentation","src":"2557:91:7","text":" @dev Indicates that the contract is in the process of being initialized."},"id":535,"mutability":"mutable","name":"_initializing","nameLocation":"2666:13:7","nodeType":"VariableDeclaration","scope":676,"src":"2653:26:7","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":534,"name":"bool","nodeType":"ElementaryTypeName","src":"2653:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"private"},{"anonymous":false,"documentation":{"id":536,"nodeType":"StructuredDocumentation","src":"2686:90:7","text":" @dev Triggered when the contract has been initialized or reinitialized."},"id":540,"name":"Initialized","nameLocation":"2787:11:7","nodeType":"EventDefinition","parameters":{"id":539,"nodeType":"ParameterList","parameters":[{"constant":false,"id":538,"indexed":false,"mutability":"mutable","name":"version","nameLocation":"2805:7:7","nodeType":"VariableDeclaration","scope":540,"src":"2799:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":537,"name":"uint8","nodeType":"ElementaryTypeName","src":"2799:5:7","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"2798:15:7"},"src":"2781:33:7"},{"body":{"id":595,"nodeType":"Block","src":"3090:472:7","statements":[{"assignments":[544],"declarations":[{"constant":false,"id":544,"mutability":"mutable","name":"isTopLevelCall","nameLocation":"3105:14:7","nodeType":"VariableDeclaration","scope":595,"src":"3100:19:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":543,"name":"bool","nodeType":"ElementaryTypeName","src":"3100:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":547,"initialValue":{"id":546,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"3122:14:7","subExpression":{"id":545,"name":"_initializing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":535,"src":"3123:13:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"3100:36:7"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":568,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":553,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":549,"name":"isTopLevelCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":544,"src":"3168:14:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":552,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":550,"name":"_initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":532,"src":"3186:12:7","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"31","id":551,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3201:1:7","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"3186:16:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3168:34:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":554,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3167:36:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":566,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":562,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"3208:34:7","subExpression":{"arguments":[{"arguments":[{"id":559,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"3236:4:7","typeDescriptions":{"typeIdentifier":"t_contract$_Initializable_$676","typeString":"contract Initializable"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Initializable_$676","typeString":"contract Initializable"}],"id":558,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3228:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":557,"name":"address","nodeType":"ElementaryTypeName","src":"3228:7:7","typeDescriptions":{}}},"id":560,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3228:13:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":555,"name":"Address","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1074,"src":"3209:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Address_$1074_$","typeString":"type(library Address)"}},"id":556,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"isContract","nodeType":"MemberAccess","referencedDeclaration":797,"src":"3209:18:7","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_bool_$","typeString":"function (address) view returns (bool)"}},"id":561,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3209:33:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":565,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":563,"name":"_initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":532,"src":"3246:12:7","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"31","id":564,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3262:1:7","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"3246:17:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3208:55:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":567,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3207:57:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3167:97:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e697469616c697a61626c653a20636f6e747261637420697320616c726561647920696e697469616c697a6564","id":569,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3278:48:7","typeDescriptions":{"typeIdentifier":"t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759","typeString":"literal_string \"Initializable: contract is already initialized\""},"value":"Initializable: contract is already initialized"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759","typeString":"literal_string \"Initializable: contract is already initialized\""}],"id":548,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3146:7:7","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":570,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3146:190:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":571,"nodeType":"ExpressionStatement","src":"3146:190:7"},{"expression":{"id":574,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":572,"name":"_initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":532,"src":"3346:12:7","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"31","id":573,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3361:1:7","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"3346:16:7","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":575,"nodeType":"ExpressionStatement","src":"3346:16:7"},{"condition":{"id":576,"name":"isTopLevelCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":544,"src":"3376:14:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":582,"nodeType":"IfStatement","src":"3372:65:7","trueBody":{"id":581,"nodeType":"Block","src":"3392:45:7","statements":[{"expression":{"id":579,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":577,"name":"_initializing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":535,"src":"3406:13:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":578,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"3422:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"3406:20:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":580,"nodeType":"ExpressionStatement","src":"3406:20:7"}]}},{"id":583,"nodeType":"PlaceholderStatement","src":"3446:1:7"},{"condition":{"id":584,"name":"isTopLevelCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":544,"src":"3461:14:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":594,"nodeType":"IfStatement","src":"3457:99:7","trueBody":{"id":593,"nodeType":"Block","src":"3477:79:7","statements":[{"expression":{"id":587,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":585,"name":"_initializing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":535,"src":"3491:13:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":586,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"3507:5:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"3491:21:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":588,"nodeType":"ExpressionStatement","src":"3491:21:7"},{"eventCall":{"arguments":[{"hexValue":"31","id":590,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3543:1:7","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"}],"id":589,"name":"Initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":540,"src":"3531:11:7","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint8_$returns$__$","typeString":"function (uint8)"}},"id":591,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3531:14:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":592,"nodeType":"EmitStatement","src":"3526:19:7"}]}}]},"documentation":{"id":541,"nodeType":"StructuredDocumentation","src":"2820:242:7","text":" @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\n `onlyInitializing` functions can be used to initialize parent contracts. Equivalent to `reinitializer(1)`."},"id":596,"name":"initializer","nameLocation":"3076:11:7","nodeType":"ModifierDefinition","parameters":{"id":542,"nodeType":"ParameterList","parameters":[],"src":"3087:2:7"},"src":"3067:495:7","virtual":false,"visibility":"internal"},{"body":{"id":628,"nodeType":"Block","src":"4377:255:7","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":607,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":603,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"4395:14:7","subExpression":{"id":602,"name":"_initializing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":535,"src":"4396:13:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":606,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":604,"name":"_initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":532,"src":"4413:12:7","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":605,"name":"version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":599,"src":"4428:7:7","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"4413:22:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"4395:40:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e697469616c697a61626c653a20636f6e747261637420697320616c726561647920696e697469616c697a6564","id":608,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4437:48:7","typeDescriptions":{"typeIdentifier":"t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759","typeString":"literal_string \"Initializable: contract is already initialized\""},"value":"Initializable: contract is already initialized"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759","typeString":"literal_string \"Initializable: contract is already initialized\""}],"id":601,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4387:7:7","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":609,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4387:99:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":610,"nodeType":"ExpressionStatement","src":"4387:99:7"},{"expression":{"id":613,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":611,"name":"_initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":532,"src":"4496:12:7","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":612,"name":"version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":599,"src":"4511:7:7","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"4496:22:7","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":614,"nodeType":"ExpressionStatement","src":"4496:22:7"},{"expression":{"id":617,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":615,"name":"_initializing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":535,"src":"4528:13:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":616,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"4544:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"4528:20:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":618,"nodeType":"ExpressionStatement","src":"4528:20:7"},{"id":619,"nodeType":"PlaceholderStatement","src":"4558:1:7"},{"expression":{"id":622,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":620,"name":"_initializing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":535,"src":"4569:13:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":621,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"4585:5:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"4569:21:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":623,"nodeType":"ExpressionStatement","src":"4569:21:7"},{"eventCall":{"arguments":[{"id":625,"name":"version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":599,"src":"4617:7:7","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint8","typeString":"uint8"}],"id":624,"name":"Initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":540,"src":"4605:11:7","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint8_$returns$__$","typeString":"function (uint8)"}},"id":626,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4605:20:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":627,"nodeType":"EmitStatement","src":"4600:25:7"}]},"documentation":{"id":597,"nodeType":"StructuredDocumentation","src":"3568:766:7","text":" @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\n contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\n used to initialize parent contracts.\n `initializer` is equivalent to `reinitializer(1)`, so a reinitializer may be used after the original\n initialization step. This is essential to configure modules that are added through upgrades and that require\n initialization.\n Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\n a contract, executing them in the right order is up to the developer or operator."},"id":629,"name":"reinitializer","nameLocation":"4348:13:7","nodeType":"ModifierDefinition","parameters":{"id":600,"nodeType":"ParameterList","parameters":[{"constant":false,"id":599,"mutability":"mutable","name":"version","nameLocation":"4368:7:7","nodeType":"VariableDeclaration","scope":629,"src":"4362:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":598,"name":"uint8","nodeType":"ElementaryTypeName","src":"4362:5:7","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"4361:15:7"},"src":"4339:293:7","virtual":false,"visibility":"internal"},{"body":{"id":638,"nodeType":"Block","src":"4870:97:7","statements":[{"expression":{"arguments":[{"id":633,"name":"_initializing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":535,"src":"4888:13:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e697469616c697a61626c653a20636f6e7472616374206973206e6f7420696e697469616c697a696e67","id":634,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4903:45:7","typeDescriptions":{"typeIdentifier":"t_stringliteral_d688db918bb9dd50354922faa108595679886fe9ff08046ad1ffe30aaea55f8b","typeString":"literal_string \"Initializable: contract is not initializing\""},"value":"Initializable: contract is not initializing"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_d688db918bb9dd50354922faa108595679886fe9ff08046ad1ffe30aaea55f8b","typeString":"literal_string \"Initializable: contract is not initializing\""}],"id":632,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4880:7:7","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":635,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4880:69:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":636,"nodeType":"ExpressionStatement","src":"4880:69:7"},{"id":637,"nodeType":"PlaceholderStatement","src":"4959:1:7"}]},"documentation":{"id":630,"nodeType":"StructuredDocumentation","src":"4638:199:7","text":" @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\n {initializer} and {reinitializer} modifiers, directly or indirectly."},"id":639,"name":"onlyInitializing","nameLocation":"4851:16:7","nodeType":"ModifierDefinition","parameters":{"id":631,"nodeType":"ParameterList","parameters":[],"src":"4867:2:7"},"src":"4842:125:7","virtual":false,"visibility":"internal"},{"body":{"id":674,"nodeType":"Block","src":"5415:230:7","statements":[{"expression":{"arguments":[{"id":645,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"5433:14:7","subExpression":{"id":644,"name":"_initializing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":535,"src":"5434:13:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e697469616c697a61626c653a20636f6e747261637420697320696e697469616c697a696e67","id":646,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5449:41:7","typeDescriptions":{"typeIdentifier":"t_stringliteral_a53f5879e7518078ff19b2e3d6b41e757a87364ec6872787feb45bfc41131d1a","typeString":"literal_string \"Initializable: contract is initializing\""},"value":"Initializable: contract is initializing"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_a53f5879e7518078ff19b2e3d6b41e757a87364ec6872787feb45bfc41131d1a","typeString":"literal_string \"Initializable: contract is initializing\""}],"id":643,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5425:7:7","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":647,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5425:66:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":648,"nodeType":"ExpressionStatement","src":"5425:66:7"},{"condition":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":655,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":649,"name":"_initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":532,"src":"5505:12:7","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"arguments":[{"id":652,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5525:5:7","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":651,"name":"uint8","nodeType":"ElementaryTypeName","src":"5525:5:7","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"}],"id":650,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"5520:4:7","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":653,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5520:11:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint8","typeString":"type(uint8)"}},"id":654,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"5520:15:7","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"5505:30:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":673,"nodeType":"IfStatement","src":"5501:138:7","trueBody":{"id":672,"nodeType":"Block","src":"5537:102:7","statements":[{"expression":{"id":662,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":656,"name":"_initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":532,"src":"5551:12:7","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"arguments":[{"id":659,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5571:5:7","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":658,"name":"uint8","nodeType":"ElementaryTypeName","src":"5571:5:7","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"}],"id":657,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"5566:4:7","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":660,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5566:11:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint8","typeString":"type(uint8)"}},"id":661,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"5566:15:7","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"5551:30:7","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":663,"nodeType":"ExpressionStatement","src":"5551:30:7"},{"eventCall":{"arguments":[{"expression":{"arguments":[{"id":667,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5617:5:7","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":666,"name":"uint8","nodeType":"ElementaryTypeName","src":"5617:5:7","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"}],"id":665,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"5612:4:7","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":668,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5612:11:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint8","typeString":"type(uint8)"}},"id":669,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"5612:15:7","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint8","typeString":"uint8"}],"id":664,"name":"Initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":540,"src":"5600:11:7","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint8_$returns$__$","typeString":"function (uint8)"}},"id":670,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5600:28:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":671,"nodeType":"EmitStatement","src":"5595:33:7"}]}}]},"documentation":{"id":640,"nodeType":"StructuredDocumentation","src":"4973:388:7","text":" @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\n Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\n to any version. It is recommended to use this to lock implementation contracts that are designed to be called\n through proxies."},"id":675,"implemented":true,"kind":"function","modifiers":[],"name":"_disableInitializers","nameLocation":"5375:20:7","nodeType":"FunctionDefinition","parameters":{"id":641,"nodeType":"ParameterList","parameters":[],"src":"5395:2:7"},"returnParameters":{"id":642,"nodeType":"ParameterList","parameters":[],"src":"5415:0:7"},"scope":676,"src":"5366:279:7","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":677,"src":"2372:3275:7"}],"src":"113:5535:7"},"id":7},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","exportedSymbols":{"IERC20":[754]},"id":755,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":678,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"106:23:8"},{"abstract":false,"baseContracts":[],"contractDependencies":[],"contractKind":"interface","documentation":{"id":679,"nodeType":"StructuredDocumentation","src":"131:70:8","text":" @dev Interface of the ERC20 standard as defined in the EIP."},"fullyImplemented":false,"id":754,"linearizedBaseContracts":[754],"name":"IERC20","nameLocation":"212:6:8","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":680,"nodeType":"StructuredDocumentation","src":"225:158:8","text":" @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."},"id":688,"name":"Transfer","nameLocation":"394:8:8","nodeType":"EventDefinition","parameters":{"id":687,"nodeType":"ParameterList","parameters":[{"constant":false,"id":682,"indexed":true,"mutability":"mutable","name":"from","nameLocation":"419:4:8","nodeType":"VariableDeclaration","scope":688,"src":"403:20:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":681,"name":"address","nodeType":"ElementaryTypeName","src":"403:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":684,"indexed":true,"mutability":"mutable","name":"to","nameLocation":"441:2:8","nodeType":"VariableDeclaration","scope":688,"src":"425:18:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":683,"name":"address","nodeType":"ElementaryTypeName","src":"425:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":686,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"453:5:8","nodeType":"VariableDeclaration","scope":688,"src":"445:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":685,"name":"uint256","nodeType":"ElementaryTypeName","src":"445:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"402:57:8"},"src":"388:72:8"},{"anonymous":false,"documentation":{"id":689,"nodeType":"StructuredDocumentation","src":"466:148:8","text":" @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."},"id":697,"name":"Approval","nameLocation":"625:8:8","nodeType":"EventDefinition","parameters":{"id":696,"nodeType":"ParameterList","parameters":[{"constant":false,"id":691,"indexed":true,"mutability":"mutable","name":"owner","nameLocation":"650:5:8","nodeType":"VariableDeclaration","scope":697,"src":"634:21:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":690,"name":"address","nodeType":"ElementaryTypeName","src":"634:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":693,"indexed":true,"mutability":"mutable","name":"spender","nameLocation":"673:7:8","nodeType":"VariableDeclaration","scope":697,"src":"657:23:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":692,"name":"address","nodeType":"ElementaryTypeName","src":"657:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":695,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"690:5:8","nodeType":"VariableDeclaration","scope":697,"src":"682:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":694,"name":"uint256","nodeType":"ElementaryTypeName","src":"682:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"633:63:8"},"src":"619:78:8"},{"documentation":{"id":698,"nodeType":"StructuredDocumentation","src":"703:66:8","text":" @dev Returns the amount of tokens in existence."},"functionSelector":"18160ddd","id":703,"implemented":false,"kind":"function","modifiers":[],"name":"totalSupply","nameLocation":"783:11:8","nodeType":"FunctionDefinition","parameters":{"id":699,"nodeType":"ParameterList","parameters":[],"src":"794:2:8"},"returnParameters":{"id":702,"nodeType":"ParameterList","parameters":[{"constant":false,"id":701,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":703,"src":"820:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":700,"name":"uint256","nodeType":"ElementaryTypeName","src":"820:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"819:9:8"},"scope":754,"src":"774:55:8","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":704,"nodeType":"StructuredDocumentation","src":"835:72:8","text":" @dev Returns the amount of tokens owned by `account`."},"functionSelector":"70a08231","id":711,"implemented":false,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"921:9:8","nodeType":"FunctionDefinition","parameters":{"id":707,"nodeType":"ParameterList","parameters":[{"constant":false,"id":706,"mutability":"mutable","name":"account","nameLocation":"939:7:8","nodeType":"VariableDeclaration","scope":711,"src":"931:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":705,"name":"address","nodeType":"ElementaryTypeName","src":"931:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"930:17:8"},"returnParameters":{"id":710,"nodeType":"ParameterList","parameters":[{"constant":false,"id":709,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":711,"src":"971:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":708,"name":"uint256","nodeType":"ElementaryTypeName","src":"971:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"970:9:8"},"scope":754,"src":"912:68:8","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":712,"nodeType":"StructuredDocumentation","src":"986:202:8","text":" @dev Moves `amount` tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."},"functionSelector":"a9059cbb","id":721,"implemented":false,"kind":"function","modifiers":[],"name":"transfer","nameLocation":"1202:8:8","nodeType":"FunctionDefinition","parameters":{"id":717,"nodeType":"ParameterList","parameters":[{"constant":false,"id":714,"mutability":"mutable","name":"to","nameLocation":"1219:2:8","nodeType":"VariableDeclaration","scope":721,"src":"1211:10:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":713,"name":"address","nodeType":"ElementaryTypeName","src":"1211:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":716,"mutability":"mutable","name":"amount","nameLocation":"1231:6:8","nodeType":"VariableDeclaration","scope":721,"src":"1223:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":715,"name":"uint256","nodeType":"ElementaryTypeName","src":"1223:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1210:28:8"},"returnParameters":{"id":720,"nodeType":"ParameterList","parameters":[{"constant":false,"id":719,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":721,"src":"1257:4:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":718,"name":"bool","nodeType":"ElementaryTypeName","src":"1257:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1256:6:8"},"scope":754,"src":"1193:70:8","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":722,"nodeType":"StructuredDocumentation","src":"1269:264:8","text":" @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."},"functionSelector":"dd62ed3e","id":731,"implemented":false,"kind":"function","modifiers":[],"name":"allowance","nameLocation":"1547:9:8","nodeType":"FunctionDefinition","parameters":{"id":727,"nodeType":"ParameterList","parameters":[{"constant":false,"id":724,"mutability":"mutable","name":"owner","nameLocation":"1565:5:8","nodeType":"VariableDeclaration","scope":731,"src":"1557:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":723,"name":"address","nodeType":"ElementaryTypeName","src":"1557:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":726,"mutability":"mutable","name":"spender","nameLocation":"1580:7:8","nodeType":"VariableDeclaration","scope":731,"src":"1572:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":725,"name":"address","nodeType":"ElementaryTypeName","src":"1572:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1556:32:8"},"returnParameters":{"id":730,"nodeType":"ParameterList","parameters":[{"constant":false,"id":729,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":731,"src":"1612:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":728,"name":"uint256","nodeType":"ElementaryTypeName","src":"1612:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1611:9:8"},"scope":754,"src":"1538:83:8","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":732,"nodeType":"StructuredDocumentation","src":"1627:642:8","text":" @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."},"functionSelector":"095ea7b3","id":741,"implemented":false,"kind":"function","modifiers":[],"name":"approve","nameLocation":"2283:7:8","nodeType":"FunctionDefinition","parameters":{"id":737,"nodeType":"ParameterList","parameters":[{"constant":false,"id":734,"mutability":"mutable","name":"spender","nameLocation":"2299:7:8","nodeType":"VariableDeclaration","scope":741,"src":"2291:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":733,"name":"address","nodeType":"ElementaryTypeName","src":"2291:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":736,"mutability":"mutable","name":"amount","nameLocation":"2316:6:8","nodeType":"VariableDeclaration","scope":741,"src":"2308:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":735,"name":"uint256","nodeType":"ElementaryTypeName","src":"2308:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2290:33:8"},"returnParameters":{"id":740,"nodeType":"ParameterList","parameters":[{"constant":false,"id":739,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":741,"src":"2342:4:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":738,"name":"bool","nodeType":"ElementaryTypeName","src":"2342:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2341:6:8"},"scope":754,"src":"2274:74:8","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":742,"nodeType":"StructuredDocumentation","src":"2354:287:8","text":" @dev Moves `amount` tokens from `from` to `to` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."},"functionSelector":"23b872dd","id":753,"implemented":false,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"2655:12:8","nodeType":"FunctionDefinition","parameters":{"id":749,"nodeType":"ParameterList","parameters":[{"constant":false,"id":744,"mutability":"mutable","name":"from","nameLocation":"2685:4:8","nodeType":"VariableDeclaration","scope":753,"src":"2677:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":743,"name":"address","nodeType":"ElementaryTypeName","src":"2677:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":746,"mutability":"mutable","name":"to","nameLocation":"2707:2:8","nodeType":"VariableDeclaration","scope":753,"src":"2699:10:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":745,"name":"address","nodeType":"ElementaryTypeName","src":"2699:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":748,"mutability":"mutable","name":"amount","nameLocation":"2727:6:8","nodeType":"VariableDeclaration","scope":753,"src":"2719:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":747,"name":"uint256","nodeType":"ElementaryTypeName","src":"2719:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2667:72:8"},"returnParameters":{"id":752,"nodeType":"ParameterList","parameters":[{"constant":false,"id":751,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":753,"src":"2758:4:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":750,"name":"bool","nodeType":"ElementaryTypeName","src":"2758:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2757:6:8"},"scope":754,"src":"2646:118:8","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":755,"src":"202:2564:8"}],"src":"106:2661:8"},"id":8},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol","exportedSymbols":{"IERC20":[754],"IERC20Metadata":[779]},"id":780,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":756,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"110:23:9"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"../IERC20.sol","id":757,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":780,"sourceUnit":755,"src":"135:23:9","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":759,"name":"IERC20","nodeType":"IdentifierPath","referencedDeclaration":754,"src":"305:6:9"},"id":760,"nodeType":"InheritanceSpecifier","src":"305:6:9"}],"contractDependencies":[754],"contractKind":"interface","documentation":{"id":758,"nodeType":"StructuredDocumentation","src":"160:116:9","text":" @dev Interface for the optional metadata functions from the ERC20 standard.\n _Available since v4.1._"},"fullyImplemented":false,"id":779,"linearizedBaseContracts":[779,754],"name":"IERC20Metadata","nameLocation":"287:14:9","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":761,"nodeType":"StructuredDocumentation","src":"318:54:9","text":" @dev Returns the name of the token."},"functionSelector":"06fdde03","id":766,"implemented":false,"kind":"function","modifiers":[],"name":"name","nameLocation":"386:4:9","nodeType":"FunctionDefinition","parameters":{"id":762,"nodeType":"ParameterList","parameters":[],"src":"390:2:9"},"returnParameters":{"id":765,"nodeType":"ParameterList","parameters":[{"constant":false,"id":764,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":766,"src":"416:13:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":763,"name":"string","nodeType":"ElementaryTypeName","src":"416:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"415:15:9"},"scope":779,"src":"377:54:9","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":767,"nodeType":"StructuredDocumentation","src":"437:56:9","text":" @dev Returns the symbol of the token."},"functionSelector":"95d89b41","id":772,"implemented":false,"kind":"function","modifiers":[],"name":"symbol","nameLocation":"507:6:9","nodeType":"FunctionDefinition","parameters":{"id":768,"nodeType":"ParameterList","parameters":[],"src":"513:2:9"},"returnParameters":{"id":771,"nodeType":"ParameterList","parameters":[{"constant":false,"id":770,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":772,"src":"539:13:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":769,"name":"string","nodeType":"ElementaryTypeName","src":"539:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"538:15:9"},"scope":779,"src":"498:56:9","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":773,"nodeType":"StructuredDocumentation","src":"560:65:9","text":" @dev Returns the decimals places of the token."},"functionSelector":"313ce567","id":778,"implemented":false,"kind":"function","modifiers":[],"name":"decimals","nameLocation":"639:8:9","nodeType":"FunctionDefinition","parameters":{"id":774,"nodeType":"ParameterList","parameters":[],"src":"647:2:9"},"returnParameters":{"id":777,"nodeType":"ParameterList","parameters":[{"constant":false,"id":776,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":778,"src":"673:5:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":775,"name":"uint8","nodeType":"ElementaryTypeName","src":"673:5:9","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"672:7:9"},"scope":779,"src":"630:50:9","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":780,"src":"277:405:9"}],"src":"110:573:9"},"id":9},"@openzeppelin/contracts/utils/Address.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Address.sol","exportedSymbols":{"Address":[1074]},"id":1075,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":781,"literals":["solidity","^","0.8",".1"],"nodeType":"PragmaDirective","src":"101:23:10"},{"abstract":false,"baseContracts":[],"contractDependencies":[],"contractKind":"library","documentation":{"id":782,"nodeType":"StructuredDocumentation","src":"126:67:10","text":" @dev Collection of functions related to the address type"},"fullyImplemented":true,"id":1074,"linearizedBaseContracts":[1074],"name":"Address","nameLocation":"202:7:10","nodeType":"ContractDefinition","nodes":[{"body":{"id":796,"nodeType":"Block","src":"1241:254:10","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":794,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":790,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":785,"src":"1465:7:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":791,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"code","nodeType":"MemberAccess","src":"1465:12:10","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":792,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"1465:19:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":793,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1487:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1465:23:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":789,"id":795,"nodeType":"Return","src":"1458:30:10"}]},"documentation":{"id":783,"nodeType":"StructuredDocumentation","src":"216:954:10","text":" @dev Returns true if `account` is a contract.\n [IMPORTANT]\n ====\n It is unsafe to assume that an address for which this function returns\n false is an externally-owned account (EOA) and not a contract.\n Among others, `isContract` will return false for the following\n types of addresses:\n  - an externally-owned account\n  - a contract in construction\n  - an address where a contract will be created\n  - an address where a contract lived, but was destroyed\n ====\n [IMPORTANT]\n ====\n You shouldn't rely on `isContract` to protect against flash loan attacks!\n Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n constructor.\n ===="},"id":797,"implemented":true,"kind":"function","modifiers":[],"name":"isContract","nameLocation":"1184:10:10","nodeType":"FunctionDefinition","parameters":{"id":786,"nodeType":"ParameterList","parameters":[{"constant":false,"id":785,"mutability":"mutable","name":"account","nameLocation":"1203:7:10","nodeType":"VariableDeclaration","scope":797,"src":"1195:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":784,"name":"address","nodeType":"ElementaryTypeName","src":"1195:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1194:17:10"},"returnParameters":{"id":789,"nodeType":"ParameterList","parameters":[{"constant":false,"id":788,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":797,"src":"1235:4:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":787,"name":"bool","nodeType":"ElementaryTypeName","src":"1235:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1234:6:10"},"scope":1074,"src":"1175:320:10","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":830,"nodeType":"Block","src":"2483:241:10","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":812,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":808,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"2509:4:10","typeDescriptions":{"typeIdentifier":"t_contract$_Address_$1074","typeString":"library Address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Address_$1074","typeString":"library Address"}],"id":807,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2501:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":806,"name":"address","nodeType":"ElementaryTypeName","src":"2501:7:10","typeDescriptions":{}}},"id":809,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2501:13:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":810,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"balance","nodeType":"MemberAccess","src":"2501:21:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":811,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":802,"src":"2526:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2501:31:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a20696e73756666696369656e742062616c616e6365","id":813,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2534:31:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9","typeString":"literal_string \"Address: insufficient balance\""},"value":"Address: insufficient balance"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9","typeString":"literal_string \"Address: insufficient balance\""}],"id":805,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2493:7:10","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":814,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2493:73:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":815,"nodeType":"ExpressionStatement","src":"2493:73:10"},{"assignments":[817,null],"declarations":[{"constant":false,"id":817,"mutability":"mutable","name":"success","nameLocation":"2583:7:10","nodeType":"VariableDeclaration","scope":830,"src":"2578:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":816,"name":"bool","nodeType":"ElementaryTypeName","src":"2578:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},null],"id":824,"initialValue":{"arguments":[{"hexValue":"","id":822,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2626:2:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"id":818,"name":"recipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":800,"src":"2596:9:10","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"id":819,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"call","nodeType":"MemberAccess","src":"2596:14:10","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":821,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"id":820,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":802,"src":"2618:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"2596:29:10","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":823,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2596:33:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"2577:52:10"},{"expression":{"arguments":[{"id":826,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":817,"src":"2647:7:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a20756e61626c6520746f2073656e642076616c75652c20726563697069656e74206d61792068617665207265766572746564","id":827,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2656:60:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae","typeString":"literal_string \"Address: unable to send value, recipient may have reverted\""},"value":"Address: unable to send value, recipient may have reverted"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae","typeString":"literal_string \"Address: unable to send value, recipient may have reverted\""}],"id":825,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2639:7:10","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":828,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2639:78:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":829,"nodeType":"ExpressionStatement","src":"2639:78:10"}]},"documentation":{"id":798,"nodeType":"StructuredDocumentation","src":"1501:906:10","text":" @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."},"id":831,"implemented":true,"kind":"function","modifiers":[],"name":"sendValue","nameLocation":"2421:9:10","nodeType":"FunctionDefinition","parameters":{"id":803,"nodeType":"ParameterList","parameters":[{"constant":false,"id":800,"mutability":"mutable","name":"recipient","nameLocation":"2447:9:10","nodeType":"VariableDeclaration","scope":831,"src":"2431:25:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"},"typeName":{"id":799,"name":"address","nodeType":"ElementaryTypeName","src":"2431:15:10","stateMutability":"payable","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"visibility":"internal"},{"constant":false,"id":802,"mutability":"mutable","name":"amount","nameLocation":"2466:6:10","nodeType":"VariableDeclaration","scope":831,"src":"2458:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":801,"name":"uint256","nodeType":"ElementaryTypeName","src":"2458:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2430:43:10"},"returnParameters":{"id":804,"nodeType":"ParameterList","parameters":[],"src":"2483:0:10"},"scope":1074,"src":"2412:312:10","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":847,"nodeType":"Block","src":"3555:84:10","statements":[{"expression":{"arguments":[{"id":842,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":834,"src":"3585:6:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":843,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":836,"src":"3593:4:10","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"416464726573733a206c6f772d6c6576656c2063616c6c206661696c6564","id":844,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3599:32:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df","typeString":"literal_string \"Address: low-level call failed\""},"value":"Address: low-level call failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df","typeString":"literal_string \"Address: low-level call failed\""}],"id":841,"name":"functionCall","nodeType":"Identifier","overloadedDeclarations":[848,868],"referencedDeclaration":868,"src":"3572:12:10","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,string memory) returns (bytes memory)"}},"id":845,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3572:60:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":840,"id":846,"nodeType":"Return","src":"3565:67:10"}]},"documentation":{"id":832,"nodeType":"StructuredDocumentation","src":"2730:731:10","text":" @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason, it is bubbled up by this\n function (like regular Solidity function calls).\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert.\n _Available since v3.1._"},"id":848,"implemented":true,"kind":"function","modifiers":[],"name":"functionCall","nameLocation":"3475:12:10","nodeType":"FunctionDefinition","parameters":{"id":837,"nodeType":"ParameterList","parameters":[{"constant":false,"id":834,"mutability":"mutable","name":"target","nameLocation":"3496:6:10","nodeType":"VariableDeclaration","scope":848,"src":"3488:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":833,"name":"address","nodeType":"ElementaryTypeName","src":"3488:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":836,"mutability":"mutable","name":"data","nameLocation":"3517:4:10","nodeType":"VariableDeclaration","scope":848,"src":"3504:17:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":835,"name":"bytes","nodeType":"ElementaryTypeName","src":"3504:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3487:35:10"},"returnParameters":{"id":840,"nodeType":"ParameterList","parameters":[{"constant":false,"id":839,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":848,"src":"3541:12:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":838,"name":"bytes","nodeType":"ElementaryTypeName","src":"3541:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3540:14:10"},"scope":1074,"src":"3466:173:10","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":867,"nodeType":"Block","src":"4008:76:10","statements":[{"expression":{"arguments":[{"id":861,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":851,"src":"4047:6:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":862,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":853,"src":"4055:4:10","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"30","id":863,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4061:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"id":864,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":855,"src":"4064:12:10","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":860,"name":"functionCallWithValue","nodeType":"Identifier","overloadedDeclarations":[888,938],"referencedDeclaration":938,"src":"4025:21:10","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,uint256,string memory) returns (bytes memory)"}},"id":865,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4025:52:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":859,"id":866,"nodeType":"Return","src":"4018:59:10"}]},"documentation":{"id":849,"nodeType":"StructuredDocumentation","src":"3645:211:10","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"},"id":868,"implemented":true,"kind":"function","modifiers":[],"name":"functionCall","nameLocation":"3870:12:10","nodeType":"FunctionDefinition","parameters":{"id":856,"nodeType":"ParameterList","parameters":[{"constant":false,"id":851,"mutability":"mutable","name":"target","nameLocation":"3900:6:10","nodeType":"VariableDeclaration","scope":868,"src":"3892:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":850,"name":"address","nodeType":"ElementaryTypeName","src":"3892:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":853,"mutability":"mutable","name":"data","nameLocation":"3929:4:10","nodeType":"VariableDeclaration","scope":868,"src":"3916:17:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":852,"name":"bytes","nodeType":"ElementaryTypeName","src":"3916:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":855,"mutability":"mutable","name":"errorMessage","nameLocation":"3957:12:10","nodeType":"VariableDeclaration","scope":868,"src":"3943:26:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":854,"name":"string","nodeType":"ElementaryTypeName","src":"3943:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3882:93:10"},"returnParameters":{"id":859,"nodeType":"ParameterList","parameters":[{"constant":false,"id":858,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":868,"src":"3994:12:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":857,"name":"bytes","nodeType":"ElementaryTypeName","src":"3994:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3993:14:10"},"scope":1074,"src":"3861:223:10","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":887,"nodeType":"Block","src":"4589:111:10","statements":[{"expression":{"arguments":[{"id":881,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":871,"src":"4628:6:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":882,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":873,"src":"4636:4:10","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":883,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":875,"src":"4642:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"416464726573733a206c6f772d6c6576656c2063616c6c20776974682076616c7565206661696c6564","id":884,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4649:43:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc","typeString":"literal_string \"Address: low-level call with value failed\""},"value":"Address: low-level call with value failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc","typeString":"literal_string \"Address: low-level call with value failed\""}],"id":880,"name":"functionCallWithValue","nodeType":"Identifier","overloadedDeclarations":[888,938],"referencedDeclaration":938,"src":"4606:21:10","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,uint256,string memory) returns (bytes memory)"}},"id":885,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4606:87:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":879,"id":886,"nodeType":"Return","src":"4599:94:10"}]},"documentation":{"id":869,"nodeType":"StructuredDocumentation","src":"4090:351:10","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`.\n _Available since v3.1._"},"id":888,"implemented":true,"kind":"function","modifiers":[],"name":"functionCallWithValue","nameLocation":"4455:21:10","nodeType":"FunctionDefinition","parameters":{"id":876,"nodeType":"ParameterList","parameters":[{"constant":false,"id":871,"mutability":"mutable","name":"target","nameLocation":"4494:6:10","nodeType":"VariableDeclaration","scope":888,"src":"4486:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":870,"name":"address","nodeType":"ElementaryTypeName","src":"4486:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":873,"mutability":"mutable","name":"data","nameLocation":"4523:4:10","nodeType":"VariableDeclaration","scope":888,"src":"4510:17:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":872,"name":"bytes","nodeType":"ElementaryTypeName","src":"4510:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":875,"mutability":"mutable","name":"value","nameLocation":"4545:5:10","nodeType":"VariableDeclaration","scope":888,"src":"4537:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":874,"name":"uint256","nodeType":"ElementaryTypeName","src":"4537:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4476:80:10"},"returnParameters":{"id":879,"nodeType":"ParameterList","parameters":[{"constant":false,"id":878,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":888,"src":"4575:12:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":877,"name":"bytes","nodeType":"ElementaryTypeName","src":"4575:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4574:14:10"},"scope":1074,"src":"4446:254:10","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":937,"nodeType":"Block","src":"5127:320:10","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":909,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":905,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"5153:4:10","typeDescriptions":{"typeIdentifier":"t_contract$_Address_$1074","typeString":"library Address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Address_$1074","typeString":"library Address"}],"id":904,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5145:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":903,"name":"address","nodeType":"ElementaryTypeName","src":"5145:7:10","typeDescriptions":{}}},"id":906,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5145:13:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":907,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"balance","nodeType":"MemberAccess","src":"5145:21:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":908,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":895,"src":"5170:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5145:30:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c","id":910,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5177:40:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c","typeString":"literal_string \"Address: insufficient balance for call\""},"value":"Address: insufficient balance for call"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c","typeString":"literal_string \"Address: insufficient balance for call\""}],"id":902,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5137:7:10","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":911,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5137:81:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":912,"nodeType":"ExpressionStatement","src":"5137:81:10"},{"expression":{"arguments":[{"arguments":[{"id":915,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":891,"src":"5247:6:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":914,"name":"isContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":797,"src":"5236:10:10","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_bool_$","typeString":"function (address) view returns (bool)"}},"id":916,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5236:18:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374","id":917,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5256:31:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad","typeString":"literal_string \"Address: call to non-contract\""},"value":"Address: call to non-contract"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad","typeString":"literal_string \"Address: call to non-contract\""}],"id":913,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5228:7:10","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":918,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5228:60:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":919,"nodeType":"ExpressionStatement","src":"5228:60:10"},{"assignments":[921,923],"declarations":[{"constant":false,"id":921,"mutability":"mutable","name":"success","nameLocation":"5305:7:10","nodeType":"VariableDeclaration","scope":937,"src":"5300:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":920,"name":"bool","nodeType":"ElementaryTypeName","src":"5300:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":923,"mutability":"mutable","name":"returndata","nameLocation":"5327:10:10","nodeType":"VariableDeclaration","scope":937,"src":"5314:23:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":922,"name":"bytes","nodeType":"ElementaryTypeName","src":"5314:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":930,"initialValue":{"arguments":[{"id":928,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":893,"src":"5367:4:10","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":924,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":891,"src":"5341:6:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":925,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"call","nodeType":"MemberAccess","src":"5341:11:10","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":927,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"id":926,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":895,"src":"5360:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"5341:25:10","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":929,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5341:31:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"5299:73:10"},{"expression":{"arguments":[{"id":932,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":921,"src":"5406:7:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":933,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":923,"src":"5415:10:10","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":934,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":897,"src":"5427:12:10","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":931,"name":"verifyCallResult","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1073,"src":"5389:16:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (bool,bytes memory,string memory) pure returns (bytes memory)"}},"id":935,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5389:51:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":901,"id":936,"nodeType":"Return","src":"5382:58:10"}]},"documentation":{"id":889,"nodeType":"StructuredDocumentation","src":"4706:237:10","text":" @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n with `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"},"id":938,"implemented":true,"kind":"function","modifiers":[],"name":"functionCallWithValue","nameLocation":"4957:21:10","nodeType":"FunctionDefinition","parameters":{"id":898,"nodeType":"ParameterList","parameters":[{"constant":false,"id":891,"mutability":"mutable","name":"target","nameLocation":"4996:6:10","nodeType":"VariableDeclaration","scope":938,"src":"4988:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":890,"name":"address","nodeType":"ElementaryTypeName","src":"4988:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":893,"mutability":"mutable","name":"data","nameLocation":"5025:4:10","nodeType":"VariableDeclaration","scope":938,"src":"5012:17:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":892,"name":"bytes","nodeType":"ElementaryTypeName","src":"5012:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":895,"mutability":"mutable","name":"value","nameLocation":"5047:5:10","nodeType":"VariableDeclaration","scope":938,"src":"5039:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":894,"name":"uint256","nodeType":"ElementaryTypeName","src":"5039:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":897,"mutability":"mutable","name":"errorMessage","nameLocation":"5076:12:10","nodeType":"VariableDeclaration","scope":938,"src":"5062:26:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":896,"name":"string","nodeType":"ElementaryTypeName","src":"5062:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"4978:116:10"},"returnParameters":{"id":901,"nodeType":"ParameterList","parameters":[{"constant":false,"id":900,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":938,"src":"5113:12:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":899,"name":"bytes","nodeType":"ElementaryTypeName","src":"5113:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5112:14:10"},"scope":1074,"src":"4948:499:10","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":954,"nodeType":"Block","src":"5724:97:10","statements":[{"expression":{"arguments":[{"id":949,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":941,"src":"5760:6:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":950,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":943,"src":"5768:4:10","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"416464726573733a206c6f772d6c6576656c207374617469632063616c6c206661696c6564","id":951,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5774:39:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0","typeString":"literal_string \"Address: low-level static call failed\""},"value":"Address: low-level static call failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0","typeString":"literal_string \"Address: low-level static call failed\""}],"id":948,"name":"functionStaticCall","nodeType":"Identifier","overloadedDeclarations":[955,990],"referencedDeclaration":990,"src":"5741:18:10","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,string memory) view returns (bytes memory)"}},"id":952,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5741:73:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":947,"id":953,"nodeType":"Return","src":"5734:80:10"}]},"documentation":{"id":939,"nodeType":"StructuredDocumentation","src":"5453:166:10","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"},"id":955,"implemented":true,"kind":"function","modifiers":[],"name":"functionStaticCall","nameLocation":"5633:18:10","nodeType":"FunctionDefinition","parameters":{"id":944,"nodeType":"ParameterList","parameters":[{"constant":false,"id":941,"mutability":"mutable","name":"target","nameLocation":"5660:6:10","nodeType":"VariableDeclaration","scope":955,"src":"5652:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":940,"name":"address","nodeType":"ElementaryTypeName","src":"5652:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":943,"mutability":"mutable","name":"data","nameLocation":"5681:4:10","nodeType":"VariableDeclaration","scope":955,"src":"5668:17:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":942,"name":"bytes","nodeType":"ElementaryTypeName","src":"5668:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5651:35:10"},"returnParameters":{"id":947,"nodeType":"ParameterList","parameters":[{"constant":false,"id":946,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":955,"src":"5710:12:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":945,"name":"bytes","nodeType":"ElementaryTypeName","src":"5710:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5709:14:10"},"scope":1074,"src":"5624:197:10","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":989,"nodeType":"Block","src":"6163:228:10","statements":[{"expression":{"arguments":[{"arguments":[{"id":969,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":958,"src":"6192:6:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":968,"name":"isContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":797,"src":"6181:10:10","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_bool_$","typeString":"function (address) view returns (bool)"}},"id":970,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6181:18:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a207374617469632063616c6c20746f206e6f6e2d636f6e7472616374","id":971,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6201:38:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_c79cc78e4f16ce3933a42b84c73868f93bb4a59c031a0acf576679de98c608a9","typeString":"literal_string \"Address: static call to non-contract\""},"value":"Address: static call to non-contract"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_c79cc78e4f16ce3933a42b84c73868f93bb4a59c031a0acf576679de98c608a9","typeString":"literal_string \"Address: static call to non-contract\""}],"id":967,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"6173:7:10","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":972,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6173:67:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":973,"nodeType":"ExpressionStatement","src":"6173:67:10"},{"assignments":[975,977],"declarations":[{"constant":false,"id":975,"mutability":"mutable","name":"success","nameLocation":"6257:7:10","nodeType":"VariableDeclaration","scope":989,"src":"6252:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":974,"name":"bool","nodeType":"ElementaryTypeName","src":"6252:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":977,"mutability":"mutable","name":"returndata","nameLocation":"6279:10:10","nodeType":"VariableDeclaration","scope":989,"src":"6266:23:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":976,"name":"bytes","nodeType":"ElementaryTypeName","src":"6266:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":982,"initialValue":{"arguments":[{"id":980,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":960,"src":"6311:4:10","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":978,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":958,"src":"6293:6:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":979,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"staticcall","nodeType":"MemberAccess","src":"6293:17:10","typeDescriptions":{"typeIdentifier":"t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) view returns (bool,bytes memory)"}},"id":981,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6293:23:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"6251:65:10"},{"expression":{"arguments":[{"id":984,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":975,"src":"6350:7:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":985,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":977,"src":"6359:10:10","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":986,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":962,"src":"6371:12:10","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":983,"name":"verifyCallResult","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1073,"src":"6333:16:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (bool,bytes memory,string memory) pure returns (bytes memory)"}},"id":987,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6333:51:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":966,"id":988,"nodeType":"Return","src":"6326:58:10"}]},"documentation":{"id":956,"nodeType":"StructuredDocumentation","src":"5827:173:10","text":" @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"},"id":990,"implemented":true,"kind":"function","modifiers":[],"name":"functionStaticCall","nameLocation":"6014:18:10","nodeType":"FunctionDefinition","parameters":{"id":963,"nodeType":"ParameterList","parameters":[{"constant":false,"id":958,"mutability":"mutable","name":"target","nameLocation":"6050:6:10","nodeType":"VariableDeclaration","scope":990,"src":"6042:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":957,"name":"address","nodeType":"ElementaryTypeName","src":"6042:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":960,"mutability":"mutable","name":"data","nameLocation":"6079:4:10","nodeType":"VariableDeclaration","scope":990,"src":"6066:17:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":959,"name":"bytes","nodeType":"ElementaryTypeName","src":"6066:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":962,"mutability":"mutable","name":"errorMessage","nameLocation":"6107:12:10","nodeType":"VariableDeclaration","scope":990,"src":"6093:26:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":961,"name":"string","nodeType":"ElementaryTypeName","src":"6093:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"6032:93:10"},"returnParameters":{"id":966,"nodeType":"ParameterList","parameters":[{"constant":false,"id":965,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":990,"src":"6149:12:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":964,"name":"bytes","nodeType":"ElementaryTypeName","src":"6149:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6148:14:10"},"scope":1074,"src":"6005:386:10","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":1006,"nodeType":"Block","src":"6667:101:10","statements":[{"expression":{"arguments":[{"id":1001,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":993,"src":"6705:6:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1002,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":995,"src":"6713:4:10","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564","id":1003,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6719:41:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398","typeString":"literal_string \"Address: low-level delegate call failed\""},"value":"Address: low-level delegate call failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398","typeString":"literal_string \"Address: low-level delegate call failed\""}],"id":1000,"name":"functionDelegateCall","nodeType":"Identifier","overloadedDeclarations":[1007,1042],"referencedDeclaration":1042,"src":"6684:20:10","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,string memory) returns (bytes memory)"}},"id":1004,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6684:77:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":999,"id":1005,"nodeType":"Return","src":"6677:84:10"}]},"documentation":{"id":991,"nodeType":"StructuredDocumentation","src":"6397:168:10","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"},"id":1007,"implemented":true,"kind":"function","modifiers":[],"name":"functionDelegateCall","nameLocation":"6579:20:10","nodeType":"FunctionDefinition","parameters":{"id":996,"nodeType":"ParameterList","parameters":[{"constant":false,"id":993,"mutability":"mutable","name":"target","nameLocation":"6608:6:10","nodeType":"VariableDeclaration","scope":1007,"src":"6600:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":992,"name":"address","nodeType":"ElementaryTypeName","src":"6600:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":995,"mutability":"mutable","name":"data","nameLocation":"6629:4:10","nodeType":"VariableDeclaration","scope":1007,"src":"6616:17:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":994,"name":"bytes","nodeType":"ElementaryTypeName","src":"6616:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6599:35:10"},"returnParameters":{"id":999,"nodeType":"ParameterList","parameters":[{"constant":false,"id":998,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1007,"src":"6653:12:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":997,"name":"bytes","nodeType":"ElementaryTypeName","src":"6653:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6652:14:10"},"scope":1074,"src":"6570:198:10","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1041,"nodeType":"Block","src":"7109:232:10","statements":[{"expression":{"arguments":[{"arguments":[{"id":1021,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1010,"src":"7138:6:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1020,"name":"isContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":797,"src":"7127:10:10","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_bool_$","typeString":"function (address) view returns (bool)"}},"id":1022,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7127:18:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6e7472616374","id":1023,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7147:40:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520","typeString":"literal_string \"Address: delegate call to non-contract\""},"value":"Address: delegate call to non-contract"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520","typeString":"literal_string \"Address: delegate call to non-contract\""}],"id":1019,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"7119:7:10","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1024,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7119:69:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1025,"nodeType":"ExpressionStatement","src":"7119:69:10"},{"assignments":[1027,1029],"declarations":[{"constant":false,"id":1027,"mutability":"mutable","name":"success","nameLocation":"7205:7:10","nodeType":"VariableDeclaration","scope":1041,"src":"7200:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1026,"name":"bool","nodeType":"ElementaryTypeName","src":"7200:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1029,"mutability":"mutable","name":"returndata","nameLocation":"7227:10:10","nodeType":"VariableDeclaration","scope":1041,"src":"7214:23:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1028,"name":"bytes","nodeType":"ElementaryTypeName","src":"7214:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":1034,"initialValue":{"arguments":[{"id":1032,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1012,"src":"7261:4:10","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":1030,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1010,"src":"7241:6:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1031,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"delegatecall","nodeType":"MemberAccess","src":"7241:19:10","typeDescriptions":{"typeIdentifier":"t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) returns (bool,bytes memory)"}},"id":1033,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7241:25:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"7199:67:10"},{"expression":{"arguments":[{"id":1036,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1027,"src":"7300:7:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":1037,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1029,"src":"7309:10:10","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":1038,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1014,"src":"7321:12:10","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1035,"name":"verifyCallResult","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1073,"src":"7283:16:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (bool,bytes memory,string memory) pure returns (bytes memory)"}},"id":1039,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7283:51:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1018,"id":1040,"nodeType":"Return","src":"7276:58:10"}]},"documentation":{"id":1008,"nodeType":"StructuredDocumentation","src":"6774:175:10","text":" @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"},"id":1042,"implemented":true,"kind":"function","modifiers":[],"name":"functionDelegateCall","nameLocation":"6963:20:10","nodeType":"FunctionDefinition","parameters":{"id":1015,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1010,"mutability":"mutable","name":"target","nameLocation":"7001:6:10","nodeType":"VariableDeclaration","scope":1042,"src":"6993:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1009,"name":"address","nodeType":"ElementaryTypeName","src":"6993:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1012,"mutability":"mutable","name":"data","nameLocation":"7030:4:10","nodeType":"VariableDeclaration","scope":1042,"src":"7017:17:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1011,"name":"bytes","nodeType":"ElementaryTypeName","src":"7017:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1014,"mutability":"mutable","name":"errorMessage","nameLocation":"7058:12:10","nodeType":"VariableDeclaration","scope":1042,"src":"7044:26:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1013,"name":"string","nodeType":"ElementaryTypeName","src":"7044:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"6983:93:10"},"returnParameters":{"id":1018,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1017,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1042,"src":"7095:12:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1016,"name":"bytes","nodeType":"ElementaryTypeName","src":"7095:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"7094:14:10"},"scope":1074,"src":"6954:387:10","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1072,"nodeType":"Block","src":"7721:582:10","statements":[{"condition":{"id":1054,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1045,"src":"7735:7:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1070,"nodeType":"Block","src":"7792:505:10","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1061,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1058,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1047,"src":"7876:10:10","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1059,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"7876:17:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1060,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7896:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"7876:21:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1068,"nodeType":"Block","src":"8234:53:10","statements":[{"expression":{"arguments":[{"id":1065,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1049,"src":"8259:12:10","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1064,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[-19,-19],"referencedDeclaration":-19,"src":"8252:6:10","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":1066,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8252:20:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1067,"nodeType":"ExpressionStatement","src":"8252:20:10"}]},"id":1069,"nodeType":"IfStatement","src":"7872:415:10","trueBody":{"id":1063,"nodeType":"Block","src":"7899:329:10","statements":[{"AST":{"nodeType":"YulBlock","src":"8069:145:10","statements":[{"nodeType":"YulVariableDeclaration","src":"8091:40:10","value":{"arguments":[{"name":"returndata","nodeType":"YulIdentifier","src":"8120:10:10"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"8114:5:10"},"nodeType":"YulFunctionCall","src":"8114:17:10"},"variables":[{"name":"returndata_size","nodeType":"YulTypedName","src":"8095:15:10","type":""}]},{"expression":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8163:2:10","type":"","value":"32"},{"name":"returndata","nodeType":"YulIdentifier","src":"8167:10:10"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8159:3:10"},"nodeType":"YulFunctionCall","src":"8159:19:10"},{"name":"returndata_size","nodeType":"YulIdentifier","src":"8180:15:10"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"8152:6:10"},"nodeType":"YulFunctionCall","src":"8152:44:10"},"nodeType":"YulExpressionStatement","src":"8152:44:10"}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"istanbul","externalReferences":[{"declaration":1047,"isOffset":false,"isSlot":false,"src":"8120:10:10","valueSize":1},{"declaration":1047,"isOffset":false,"isSlot":false,"src":"8167:10:10","valueSize":1}],"id":1062,"nodeType":"InlineAssembly","src":"8060:154:10"}]}}]},"id":1071,"nodeType":"IfStatement","src":"7731:566:10","trueBody":{"id":1057,"nodeType":"Block","src":"7744:42:10","statements":[{"expression":{"id":1055,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1047,"src":"7765:10:10","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1053,"id":1056,"nodeType":"Return","src":"7758:17:10"}]}}]},"documentation":{"id":1043,"nodeType":"StructuredDocumentation","src":"7347:209:10","text":" @dev Tool to verifies that a low level call was successful, and revert if it wasn't, either by bubbling the\n revert reason using the provided one.\n _Available since v4.3._"},"id":1073,"implemented":true,"kind":"function","modifiers":[],"name":"verifyCallResult","nameLocation":"7570:16:10","nodeType":"FunctionDefinition","parameters":{"id":1050,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1045,"mutability":"mutable","name":"success","nameLocation":"7601:7:10","nodeType":"VariableDeclaration","scope":1073,"src":"7596:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1044,"name":"bool","nodeType":"ElementaryTypeName","src":"7596:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1047,"mutability":"mutable","name":"returndata","nameLocation":"7631:10:10","nodeType":"VariableDeclaration","scope":1073,"src":"7618:23:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1046,"name":"bytes","nodeType":"ElementaryTypeName","src":"7618:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1049,"mutability":"mutable","name":"errorMessage","nameLocation":"7665:12:10","nodeType":"VariableDeclaration","scope":1073,"src":"7651:26:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1048,"name":"string","nodeType":"ElementaryTypeName","src":"7651:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"7586:97:10"},"returnParameters":{"id":1053,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1052,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1073,"src":"7707:12:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1051,"name":"bytes","nodeType":"ElementaryTypeName","src":"7707:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"7706:14:10"},"scope":1074,"src":"7561:742:10","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":1075,"src":"194:8111:10"}],"src":"101:8205:10"},"id":10},"@openzeppelin/contracts/utils/math/SafeCast.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/math/SafeCast.sol","exportedSymbols":{"SafeCast":[2925]},"id":2926,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1076,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"107:23:11"},{"abstract":false,"baseContracts":[],"contractDependencies":[],"contractKind":"library","documentation":{"id":1077,"nodeType":"StructuredDocumentation","src":"132:709:11","text":" @dev Wrappers over Solidity's uintXX/intXX casting operators with added overflow\n checks.\n Downcasting from uint256/int256 in Solidity does not revert on overflow. This can\n easily result in undesired exploitation or bugs, since developers usually\n assume that overflows raise errors. `SafeCast` restores this intuition by\n reverting the transaction when such an operation overflows.\n Using this library instead of the unchecked operations eliminates an entire\n class of bugs, so it's recommended to use it always.\n Can be combined with {SafeMath} and {SignedSafeMath} to extend it to smaller types, by performing\n all math on `uint256` and `int256` and then downcasting."},"fullyImplemented":true,"id":2925,"linearizedBaseContracts":[2925],"name":"SafeCast","nameLocation":"850:8:11","nodeType":"ContractDefinition","nodes":[{"body":{"id":1101,"nodeType":"Block","src":"1254:126:11","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1092,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1086,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1080,"src":"1272:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":1089,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1286:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint248_$","typeString":"type(uint248)"},"typeName":{"id":1088,"name":"uint248","nodeType":"ElementaryTypeName","src":"1286:7:11","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint248_$","typeString":"type(uint248)"}],"id":1087,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"1281:4:11","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":1090,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1281:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint248","typeString":"type(uint248)"}},"id":1091,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"1281:17:11","typeDescriptions":{"typeIdentifier":"t_uint248","typeString":"uint248"}},"src":"1272:26:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203234382062697473","id":1093,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1300:41:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_6ac19bba4607c9b45ff35f54fbc4ca64c29c7457109a16fa180ea77cdbda8593","typeString":"literal_string \"SafeCast: value doesn't fit in 248 bits\""},"value":"SafeCast: value doesn't fit in 248 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_6ac19bba4607c9b45ff35f54fbc4ca64c29c7457109a16fa180ea77cdbda8593","typeString":"literal_string \"SafeCast: value doesn't fit in 248 bits\""}],"id":1085,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1264:7:11","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1094,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1264:78:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1095,"nodeType":"ExpressionStatement","src":"1264:78:11"},{"expression":{"arguments":[{"id":1098,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1080,"src":"1367:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1097,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1359:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint248_$","typeString":"type(uint248)"},"typeName":{"id":1096,"name":"uint248","nodeType":"ElementaryTypeName","src":"1359:7:11","typeDescriptions":{}}},"id":1099,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1359:14:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint248","typeString":"uint248"}},"functionReturnParameters":1084,"id":1100,"nodeType":"Return","src":"1352:21:11"}]},"documentation":{"id":1078,"nodeType":"StructuredDocumentation","src":"865:318:11","text":" @dev Returns the downcasted uint248 from uint256, reverting on\n overflow (when the input is greater than largest uint248).\n Counterpart to Solidity's `uint248` operator.\n Requirements:\n - input must fit into 248 bits\n _Available since v4.7._"},"id":1102,"implemented":true,"kind":"function","modifiers":[],"name":"toUint248","nameLocation":"1197:9:11","nodeType":"FunctionDefinition","parameters":{"id":1081,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1080,"mutability":"mutable","name":"value","nameLocation":"1215:5:11","nodeType":"VariableDeclaration","scope":1102,"src":"1207:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1079,"name":"uint256","nodeType":"ElementaryTypeName","src":"1207:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1206:15:11"},"returnParameters":{"id":1084,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1083,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1102,"src":"1245:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint248","typeString":"uint248"},"typeName":{"id":1082,"name":"uint248","nodeType":"ElementaryTypeName","src":"1245:7:11","typeDescriptions":{"typeIdentifier":"t_uint248","typeString":"uint248"}},"visibility":"internal"}],"src":"1244:9:11"},"scope":2925,"src":"1188:192:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1126,"nodeType":"Block","src":"1775:126:11","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1117,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1111,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1105,"src":"1793:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":1114,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1807:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint240_$","typeString":"type(uint240)"},"typeName":{"id":1113,"name":"uint240","nodeType":"ElementaryTypeName","src":"1807:7:11","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint240_$","typeString":"type(uint240)"}],"id":1112,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"1802:4:11","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":1115,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1802:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint240","typeString":"type(uint240)"}},"id":1116,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"1802:17:11","typeDescriptions":{"typeIdentifier":"t_uint240","typeString":"uint240"}},"src":"1793:26:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203234302062697473","id":1118,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1821:41:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_375fa0f6cb9fb5845d214c630920cedf4424913ed6dc32c297d430efa3d61a87","typeString":"literal_string \"SafeCast: value doesn't fit in 240 bits\""},"value":"SafeCast: value doesn't fit in 240 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_375fa0f6cb9fb5845d214c630920cedf4424913ed6dc32c297d430efa3d61a87","typeString":"literal_string \"SafeCast: value doesn't fit in 240 bits\""}],"id":1110,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1785:7:11","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1119,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1785:78:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1120,"nodeType":"ExpressionStatement","src":"1785:78:11"},{"expression":{"arguments":[{"id":1123,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1105,"src":"1888:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1122,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1880:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint240_$","typeString":"type(uint240)"},"typeName":{"id":1121,"name":"uint240","nodeType":"ElementaryTypeName","src":"1880:7:11","typeDescriptions":{}}},"id":1124,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1880:14:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint240","typeString":"uint240"}},"functionReturnParameters":1109,"id":1125,"nodeType":"Return","src":"1873:21:11"}]},"documentation":{"id":1103,"nodeType":"StructuredDocumentation","src":"1386:318:11","text":" @dev Returns the downcasted uint240 from uint256, reverting on\n overflow (when the input is greater than largest uint240).\n Counterpart to Solidity's `uint240` operator.\n Requirements:\n - input must fit into 240 bits\n _Available since v4.7._"},"id":1127,"implemented":true,"kind":"function","modifiers":[],"name":"toUint240","nameLocation":"1718:9:11","nodeType":"FunctionDefinition","parameters":{"id":1106,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1105,"mutability":"mutable","name":"value","nameLocation":"1736:5:11","nodeType":"VariableDeclaration","scope":1127,"src":"1728:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1104,"name":"uint256","nodeType":"ElementaryTypeName","src":"1728:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1727:15:11"},"returnParameters":{"id":1109,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1108,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1127,"src":"1766:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint240","typeString":"uint240"},"typeName":{"id":1107,"name":"uint240","nodeType":"ElementaryTypeName","src":"1766:7:11","typeDescriptions":{"typeIdentifier":"t_uint240","typeString":"uint240"}},"visibility":"internal"}],"src":"1765:9:11"},"scope":2925,"src":"1709:192:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1151,"nodeType":"Block","src":"2296:126:11","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1142,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1136,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1130,"src":"2314:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":1139,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2328:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint232_$","typeString":"type(uint232)"},"typeName":{"id":1138,"name":"uint232","nodeType":"ElementaryTypeName","src":"2328:7:11","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint232_$","typeString":"type(uint232)"}],"id":1137,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"2323:4:11","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":1140,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2323:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint232","typeString":"type(uint232)"}},"id":1141,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"2323:17:11","typeDescriptions":{"typeIdentifier":"t_uint232","typeString":"uint232"}},"src":"2314:26:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203233322062697473","id":1143,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2342:41:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_5797fb2c4589bd6a92752ce0eacaac67341e37ab28c96c2284ab897e7ac77957","typeString":"literal_string \"SafeCast: value doesn't fit in 232 bits\""},"value":"SafeCast: value doesn't fit in 232 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_5797fb2c4589bd6a92752ce0eacaac67341e37ab28c96c2284ab897e7ac77957","typeString":"literal_string \"SafeCast: value doesn't fit in 232 bits\""}],"id":1135,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2306:7:11","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1144,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2306:78:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1145,"nodeType":"ExpressionStatement","src":"2306:78:11"},{"expression":{"arguments":[{"id":1148,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1130,"src":"2409:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1147,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2401:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint232_$","typeString":"type(uint232)"},"typeName":{"id":1146,"name":"uint232","nodeType":"ElementaryTypeName","src":"2401:7:11","typeDescriptions":{}}},"id":1149,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2401:14:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint232","typeString":"uint232"}},"functionReturnParameters":1134,"id":1150,"nodeType":"Return","src":"2394:21:11"}]},"documentation":{"id":1128,"nodeType":"StructuredDocumentation","src":"1907:318:11","text":" @dev Returns the downcasted uint232 from uint256, reverting on\n overflow (when the input is greater than largest uint232).\n Counterpart to Solidity's `uint232` operator.\n Requirements:\n - input must fit into 232 bits\n _Available since v4.7._"},"id":1152,"implemented":true,"kind":"function","modifiers":[],"name":"toUint232","nameLocation":"2239:9:11","nodeType":"FunctionDefinition","parameters":{"id":1131,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1130,"mutability":"mutable","name":"value","nameLocation":"2257:5:11","nodeType":"VariableDeclaration","scope":1152,"src":"2249:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1129,"name":"uint256","nodeType":"ElementaryTypeName","src":"2249:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2248:15:11"},"returnParameters":{"id":1134,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1133,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1152,"src":"2287:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint232","typeString":"uint232"},"typeName":{"id":1132,"name":"uint232","nodeType":"ElementaryTypeName","src":"2287:7:11","typeDescriptions":{"typeIdentifier":"t_uint232","typeString":"uint232"}},"visibility":"internal"}],"src":"2286:9:11"},"scope":2925,"src":"2230:192:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1176,"nodeType":"Block","src":"2817:126:11","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1167,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1161,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1155,"src":"2835:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":1164,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2849:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint224_$","typeString":"type(uint224)"},"typeName":{"id":1163,"name":"uint224","nodeType":"ElementaryTypeName","src":"2849:7:11","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint224_$","typeString":"type(uint224)"}],"id":1162,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"2844:4:11","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":1165,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2844:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint224","typeString":"type(uint224)"}},"id":1166,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"2844:17:11","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"src":"2835:26:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203232342062697473","id":1168,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2863:41:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_9d2acf551b2466898443b9bc3a403a4d86037386bc5a8960c1bbb0f204e69b79","typeString":"literal_string \"SafeCast: value doesn't fit in 224 bits\""},"value":"SafeCast: value doesn't fit in 224 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_9d2acf551b2466898443b9bc3a403a4d86037386bc5a8960c1bbb0f204e69b79","typeString":"literal_string \"SafeCast: value doesn't fit in 224 bits\""}],"id":1160,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2827:7:11","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1169,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2827:78:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1170,"nodeType":"ExpressionStatement","src":"2827:78:11"},{"expression":{"arguments":[{"id":1173,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1155,"src":"2930:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1172,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2922:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint224_$","typeString":"type(uint224)"},"typeName":{"id":1171,"name":"uint224","nodeType":"ElementaryTypeName","src":"2922:7:11","typeDescriptions":{}}},"id":1174,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2922:14:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"functionReturnParameters":1159,"id":1175,"nodeType":"Return","src":"2915:21:11"}]},"documentation":{"id":1153,"nodeType":"StructuredDocumentation","src":"2428:318:11","text":" @dev Returns the downcasted uint224 from uint256, reverting on\n overflow (when the input is greater than largest uint224).\n Counterpart to Solidity's `uint224` operator.\n Requirements:\n - input must fit into 224 bits\n _Available since v4.2._"},"id":1177,"implemented":true,"kind":"function","modifiers":[],"name":"toUint224","nameLocation":"2760:9:11","nodeType":"FunctionDefinition","parameters":{"id":1156,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1155,"mutability":"mutable","name":"value","nameLocation":"2778:5:11","nodeType":"VariableDeclaration","scope":1177,"src":"2770:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1154,"name":"uint256","nodeType":"ElementaryTypeName","src":"2770:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2769:15:11"},"returnParameters":{"id":1159,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1158,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1177,"src":"2808:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"},"typeName":{"id":1157,"name":"uint224","nodeType":"ElementaryTypeName","src":"2808:7:11","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"visibility":"internal"}],"src":"2807:9:11"},"scope":2925,"src":"2751:192:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1201,"nodeType":"Block","src":"3338:126:11","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1192,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1186,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1180,"src":"3356:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":1189,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3370:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint216_$","typeString":"type(uint216)"},"typeName":{"id":1188,"name":"uint216","nodeType":"ElementaryTypeName","src":"3370:7:11","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint216_$","typeString":"type(uint216)"}],"id":1187,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"3365:4:11","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":1190,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3365:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint216","typeString":"type(uint216)"}},"id":1191,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"3365:17:11","typeDescriptions":{"typeIdentifier":"t_uint216","typeString":"uint216"}},"src":"3356:26:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203231362062697473","id":1193,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3384:41:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_8966adc0aad8dc91b207c69c3eb4937e498af8cc706cfe7edd55f3a6ea53488d","typeString":"literal_string \"SafeCast: value doesn't fit in 216 bits\""},"value":"SafeCast: value doesn't fit in 216 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_8966adc0aad8dc91b207c69c3eb4937e498af8cc706cfe7edd55f3a6ea53488d","typeString":"literal_string \"SafeCast: value doesn't fit in 216 bits\""}],"id":1185,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3348:7:11","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1194,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3348:78:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1195,"nodeType":"ExpressionStatement","src":"3348:78:11"},{"expression":{"arguments":[{"id":1198,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1180,"src":"3451:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1197,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3443:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint216_$","typeString":"type(uint216)"},"typeName":{"id":1196,"name":"uint216","nodeType":"ElementaryTypeName","src":"3443:7:11","typeDescriptions":{}}},"id":1199,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3443:14:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint216","typeString":"uint216"}},"functionReturnParameters":1184,"id":1200,"nodeType":"Return","src":"3436:21:11"}]},"documentation":{"id":1178,"nodeType":"StructuredDocumentation","src":"2949:318:11","text":" @dev Returns the downcasted uint216 from uint256, reverting on\n overflow (when the input is greater than largest uint216).\n Counterpart to Solidity's `uint216` operator.\n Requirements:\n - input must fit into 216 bits\n _Available since v4.7._"},"id":1202,"implemented":true,"kind":"function","modifiers":[],"name":"toUint216","nameLocation":"3281:9:11","nodeType":"FunctionDefinition","parameters":{"id":1181,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1180,"mutability":"mutable","name":"value","nameLocation":"3299:5:11","nodeType":"VariableDeclaration","scope":1202,"src":"3291:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1179,"name":"uint256","nodeType":"ElementaryTypeName","src":"3291:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3290:15:11"},"returnParameters":{"id":1184,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1183,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1202,"src":"3329:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint216","typeString":"uint216"},"typeName":{"id":1182,"name":"uint216","nodeType":"ElementaryTypeName","src":"3329:7:11","typeDescriptions":{"typeIdentifier":"t_uint216","typeString":"uint216"}},"visibility":"internal"}],"src":"3328:9:11"},"scope":2925,"src":"3272:192:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1226,"nodeType":"Block","src":"3859:126:11","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1217,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1211,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1205,"src":"3877:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":1214,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3891:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint208_$","typeString":"type(uint208)"},"typeName":{"id":1213,"name":"uint208","nodeType":"ElementaryTypeName","src":"3891:7:11","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint208_$","typeString":"type(uint208)"}],"id":1212,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"3886:4:11","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":1215,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3886:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint208","typeString":"type(uint208)"}},"id":1216,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"3886:17:11","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"src":"3877:26:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203230382062697473","id":1218,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3905:41:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_43d81217fa633fa1c6e88855de94fb990f5831ac266b0a90afa660e986ab5e23","typeString":"literal_string \"SafeCast: value doesn't fit in 208 bits\""},"value":"SafeCast: value doesn't fit in 208 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_43d81217fa633fa1c6e88855de94fb990f5831ac266b0a90afa660e986ab5e23","typeString":"literal_string \"SafeCast: value doesn't fit in 208 bits\""}],"id":1210,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3869:7:11","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1219,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3869:78:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1220,"nodeType":"ExpressionStatement","src":"3869:78:11"},{"expression":{"arguments":[{"id":1223,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1205,"src":"3972:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1222,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3964:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint208_$","typeString":"type(uint208)"},"typeName":{"id":1221,"name":"uint208","nodeType":"ElementaryTypeName","src":"3964:7:11","typeDescriptions":{}}},"id":1224,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3964:14:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"functionReturnParameters":1209,"id":1225,"nodeType":"Return","src":"3957:21:11"}]},"documentation":{"id":1203,"nodeType":"StructuredDocumentation","src":"3470:318:11","text":" @dev Returns the downcasted uint208 from uint256, reverting on\n overflow (when the input is greater than largest uint208).\n Counterpart to Solidity's `uint208` operator.\n Requirements:\n - input must fit into 208 bits\n _Available since v4.7._"},"id":1227,"implemented":true,"kind":"function","modifiers":[],"name":"toUint208","nameLocation":"3802:9:11","nodeType":"FunctionDefinition","parameters":{"id":1206,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1205,"mutability":"mutable","name":"value","nameLocation":"3820:5:11","nodeType":"VariableDeclaration","scope":1227,"src":"3812:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1204,"name":"uint256","nodeType":"ElementaryTypeName","src":"3812:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3811:15:11"},"returnParameters":{"id":1209,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1208,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1227,"src":"3850:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"},"typeName":{"id":1207,"name":"uint208","nodeType":"ElementaryTypeName","src":"3850:7:11","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"visibility":"internal"}],"src":"3849:9:11"},"scope":2925,"src":"3793:192:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1251,"nodeType":"Block","src":"4380:126:11","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1242,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1236,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1230,"src":"4398:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":1239,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4412:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint200_$","typeString":"type(uint200)"},"typeName":{"id":1238,"name":"uint200","nodeType":"ElementaryTypeName","src":"4412:7:11","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint200_$","typeString":"type(uint200)"}],"id":1237,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"4407:4:11","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":1240,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4407:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint200","typeString":"type(uint200)"}},"id":1241,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"4407:17:11","typeDescriptions":{"typeIdentifier":"t_uint200","typeString":"uint200"}},"src":"4398:26:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203230302062697473","id":1243,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4426:41:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_df8130f294fe2698967ea9ead82c4da9454490567d976d00551e0174e655314c","typeString":"literal_string \"SafeCast: value doesn't fit in 200 bits\""},"value":"SafeCast: value doesn't fit in 200 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_df8130f294fe2698967ea9ead82c4da9454490567d976d00551e0174e655314c","typeString":"literal_string \"SafeCast: value doesn't fit in 200 bits\""}],"id":1235,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4390:7:11","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1244,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4390:78:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1245,"nodeType":"ExpressionStatement","src":"4390:78:11"},{"expression":{"arguments":[{"id":1248,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1230,"src":"4493:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1247,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4485:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint200_$","typeString":"type(uint200)"},"typeName":{"id":1246,"name":"uint200","nodeType":"ElementaryTypeName","src":"4485:7:11","typeDescriptions":{}}},"id":1249,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4485:14:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint200","typeString":"uint200"}},"functionReturnParameters":1234,"id":1250,"nodeType":"Return","src":"4478:21:11"}]},"documentation":{"id":1228,"nodeType":"StructuredDocumentation","src":"3991:318:11","text":" @dev Returns the downcasted uint200 from uint256, reverting on\n overflow (when the input is greater than largest uint200).\n Counterpart to Solidity's `uint200` operator.\n Requirements:\n - input must fit into 200 bits\n _Available since v4.7._"},"id":1252,"implemented":true,"kind":"function","modifiers":[],"name":"toUint200","nameLocation":"4323:9:11","nodeType":"FunctionDefinition","parameters":{"id":1231,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1230,"mutability":"mutable","name":"value","nameLocation":"4341:5:11","nodeType":"VariableDeclaration","scope":1252,"src":"4333:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1229,"name":"uint256","nodeType":"ElementaryTypeName","src":"4333:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4332:15:11"},"returnParameters":{"id":1234,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1233,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1252,"src":"4371:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint200","typeString":"uint200"},"typeName":{"id":1232,"name":"uint200","nodeType":"ElementaryTypeName","src":"4371:7:11","typeDescriptions":{"typeIdentifier":"t_uint200","typeString":"uint200"}},"visibility":"internal"}],"src":"4370:9:11"},"scope":2925,"src":"4314:192:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1276,"nodeType":"Block","src":"4901:126:11","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1267,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1261,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1255,"src":"4919:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":1264,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4933:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint192_$","typeString":"type(uint192)"},"typeName":{"id":1263,"name":"uint192","nodeType":"ElementaryTypeName","src":"4933:7:11","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint192_$","typeString":"type(uint192)"}],"id":1262,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"4928:4:11","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":1265,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4928:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint192","typeString":"type(uint192)"}},"id":1266,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"4928:17:11","typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"}},"src":"4919:26:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203139322062697473","id":1268,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4947:41:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_112978800f12a1c4f1eab82789f7b6defd49dc1c17ba270a84ffc28392fb05ae","typeString":"literal_string \"SafeCast: value doesn't fit in 192 bits\""},"value":"SafeCast: value doesn't fit in 192 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_112978800f12a1c4f1eab82789f7b6defd49dc1c17ba270a84ffc28392fb05ae","typeString":"literal_string \"SafeCast: value doesn't fit in 192 bits\""}],"id":1260,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4911:7:11","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1269,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4911:78:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1270,"nodeType":"ExpressionStatement","src":"4911:78:11"},{"expression":{"arguments":[{"id":1273,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1255,"src":"5014:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1272,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5006:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint192_$","typeString":"type(uint192)"},"typeName":{"id":1271,"name":"uint192","nodeType":"ElementaryTypeName","src":"5006:7:11","typeDescriptions":{}}},"id":1274,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5006:14:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"}},"functionReturnParameters":1259,"id":1275,"nodeType":"Return","src":"4999:21:11"}]},"documentation":{"id":1253,"nodeType":"StructuredDocumentation","src":"4512:318:11","text":" @dev Returns the downcasted uint192 from uint256, reverting on\n overflow (when the input is greater than largest uint192).\n Counterpart to Solidity's `uint192` operator.\n Requirements:\n - input must fit into 192 bits\n _Available since v4.7._"},"id":1277,"implemented":true,"kind":"function","modifiers":[],"name":"toUint192","nameLocation":"4844:9:11","nodeType":"FunctionDefinition","parameters":{"id":1256,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1255,"mutability":"mutable","name":"value","nameLocation":"4862:5:11","nodeType":"VariableDeclaration","scope":1277,"src":"4854:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1254,"name":"uint256","nodeType":"ElementaryTypeName","src":"4854:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4853:15:11"},"returnParameters":{"id":1259,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1258,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1277,"src":"4892:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"},"typeName":{"id":1257,"name":"uint192","nodeType":"ElementaryTypeName","src":"4892:7:11","typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"}},"visibility":"internal"}],"src":"4891:9:11"},"scope":2925,"src":"4835:192:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1301,"nodeType":"Block","src":"5422:126:11","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1292,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1286,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1280,"src":"5440:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":1289,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5454:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint184_$","typeString":"type(uint184)"},"typeName":{"id":1288,"name":"uint184","nodeType":"ElementaryTypeName","src":"5454:7:11","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint184_$","typeString":"type(uint184)"}],"id":1287,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"5449:4:11","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":1290,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5449:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint184","typeString":"type(uint184)"}},"id":1291,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"5449:17:11","typeDescriptions":{"typeIdentifier":"t_uint184","typeString":"uint184"}},"src":"5440:26:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203138342062697473","id":1293,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5468:41:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_86c53d89b1944d561ecfa42e859033241d1df6ea8d42a57ae02f79d45de4aa75","typeString":"literal_string \"SafeCast: value doesn't fit in 184 bits\""},"value":"SafeCast: value doesn't fit in 184 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_86c53d89b1944d561ecfa42e859033241d1df6ea8d42a57ae02f79d45de4aa75","typeString":"literal_string \"SafeCast: value doesn't fit in 184 bits\""}],"id":1285,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5432:7:11","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1294,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5432:78:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1295,"nodeType":"ExpressionStatement","src":"5432:78:11"},{"expression":{"arguments":[{"id":1298,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1280,"src":"5535:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1297,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5527:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint184_$","typeString":"type(uint184)"},"typeName":{"id":1296,"name":"uint184","nodeType":"ElementaryTypeName","src":"5527:7:11","typeDescriptions":{}}},"id":1299,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5527:14:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint184","typeString":"uint184"}},"functionReturnParameters":1284,"id":1300,"nodeType":"Return","src":"5520:21:11"}]},"documentation":{"id":1278,"nodeType":"StructuredDocumentation","src":"5033:318:11","text":" @dev Returns the downcasted uint184 from uint256, reverting on\n overflow (when the input is greater than largest uint184).\n Counterpart to Solidity's `uint184` operator.\n Requirements:\n - input must fit into 184 bits\n _Available since v4.7._"},"id":1302,"implemented":true,"kind":"function","modifiers":[],"name":"toUint184","nameLocation":"5365:9:11","nodeType":"FunctionDefinition","parameters":{"id":1281,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1280,"mutability":"mutable","name":"value","nameLocation":"5383:5:11","nodeType":"VariableDeclaration","scope":1302,"src":"5375:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1279,"name":"uint256","nodeType":"ElementaryTypeName","src":"5375:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5374:15:11"},"returnParameters":{"id":1284,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1283,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1302,"src":"5413:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint184","typeString":"uint184"},"typeName":{"id":1282,"name":"uint184","nodeType":"ElementaryTypeName","src":"5413:7:11","typeDescriptions":{"typeIdentifier":"t_uint184","typeString":"uint184"}},"visibility":"internal"}],"src":"5412:9:11"},"scope":2925,"src":"5356:192:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1326,"nodeType":"Block","src":"5943:126:11","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1317,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1311,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1305,"src":"5961:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":1314,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5975:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint176_$","typeString":"type(uint176)"},"typeName":{"id":1313,"name":"uint176","nodeType":"ElementaryTypeName","src":"5975:7:11","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint176_$","typeString":"type(uint176)"}],"id":1312,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"5970:4:11","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":1315,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5970:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint176","typeString":"type(uint176)"}},"id":1316,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"5970:17:11","typeDescriptions":{"typeIdentifier":"t_uint176","typeString":"uint176"}},"src":"5961:26:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203137362062697473","id":1318,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5989:41:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_4069e970f734339c7841e84a1b26f503bff22b76884c1168dc24e2e6af9b1e30","typeString":"literal_string \"SafeCast: value doesn't fit in 176 bits\""},"value":"SafeCast: value doesn't fit in 176 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_4069e970f734339c7841e84a1b26f503bff22b76884c1168dc24e2e6af9b1e30","typeString":"literal_string \"SafeCast: value doesn't fit in 176 bits\""}],"id":1310,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5953:7:11","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1319,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5953:78:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1320,"nodeType":"ExpressionStatement","src":"5953:78:11"},{"expression":{"arguments":[{"id":1323,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1305,"src":"6056:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1322,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6048:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint176_$","typeString":"type(uint176)"},"typeName":{"id":1321,"name":"uint176","nodeType":"ElementaryTypeName","src":"6048:7:11","typeDescriptions":{}}},"id":1324,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6048:14:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint176","typeString":"uint176"}},"functionReturnParameters":1309,"id":1325,"nodeType":"Return","src":"6041:21:11"}]},"documentation":{"id":1303,"nodeType":"StructuredDocumentation","src":"5554:318:11","text":" @dev Returns the downcasted uint176 from uint256, reverting on\n overflow (when the input is greater than largest uint176).\n Counterpart to Solidity's `uint176` operator.\n Requirements:\n - input must fit into 176 bits\n _Available since v4.7._"},"id":1327,"implemented":true,"kind":"function","modifiers":[],"name":"toUint176","nameLocation":"5886:9:11","nodeType":"FunctionDefinition","parameters":{"id":1306,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1305,"mutability":"mutable","name":"value","nameLocation":"5904:5:11","nodeType":"VariableDeclaration","scope":1327,"src":"5896:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1304,"name":"uint256","nodeType":"ElementaryTypeName","src":"5896:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5895:15:11"},"returnParameters":{"id":1309,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1308,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1327,"src":"5934:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint176","typeString":"uint176"},"typeName":{"id":1307,"name":"uint176","nodeType":"ElementaryTypeName","src":"5934:7:11","typeDescriptions":{"typeIdentifier":"t_uint176","typeString":"uint176"}},"visibility":"internal"}],"src":"5933:9:11"},"scope":2925,"src":"5877:192:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1351,"nodeType":"Block","src":"6464:126:11","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1342,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1336,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1330,"src":"6482:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":1339,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6496:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint168_$","typeString":"type(uint168)"},"typeName":{"id":1338,"name":"uint168","nodeType":"ElementaryTypeName","src":"6496:7:11","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint168_$","typeString":"type(uint168)"}],"id":1337,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"6491:4:11","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":1340,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6491:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint168","typeString":"type(uint168)"}},"id":1341,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"6491:17:11","typeDescriptions":{"typeIdentifier":"t_uint168","typeString":"uint168"}},"src":"6482:26:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203136382062697473","id":1343,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6510:41:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_67ef32a3cbe7b34392347d335b0a7ae95c74a34ca40e4efb58f6c9a3154e85a1","typeString":"literal_string \"SafeCast: value doesn't fit in 168 bits\""},"value":"SafeCast: value doesn't fit in 168 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_67ef32a3cbe7b34392347d335b0a7ae95c74a34ca40e4efb58f6c9a3154e85a1","typeString":"literal_string \"SafeCast: value doesn't fit in 168 bits\""}],"id":1335,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"6474:7:11","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1344,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6474:78:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1345,"nodeType":"ExpressionStatement","src":"6474:78:11"},{"expression":{"arguments":[{"id":1348,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1330,"src":"6577:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1347,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6569:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint168_$","typeString":"type(uint168)"},"typeName":{"id":1346,"name":"uint168","nodeType":"ElementaryTypeName","src":"6569:7:11","typeDescriptions":{}}},"id":1349,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6569:14:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint168","typeString":"uint168"}},"functionReturnParameters":1334,"id":1350,"nodeType":"Return","src":"6562:21:11"}]},"documentation":{"id":1328,"nodeType":"StructuredDocumentation","src":"6075:318:11","text":" @dev Returns the downcasted uint168 from uint256, reverting on\n overflow (when the input is greater than largest uint168).\n Counterpart to Solidity's `uint168` operator.\n Requirements:\n - input must fit into 168 bits\n _Available since v4.7._"},"id":1352,"implemented":true,"kind":"function","modifiers":[],"name":"toUint168","nameLocation":"6407:9:11","nodeType":"FunctionDefinition","parameters":{"id":1331,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1330,"mutability":"mutable","name":"value","nameLocation":"6425:5:11","nodeType":"VariableDeclaration","scope":1352,"src":"6417:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1329,"name":"uint256","nodeType":"ElementaryTypeName","src":"6417:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6416:15:11"},"returnParameters":{"id":1334,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1333,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1352,"src":"6455:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint168","typeString":"uint168"},"typeName":{"id":1332,"name":"uint168","nodeType":"ElementaryTypeName","src":"6455:7:11","typeDescriptions":{"typeIdentifier":"t_uint168","typeString":"uint168"}},"visibility":"internal"}],"src":"6454:9:11"},"scope":2925,"src":"6398:192:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1376,"nodeType":"Block","src":"6985:126:11","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1367,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1361,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1355,"src":"7003:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":1364,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7017:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":1363,"name":"uint160","nodeType":"ElementaryTypeName","src":"7017:7:11","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"}],"id":1362,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"7012:4:11","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":1365,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7012:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint160","typeString":"type(uint160)"}},"id":1366,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"7012:17:11","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"src":"7003:26:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203136302062697473","id":1368,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7031:41:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_976ecce9083debfe29d3a99b955facf24b8725f1b964d1a5bb4197ffcd60ab9d","typeString":"literal_string \"SafeCast: value doesn't fit in 160 bits\""},"value":"SafeCast: value doesn't fit in 160 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_976ecce9083debfe29d3a99b955facf24b8725f1b964d1a5bb4197ffcd60ab9d","typeString":"literal_string \"SafeCast: value doesn't fit in 160 bits\""}],"id":1360,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"6995:7:11","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1369,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6995:78:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1370,"nodeType":"ExpressionStatement","src":"6995:78:11"},{"expression":{"arguments":[{"id":1373,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1355,"src":"7098:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1372,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7090:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":1371,"name":"uint160","nodeType":"ElementaryTypeName","src":"7090:7:11","typeDescriptions":{}}},"id":1374,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7090:14:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"functionReturnParameters":1359,"id":1375,"nodeType":"Return","src":"7083:21:11"}]},"documentation":{"id":1353,"nodeType":"StructuredDocumentation","src":"6596:318:11","text":" @dev Returns the downcasted uint160 from uint256, reverting on\n overflow (when the input is greater than largest uint160).\n Counterpart to Solidity's `uint160` operator.\n Requirements:\n - input must fit into 160 bits\n _Available since v4.7._"},"id":1377,"implemented":true,"kind":"function","modifiers":[],"name":"toUint160","nameLocation":"6928:9:11","nodeType":"FunctionDefinition","parameters":{"id":1356,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1355,"mutability":"mutable","name":"value","nameLocation":"6946:5:11","nodeType":"VariableDeclaration","scope":1377,"src":"6938:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1354,"name":"uint256","nodeType":"ElementaryTypeName","src":"6938:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6937:15:11"},"returnParameters":{"id":1359,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1358,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1377,"src":"6976:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"},"typeName":{"id":1357,"name":"uint160","nodeType":"ElementaryTypeName","src":"6976:7:11","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"visibility":"internal"}],"src":"6975:9:11"},"scope":2925,"src":"6919:192:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1401,"nodeType":"Block","src":"7506:126:11","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1392,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1386,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1380,"src":"7524:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":1389,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7538:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint152_$","typeString":"type(uint152)"},"typeName":{"id":1388,"name":"uint152","nodeType":"ElementaryTypeName","src":"7538:7:11","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint152_$","typeString":"type(uint152)"}],"id":1387,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"7533:4:11","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":1390,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7533:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint152","typeString":"type(uint152)"}},"id":1391,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"7533:17:11","typeDescriptions":{"typeIdentifier":"t_uint152","typeString":"uint152"}},"src":"7524:26:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203135322062697473","id":1393,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7552:41:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_211cad43a2caf5f01e34af51190b8a7b6f3d9c195bd25586ea12242191b97831","typeString":"literal_string \"SafeCast: value doesn't fit in 152 bits\""},"value":"SafeCast: value doesn't fit in 152 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_211cad43a2caf5f01e34af51190b8a7b6f3d9c195bd25586ea12242191b97831","typeString":"literal_string \"SafeCast: value doesn't fit in 152 bits\""}],"id":1385,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"7516:7:11","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1394,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7516:78:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1395,"nodeType":"ExpressionStatement","src":"7516:78:11"},{"expression":{"arguments":[{"id":1398,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1380,"src":"7619:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1397,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7611:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint152_$","typeString":"type(uint152)"},"typeName":{"id":1396,"name":"uint152","nodeType":"ElementaryTypeName","src":"7611:7:11","typeDescriptions":{}}},"id":1399,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7611:14:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint152","typeString":"uint152"}},"functionReturnParameters":1384,"id":1400,"nodeType":"Return","src":"7604:21:11"}]},"documentation":{"id":1378,"nodeType":"StructuredDocumentation","src":"7117:318:11","text":" @dev Returns the downcasted uint152 from uint256, reverting on\n overflow (when the input is greater than largest uint152).\n Counterpart to Solidity's `uint152` operator.\n Requirements:\n - input must fit into 152 bits\n _Available since v4.7._"},"id":1402,"implemented":true,"kind":"function","modifiers":[],"name":"toUint152","nameLocation":"7449:9:11","nodeType":"FunctionDefinition","parameters":{"id":1381,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1380,"mutability":"mutable","name":"value","nameLocation":"7467:5:11","nodeType":"VariableDeclaration","scope":1402,"src":"7459:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1379,"name":"uint256","nodeType":"ElementaryTypeName","src":"7459:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7458:15:11"},"returnParameters":{"id":1384,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1383,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1402,"src":"7497:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint152","typeString":"uint152"},"typeName":{"id":1382,"name":"uint152","nodeType":"ElementaryTypeName","src":"7497:7:11","typeDescriptions":{"typeIdentifier":"t_uint152","typeString":"uint152"}},"visibility":"internal"}],"src":"7496:9:11"},"scope":2925,"src":"7440:192:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1426,"nodeType":"Block","src":"8027:126:11","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1417,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1411,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1405,"src":"8045:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":1414,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8059:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint144_$","typeString":"type(uint144)"},"typeName":{"id":1413,"name":"uint144","nodeType":"ElementaryTypeName","src":"8059:7:11","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint144_$","typeString":"type(uint144)"}],"id":1412,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"8054:4:11","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":1415,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8054:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint144","typeString":"type(uint144)"}},"id":1416,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"8054:17:11","typeDescriptions":{"typeIdentifier":"t_uint144","typeString":"uint144"}},"src":"8045:26:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203134342062697473","id":1418,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8073:41:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_17d8c5a6d3b2fd2517ba2e4a2ac70a3367cd362448f8338aaa6edf8bfd812bab","typeString":"literal_string \"SafeCast: value doesn't fit in 144 bits\""},"value":"SafeCast: value doesn't fit in 144 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_17d8c5a6d3b2fd2517ba2e4a2ac70a3367cd362448f8338aaa6edf8bfd812bab","typeString":"literal_string \"SafeCast: value doesn't fit in 144 bits\""}],"id":1410,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"8037:7:11","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1419,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8037:78:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1420,"nodeType":"ExpressionStatement","src":"8037:78:11"},{"expression":{"arguments":[{"id":1423,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1405,"src":"8140:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1422,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8132:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint144_$","typeString":"type(uint144)"},"typeName":{"id":1421,"name":"uint144","nodeType":"ElementaryTypeName","src":"8132:7:11","typeDescriptions":{}}},"id":1424,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8132:14:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint144","typeString":"uint144"}},"functionReturnParameters":1409,"id":1425,"nodeType":"Return","src":"8125:21:11"}]},"documentation":{"id":1403,"nodeType":"StructuredDocumentation","src":"7638:318:11","text":" @dev Returns the downcasted uint144 from uint256, reverting on\n overflow (when the input is greater than largest uint144).\n Counterpart to Solidity's `uint144` operator.\n Requirements:\n - input must fit into 144 bits\n _Available since v4.7._"},"id":1427,"implemented":true,"kind":"function","modifiers":[],"name":"toUint144","nameLocation":"7970:9:11","nodeType":"FunctionDefinition","parameters":{"id":1406,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1405,"mutability":"mutable","name":"value","nameLocation":"7988:5:11","nodeType":"VariableDeclaration","scope":1427,"src":"7980:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1404,"name":"uint256","nodeType":"ElementaryTypeName","src":"7980:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7979:15:11"},"returnParameters":{"id":1409,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1408,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1427,"src":"8018:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint144","typeString":"uint144"},"typeName":{"id":1407,"name":"uint144","nodeType":"ElementaryTypeName","src":"8018:7:11","typeDescriptions":{"typeIdentifier":"t_uint144","typeString":"uint144"}},"visibility":"internal"}],"src":"8017:9:11"},"scope":2925,"src":"7961:192:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1451,"nodeType":"Block","src":"8548:126:11","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1442,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1436,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1430,"src":"8566:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":1439,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8580:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint136_$","typeString":"type(uint136)"},"typeName":{"id":1438,"name":"uint136","nodeType":"ElementaryTypeName","src":"8580:7:11","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint136_$","typeString":"type(uint136)"}],"id":1437,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"8575:4:11","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":1440,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8575:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint136","typeString":"type(uint136)"}},"id":1441,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"8575:17:11","typeDescriptions":{"typeIdentifier":"t_uint136","typeString":"uint136"}},"src":"8566:26:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203133362062697473","id":1443,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8594:41:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_8b1f81e2e2913e1cee9dba7bcd9837bbf8a8122edaac4afc578271db3c25a56a","typeString":"literal_string \"SafeCast: value doesn't fit in 136 bits\""},"value":"SafeCast: value doesn't fit in 136 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_8b1f81e2e2913e1cee9dba7bcd9837bbf8a8122edaac4afc578271db3c25a56a","typeString":"literal_string \"SafeCast: value doesn't fit in 136 bits\""}],"id":1435,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"8558:7:11","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1444,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8558:78:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1445,"nodeType":"ExpressionStatement","src":"8558:78:11"},{"expression":{"arguments":[{"id":1448,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1430,"src":"8661:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1447,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8653:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint136_$","typeString":"type(uint136)"},"typeName":{"id":1446,"name":"uint136","nodeType":"ElementaryTypeName","src":"8653:7:11","typeDescriptions":{}}},"id":1449,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8653:14:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint136","typeString":"uint136"}},"functionReturnParameters":1434,"id":1450,"nodeType":"Return","src":"8646:21:11"}]},"documentation":{"id":1428,"nodeType":"StructuredDocumentation","src":"8159:318:11","text":" @dev Returns the downcasted uint136 from uint256, reverting on\n overflow (when the input is greater than largest uint136).\n Counterpart to Solidity's `uint136` operator.\n Requirements:\n - input must fit into 136 bits\n _Available since v4.7._"},"id":1452,"implemented":true,"kind":"function","modifiers":[],"name":"toUint136","nameLocation":"8491:9:11","nodeType":"FunctionDefinition","parameters":{"id":1431,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1430,"mutability":"mutable","name":"value","nameLocation":"8509:5:11","nodeType":"VariableDeclaration","scope":1452,"src":"8501:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1429,"name":"uint256","nodeType":"ElementaryTypeName","src":"8501:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8500:15:11"},"returnParameters":{"id":1434,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1433,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1452,"src":"8539:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint136","typeString":"uint136"},"typeName":{"id":1432,"name":"uint136","nodeType":"ElementaryTypeName","src":"8539:7:11","typeDescriptions":{"typeIdentifier":"t_uint136","typeString":"uint136"}},"visibility":"internal"}],"src":"8538:9:11"},"scope":2925,"src":"8482:192:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1476,"nodeType":"Block","src":"9069:126:11","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1467,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1461,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1455,"src":"9087:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":1464,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9101:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint128_$","typeString":"type(uint128)"},"typeName":{"id":1463,"name":"uint128","nodeType":"ElementaryTypeName","src":"9101:7:11","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint128_$","typeString":"type(uint128)"}],"id":1462,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"9096:4:11","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":1465,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9096:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint128","typeString":"type(uint128)"}},"id":1466,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"9096:17:11","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"src":"9087:26:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203132382062697473","id":1468,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9115:41:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_47a1e201974f94d3d1a31c8b08ae18c6966c758bdcd4400020012b98cc55426c","typeString":"literal_string \"SafeCast: value doesn't fit in 128 bits\""},"value":"SafeCast: value doesn't fit in 128 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_47a1e201974f94d3d1a31c8b08ae18c6966c758bdcd4400020012b98cc55426c","typeString":"literal_string \"SafeCast: value doesn't fit in 128 bits\""}],"id":1460,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"9079:7:11","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1469,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9079:78:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1470,"nodeType":"ExpressionStatement","src":"9079:78:11"},{"expression":{"arguments":[{"id":1473,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1455,"src":"9182:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1472,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9174:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint128_$","typeString":"type(uint128)"},"typeName":{"id":1471,"name":"uint128","nodeType":"ElementaryTypeName","src":"9174:7:11","typeDescriptions":{}}},"id":1474,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9174:14:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"functionReturnParameters":1459,"id":1475,"nodeType":"Return","src":"9167:21:11"}]},"documentation":{"id":1453,"nodeType":"StructuredDocumentation","src":"8680:318:11","text":" @dev Returns the downcasted uint128 from uint256, reverting on\n overflow (when the input is greater than largest uint128).\n Counterpart to Solidity's `uint128` operator.\n Requirements:\n - input must fit into 128 bits\n _Available since v2.5._"},"id":1477,"implemented":true,"kind":"function","modifiers":[],"name":"toUint128","nameLocation":"9012:9:11","nodeType":"FunctionDefinition","parameters":{"id":1456,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1455,"mutability":"mutable","name":"value","nameLocation":"9030:5:11","nodeType":"VariableDeclaration","scope":1477,"src":"9022:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1454,"name":"uint256","nodeType":"ElementaryTypeName","src":"9022:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9021:15:11"},"returnParameters":{"id":1459,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1458,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1477,"src":"9060:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":1457,"name":"uint128","nodeType":"ElementaryTypeName","src":"9060:7:11","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"}],"src":"9059:9:11"},"scope":2925,"src":"9003:192:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1501,"nodeType":"Block","src":"9590:126:11","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1492,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1486,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1480,"src":"9608:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":1489,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9622:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint120_$","typeString":"type(uint120)"},"typeName":{"id":1488,"name":"uint120","nodeType":"ElementaryTypeName","src":"9622:7:11","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint120_$","typeString":"type(uint120)"}],"id":1487,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"9617:4:11","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":1490,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9617:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint120","typeString":"type(uint120)"}},"id":1491,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"9617:17:11","typeDescriptions":{"typeIdentifier":"t_uint120","typeString":"uint120"}},"src":"9608:26:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203132302062697473","id":1493,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9636:41:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_3c40c26bb27060cce77002ca0c426dcc1bef2d367c195ca2eb24bd8b2cc1bb09","typeString":"literal_string \"SafeCast: value doesn't fit in 120 bits\""},"value":"SafeCast: value doesn't fit in 120 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_3c40c26bb27060cce77002ca0c426dcc1bef2d367c195ca2eb24bd8b2cc1bb09","typeString":"literal_string \"SafeCast: value doesn't fit in 120 bits\""}],"id":1485,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"9600:7:11","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1494,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9600:78:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1495,"nodeType":"ExpressionStatement","src":"9600:78:11"},{"expression":{"arguments":[{"id":1498,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1480,"src":"9703:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1497,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9695:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint120_$","typeString":"type(uint120)"},"typeName":{"id":1496,"name":"uint120","nodeType":"ElementaryTypeName","src":"9695:7:11","typeDescriptions":{}}},"id":1499,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9695:14:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint120","typeString":"uint120"}},"functionReturnParameters":1484,"id":1500,"nodeType":"Return","src":"9688:21:11"}]},"documentation":{"id":1478,"nodeType":"StructuredDocumentation","src":"9201:318:11","text":" @dev Returns the downcasted uint120 from uint256, reverting on\n overflow (when the input is greater than largest uint120).\n Counterpart to Solidity's `uint120` operator.\n Requirements:\n - input must fit into 120 bits\n _Available since v4.7._"},"id":1502,"implemented":true,"kind":"function","modifiers":[],"name":"toUint120","nameLocation":"9533:9:11","nodeType":"FunctionDefinition","parameters":{"id":1481,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1480,"mutability":"mutable","name":"value","nameLocation":"9551:5:11","nodeType":"VariableDeclaration","scope":1502,"src":"9543:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1479,"name":"uint256","nodeType":"ElementaryTypeName","src":"9543:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9542:15:11"},"returnParameters":{"id":1484,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1483,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1502,"src":"9581:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint120","typeString":"uint120"},"typeName":{"id":1482,"name":"uint120","nodeType":"ElementaryTypeName","src":"9581:7:11","typeDescriptions":{"typeIdentifier":"t_uint120","typeString":"uint120"}},"visibility":"internal"}],"src":"9580:9:11"},"scope":2925,"src":"9524:192:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1526,"nodeType":"Block","src":"10111:126:11","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1517,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1511,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1505,"src":"10129:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":1514,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10143:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint112_$","typeString":"type(uint112)"},"typeName":{"id":1513,"name":"uint112","nodeType":"ElementaryTypeName","src":"10143:7:11","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint112_$","typeString":"type(uint112)"}],"id":1512,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"10138:4:11","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":1515,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10138:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint112","typeString":"type(uint112)"}},"id":1516,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"10138:17:11","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"src":"10129:26:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203131322062697473","id":1518,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"10157:41:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_45659ae152ef697531e1c1115de07c87af91ac22466c3e76b808821799776efd","typeString":"literal_string \"SafeCast: value doesn't fit in 112 bits\""},"value":"SafeCast: value doesn't fit in 112 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_45659ae152ef697531e1c1115de07c87af91ac22466c3e76b808821799776efd","typeString":"literal_string \"SafeCast: value doesn't fit in 112 bits\""}],"id":1510,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"10121:7:11","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1519,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10121:78:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1520,"nodeType":"ExpressionStatement","src":"10121:78:11"},{"expression":{"arguments":[{"id":1523,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1505,"src":"10224:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1522,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10216:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint112_$","typeString":"type(uint112)"},"typeName":{"id":1521,"name":"uint112","nodeType":"ElementaryTypeName","src":"10216:7:11","typeDescriptions":{}}},"id":1524,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10216:14:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"functionReturnParameters":1509,"id":1525,"nodeType":"Return","src":"10209:21:11"}]},"documentation":{"id":1503,"nodeType":"StructuredDocumentation","src":"9722:318:11","text":" @dev Returns the downcasted uint112 from uint256, reverting on\n overflow (when the input is greater than largest uint112).\n Counterpart to Solidity's `uint112` operator.\n Requirements:\n - input must fit into 112 bits\n _Available since v4.7._"},"id":1527,"implemented":true,"kind":"function","modifiers":[],"name":"toUint112","nameLocation":"10054:9:11","nodeType":"FunctionDefinition","parameters":{"id":1506,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1505,"mutability":"mutable","name":"value","nameLocation":"10072:5:11","nodeType":"VariableDeclaration","scope":1527,"src":"10064:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1504,"name":"uint256","nodeType":"ElementaryTypeName","src":"10064:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10063:15:11"},"returnParameters":{"id":1509,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1508,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1527,"src":"10102:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"},"typeName":{"id":1507,"name":"uint112","nodeType":"ElementaryTypeName","src":"10102:7:11","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"visibility":"internal"}],"src":"10101:9:11"},"scope":2925,"src":"10045:192:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1551,"nodeType":"Block","src":"10632:126:11","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1542,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1536,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1530,"src":"10650:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":1539,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10664:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint104_$","typeString":"type(uint104)"},"typeName":{"id":1538,"name":"uint104","nodeType":"ElementaryTypeName","src":"10664:7:11","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint104_$","typeString":"type(uint104)"}],"id":1537,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"10659:4:11","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":1540,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10659:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint104","typeString":"type(uint104)"}},"id":1541,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"10659:17:11","typeDescriptions":{"typeIdentifier":"t_uint104","typeString":"uint104"}},"src":"10650:26:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203130342062697473","id":1543,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"10678:41:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_5d7f3e1b7e9f9a06fded6b093c6fd1473ca0a14cc4bb683db904e803e2482981","typeString":"literal_string \"SafeCast: value doesn't fit in 104 bits\""},"value":"SafeCast: value doesn't fit in 104 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_5d7f3e1b7e9f9a06fded6b093c6fd1473ca0a14cc4bb683db904e803e2482981","typeString":"literal_string \"SafeCast: value doesn't fit in 104 bits\""}],"id":1535,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"10642:7:11","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1544,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10642:78:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1545,"nodeType":"ExpressionStatement","src":"10642:78:11"},{"expression":{"arguments":[{"id":1548,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1530,"src":"10745:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1547,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10737:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint104_$","typeString":"type(uint104)"},"typeName":{"id":1546,"name":"uint104","nodeType":"ElementaryTypeName","src":"10737:7:11","typeDescriptions":{}}},"id":1549,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10737:14:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint104","typeString":"uint104"}},"functionReturnParameters":1534,"id":1550,"nodeType":"Return","src":"10730:21:11"}]},"documentation":{"id":1528,"nodeType":"StructuredDocumentation","src":"10243:318:11","text":" @dev Returns the downcasted uint104 from uint256, reverting on\n overflow (when the input is greater than largest uint104).\n Counterpart to Solidity's `uint104` operator.\n Requirements:\n - input must fit into 104 bits\n _Available since v4.7._"},"id":1552,"implemented":true,"kind":"function","modifiers":[],"name":"toUint104","nameLocation":"10575:9:11","nodeType":"FunctionDefinition","parameters":{"id":1531,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1530,"mutability":"mutable","name":"value","nameLocation":"10593:5:11","nodeType":"VariableDeclaration","scope":1552,"src":"10585:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1529,"name":"uint256","nodeType":"ElementaryTypeName","src":"10585:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10584:15:11"},"returnParameters":{"id":1534,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1533,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1552,"src":"10623:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint104","typeString":"uint104"},"typeName":{"id":1532,"name":"uint104","nodeType":"ElementaryTypeName","src":"10623:7:11","typeDescriptions":{"typeIdentifier":"t_uint104","typeString":"uint104"}},"visibility":"internal"}],"src":"10622:9:11"},"scope":2925,"src":"10566:192:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1576,"nodeType":"Block","src":"11147:123:11","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1567,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1561,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1555,"src":"11165:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":1564,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11179:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint96_$","typeString":"type(uint96)"},"typeName":{"id":1563,"name":"uint96","nodeType":"ElementaryTypeName","src":"11179:6:11","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint96_$","typeString":"type(uint96)"}],"id":1562,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"11174:4:11","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":1565,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11174:12:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint96","typeString":"type(uint96)"}},"id":1566,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"11174:16:11","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"src":"11165:25:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e2039362062697473","id":1568,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"11192:40:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_06d20189090e973729391526269baef79c35dd621633195648e5f8309eef9e19","typeString":"literal_string \"SafeCast: value doesn't fit in 96 bits\""},"value":"SafeCast: value doesn't fit in 96 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_06d20189090e973729391526269baef79c35dd621633195648e5f8309eef9e19","typeString":"literal_string \"SafeCast: value doesn't fit in 96 bits\""}],"id":1560,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"11157:7:11","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1569,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11157:76:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1570,"nodeType":"ExpressionStatement","src":"11157:76:11"},{"expression":{"arguments":[{"id":1573,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1555,"src":"11257:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1572,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11250:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint96_$","typeString":"type(uint96)"},"typeName":{"id":1571,"name":"uint96","nodeType":"ElementaryTypeName","src":"11250:6:11","typeDescriptions":{}}},"id":1574,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11250:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"functionReturnParameters":1559,"id":1575,"nodeType":"Return","src":"11243:20:11"}]},"documentation":{"id":1553,"nodeType":"StructuredDocumentation","src":"10764:314:11","text":" @dev Returns the downcasted uint96 from uint256, reverting on\n overflow (when the input is greater than largest uint96).\n Counterpart to Solidity's `uint96` operator.\n Requirements:\n - input must fit into 96 bits\n _Available since v4.2._"},"id":1577,"implemented":true,"kind":"function","modifiers":[],"name":"toUint96","nameLocation":"11092:8:11","nodeType":"FunctionDefinition","parameters":{"id":1556,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1555,"mutability":"mutable","name":"value","nameLocation":"11109:5:11","nodeType":"VariableDeclaration","scope":1577,"src":"11101:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1554,"name":"uint256","nodeType":"ElementaryTypeName","src":"11101:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11100:15:11"},"returnParameters":{"id":1559,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1558,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1577,"src":"11139:6:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":1557,"name":"uint96","nodeType":"ElementaryTypeName","src":"11139:6:11","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"visibility":"internal"}],"src":"11138:8:11"},"scope":2925,"src":"11083:187:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1601,"nodeType":"Block","src":"11659:123:11","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1592,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1586,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1580,"src":"11677:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":1589,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11691:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint88_$","typeString":"type(uint88)"},"typeName":{"id":1588,"name":"uint88","nodeType":"ElementaryTypeName","src":"11691:6:11","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint88_$","typeString":"type(uint88)"}],"id":1587,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"11686:4:11","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":1590,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11686:12:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint88","typeString":"type(uint88)"}},"id":1591,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"11686:16:11","typeDescriptions":{"typeIdentifier":"t_uint88","typeString":"uint88"}},"src":"11677:25:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e2038382062697473","id":1593,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"11704:40:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_ae080bd7a76a46f0a0caf00941bc2cdf6002799ca2813a3af7295019576d715d","typeString":"literal_string \"SafeCast: value doesn't fit in 88 bits\""},"value":"SafeCast: value doesn't fit in 88 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_ae080bd7a76a46f0a0caf00941bc2cdf6002799ca2813a3af7295019576d715d","typeString":"literal_string \"SafeCast: value doesn't fit in 88 bits\""}],"id":1585,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"11669:7:11","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1594,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11669:76:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1595,"nodeType":"ExpressionStatement","src":"11669:76:11"},{"expression":{"arguments":[{"id":1598,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1580,"src":"11769:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1597,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11762:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint88_$","typeString":"type(uint88)"},"typeName":{"id":1596,"name":"uint88","nodeType":"ElementaryTypeName","src":"11762:6:11","typeDescriptions":{}}},"id":1599,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11762:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint88","typeString":"uint88"}},"functionReturnParameters":1584,"id":1600,"nodeType":"Return","src":"11755:20:11"}]},"documentation":{"id":1578,"nodeType":"StructuredDocumentation","src":"11276:314:11","text":" @dev Returns the downcasted uint88 from uint256, reverting on\n overflow (when the input is greater than largest uint88).\n Counterpart to Solidity's `uint88` operator.\n Requirements:\n - input must fit into 88 bits\n _Available since v4.7._"},"id":1602,"implemented":true,"kind":"function","modifiers":[],"name":"toUint88","nameLocation":"11604:8:11","nodeType":"FunctionDefinition","parameters":{"id":1581,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1580,"mutability":"mutable","name":"value","nameLocation":"11621:5:11","nodeType":"VariableDeclaration","scope":1602,"src":"11613:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1579,"name":"uint256","nodeType":"ElementaryTypeName","src":"11613:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11612:15:11"},"returnParameters":{"id":1584,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1583,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1602,"src":"11651:6:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint88","typeString":"uint88"},"typeName":{"id":1582,"name":"uint88","nodeType":"ElementaryTypeName","src":"11651:6:11","typeDescriptions":{"typeIdentifier":"t_uint88","typeString":"uint88"}},"visibility":"internal"}],"src":"11650:8:11"},"scope":2925,"src":"11595:187:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1626,"nodeType":"Block","src":"12171:123:11","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1617,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1611,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1605,"src":"12189:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":1614,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12203:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint80_$","typeString":"type(uint80)"},"typeName":{"id":1613,"name":"uint80","nodeType":"ElementaryTypeName","src":"12203:6:11","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint80_$","typeString":"type(uint80)"}],"id":1612,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"12198:4:11","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":1615,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"12198:12:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint80","typeString":"type(uint80)"}},"id":1616,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"12198:16:11","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"src":"12189:25:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e2038302062697473","id":1618,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"12216:40:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_3cba87c71fade7d3cd7b673c159aab98afc040a5369691a33559d905d20ab5d1","typeString":"literal_string \"SafeCast: value doesn't fit in 80 bits\""},"value":"SafeCast: value doesn't fit in 80 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_3cba87c71fade7d3cd7b673c159aab98afc040a5369691a33559d905d20ab5d1","typeString":"literal_string \"SafeCast: value doesn't fit in 80 bits\""}],"id":1610,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"12181:7:11","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1619,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"12181:76:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1620,"nodeType":"ExpressionStatement","src":"12181:76:11"},{"expression":{"arguments":[{"id":1623,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1605,"src":"12281:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1622,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12274:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint80_$","typeString":"type(uint80)"},"typeName":{"id":1621,"name":"uint80","nodeType":"ElementaryTypeName","src":"12274:6:11","typeDescriptions":{}}},"id":1624,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"12274:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"functionReturnParameters":1609,"id":1625,"nodeType":"Return","src":"12267:20:11"}]},"documentation":{"id":1603,"nodeType":"StructuredDocumentation","src":"11788:314:11","text":" @dev Returns the downcasted uint80 from uint256, reverting on\n overflow (when the input is greater than largest uint80).\n Counterpart to Solidity's `uint80` operator.\n Requirements:\n - input must fit into 80 bits\n _Available since v4.7._"},"id":1627,"implemented":true,"kind":"function","modifiers":[],"name":"toUint80","nameLocation":"12116:8:11","nodeType":"FunctionDefinition","parameters":{"id":1606,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1605,"mutability":"mutable","name":"value","nameLocation":"12133:5:11","nodeType":"VariableDeclaration","scope":1627,"src":"12125:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1604,"name":"uint256","nodeType":"ElementaryTypeName","src":"12125:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12124:15:11"},"returnParameters":{"id":1609,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1608,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1627,"src":"12163:6:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"},"typeName":{"id":1607,"name":"uint80","nodeType":"ElementaryTypeName","src":"12163:6:11","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"visibility":"internal"}],"src":"12162:8:11"},"scope":2925,"src":"12107:187:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1651,"nodeType":"Block","src":"12683:123:11","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1642,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1636,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1630,"src":"12701:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":1639,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12715:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint72_$","typeString":"type(uint72)"},"typeName":{"id":1638,"name":"uint72","nodeType":"ElementaryTypeName","src":"12715:6:11","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint72_$","typeString":"type(uint72)"}],"id":1637,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"12710:4:11","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":1640,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"12710:12:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint72","typeString":"type(uint72)"}},"id":1641,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"12710:16:11","typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"}},"src":"12701:25:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e2037322062697473","id":1643,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"12728:40:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_71584237cc5250b8f417982144a947efe8f4c76feba008ff32ac480e69d60606","typeString":"literal_string \"SafeCast: value doesn't fit in 72 bits\""},"value":"SafeCast: value doesn't fit in 72 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_71584237cc5250b8f417982144a947efe8f4c76feba008ff32ac480e69d60606","typeString":"literal_string \"SafeCast: value doesn't fit in 72 bits\""}],"id":1635,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"12693:7:11","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1644,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"12693:76:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1645,"nodeType":"ExpressionStatement","src":"12693:76:11"},{"expression":{"arguments":[{"id":1648,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1630,"src":"12793:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1647,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12786:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint72_$","typeString":"type(uint72)"},"typeName":{"id":1646,"name":"uint72","nodeType":"ElementaryTypeName","src":"12786:6:11","typeDescriptions":{}}},"id":1649,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"12786:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"}},"functionReturnParameters":1634,"id":1650,"nodeType":"Return","src":"12779:20:11"}]},"documentation":{"id":1628,"nodeType":"StructuredDocumentation","src":"12300:314:11","text":" @dev Returns the downcasted uint72 from uint256, reverting on\n overflow (when the input is greater than largest uint72).\n Counterpart to Solidity's `uint72` operator.\n Requirements:\n - input must fit into 72 bits\n _Available since v4.7._"},"id":1652,"implemented":true,"kind":"function","modifiers":[],"name":"toUint72","nameLocation":"12628:8:11","nodeType":"FunctionDefinition","parameters":{"id":1631,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1630,"mutability":"mutable","name":"value","nameLocation":"12645:5:11","nodeType":"VariableDeclaration","scope":1652,"src":"12637:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1629,"name":"uint256","nodeType":"ElementaryTypeName","src":"12637:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12636:15:11"},"returnParameters":{"id":1634,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1633,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1652,"src":"12675:6:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"},"typeName":{"id":1632,"name":"uint72","nodeType":"ElementaryTypeName","src":"12675:6:11","typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"}},"visibility":"internal"}],"src":"12674:8:11"},"scope":2925,"src":"12619:187:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1676,"nodeType":"Block","src":"13195:123:11","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1667,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1661,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1655,"src":"13213:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":1664,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13227:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"},"typeName":{"id":1663,"name":"uint64","nodeType":"ElementaryTypeName","src":"13227:6:11","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"}],"id":1662,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"13222:4:11","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":1665,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"13222:12:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint64","typeString":"type(uint64)"}},"id":1666,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"13222:16:11","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"src":"13213:25:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e2036342062697473","id":1668,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"13240:40:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_93ae0c6bf6ffaece591a770b1865daa9f65157e541970aa9d8dc5f89a9490939","typeString":"literal_string \"SafeCast: value doesn't fit in 64 bits\""},"value":"SafeCast: value doesn't fit in 64 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_93ae0c6bf6ffaece591a770b1865daa9f65157e541970aa9d8dc5f89a9490939","typeString":"literal_string \"SafeCast: value doesn't fit in 64 bits\""}],"id":1660,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"13205:7:11","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1669,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"13205:76:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1670,"nodeType":"ExpressionStatement","src":"13205:76:11"},{"expression":{"arguments":[{"id":1673,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1655,"src":"13305:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1672,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13298:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"},"typeName":{"id":1671,"name":"uint64","nodeType":"ElementaryTypeName","src":"13298:6:11","typeDescriptions":{}}},"id":1674,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"13298:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"functionReturnParameters":1659,"id":1675,"nodeType":"Return","src":"13291:20:11"}]},"documentation":{"id":1653,"nodeType":"StructuredDocumentation","src":"12812:314:11","text":" @dev Returns the downcasted uint64 from uint256, reverting on\n overflow (when the input is greater than largest uint64).\n Counterpart to Solidity's `uint64` operator.\n Requirements:\n - input must fit into 64 bits\n _Available since v2.5._"},"id":1677,"implemented":true,"kind":"function","modifiers":[],"name":"toUint64","nameLocation":"13140:8:11","nodeType":"FunctionDefinition","parameters":{"id":1656,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1655,"mutability":"mutable","name":"value","nameLocation":"13157:5:11","nodeType":"VariableDeclaration","scope":1677,"src":"13149:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1654,"name":"uint256","nodeType":"ElementaryTypeName","src":"13149:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13148:15:11"},"returnParameters":{"id":1659,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1658,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1677,"src":"13187:6:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":1657,"name":"uint64","nodeType":"ElementaryTypeName","src":"13187:6:11","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"13186:8:11"},"scope":2925,"src":"13131:187:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1701,"nodeType":"Block","src":"13707:123:11","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1692,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1686,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1680,"src":"13725:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":1689,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13739:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint56_$","typeString":"type(uint56)"},"typeName":{"id":1688,"name":"uint56","nodeType":"ElementaryTypeName","src":"13739:6:11","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint56_$","typeString":"type(uint56)"}],"id":1687,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"13734:4:11","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":1690,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"13734:12:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint56","typeString":"type(uint56)"}},"id":1691,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"13734:16:11","typeDescriptions":{"typeIdentifier":"t_uint56","typeString":"uint56"}},"src":"13725:25:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e2035362062697473","id":1693,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"13752:40:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_656ad93b5ff6665bfe05d97d51fad7c02ad79e6c43bef066c042a6900f450bc5","typeString":"literal_string \"SafeCast: value doesn't fit in 56 bits\""},"value":"SafeCast: value doesn't fit in 56 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_656ad93b5ff6665bfe05d97d51fad7c02ad79e6c43bef066c042a6900f450bc5","typeString":"literal_string \"SafeCast: value doesn't fit in 56 bits\""}],"id":1685,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"13717:7:11","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1694,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"13717:76:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1695,"nodeType":"ExpressionStatement","src":"13717:76:11"},{"expression":{"arguments":[{"id":1698,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1680,"src":"13817:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1697,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13810:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint56_$","typeString":"type(uint56)"},"typeName":{"id":1696,"name":"uint56","nodeType":"ElementaryTypeName","src":"13810:6:11","typeDescriptions":{}}},"id":1699,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"13810:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint56","typeString":"uint56"}},"functionReturnParameters":1684,"id":1700,"nodeType":"Return","src":"13803:20:11"}]},"documentation":{"id":1678,"nodeType":"StructuredDocumentation","src":"13324:314:11","text":" @dev Returns the downcasted uint56 from uint256, reverting on\n overflow (when the input is greater than largest uint56).\n Counterpart to Solidity's `uint56` operator.\n Requirements:\n - input must fit into 56 bits\n _Available since v4.7._"},"id":1702,"implemented":true,"kind":"function","modifiers":[],"name":"toUint56","nameLocation":"13652:8:11","nodeType":"FunctionDefinition","parameters":{"id":1681,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1680,"mutability":"mutable","name":"value","nameLocation":"13669:5:11","nodeType":"VariableDeclaration","scope":1702,"src":"13661:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1679,"name":"uint256","nodeType":"ElementaryTypeName","src":"13661:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13660:15:11"},"returnParameters":{"id":1684,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1683,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1702,"src":"13699:6:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint56","typeString":"uint56"},"typeName":{"id":1682,"name":"uint56","nodeType":"ElementaryTypeName","src":"13699:6:11","typeDescriptions":{"typeIdentifier":"t_uint56","typeString":"uint56"}},"visibility":"internal"}],"src":"13698:8:11"},"scope":2925,"src":"13643:187:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1726,"nodeType":"Block","src":"14219:123:11","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1717,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1711,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1705,"src":"14237:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":1714,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14251:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint48_$","typeString":"type(uint48)"},"typeName":{"id":1713,"name":"uint48","nodeType":"ElementaryTypeName","src":"14251:6:11","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint48_$","typeString":"type(uint48)"}],"id":1712,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"14246:4:11","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":1715,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"14246:12:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint48","typeString":"type(uint48)"}},"id":1716,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"14246:16:11","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"src":"14237:25:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e2034382062697473","id":1718,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"14264:40:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_599034f9324dd4e988c6cea5a00a30f53147fec1b01559682f18cd840028f495","typeString":"literal_string \"SafeCast: value doesn't fit in 48 bits\""},"value":"SafeCast: value doesn't fit in 48 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_599034f9324dd4e988c6cea5a00a30f53147fec1b01559682f18cd840028f495","typeString":"literal_string \"SafeCast: value doesn't fit in 48 bits\""}],"id":1710,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"14229:7:11","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1719,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"14229:76:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1720,"nodeType":"ExpressionStatement","src":"14229:76:11"},{"expression":{"arguments":[{"id":1723,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1705,"src":"14329:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1722,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14322:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint48_$","typeString":"type(uint48)"},"typeName":{"id":1721,"name":"uint48","nodeType":"ElementaryTypeName","src":"14322:6:11","typeDescriptions":{}}},"id":1724,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"14322:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"functionReturnParameters":1709,"id":1725,"nodeType":"Return","src":"14315:20:11"}]},"documentation":{"id":1703,"nodeType":"StructuredDocumentation","src":"13836:314:11","text":" @dev Returns the downcasted uint48 from uint256, reverting on\n overflow (when the input is greater than largest uint48).\n Counterpart to Solidity's `uint48` operator.\n Requirements:\n - input must fit into 48 bits\n _Available since v4.7._"},"id":1727,"implemented":true,"kind":"function","modifiers":[],"name":"toUint48","nameLocation":"14164:8:11","nodeType":"FunctionDefinition","parameters":{"id":1706,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1705,"mutability":"mutable","name":"value","nameLocation":"14181:5:11","nodeType":"VariableDeclaration","scope":1727,"src":"14173:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1704,"name":"uint256","nodeType":"ElementaryTypeName","src":"14173:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14172:15:11"},"returnParameters":{"id":1709,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1708,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1727,"src":"14211:6:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":1707,"name":"uint48","nodeType":"ElementaryTypeName","src":"14211:6:11","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"}],"src":"14210:8:11"},"scope":2925,"src":"14155:187:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1751,"nodeType":"Block","src":"14731:123:11","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1742,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1736,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1730,"src":"14749:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":1739,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14763:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint40_$","typeString":"type(uint40)"},"typeName":{"id":1738,"name":"uint40","nodeType":"ElementaryTypeName","src":"14763:6:11","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint40_$","typeString":"type(uint40)"}],"id":1737,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"14758:4:11","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":1740,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"14758:12:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint40","typeString":"type(uint40)"}},"id":1741,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"14758:16:11","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"src":"14749:25:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e2034302062697473","id":1743,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"14776:40:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_b23559c58b98a5d3ed7016699c7171ac8defa5a1d180f9a9ffa60468a5701d37","typeString":"literal_string \"SafeCast: value doesn't fit in 40 bits\""},"value":"SafeCast: value doesn't fit in 40 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_b23559c58b98a5d3ed7016699c7171ac8defa5a1d180f9a9ffa60468a5701d37","typeString":"literal_string \"SafeCast: value doesn't fit in 40 bits\""}],"id":1735,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"14741:7:11","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1744,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"14741:76:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1745,"nodeType":"ExpressionStatement","src":"14741:76:11"},{"expression":{"arguments":[{"id":1748,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1730,"src":"14841:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1747,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14834:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint40_$","typeString":"type(uint40)"},"typeName":{"id":1746,"name":"uint40","nodeType":"ElementaryTypeName","src":"14834:6:11","typeDescriptions":{}}},"id":1749,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"14834:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"functionReturnParameters":1734,"id":1750,"nodeType":"Return","src":"14827:20:11"}]},"documentation":{"id":1728,"nodeType":"StructuredDocumentation","src":"14348:314:11","text":" @dev Returns the downcasted uint40 from uint256, reverting on\n overflow (when the input is greater than largest uint40).\n Counterpart to Solidity's `uint40` operator.\n Requirements:\n - input must fit into 40 bits\n _Available since v4.7._"},"id":1752,"implemented":true,"kind":"function","modifiers":[],"name":"toUint40","nameLocation":"14676:8:11","nodeType":"FunctionDefinition","parameters":{"id":1731,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1730,"mutability":"mutable","name":"value","nameLocation":"14693:5:11","nodeType":"VariableDeclaration","scope":1752,"src":"14685:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1729,"name":"uint256","nodeType":"ElementaryTypeName","src":"14685:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14684:15:11"},"returnParameters":{"id":1734,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1733,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1752,"src":"14723:6:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"},"typeName":{"id":1732,"name":"uint40","nodeType":"ElementaryTypeName","src":"14723:6:11","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"visibility":"internal"}],"src":"14722:8:11"},"scope":2925,"src":"14667:187:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1776,"nodeType":"Block","src":"15243:123:11","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1767,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1761,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1755,"src":"15261:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":1764,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15275:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint32_$","typeString":"type(uint32)"},"typeName":{"id":1763,"name":"uint32","nodeType":"ElementaryTypeName","src":"15275:6:11","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint32_$","typeString":"type(uint32)"}],"id":1762,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"15270:4:11","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":1765,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"15270:12:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint32","typeString":"type(uint32)"}},"id":1766,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"15270:16:11","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"src":"15261:25:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e2033322062697473","id":1768,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"15288:40:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_c907489dafcfb622d3b83f2657a14d6da2f59e0de3116af0d6a80554c1a7cb19","typeString":"literal_string \"SafeCast: value doesn't fit in 32 bits\""},"value":"SafeCast: value doesn't fit in 32 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_c907489dafcfb622d3b83f2657a14d6da2f59e0de3116af0d6a80554c1a7cb19","typeString":"literal_string \"SafeCast: value doesn't fit in 32 bits\""}],"id":1760,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"15253:7:11","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1769,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"15253:76:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1770,"nodeType":"ExpressionStatement","src":"15253:76:11"},{"expression":{"arguments":[{"id":1773,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1755,"src":"15353:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1772,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15346:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint32_$","typeString":"type(uint32)"},"typeName":{"id":1771,"name":"uint32","nodeType":"ElementaryTypeName","src":"15346:6:11","typeDescriptions":{}}},"id":1774,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"15346:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"functionReturnParameters":1759,"id":1775,"nodeType":"Return","src":"15339:20:11"}]},"documentation":{"id":1753,"nodeType":"StructuredDocumentation","src":"14860:314:11","text":" @dev Returns the downcasted uint32 from uint256, reverting on\n overflow (when the input is greater than largest uint32).\n Counterpart to Solidity's `uint32` operator.\n Requirements:\n - input must fit into 32 bits\n _Available since v2.5._"},"id":1777,"implemented":true,"kind":"function","modifiers":[],"name":"toUint32","nameLocation":"15188:8:11","nodeType":"FunctionDefinition","parameters":{"id":1756,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1755,"mutability":"mutable","name":"value","nameLocation":"15205:5:11","nodeType":"VariableDeclaration","scope":1777,"src":"15197:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1754,"name":"uint256","nodeType":"ElementaryTypeName","src":"15197:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15196:15:11"},"returnParameters":{"id":1759,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1758,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1777,"src":"15235:6:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":1757,"name":"uint32","nodeType":"ElementaryTypeName","src":"15235:6:11","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"15234:8:11"},"scope":2925,"src":"15179:187:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1801,"nodeType":"Block","src":"15755:123:11","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1792,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1786,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1780,"src":"15773:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":1789,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15787:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint24_$","typeString":"type(uint24)"},"typeName":{"id":1788,"name":"uint24","nodeType":"ElementaryTypeName","src":"15787:6:11","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint24_$","typeString":"type(uint24)"}],"id":1787,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"15782:4:11","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":1790,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"15782:12:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint24","typeString":"type(uint24)"}},"id":1791,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"15782:16:11","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"src":"15773:25:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e2032342062697473","id":1793,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"15800:40:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_f68b65aaf4574c34e9b9d1442d19636c6608b8c4dbd9331c7245f7915c8b2f55","typeString":"literal_string \"SafeCast: value doesn't fit in 24 bits\""},"value":"SafeCast: value doesn't fit in 24 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_f68b65aaf4574c34e9b9d1442d19636c6608b8c4dbd9331c7245f7915c8b2f55","typeString":"literal_string \"SafeCast: value doesn't fit in 24 bits\""}],"id":1785,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"15765:7:11","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1794,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"15765:76:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1795,"nodeType":"ExpressionStatement","src":"15765:76:11"},{"expression":{"arguments":[{"id":1798,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1780,"src":"15865:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1797,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15858:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint24_$","typeString":"type(uint24)"},"typeName":{"id":1796,"name":"uint24","nodeType":"ElementaryTypeName","src":"15858:6:11","typeDescriptions":{}}},"id":1799,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"15858:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"functionReturnParameters":1784,"id":1800,"nodeType":"Return","src":"15851:20:11"}]},"documentation":{"id":1778,"nodeType":"StructuredDocumentation","src":"15372:314:11","text":" @dev Returns the downcasted uint24 from uint256, reverting on\n overflow (when the input is greater than largest uint24).\n Counterpart to Solidity's `uint24` operator.\n Requirements:\n - input must fit into 24 bits\n _Available since v4.7._"},"id":1802,"implemented":true,"kind":"function","modifiers":[],"name":"toUint24","nameLocation":"15700:8:11","nodeType":"FunctionDefinition","parameters":{"id":1781,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1780,"mutability":"mutable","name":"value","nameLocation":"15717:5:11","nodeType":"VariableDeclaration","scope":1802,"src":"15709:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1779,"name":"uint256","nodeType":"ElementaryTypeName","src":"15709:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15708:15:11"},"returnParameters":{"id":1784,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1783,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1802,"src":"15747:6:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"},"typeName":{"id":1782,"name":"uint24","nodeType":"ElementaryTypeName","src":"15747:6:11","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"visibility":"internal"}],"src":"15746:8:11"},"scope":2925,"src":"15691:187:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1826,"nodeType":"Block","src":"16267:123:11","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1817,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1811,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1805,"src":"16285:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":1814,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16299:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint16_$","typeString":"type(uint16)"},"typeName":{"id":1813,"name":"uint16","nodeType":"ElementaryTypeName","src":"16299:6:11","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint16_$","typeString":"type(uint16)"}],"id":1812,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"16294:4:11","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":1815,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"16294:12:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint16","typeString":"type(uint16)"}},"id":1816,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"16294:16:11","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"src":"16285:25:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e2031362062697473","id":1818,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"16312:40:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_13d3a66f9e0e5c92bbe7743bcd3bdb4695009d5f3a96e5ff49718d715b484033","typeString":"literal_string \"SafeCast: value doesn't fit in 16 bits\""},"value":"SafeCast: value doesn't fit in 16 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_13d3a66f9e0e5c92bbe7743bcd3bdb4695009d5f3a96e5ff49718d715b484033","typeString":"literal_string \"SafeCast: value doesn't fit in 16 bits\""}],"id":1810,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"16277:7:11","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1819,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"16277:76:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1820,"nodeType":"ExpressionStatement","src":"16277:76:11"},{"expression":{"arguments":[{"id":1823,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1805,"src":"16377:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1822,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16370:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint16_$","typeString":"type(uint16)"},"typeName":{"id":1821,"name":"uint16","nodeType":"ElementaryTypeName","src":"16370:6:11","typeDescriptions":{}}},"id":1824,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"16370:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"functionReturnParameters":1809,"id":1825,"nodeType":"Return","src":"16363:20:11"}]},"documentation":{"id":1803,"nodeType":"StructuredDocumentation","src":"15884:314:11","text":" @dev Returns the downcasted uint16 from uint256, reverting on\n overflow (when the input is greater than largest uint16).\n Counterpart to Solidity's `uint16` operator.\n Requirements:\n - input must fit into 16 bits\n _Available since v2.5._"},"id":1827,"implemented":true,"kind":"function","modifiers":[],"name":"toUint16","nameLocation":"16212:8:11","nodeType":"FunctionDefinition","parameters":{"id":1806,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1805,"mutability":"mutable","name":"value","nameLocation":"16229:5:11","nodeType":"VariableDeclaration","scope":1827,"src":"16221:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1804,"name":"uint256","nodeType":"ElementaryTypeName","src":"16221:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16220:15:11"},"returnParameters":{"id":1809,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1808,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1827,"src":"16259:6:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":1807,"name":"uint16","nodeType":"ElementaryTypeName","src":"16259:6:11","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"}],"src":"16258:8:11"},"scope":2925,"src":"16203:187:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1851,"nodeType":"Block","src":"16773:120:11","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1842,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1836,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1830,"src":"16791:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":1839,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16805:5:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":1838,"name":"uint8","nodeType":"ElementaryTypeName","src":"16805:5:11","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"}],"id":1837,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"16800:4:11","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":1840,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"16800:11:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint8","typeString":"type(uint8)"}},"id":1841,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"16800:15:11","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"16791:24:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e20382062697473","id":1843,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"16817:39:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_2610961ba53259047cd57c60366c5ad0b8aabf5eb4132487619b736715a740d1","typeString":"literal_string \"SafeCast: value doesn't fit in 8 bits\""},"value":"SafeCast: value doesn't fit in 8 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_2610961ba53259047cd57c60366c5ad0b8aabf5eb4132487619b736715a740d1","typeString":"literal_string \"SafeCast: value doesn't fit in 8 bits\""}],"id":1835,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"16783:7:11","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1844,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"16783:74:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1845,"nodeType":"ExpressionStatement","src":"16783:74:11"},{"expression":{"arguments":[{"id":1848,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1830,"src":"16880:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1847,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16874:5:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":1846,"name":"uint8","nodeType":"ElementaryTypeName","src":"16874:5:11","typeDescriptions":{}}},"id":1849,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"16874:12:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"functionReturnParameters":1834,"id":1850,"nodeType":"Return","src":"16867:19:11"}]},"documentation":{"id":1828,"nodeType":"StructuredDocumentation","src":"16396:310:11","text":" @dev Returns the downcasted uint8 from uint256, reverting on\n overflow (when the input is greater than largest uint8).\n Counterpart to Solidity's `uint8` operator.\n Requirements:\n - input must fit into 8 bits\n _Available since v2.5._"},"id":1852,"implemented":true,"kind":"function","modifiers":[],"name":"toUint8","nameLocation":"16720:7:11","nodeType":"FunctionDefinition","parameters":{"id":1831,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1830,"mutability":"mutable","name":"value","nameLocation":"16736:5:11","nodeType":"VariableDeclaration","scope":1852,"src":"16728:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1829,"name":"uint256","nodeType":"ElementaryTypeName","src":"16728:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16727:15:11"},"returnParameters":{"id":1834,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1833,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1852,"src":"16766:5:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1832,"name":"uint8","nodeType":"ElementaryTypeName","src":"16766:5:11","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"16765:7:11"},"scope":2925,"src":"16711:182:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1872,"nodeType":"Block","src":"17167:103:11","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":1863,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1861,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1855,"src":"17185:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"hexValue":"30","id":1862,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17194:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"17185:10:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c7565206d75737420626520706f736974697665","id":1864,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"17197:34:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_74e6d3a4204092bea305532ded31d3763fc378e46be3884a93ceff08a0761807","typeString":"literal_string \"SafeCast: value must be positive\""},"value":"SafeCast: value must be positive"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_74e6d3a4204092bea305532ded31d3763fc378e46be3884a93ceff08a0761807","typeString":"literal_string \"SafeCast: value must be positive\""}],"id":1860,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"17177:7:11","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1865,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"17177:55:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1866,"nodeType":"ExpressionStatement","src":"17177:55:11"},{"expression":{"arguments":[{"id":1869,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1855,"src":"17257:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":1868,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"17249:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":1867,"name":"uint256","nodeType":"ElementaryTypeName","src":"17249:7:11","typeDescriptions":{}}},"id":1870,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"17249:14:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1859,"id":1871,"nodeType":"Return","src":"17242:21:11"}]},"documentation":{"id":1853,"nodeType":"StructuredDocumentation","src":"16899:198:11","text":" @dev Converts a signed int256 into an unsigned uint256.\n Requirements:\n - input must be greater than or equal to 0.\n _Available since v3.0._"},"id":1873,"implemented":true,"kind":"function","modifiers":[],"name":"toUint256","nameLocation":"17111:9:11","nodeType":"FunctionDefinition","parameters":{"id":1856,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1855,"mutability":"mutable","name":"value","nameLocation":"17128:5:11","nodeType":"VariableDeclaration","scope":1873,"src":"17121:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":1854,"name":"int256","nodeType":"ElementaryTypeName","src":"17121:6:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"17120:14:11"},"returnParameters":{"id":1859,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1858,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1873,"src":"17158:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1857,"name":"uint256","nodeType":"ElementaryTypeName","src":"17158:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"17157:9:11"},"scope":2925,"src":"17102:168:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1905,"nodeType":"Block","src":"17694:153:11","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1896,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":1888,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1882,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1876,"src":"17712:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"expression":{"arguments":[{"id":1885,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"17726:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_int248_$","typeString":"type(int248)"},"typeName":{"id":1884,"name":"int248","nodeType":"ElementaryTypeName","src":"17726:6:11","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_int248_$","typeString":"type(int248)"}],"id":1883,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"17721:4:11","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":1886,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"17721:12:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_int248","typeString":"type(int248)"}},"id":1887,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"min","nodeType":"MemberAccess","src":"17721:16:11","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"src":"17712:25:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":1895,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1889,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1876,"src":"17741:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":1892,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"17755:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_int248_$","typeString":"type(int248)"},"typeName":{"id":1891,"name":"int248","nodeType":"ElementaryTypeName","src":"17755:6:11","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_int248_$","typeString":"type(int248)"}],"id":1890,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"17750:4:11","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":1893,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"17750:12:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_int248","typeString":"type(int248)"}},"id":1894,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"17750:16:11","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"src":"17741:25:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"17712:54:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203234382062697473","id":1897,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"17768:41:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_6ac19bba4607c9b45ff35f54fbc4ca64c29c7457109a16fa180ea77cdbda8593","typeString":"literal_string \"SafeCast: value doesn't fit in 248 bits\""},"value":"SafeCast: value doesn't fit in 248 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_6ac19bba4607c9b45ff35f54fbc4ca64c29c7457109a16fa180ea77cdbda8593","typeString":"literal_string \"SafeCast: value doesn't fit in 248 bits\""}],"id":1881,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"17704:7:11","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1898,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"17704:106:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1899,"nodeType":"ExpressionStatement","src":"17704:106:11"},{"expression":{"arguments":[{"id":1902,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1876,"src":"17834:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":1901,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"17827:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_int248_$","typeString":"type(int248)"},"typeName":{"id":1900,"name":"int248","nodeType":"ElementaryTypeName","src":"17827:6:11","typeDescriptions":{}}},"id":1903,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"17827:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"functionReturnParameters":1880,"id":1904,"nodeType":"Return","src":"17820:20:11"}]},"documentation":{"id":1874,"nodeType":"StructuredDocumentation","src":"17276:350:11","text":" @dev Returns the downcasted int248 from int256, reverting on\n overflow (when the input is less than smallest int248 or\n greater than largest int248).\n Counterpart to Solidity's `int248` operator.\n Requirements:\n - input must fit into 248 bits\n _Available since v4.7._"},"id":1906,"implemented":true,"kind":"function","modifiers":[],"name":"toInt248","nameLocation":"17640:8:11","nodeType":"FunctionDefinition","parameters":{"id":1877,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1876,"mutability":"mutable","name":"value","nameLocation":"17656:5:11","nodeType":"VariableDeclaration","scope":1906,"src":"17649:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":1875,"name":"int256","nodeType":"ElementaryTypeName","src":"17649:6:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"17648:14:11"},"returnParameters":{"id":1880,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1879,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1906,"src":"17686:6:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"},"typeName":{"id":1878,"name":"int248","nodeType":"ElementaryTypeName","src":"17686:6:11","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"visibility":"internal"}],"src":"17685:8:11"},"scope":2925,"src":"17631:216:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1938,"nodeType":"Block","src":"18271:153:11","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1929,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":1921,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1915,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1909,"src":"18289:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"expression":{"arguments":[{"id":1918,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"18303:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_int240_$","typeString":"type(int240)"},"typeName":{"id":1917,"name":"int240","nodeType":"ElementaryTypeName","src":"18303:6:11","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_int240_$","typeString":"type(int240)"}],"id":1916,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"18298:4:11","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":1919,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"18298:12:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_int240","typeString":"type(int240)"}},"id":1920,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"min","nodeType":"MemberAccess","src":"18298:16:11","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"src":"18289:25:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":1928,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1922,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1909,"src":"18318:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":1925,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"18332:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_int240_$","typeString":"type(int240)"},"typeName":{"id":1924,"name":"int240","nodeType":"ElementaryTypeName","src":"18332:6:11","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_int240_$","typeString":"type(int240)"}],"id":1923,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"18327:4:11","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":1926,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"18327:12:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_int240","typeString":"type(int240)"}},"id":1927,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"18327:16:11","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"src":"18318:25:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"18289:54:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203234302062697473","id":1930,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"18345:41:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_375fa0f6cb9fb5845d214c630920cedf4424913ed6dc32c297d430efa3d61a87","typeString":"literal_string \"SafeCast: value doesn't fit in 240 bits\""},"value":"SafeCast: value doesn't fit in 240 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_375fa0f6cb9fb5845d214c630920cedf4424913ed6dc32c297d430efa3d61a87","typeString":"literal_string \"SafeCast: value doesn't fit in 240 bits\""}],"id":1914,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"18281:7:11","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1931,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"18281:106:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1932,"nodeType":"ExpressionStatement","src":"18281:106:11"},{"expression":{"arguments":[{"id":1935,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1909,"src":"18411:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":1934,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"18404:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_int240_$","typeString":"type(int240)"},"typeName":{"id":1933,"name":"int240","nodeType":"ElementaryTypeName","src":"18404:6:11","typeDescriptions":{}}},"id":1936,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"18404:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"functionReturnParameters":1913,"id":1937,"nodeType":"Return","src":"18397:20:11"}]},"documentation":{"id":1907,"nodeType":"StructuredDocumentation","src":"17853:350:11","text":" @dev Returns the downcasted int240 from int256, reverting on\n overflow (when the input is less than smallest int240 or\n greater than largest int240).\n Counterpart to Solidity's `int240` operator.\n Requirements:\n - input must fit into 240 bits\n _Available since v4.7._"},"id":1939,"implemented":true,"kind":"function","modifiers":[],"name":"toInt240","nameLocation":"18217:8:11","nodeType":"FunctionDefinition","parameters":{"id":1910,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1909,"mutability":"mutable","name":"value","nameLocation":"18233:5:11","nodeType":"VariableDeclaration","scope":1939,"src":"18226:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":1908,"name":"int256","nodeType":"ElementaryTypeName","src":"18226:6:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"18225:14:11"},"returnParameters":{"id":1913,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1912,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1939,"src":"18263:6:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"},"typeName":{"id":1911,"name":"int240","nodeType":"ElementaryTypeName","src":"18263:6:11","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"visibility":"internal"}],"src":"18262:8:11"},"scope":2925,"src":"18208:216:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1971,"nodeType":"Block","src":"18848:153:11","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1962,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":1954,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1948,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1942,"src":"18866:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"expression":{"arguments":[{"id":1951,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"18880:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_int232_$","typeString":"type(int232)"},"typeName":{"id":1950,"name":"int232","nodeType":"ElementaryTypeName","src":"18880:6:11","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_int232_$","typeString":"type(int232)"}],"id":1949,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"18875:4:11","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":1952,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"18875:12:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_int232","typeString":"type(int232)"}},"id":1953,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"min","nodeType":"MemberAccess","src":"18875:16:11","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"src":"18866:25:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":1961,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1955,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1942,"src":"18895:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":1958,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"18909:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_int232_$","typeString":"type(int232)"},"typeName":{"id":1957,"name":"int232","nodeType":"ElementaryTypeName","src":"18909:6:11","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_int232_$","typeString":"type(int232)"}],"id":1956,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"18904:4:11","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":1959,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"18904:12:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_int232","typeString":"type(int232)"}},"id":1960,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"18904:16:11","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"src":"18895:25:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"18866:54:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203233322062697473","id":1963,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"18922:41:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_5797fb2c4589bd6a92752ce0eacaac67341e37ab28c96c2284ab897e7ac77957","typeString":"literal_string \"SafeCast: value doesn't fit in 232 bits\""},"value":"SafeCast: value doesn't fit in 232 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_5797fb2c4589bd6a92752ce0eacaac67341e37ab28c96c2284ab897e7ac77957","typeString":"literal_string \"SafeCast: value doesn't fit in 232 bits\""}],"id":1947,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"18858:7:11","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1964,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"18858:106:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1965,"nodeType":"ExpressionStatement","src":"18858:106:11"},{"expression":{"arguments":[{"id":1968,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1942,"src":"18988:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":1967,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"18981:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_int232_$","typeString":"type(int232)"},"typeName":{"id":1966,"name":"int232","nodeType":"ElementaryTypeName","src":"18981:6:11","typeDescriptions":{}}},"id":1969,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"18981:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"functionReturnParameters":1946,"id":1970,"nodeType":"Return","src":"18974:20:11"}]},"documentation":{"id":1940,"nodeType":"StructuredDocumentation","src":"18430:350:11","text":" @dev Returns the downcasted int232 from int256, reverting on\n overflow (when the input is less than smallest int232 or\n greater than largest int232).\n Counterpart to Solidity's `int232` operator.\n Requirements:\n - input must fit into 232 bits\n _Available since v4.7._"},"id":1972,"implemented":true,"kind":"function","modifiers":[],"name":"toInt232","nameLocation":"18794:8:11","nodeType":"FunctionDefinition","parameters":{"id":1943,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1942,"mutability":"mutable","name":"value","nameLocation":"18810:5:11","nodeType":"VariableDeclaration","scope":1972,"src":"18803:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":1941,"name":"int256","nodeType":"ElementaryTypeName","src":"18803:6:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"18802:14:11"},"returnParameters":{"id":1946,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1945,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1972,"src":"18840:6:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"},"typeName":{"id":1944,"name":"int232","nodeType":"ElementaryTypeName","src":"18840:6:11","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"visibility":"internal"}],"src":"18839:8:11"},"scope":2925,"src":"18785:216:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2004,"nodeType":"Block","src":"19425:153:11","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1995,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":1987,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1981,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1975,"src":"19443:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"expression":{"arguments":[{"id":1984,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"19457:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_int224_$","typeString":"type(int224)"},"typeName":{"id":1983,"name":"int224","nodeType":"ElementaryTypeName","src":"19457:6:11","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_int224_$","typeString":"type(int224)"}],"id":1982,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"19452:4:11","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":1985,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"19452:12:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_int224","typeString":"type(int224)"}},"id":1986,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"min","nodeType":"MemberAccess","src":"19452:16:11","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"src":"19443:25:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":1994,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1988,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1975,"src":"19472:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":1991,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"19486:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_int224_$","typeString":"type(int224)"},"typeName":{"id":1990,"name":"int224","nodeType":"ElementaryTypeName","src":"19486:6:11","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_int224_$","typeString":"type(int224)"}],"id":1989,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"19481:4:11","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":1992,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"19481:12:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_int224","typeString":"type(int224)"}},"id":1993,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"19481:16:11","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"src":"19472:25:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"19443:54:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203232342062697473","id":1996,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"19499:41:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_9d2acf551b2466898443b9bc3a403a4d86037386bc5a8960c1bbb0f204e69b79","typeString":"literal_string \"SafeCast: value doesn't fit in 224 bits\""},"value":"SafeCast: value doesn't fit in 224 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_9d2acf551b2466898443b9bc3a403a4d86037386bc5a8960c1bbb0f204e69b79","typeString":"literal_string \"SafeCast: value doesn't fit in 224 bits\""}],"id":1980,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"19435:7:11","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1997,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"19435:106:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1998,"nodeType":"ExpressionStatement","src":"19435:106:11"},{"expression":{"arguments":[{"id":2001,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1975,"src":"19565:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":2000,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"19558:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_int224_$","typeString":"type(int224)"},"typeName":{"id":1999,"name":"int224","nodeType":"ElementaryTypeName","src":"19558:6:11","typeDescriptions":{}}},"id":2002,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"19558:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"functionReturnParameters":1979,"id":2003,"nodeType":"Return","src":"19551:20:11"}]},"documentation":{"id":1973,"nodeType":"StructuredDocumentation","src":"19007:350:11","text":" @dev Returns the downcasted int224 from int256, reverting on\n overflow (when the input is less than smallest int224 or\n greater than largest int224).\n Counterpart to Solidity's `int224` operator.\n Requirements:\n - input must fit into 224 bits\n _Available since v4.7._"},"id":2005,"implemented":true,"kind":"function","modifiers":[],"name":"toInt224","nameLocation":"19371:8:11","nodeType":"FunctionDefinition","parameters":{"id":1976,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1975,"mutability":"mutable","name":"value","nameLocation":"19387:5:11","nodeType":"VariableDeclaration","scope":2005,"src":"19380:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":1974,"name":"int256","nodeType":"ElementaryTypeName","src":"19380:6:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"19379:14:11"},"returnParameters":{"id":1979,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1978,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2005,"src":"19417:6:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"},"typeName":{"id":1977,"name":"int224","nodeType":"ElementaryTypeName","src":"19417:6:11","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"visibility":"internal"}],"src":"19416:8:11"},"scope":2925,"src":"19362:216:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2037,"nodeType":"Block","src":"20002:153:11","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2028,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":2020,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2014,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2008,"src":"20020:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"expression":{"arguments":[{"id":2017,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"20034:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_int216_$","typeString":"type(int216)"},"typeName":{"id":2016,"name":"int216","nodeType":"ElementaryTypeName","src":"20034:6:11","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_int216_$","typeString":"type(int216)"}],"id":2015,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"20029:4:11","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":2018,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"20029:12:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_int216","typeString":"type(int216)"}},"id":2019,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"min","nodeType":"MemberAccess","src":"20029:16:11","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"src":"20020:25:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":2027,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2021,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2008,"src":"20049:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":2024,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"20063:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_int216_$","typeString":"type(int216)"},"typeName":{"id":2023,"name":"int216","nodeType":"ElementaryTypeName","src":"20063:6:11","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_int216_$","typeString":"type(int216)"}],"id":2022,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"20058:4:11","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":2025,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"20058:12:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_int216","typeString":"type(int216)"}},"id":2026,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"20058:16:11","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"src":"20049:25:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"20020:54:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203231362062697473","id":2029,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"20076:41:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_8966adc0aad8dc91b207c69c3eb4937e498af8cc706cfe7edd55f3a6ea53488d","typeString":"literal_string \"SafeCast: value doesn't fit in 216 bits\""},"value":"SafeCast: value doesn't fit in 216 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_8966adc0aad8dc91b207c69c3eb4937e498af8cc706cfe7edd55f3a6ea53488d","typeString":"literal_string \"SafeCast: value doesn't fit in 216 bits\""}],"id":2013,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"20012:7:11","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2030,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"20012:106:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2031,"nodeType":"ExpressionStatement","src":"20012:106:11"},{"expression":{"arguments":[{"id":2034,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2008,"src":"20142:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":2033,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"20135:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_int216_$","typeString":"type(int216)"},"typeName":{"id":2032,"name":"int216","nodeType":"ElementaryTypeName","src":"20135:6:11","typeDescriptions":{}}},"id":2035,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"20135:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"functionReturnParameters":2012,"id":2036,"nodeType":"Return","src":"20128:20:11"}]},"documentation":{"id":2006,"nodeType":"StructuredDocumentation","src":"19584:350:11","text":" @dev Returns the downcasted int216 from int256, reverting on\n overflow (when the input is less than smallest int216 or\n greater than largest int216).\n Counterpart to Solidity's `int216` operator.\n Requirements:\n - input must fit into 216 bits\n _Available since v4.7._"},"id":2038,"implemented":true,"kind":"function","modifiers":[],"name":"toInt216","nameLocation":"19948:8:11","nodeType":"FunctionDefinition","parameters":{"id":2009,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2008,"mutability":"mutable","name":"value","nameLocation":"19964:5:11","nodeType":"VariableDeclaration","scope":2038,"src":"19957:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2007,"name":"int256","nodeType":"ElementaryTypeName","src":"19957:6:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"19956:14:11"},"returnParameters":{"id":2012,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2011,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2038,"src":"19994:6:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"},"typeName":{"id":2010,"name":"int216","nodeType":"ElementaryTypeName","src":"19994:6:11","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"visibility":"internal"}],"src":"19993:8:11"},"scope":2925,"src":"19939:216:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2070,"nodeType":"Block","src":"20579:153:11","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2061,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":2053,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2047,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2041,"src":"20597:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"expression":{"arguments":[{"id":2050,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"20611:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_int208_$","typeString":"type(int208)"},"typeName":{"id":2049,"name":"int208","nodeType":"ElementaryTypeName","src":"20611:6:11","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_int208_$","typeString":"type(int208)"}],"id":2048,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"20606:4:11","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":2051,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"20606:12:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_int208","typeString":"type(int208)"}},"id":2052,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"min","nodeType":"MemberAccess","src":"20606:16:11","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"src":"20597:25:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":2060,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2054,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2041,"src":"20626:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":2057,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"20640:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_int208_$","typeString":"type(int208)"},"typeName":{"id":2056,"name":"int208","nodeType":"ElementaryTypeName","src":"20640:6:11","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_int208_$","typeString":"type(int208)"}],"id":2055,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"20635:4:11","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":2058,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"20635:12:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_int208","typeString":"type(int208)"}},"id":2059,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"20635:16:11","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"src":"20626:25:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"20597:54:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203230382062697473","id":2062,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"20653:41:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_43d81217fa633fa1c6e88855de94fb990f5831ac266b0a90afa660e986ab5e23","typeString":"literal_string \"SafeCast: value doesn't fit in 208 bits\""},"value":"SafeCast: value doesn't fit in 208 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_43d81217fa633fa1c6e88855de94fb990f5831ac266b0a90afa660e986ab5e23","typeString":"literal_string \"SafeCast: value doesn't fit in 208 bits\""}],"id":2046,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"20589:7:11","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2063,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"20589:106:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2064,"nodeType":"ExpressionStatement","src":"20589:106:11"},{"expression":{"arguments":[{"id":2067,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2041,"src":"20719:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":2066,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"20712:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_int208_$","typeString":"type(int208)"},"typeName":{"id":2065,"name":"int208","nodeType":"ElementaryTypeName","src":"20712:6:11","typeDescriptions":{}}},"id":2068,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"20712:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"functionReturnParameters":2045,"id":2069,"nodeType":"Return","src":"20705:20:11"}]},"documentation":{"id":2039,"nodeType":"StructuredDocumentation","src":"20161:350:11","text":" @dev Returns the downcasted int208 from int256, reverting on\n overflow (when the input is less than smallest int208 or\n greater than largest int208).\n Counterpart to Solidity's `int208` operator.\n Requirements:\n - input must fit into 208 bits\n _Available since v4.7._"},"id":2071,"implemented":true,"kind":"function","modifiers":[],"name":"toInt208","nameLocation":"20525:8:11","nodeType":"FunctionDefinition","parameters":{"id":2042,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2041,"mutability":"mutable","name":"value","nameLocation":"20541:5:11","nodeType":"VariableDeclaration","scope":2071,"src":"20534:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2040,"name":"int256","nodeType":"ElementaryTypeName","src":"20534:6:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"20533:14:11"},"returnParameters":{"id":2045,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2044,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2071,"src":"20571:6:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"},"typeName":{"id":2043,"name":"int208","nodeType":"ElementaryTypeName","src":"20571:6:11","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"visibility":"internal"}],"src":"20570:8:11"},"scope":2925,"src":"20516:216:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2103,"nodeType":"Block","src":"21156:153:11","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2094,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":2086,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2080,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2074,"src":"21174:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"expression":{"arguments":[{"id":2083,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"21188:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_int200_$","typeString":"type(int200)"},"typeName":{"id":2082,"name":"int200","nodeType":"ElementaryTypeName","src":"21188:6:11","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_int200_$","typeString":"type(int200)"}],"id":2081,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"21183:4:11","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":2084,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"21183:12:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_int200","typeString":"type(int200)"}},"id":2085,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"min","nodeType":"MemberAccess","src":"21183:16:11","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"src":"21174:25:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":2093,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2087,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2074,"src":"21203:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":2090,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"21217:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_int200_$","typeString":"type(int200)"},"typeName":{"id":2089,"name":"int200","nodeType":"ElementaryTypeName","src":"21217:6:11","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_int200_$","typeString":"type(int200)"}],"id":2088,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"21212:4:11","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":2091,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"21212:12:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_int200","typeString":"type(int200)"}},"id":2092,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"21212:16:11","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"src":"21203:25:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"21174:54:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203230302062697473","id":2095,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"21230:41:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_df8130f294fe2698967ea9ead82c4da9454490567d976d00551e0174e655314c","typeString":"literal_string \"SafeCast: value doesn't fit in 200 bits\""},"value":"SafeCast: value doesn't fit in 200 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_df8130f294fe2698967ea9ead82c4da9454490567d976d00551e0174e655314c","typeString":"literal_string \"SafeCast: value doesn't fit in 200 bits\""}],"id":2079,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"21166:7:11","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2096,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"21166:106:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2097,"nodeType":"ExpressionStatement","src":"21166:106:11"},{"expression":{"arguments":[{"id":2100,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2074,"src":"21296:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":2099,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"21289:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_int200_$","typeString":"type(int200)"},"typeName":{"id":2098,"name":"int200","nodeType":"ElementaryTypeName","src":"21289:6:11","typeDescriptions":{}}},"id":2101,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"21289:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"functionReturnParameters":2078,"id":2102,"nodeType":"Return","src":"21282:20:11"}]},"documentation":{"id":2072,"nodeType":"StructuredDocumentation","src":"20738:350:11","text":" @dev Returns the downcasted int200 from int256, reverting on\n overflow (when the input is less than smallest int200 or\n greater than largest int200).\n Counterpart to Solidity's `int200` operator.\n Requirements:\n - input must fit into 200 bits\n _Available since v4.7._"},"id":2104,"implemented":true,"kind":"function","modifiers":[],"name":"toInt200","nameLocation":"21102:8:11","nodeType":"FunctionDefinition","parameters":{"id":2075,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2074,"mutability":"mutable","name":"value","nameLocation":"21118:5:11","nodeType":"VariableDeclaration","scope":2104,"src":"21111:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2073,"name":"int256","nodeType":"ElementaryTypeName","src":"21111:6:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"21110:14:11"},"returnParameters":{"id":2078,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2077,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2104,"src":"21148:6:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"},"typeName":{"id":2076,"name":"int200","nodeType":"ElementaryTypeName","src":"21148:6:11","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"visibility":"internal"}],"src":"21147:8:11"},"scope":2925,"src":"21093:216:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2136,"nodeType":"Block","src":"21733:153:11","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2127,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":2119,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2113,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2107,"src":"21751:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"expression":{"arguments":[{"id":2116,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"21765:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_int192_$","typeString":"type(int192)"},"typeName":{"id":2115,"name":"int192","nodeType":"ElementaryTypeName","src":"21765:6:11","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_int192_$","typeString":"type(int192)"}],"id":2114,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"21760:4:11","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":2117,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"21760:12:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_int192","typeString":"type(int192)"}},"id":2118,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"min","nodeType":"MemberAccess","src":"21760:16:11","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"src":"21751:25:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":2126,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2120,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2107,"src":"21780:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":2123,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"21794:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_int192_$","typeString":"type(int192)"},"typeName":{"id":2122,"name":"int192","nodeType":"ElementaryTypeName","src":"21794:6:11","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_int192_$","typeString":"type(int192)"}],"id":2121,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"21789:4:11","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":2124,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"21789:12:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_int192","typeString":"type(int192)"}},"id":2125,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"21789:16:11","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"src":"21780:25:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"21751:54:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203139322062697473","id":2128,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"21807:41:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_112978800f12a1c4f1eab82789f7b6defd49dc1c17ba270a84ffc28392fb05ae","typeString":"literal_string \"SafeCast: value doesn't fit in 192 bits\""},"value":"SafeCast: value doesn't fit in 192 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_112978800f12a1c4f1eab82789f7b6defd49dc1c17ba270a84ffc28392fb05ae","typeString":"literal_string \"SafeCast: value doesn't fit in 192 bits\""}],"id":2112,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"21743:7:11","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2129,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"21743:106:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2130,"nodeType":"ExpressionStatement","src":"21743:106:11"},{"expression":{"arguments":[{"id":2133,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2107,"src":"21873:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":2132,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"21866:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_int192_$","typeString":"type(int192)"},"typeName":{"id":2131,"name":"int192","nodeType":"ElementaryTypeName","src":"21866:6:11","typeDescriptions":{}}},"id":2134,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"21866:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"functionReturnParameters":2111,"id":2135,"nodeType":"Return","src":"21859:20:11"}]},"documentation":{"id":2105,"nodeType":"StructuredDocumentation","src":"21315:350:11","text":" @dev Returns the downcasted int192 from int256, reverting on\n overflow (when the input is less than smallest int192 or\n greater than largest int192).\n Counterpart to Solidity's `int192` operator.\n Requirements:\n - input must fit into 192 bits\n _Available since v4.7._"},"id":2137,"implemented":true,"kind":"function","modifiers":[],"name":"toInt192","nameLocation":"21679:8:11","nodeType":"FunctionDefinition","parameters":{"id":2108,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2107,"mutability":"mutable","name":"value","nameLocation":"21695:5:11","nodeType":"VariableDeclaration","scope":2137,"src":"21688:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2106,"name":"int256","nodeType":"ElementaryTypeName","src":"21688:6:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"21687:14:11"},"returnParameters":{"id":2111,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2110,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2137,"src":"21725:6:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"},"typeName":{"id":2109,"name":"int192","nodeType":"ElementaryTypeName","src":"21725:6:11","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"visibility":"internal"}],"src":"21724:8:11"},"scope":2925,"src":"21670:216:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2169,"nodeType":"Block","src":"22310:153:11","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2160,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":2152,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2146,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2140,"src":"22328:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"expression":{"arguments":[{"id":2149,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"22342:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_int184_$","typeString":"type(int184)"},"typeName":{"id":2148,"name":"int184","nodeType":"ElementaryTypeName","src":"22342:6:11","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_int184_$","typeString":"type(int184)"}],"id":2147,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"22337:4:11","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":2150,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"22337:12:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_int184","typeString":"type(int184)"}},"id":2151,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"min","nodeType":"MemberAccess","src":"22337:16:11","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"src":"22328:25:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":2159,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2153,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2140,"src":"22357:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":2156,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"22371:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_int184_$","typeString":"type(int184)"},"typeName":{"id":2155,"name":"int184","nodeType":"ElementaryTypeName","src":"22371:6:11","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_int184_$","typeString":"type(int184)"}],"id":2154,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"22366:4:11","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":2157,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"22366:12:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_int184","typeString":"type(int184)"}},"id":2158,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"22366:16:11","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"src":"22357:25:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"22328:54:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203138342062697473","id":2161,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"22384:41:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_86c53d89b1944d561ecfa42e859033241d1df6ea8d42a57ae02f79d45de4aa75","typeString":"literal_string \"SafeCast: value doesn't fit in 184 bits\""},"value":"SafeCast: value doesn't fit in 184 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_86c53d89b1944d561ecfa42e859033241d1df6ea8d42a57ae02f79d45de4aa75","typeString":"literal_string \"SafeCast: value doesn't fit in 184 bits\""}],"id":2145,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"22320:7:11","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2162,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"22320:106:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2163,"nodeType":"ExpressionStatement","src":"22320:106:11"},{"expression":{"arguments":[{"id":2166,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2140,"src":"22450:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":2165,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"22443:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_int184_$","typeString":"type(int184)"},"typeName":{"id":2164,"name":"int184","nodeType":"ElementaryTypeName","src":"22443:6:11","typeDescriptions":{}}},"id":2167,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"22443:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"functionReturnParameters":2144,"id":2168,"nodeType":"Return","src":"22436:20:11"}]},"documentation":{"id":2138,"nodeType":"StructuredDocumentation","src":"21892:350:11","text":" @dev Returns the downcasted int184 from int256, reverting on\n overflow (when the input is less than smallest int184 or\n greater than largest int184).\n Counterpart to Solidity's `int184` operator.\n Requirements:\n - input must fit into 184 bits\n _Available since v4.7._"},"id":2170,"implemented":true,"kind":"function","modifiers":[],"name":"toInt184","nameLocation":"22256:8:11","nodeType":"FunctionDefinition","parameters":{"id":2141,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2140,"mutability":"mutable","name":"value","nameLocation":"22272:5:11","nodeType":"VariableDeclaration","scope":2170,"src":"22265:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2139,"name":"int256","nodeType":"ElementaryTypeName","src":"22265:6:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"22264:14:11"},"returnParameters":{"id":2144,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2143,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2170,"src":"22302:6:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"},"typeName":{"id":2142,"name":"int184","nodeType":"ElementaryTypeName","src":"22302:6:11","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"visibility":"internal"}],"src":"22301:8:11"},"scope":2925,"src":"22247:216:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2202,"nodeType":"Block","src":"22887:153:11","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2193,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":2185,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2179,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2173,"src":"22905:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"expression":{"arguments":[{"id":2182,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"22919:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_int176_$","typeString":"type(int176)"},"typeName":{"id":2181,"name":"int176","nodeType":"ElementaryTypeName","src":"22919:6:11","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_int176_$","typeString":"type(int176)"}],"id":2180,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"22914:4:11","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":2183,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"22914:12:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_int176","typeString":"type(int176)"}},"id":2184,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"min","nodeType":"MemberAccess","src":"22914:16:11","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"src":"22905:25:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":2192,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2186,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2173,"src":"22934:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":2189,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"22948:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_int176_$","typeString":"type(int176)"},"typeName":{"id":2188,"name":"int176","nodeType":"ElementaryTypeName","src":"22948:6:11","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_int176_$","typeString":"type(int176)"}],"id":2187,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"22943:4:11","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":2190,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"22943:12:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_int176","typeString":"type(int176)"}},"id":2191,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"22943:16:11","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"src":"22934:25:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"22905:54:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203137362062697473","id":2194,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"22961:41:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_4069e970f734339c7841e84a1b26f503bff22b76884c1168dc24e2e6af9b1e30","typeString":"literal_string \"SafeCast: value doesn't fit in 176 bits\""},"value":"SafeCast: value doesn't fit in 176 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_4069e970f734339c7841e84a1b26f503bff22b76884c1168dc24e2e6af9b1e30","typeString":"literal_string \"SafeCast: value doesn't fit in 176 bits\""}],"id":2178,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"22897:7:11","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2195,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"22897:106:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2196,"nodeType":"ExpressionStatement","src":"22897:106:11"},{"expression":{"arguments":[{"id":2199,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2173,"src":"23027:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":2198,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"23020:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_int176_$","typeString":"type(int176)"},"typeName":{"id":2197,"name":"int176","nodeType":"ElementaryTypeName","src":"23020:6:11","typeDescriptions":{}}},"id":2200,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"23020:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"functionReturnParameters":2177,"id":2201,"nodeType":"Return","src":"23013:20:11"}]},"documentation":{"id":2171,"nodeType":"StructuredDocumentation","src":"22469:350:11","text":" @dev Returns the downcasted int176 from int256, reverting on\n overflow (when the input is less than smallest int176 or\n greater than largest int176).\n Counterpart to Solidity's `int176` operator.\n Requirements:\n - input must fit into 176 bits\n _Available since v4.7._"},"id":2203,"implemented":true,"kind":"function","modifiers":[],"name":"toInt176","nameLocation":"22833:8:11","nodeType":"FunctionDefinition","parameters":{"id":2174,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2173,"mutability":"mutable","name":"value","nameLocation":"22849:5:11","nodeType":"VariableDeclaration","scope":2203,"src":"22842:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2172,"name":"int256","nodeType":"ElementaryTypeName","src":"22842:6:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"22841:14:11"},"returnParameters":{"id":2177,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2176,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2203,"src":"22879:6:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"},"typeName":{"id":2175,"name":"int176","nodeType":"ElementaryTypeName","src":"22879:6:11","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"visibility":"internal"}],"src":"22878:8:11"},"scope":2925,"src":"22824:216:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2235,"nodeType":"Block","src":"23464:153:11","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2226,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":2218,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2212,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2206,"src":"23482:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"expression":{"arguments":[{"id":2215,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"23496:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_int168_$","typeString":"type(int168)"},"typeName":{"id":2214,"name":"int168","nodeType":"ElementaryTypeName","src":"23496:6:11","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_int168_$","typeString":"type(int168)"}],"id":2213,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"23491:4:11","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":2216,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"23491:12:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_int168","typeString":"type(int168)"}},"id":2217,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"min","nodeType":"MemberAccess","src":"23491:16:11","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"src":"23482:25:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":2225,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2219,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2206,"src":"23511:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":2222,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"23525:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_int168_$","typeString":"type(int168)"},"typeName":{"id":2221,"name":"int168","nodeType":"ElementaryTypeName","src":"23525:6:11","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_int168_$","typeString":"type(int168)"}],"id":2220,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"23520:4:11","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":2223,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"23520:12:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_int168","typeString":"type(int168)"}},"id":2224,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"23520:16:11","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"src":"23511:25:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"23482:54:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203136382062697473","id":2227,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"23538:41:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_67ef32a3cbe7b34392347d335b0a7ae95c74a34ca40e4efb58f6c9a3154e85a1","typeString":"literal_string \"SafeCast: value doesn't fit in 168 bits\""},"value":"SafeCast: value doesn't fit in 168 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_67ef32a3cbe7b34392347d335b0a7ae95c74a34ca40e4efb58f6c9a3154e85a1","typeString":"literal_string \"SafeCast: value doesn't fit in 168 bits\""}],"id":2211,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"23474:7:11","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2228,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"23474:106:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2229,"nodeType":"ExpressionStatement","src":"23474:106:11"},{"expression":{"arguments":[{"id":2232,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2206,"src":"23604:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":2231,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"23597:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_int168_$","typeString":"type(int168)"},"typeName":{"id":2230,"name":"int168","nodeType":"ElementaryTypeName","src":"23597:6:11","typeDescriptions":{}}},"id":2233,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"23597:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"functionReturnParameters":2210,"id":2234,"nodeType":"Return","src":"23590:20:11"}]},"documentation":{"id":2204,"nodeType":"StructuredDocumentation","src":"23046:350:11","text":" @dev Returns the downcasted int168 from int256, reverting on\n overflow (when the input is less than smallest int168 or\n greater than largest int168).\n Counterpart to Solidity's `int168` operator.\n Requirements:\n - input must fit into 168 bits\n _Available since v4.7._"},"id":2236,"implemented":true,"kind":"function","modifiers":[],"name":"toInt168","nameLocation":"23410:8:11","nodeType":"FunctionDefinition","parameters":{"id":2207,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2206,"mutability":"mutable","name":"value","nameLocation":"23426:5:11","nodeType":"VariableDeclaration","scope":2236,"src":"23419:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2205,"name":"int256","nodeType":"ElementaryTypeName","src":"23419:6:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"23418:14:11"},"returnParameters":{"id":2210,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2209,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2236,"src":"23456:6:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"},"typeName":{"id":2208,"name":"int168","nodeType":"ElementaryTypeName","src":"23456:6:11","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"visibility":"internal"}],"src":"23455:8:11"},"scope":2925,"src":"23401:216:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2268,"nodeType":"Block","src":"24041:153:11","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2259,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":2251,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2245,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2239,"src":"24059:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"expression":{"arguments":[{"id":2248,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"24073:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_int160_$","typeString":"type(int160)"},"typeName":{"id":2247,"name":"int160","nodeType":"ElementaryTypeName","src":"24073:6:11","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_int160_$","typeString":"type(int160)"}],"id":2246,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"24068:4:11","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":2249,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"24068:12:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_int160","typeString":"type(int160)"}},"id":2250,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"min","nodeType":"MemberAccess","src":"24068:16:11","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"src":"24059:25:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":2258,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2252,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2239,"src":"24088:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":2255,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"24102:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_int160_$","typeString":"type(int160)"},"typeName":{"id":2254,"name":"int160","nodeType":"ElementaryTypeName","src":"24102:6:11","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_int160_$","typeString":"type(int160)"}],"id":2253,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"24097:4:11","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":2256,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"24097:12:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_int160","typeString":"type(int160)"}},"id":2257,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"24097:16:11","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"src":"24088:25:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"24059:54:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203136302062697473","id":2260,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"24115:41:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_976ecce9083debfe29d3a99b955facf24b8725f1b964d1a5bb4197ffcd60ab9d","typeString":"literal_string \"SafeCast: value doesn't fit in 160 bits\""},"value":"SafeCast: value doesn't fit in 160 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_976ecce9083debfe29d3a99b955facf24b8725f1b964d1a5bb4197ffcd60ab9d","typeString":"literal_string \"SafeCast: value doesn't fit in 160 bits\""}],"id":2244,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"24051:7:11","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2261,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"24051:106:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2262,"nodeType":"ExpressionStatement","src":"24051:106:11"},{"expression":{"arguments":[{"id":2265,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2239,"src":"24181:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":2264,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"24174:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_int160_$","typeString":"type(int160)"},"typeName":{"id":2263,"name":"int160","nodeType":"ElementaryTypeName","src":"24174:6:11","typeDescriptions":{}}},"id":2266,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"24174:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"functionReturnParameters":2243,"id":2267,"nodeType":"Return","src":"24167:20:11"}]},"documentation":{"id":2237,"nodeType":"StructuredDocumentation","src":"23623:350:11","text":" @dev Returns the downcasted int160 from int256, reverting on\n overflow (when the input is less than smallest int160 or\n greater than largest int160).\n Counterpart to Solidity's `int160` operator.\n Requirements:\n - input must fit into 160 bits\n _Available since v4.7._"},"id":2269,"implemented":true,"kind":"function","modifiers":[],"name":"toInt160","nameLocation":"23987:8:11","nodeType":"FunctionDefinition","parameters":{"id":2240,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2239,"mutability":"mutable","name":"value","nameLocation":"24003:5:11","nodeType":"VariableDeclaration","scope":2269,"src":"23996:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2238,"name":"int256","nodeType":"ElementaryTypeName","src":"23996:6:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"23995:14:11"},"returnParameters":{"id":2243,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2242,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2269,"src":"24033:6:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"},"typeName":{"id":2241,"name":"int160","nodeType":"ElementaryTypeName","src":"24033:6:11","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"visibility":"internal"}],"src":"24032:8:11"},"scope":2925,"src":"23978:216:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2301,"nodeType":"Block","src":"24618:153:11","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2292,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":2284,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2278,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2272,"src":"24636:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"expression":{"arguments":[{"id":2281,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"24650:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_int152_$","typeString":"type(int152)"},"typeName":{"id":2280,"name":"int152","nodeType":"ElementaryTypeName","src":"24650:6:11","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_int152_$","typeString":"type(int152)"}],"id":2279,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"24645:4:11","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":2282,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"24645:12:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_int152","typeString":"type(int152)"}},"id":2283,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"min","nodeType":"MemberAccess","src":"24645:16:11","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"src":"24636:25:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":2291,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2285,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2272,"src":"24665:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":2288,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"24679:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_int152_$","typeString":"type(int152)"},"typeName":{"id":2287,"name":"int152","nodeType":"ElementaryTypeName","src":"24679:6:11","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_int152_$","typeString":"type(int152)"}],"id":2286,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"24674:4:11","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":2289,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"24674:12:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_int152","typeString":"type(int152)"}},"id":2290,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"24674:16:11","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"src":"24665:25:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"24636:54:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203135322062697473","id":2293,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"24692:41:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_211cad43a2caf5f01e34af51190b8a7b6f3d9c195bd25586ea12242191b97831","typeString":"literal_string \"SafeCast: value doesn't fit in 152 bits\""},"value":"SafeCast: value doesn't fit in 152 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_211cad43a2caf5f01e34af51190b8a7b6f3d9c195bd25586ea12242191b97831","typeString":"literal_string \"SafeCast: value doesn't fit in 152 bits\""}],"id":2277,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"24628:7:11","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2294,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"24628:106:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2295,"nodeType":"ExpressionStatement","src":"24628:106:11"},{"expression":{"arguments":[{"id":2298,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2272,"src":"24758:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":2297,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"24751:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_int152_$","typeString":"type(int152)"},"typeName":{"id":2296,"name":"int152","nodeType":"ElementaryTypeName","src":"24751:6:11","typeDescriptions":{}}},"id":2299,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"24751:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"functionReturnParameters":2276,"id":2300,"nodeType":"Return","src":"24744:20:11"}]},"documentation":{"id":2270,"nodeType":"StructuredDocumentation","src":"24200:350:11","text":" @dev Returns the downcasted int152 from int256, reverting on\n overflow (when the input is less than smallest int152 or\n greater than largest int152).\n Counterpart to Solidity's `int152` operator.\n Requirements:\n - input must fit into 152 bits\n _Available since v4.7._"},"id":2302,"implemented":true,"kind":"function","modifiers":[],"name":"toInt152","nameLocation":"24564:8:11","nodeType":"FunctionDefinition","parameters":{"id":2273,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2272,"mutability":"mutable","name":"value","nameLocation":"24580:5:11","nodeType":"VariableDeclaration","scope":2302,"src":"24573:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2271,"name":"int256","nodeType":"ElementaryTypeName","src":"24573:6:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"24572:14:11"},"returnParameters":{"id":2276,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2275,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2302,"src":"24610:6:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"},"typeName":{"id":2274,"name":"int152","nodeType":"ElementaryTypeName","src":"24610:6:11","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"visibility":"internal"}],"src":"24609:8:11"},"scope":2925,"src":"24555:216:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2334,"nodeType":"Block","src":"25195:153:11","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2325,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":2317,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2311,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2305,"src":"25213:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"expression":{"arguments":[{"id":2314,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"25227:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_int144_$","typeString":"type(int144)"},"typeName":{"id":2313,"name":"int144","nodeType":"ElementaryTypeName","src":"25227:6:11","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_int144_$","typeString":"type(int144)"}],"id":2312,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"25222:4:11","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":2315,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"25222:12:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_int144","typeString":"type(int144)"}},"id":2316,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"min","nodeType":"MemberAccess","src":"25222:16:11","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"src":"25213:25:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":2324,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2318,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2305,"src":"25242:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":2321,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"25256:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_int144_$","typeString":"type(int144)"},"typeName":{"id":2320,"name":"int144","nodeType":"ElementaryTypeName","src":"25256:6:11","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_int144_$","typeString":"type(int144)"}],"id":2319,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"25251:4:11","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":2322,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"25251:12:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_int144","typeString":"type(int144)"}},"id":2323,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"25251:16:11","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"src":"25242:25:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"25213:54:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203134342062697473","id":2326,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"25269:41:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_17d8c5a6d3b2fd2517ba2e4a2ac70a3367cd362448f8338aaa6edf8bfd812bab","typeString":"literal_string \"SafeCast: value doesn't fit in 144 bits\""},"value":"SafeCast: value doesn't fit in 144 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_17d8c5a6d3b2fd2517ba2e4a2ac70a3367cd362448f8338aaa6edf8bfd812bab","typeString":"literal_string \"SafeCast: value doesn't fit in 144 bits\""}],"id":2310,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"25205:7:11","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2327,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"25205:106:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2328,"nodeType":"ExpressionStatement","src":"25205:106:11"},{"expression":{"arguments":[{"id":2331,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2305,"src":"25335:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":2330,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"25328:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_int144_$","typeString":"type(int144)"},"typeName":{"id":2329,"name":"int144","nodeType":"ElementaryTypeName","src":"25328:6:11","typeDescriptions":{}}},"id":2332,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"25328:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"functionReturnParameters":2309,"id":2333,"nodeType":"Return","src":"25321:20:11"}]},"documentation":{"id":2303,"nodeType":"StructuredDocumentation","src":"24777:350:11","text":" @dev Returns the downcasted int144 from int256, reverting on\n overflow (when the input is less than smallest int144 or\n greater than largest int144).\n Counterpart to Solidity's `int144` operator.\n Requirements:\n - input must fit into 144 bits\n _Available since v4.7._"},"id":2335,"implemented":true,"kind":"function","modifiers":[],"name":"toInt144","nameLocation":"25141:8:11","nodeType":"FunctionDefinition","parameters":{"id":2306,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2305,"mutability":"mutable","name":"value","nameLocation":"25157:5:11","nodeType":"VariableDeclaration","scope":2335,"src":"25150:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2304,"name":"int256","nodeType":"ElementaryTypeName","src":"25150:6:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"25149:14:11"},"returnParameters":{"id":2309,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2308,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2335,"src":"25187:6:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"},"typeName":{"id":2307,"name":"int144","nodeType":"ElementaryTypeName","src":"25187:6:11","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"visibility":"internal"}],"src":"25186:8:11"},"scope":2925,"src":"25132:216:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2367,"nodeType":"Block","src":"25772:153:11","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2358,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":2350,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2344,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2338,"src":"25790:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"expression":{"arguments":[{"id":2347,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"25804:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_int136_$","typeString":"type(int136)"},"typeName":{"id":2346,"name":"int136","nodeType":"ElementaryTypeName","src":"25804:6:11","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_int136_$","typeString":"type(int136)"}],"id":2345,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"25799:4:11","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":2348,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"25799:12:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_int136","typeString":"type(int136)"}},"id":2349,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"min","nodeType":"MemberAccess","src":"25799:16:11","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"src":"25790:25:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":2357,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2351,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2338,"src":"25819:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":2354,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"25833:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_int136_$","typeString":"type(int136)"},"typeName":{"id":2353,"name":"int136","nodeType":"ElementaryTypeName","src":"25833:6:11","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_int136_$","typeString":"type(int136)"}],"id":2352,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"25828:4:11","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":2355,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"25828:12:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_int136","typeString":"type(int136)"}},"id":2356,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"25828:16:11","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"src":"25819:25:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"25790:54:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203133362062697473","id":2359,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"25846:41:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_8b1f81e2e2913e1cee9dba7bcd9837bbf8a8122edaac4afc578271db3c25a56a","typeString":"literal_string \"SafeCast: value doesn't fit in 136 bits\""},"value":"SafeCast: value doesn't fit in 136 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_8b1f81e2e2913e1cee9dba7bcd9837bbf8a8122edaac4afc578271db3c25a56a","typeString":"literal_string \"SafeCast: value doesn't fit in 136 bits\""}],"id":2343,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"25782:7:11","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2360,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"25782:106:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2361,"nodeType":"ExpressionStatement","src":"25782:106:11"},{"expression":{"arguments":[{"id":2364,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2338,"src":"25912:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":2363,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"25905:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_int136_$","typeString":"type(int136)"},"typeName":{"id":2362,"name":"int136","nodeType":"ElementaryTypeName","src":"25905:6:11","typeDescriptions":{}}},"id":2365,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"25905:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"functionReturnParameters":2342,"id":2366,"nodeType":"Return","src":"25898:20:11"}]},"documentation":{"id":2336,"nodeType":"StructuredDocumentation","src":"25354:350:11","text":" @dev Returns the downcasted int136 from int256, reverting on\n overflow (when the input is less than smallest int136 or\n greater than largest int136).\n Counterpart to Solidity's `int136` operator.\n Requirements:\n - input must fit into 136 bits\n _Available since v4.7._"},"id":2368,"implemented":true,"kind":"function","modifiers":[],"name":"toInt136","nameLocation":"25718:8:11","nodeType":"FunctionDefinition","parameters":{"id":2339,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2338,"mutability":"mutable","name":"value","nameLocation":"25734:5:11","nodeType":"VariableDeclaration","scope":2368,"src":"25727:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2337,"name":"int256","nodeType":"ElementaryTypeName","src":"25727:6:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"25726:14:11"},"returnParameters":{"id":2342,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2341,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2368,"src":"25764:6:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"},"typeName":{"id":2340,"name":"int136","nodeType":"ElementaryTypeName","src":"25764:6:11","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"visibility":"internal"}],"src":"25763:8:11"},"scope":2925,"src":"25709:216:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2400,"nodeType":"Block","src":"26349:153:11","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2391,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":2383,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2377,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2371,"src":"26367:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"expression":{"arguments":[{"id":2380,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"26381:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_int128_$","typeString":"type(int128)"},"typeName":{"id":2379,"name":"int128","nodeType":"ElementaryTypeName","src":"26381:6:11","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_int128_$","typeString":"type(int128)"}],"id":2378,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"26376:4:11","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":2381,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"26376:12:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_int128","typeString":"type(int128)"}},"id":2382,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"min","nodeType":"MemberAccess","src":"26376:16:11","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"src":"26367:25:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":2390,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2384,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2371,"src":"26396:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":2387,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"26410:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_int128_$","typeString":"type(int128)"},"typeName":{"id":2386,"name":"int128","nodeType":"ElementaryTypeName","src":"26410:6:11","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_int128_$","typeString":"type(int128)"}],"id":2385,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"26405:4:11","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":2388,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"26405:12:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_int128","typeString":"type(int128)"}},"id":2389,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"26405:16:11","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"src":"26396:25:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"26367:54:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203132382062697473","id":2392,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"26423:41:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_47a1e201974f94d3d1a31c8b08ae18c6966c758bdcd4400020012b98cc55426c","typeString":"literal_string \"SafeCast: value doesn't fit in 128 bits\""},"value":"SafeCast: value doesn't fit in 128 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_47a1e201974f94d3d1a31c8b08ae18c6966c758bdcd4400020012b98cc55426c","typeString":"literal_string \"SafeCast: value doesn't fit in 128 bits\""}],"id":2376,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"26359:7:11","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2393,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"26359:106:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2394,"nodeType":"ExpressionStatement","src":"26359:106:11"},{"expression":{"arguments":[{"id":2397,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2371,"src":"26489:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":2396,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"26482:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_int128_$","typeString":"type(int128)"},"typeName":{"id":2395,"name":"int128","nodeType":"ElementaryTypeName","src":"26482:6:11","typeDescriptions":{}}},"id":2398,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"26482:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"functionReturnParameters":2375,"id":2399,"nodeType":"Return","src":"26475:20:11"}]},"documentation":{"id":2369,"nodeType":"StructuredDocumentation","src":"25931:350:11","text":" @dev Returns the downcasted int128 from int256, reverting on\n overflow (when the input is less than smallest int128 or\n greater than largest int128).\n Counterpart to Solidity's `int128` operator.\n Requirements:\n - input must fit into 128 bits\n _Available since v3.1._"},"id":2401,"implemented":true,"kind":"function","modifiers":[],"name":"toInt128","nameLocation":"26295:8:11","nodeType":"FunctionDefinition","parameters":{"id":2372,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2371,"mutability":"mutable","name":"value","nameLocation":"26311:5:11","nodeType":"VariableDeclaration","scope":2401,"src":"26304:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2370,"name":"int256","nodeType":"ElementaryTypeName","src":"26304:6:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"26303:14:11"},"returnParameters":{"id":2375,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2374,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2401,"src":"26341:6:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"},"typeName":{"id":2373,"name":"int128","nodeType":"ElementaryTypeName","src":"26341:6:11","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"visibility":"internal"}],"src":"26340:8:11"},"scope":2925,"src":"26286:216:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2433,"nodeType":"Block","src":"26926:153:11","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2424,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":2416,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2410,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2404,"src":"26944:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"expression":{"arguments":[{"id":2413,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"26958:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_int120_$","typeString":"type(int120)"},"typeName":{"id":2412,"name":"int120","nodeType":"ElementaryTypeName","src":"26958:6:11","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_int120_$","typeString":"type(int120)"}],"id":2411,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"26953:4:11","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":2414,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"26953:12:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_int120","typeString":"type(int120)"}},"id":2415,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"min","nodeType":"MemberAccess","src":"26953:16:11","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"src":"26944:25:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":2423,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2417,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2404,"src":"26973:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":2420,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"26987:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_int120_$","typeString":"type(int120)"},"typeName":{"id":2419,"name":"int120","nodeType":"ElementaryTypeName","src":"26987:6:11","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_int120_$","typeString":"type(int120)"}],"id":2418,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"26982:4:11","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":2421,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"26982:12:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_int120","typeString":"type(int120)"}},"id":2422,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"26982:16:11","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"src":"26973:25:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"26944:54:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203132302062697473","id":2425,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"27000:41:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_3c40c26bb27060cce77002ca0c426dcc1bef2d367c195ca2eb24bd8b2cc1bb09","typeString":"literal_string \"SafeCast: value doesn't fit in 120 bits\""},"value":"SafeCast: value doesn't fit in 120 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_3c40c26bb27060cce77002ca0c426dcc1bef2d367c195ca2eb24bd8b2cc1bb09","typeString":"literal_string \"SafeCast: value doesn't fit in 120 bits\""}],"id":2409,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"26936:7:11","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2426,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"26936:106:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2427,"nodeType":"ExpressionStatement","src":"26936:106:11"},{"expression":{"arguments":[{"id":2430,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2404,"src":"27066:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":2429,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"27059:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_int120_$","typeString":"type(int120)"},"typeName":{"id":2428,"name":"int120","nodeType":"ElementaryTypeName","src":"27059:6:11","typeDescriptions":{}}},"id":2431,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"27059:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"functionReturnParameters":2408,"id":2432,"nodeType":"Return","src":"27052:20:11"}]},"documentation":{"id":2402,"nodeType":"StructuredDocumentation","src":"26508:350:11","text":" @dev Returns the downcasted int120 from int256, reverting on\n overflow (when the input is less than smallest int120 or\n greater than largest int120).\n Counterpart to Solidity's `int120` operator.\n Requirements:\n - input must fit into 120 bits\n _Available since v4.7._"},"id":2434,"implemented":true,"kind":"function","modifiers":[],"name":"toInt120","nameLocation":"26872:8:11","nodeType":"FunctionDefinition","parameters":{"id":2405,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2404,"mutability":"mutable","name":"value","nameLocation":"26888:5:11","nodeType":"VariableDeclaration","scope":2434,"src":"26881:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2403,"name":"int256","nodeType":"ElementaryTypeName","src":"26881:6:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"26880:14:11"},"returnParameters":{"id":2408,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2407,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2434,"src":"26918:6:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"},"typeName":{"id":2406,"name":"int120","nodeType":"ElementaryTypeName","src":"26918:6:11","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"visibility":"internal"}],"src":"26917:8:11"},"scope":2925,"src":"26863:216:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2466,"nodeType":"Block","src":"27503:153:11","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2457,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":2449,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2443,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2437,"src":"27521:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"expression":{"arguments":[{"id":2446,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"27535:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_int112_$","typeString":"type(int112)"},"typeName":{"id":2445,"name":"int112","nodeType":"ElementaryTypeName","src":"27535:6:11","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_int112_$","typeString":"type(int112)"}],"id":2444,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"27530:4:11","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":2447,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"27530:12:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_int112","typeString":"type(int112)"}},"id":2448,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"min","nodeType":"MemberAccess","src":"27530:16:11","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"src":"27521:25:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":2456,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2450,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2437,"src":"27550:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":2453,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"27564:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_int112_$","typeString":"type(int112)"},"typeName":{"id":2452,"name":"int112","nodeType":"ElementaryTypeName","src":"27564:6:11","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_int112_$","typeString":"type(int112)"}],"id":2451,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"27559:4:11","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":2454,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"27559:12:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_int112","typeString":"type(int112)"}},"id":2455,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"27559:16:11","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"src":"27550:25:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"27521:54:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203131322062697473","id":2458,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"27577:41:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_45659ae152ef697531e1c1115de07c87af91ac22466c3e76b808821799776efd","typeString":"literal_string \"SafeCast: value doesn't fit in 112 bits\""},"value":"SafeCast: value doesn't fit in 112 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_45659ae152ef697531e1c1115de07c87af91ac22466c3e76b808821799776efd","typeString":"literal_string \"SafeCast: value doesn't fit in 112 bits\""}],"id":2442,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"27513:7:11","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2459,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"27513:106:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2460,"nodeType":"ExpressionStatement","src":"27513:106:11"},{"expression":{"arguments":[{"id":2463,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2437,"src":"27643:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":2462,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"27636:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_int112_$","typeString":"type(int112)"},"typeName":{"id":2461,"name":"int112","nodeType":"ElementaryTypeName","src":"27636:6:11","typeDescriptions":{}}},"id":2464,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"27636:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"functionReturnParameters":2441,"id":2465,"nodeType":"Return","src":"27629:20:11"}]},"documentation":{"id":2435,"nodeType":"StructuredDocumentation","src":"27085:350:11","text":" @dev Returns the downcasted int112 from int256, reverting on\n overflow (when the input is less than smallest int112 or\n greater than largest int112).\n Counterpart to Solidity's `int112` operator.\n Requirements:\n - input must fit into 112 bits\n _Available since v4.7._"},"id":2467,"implemented":true,"kind":"function","modifiers":[],"name":"toInt112","nameLocation":"27449:8:11","nodeType":"FunctionDefinition","parameters":{"id":2438,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2437,"mutability":"mutable","name":"value","nameLocation":"27465:5:11","nodeType":"VariableDeclaration","scope":2467,"src":"27458:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2436,"name":"int256","nodeType":"ElementaryTypeName","src":"27458:6:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"27457:14:11"},"returnParameters":{"id":2441,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2440,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2467,"src":"27495:6:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"},"typeName":{"id":2439,"name":"int112","nodeType":"ElementaryTypeName","src":"27495:6:11","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"visibility":"internal"}],"src":"27494:8:11"},"scope":2925,"src":"27440:216:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2499,"nodeType":"Block","src":"28080:153:11","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2490,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":2482,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2476,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2470,"src":"28098:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"expression":{"arguments":[{"id":2479,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"28112:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_int104_$","typeString":"type(int104)"},"typeName":{"id":2478,"name":"int104","nodeType":"ElementaryTypeName","src":"28112:6:11","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_int104_$","typeString":"type(int104)"}],"id":2477,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"28107:4:11","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":2480,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"28107:12:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_int104","typeString":"type(int104)"}},"id":2481,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"min","nodeType":"MemberAccess","src":"28107:16:11","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"src":"28098:25:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":2489,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2483,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2470,"src":"28127:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":2486,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"28141:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_int104_$","typeString":"type(int104)"},"typeName":{"id":2485,"name":"int104","nodeType":"ElementaryTypeName","src":"28141:6:11","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_int104_$","typeString":"type(int104)"}],"id":2484,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"28136:4:11","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":2487,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"28136:12:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_int104","typeString":"type(int104)"}},"id":2488,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"28136:16:11","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"src":"28127:25:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"28098:54:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203130342062697473","id":2491,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"28154:41:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_5d7f3e1b7e9f9a06fded6b093c6fd1473ca0a14cc4bb683db904e803e2482981","typeString":"literal_string \"SafeCast: value doesn't fit in 104 bits\""},"value":"SafeCast: value doesn't fit in 104 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_5d7f3e1b7e9f9a06fded6b093c6fd1473ca0a14cc4bb683db904e803e2482981","typeString":"literal_string \"SafeCast: value doesn't fit in 104 bits\""}],"id":2475,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"28090:7:11","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2492,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"28090:106:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2493,"nodeType":"ExpressionStatement","src":"28090:106:11"},{"expression":{"arguments":[{"id":2496,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2470,"src":"28220:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":2495,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"28213:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_int104_$","typeString":"type(int104)"},"typeName":{"id":2494,"name":"int104","nodeType":"ElementaryTypeName","src":"28213:6:11","typeDescriptions":{}}},"id":2497,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"28213:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"functionReturnParameters":2474,"id":2498,"nodeType":"Return","src":"28206:20:11"}]},"documentation":{"id":2468,"nodeType":"StructuredDocumentation","src":"27662:350:11","text":" @dev Returns the downcasted int104 from int256, reverting on\n overflow (when the input is less than smallest int104 or\n greater than largest int104).\n Counterpart to Solidity's `int104` operator.\n Requirements:\n - input must fit into 104 bits\n _Available since v4.7._"},"id":2500,"implemented":true,"kind":"function","modifiers":[],"name":"toInt104","nameLocation":"28026:8:11","nodeType":"FunctionDefinition","parameters":{"id":2471,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2470,"mutability":"mutable","name":"value","nameLocation":"28042:5:11","nodeType":"VariableDeclaration","scope":2500,"src":"28035:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2469,"name":"int256","nodeType":"ElementaryTypeName","src":"28035:6:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"28034:14:11"},"returnParameters":{"id":2474,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2473,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2500,"src":"28072:6:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"},"typeName":{"id":2472,"name":"int104","nodeType":"ElementaryTypeName","src":"28072:6:11","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"visibility":"internal"}],"src":"28071:8:11"},"scope":2925,"src":"28017:216:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2532,"nodeType":"Block","src":"28650:149:11","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2523,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":2515,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2509,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2503,"src":"28668:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"expression":{"arguments":[{"id":2512,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"28682:5:11","typeDescriptions":{"typeIdentifier":"t_type$_t_int96_$","typeString":"type(int96)"},"typeName":{"id":2511,"name":"int96","nodeType":"ElementaryTypeName","src":"28682:5:11","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_int96_$","typeString":"type(int96)"}],"id":2510,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"28677:4:11","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":2513,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"28677:11:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_int96","typeString":"type(int96)"}},"id":2514,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"min","nodeType":"MemberAccess","src":"28677:15:11","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"src":"28668:24:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":2522,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2516,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2503,"src":"28696:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":2519,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"28710:5:11","typeDescriptions":{"typeIdentifier":"t_type$_t_int96_$","typeString":"type(int96)"},"typeName":{"id":2518,"name":"int96","nodeType":"ElementaryTypeName","src":"28710:5:11","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_int96_$","typeString":"type(int96)"}],"id":2517,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"28705:4:11","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":2520,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"28705:11:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_int96","typeString":"type(int96)"}},"id":2521,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"28705:15:11","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"src":"28696:24:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"28668:52:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e2039362062697473","id":2524,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"28722:40:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_06d20189090e973729391526269baef79c35dd621633195648e5f8309eef9e19","typeString":"literal_string \"SafeCast: value doesn't fit in 96 bits\""},"value":"SafeCast: value doesn't fit in 96 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_06d20189090e973729391526269baef79c35dd621633195648e5f8309eef9e19","typeString":"literal_string \"SafeCast: value doesn't fit in 96 bits\""}],"id":2508,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"28660:7:11","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2525,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"28660:103:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2526,"nodeType":"ExpressionStatement","src":"28660:103:11"},{"expression":{"arguments":[{"id":2529,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2503,"src":"28786:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":2528,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"28780:5:11","typeDescriptions":{"typeIdentifier":"t_type$_t_int96_$","typeString":"type(int96)"},"typeName":{"id":2527,"name":"int96","nodeType":"ElementaryTypeName","src":"28780:5:11","typeDescriptions":{}}},"id":2530,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"28780:12:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"functionReturnParameters":2507,"id":2531,"nodeType":"Return","src":"28773:19:11"}]},"documentation":{"id":2501,"nodeType":"StructuredDocumentation","src":"28239:345:11","text":" @dev Returns the downcasted int96 from int256, reverting on\n overflow (when the input is less than smallest int96 or\n greater than largest int96).\n Counterpart to Solidity's `int96` operator.\n Requirements:\n - input must fit into 96 bits\n _Available since v4.7._"},"id":2533,"implemented":true,"kind":"function","modifiers":[],"name":"toInt96","nameLocation":"28598:7:11","nodeType":"FunctionDefinition","parameters":{"id":2504,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2503,"mutability":"mutable","name":"value","nameLocation":"28613:5:11","nodeType":"VariableDeclaration","scope":2533,"src":"28606:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2502,"name":"int256","nodeType":"ElementaryTypeName","src":"28606:6:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"28605:14:11"},"returnParameters":{"id":2507,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2506,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2533,"src":"28643:5:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"},"typeName":{"id":2505,"name":"int96","nodeType":"ElementaryTypeName","src":"28643:5:11","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"visibility":"internal"}],"src":"28642:7:11"},"scope":2925,"src":"28589:210:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2565,"nodeType":"Block","src":"29216:149:11","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2556,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":2548,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2542,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2536,"src":"29234:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"expression":{"arguments":[{"id":2545,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"29248:5:11","typeDescriptions":{"typeIdentifier":"t_type$_t_int88_$","typeString":"type(int88)"},"typeName":{"id":2544,"name":"int88","nodeType":"ElementaryTypeName","src":"29248:5:11","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_int88_$","typeString":"type(int88)"}],"id":2543,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"29243:4:11","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":2546,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"29243:11:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_int88","typeString":"type(int88)"}},"id":2547,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"min","nodeType":"MemberAccess","src":"29243:15:11","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"src":"29234:24:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":2555,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2549,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2536,"src":"29262:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":2552,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"29276:5:11","typeDescriptions":{"typeIdentifier":"t_type$_t_int88_$","typeString":"type(int88)"},"typeName":{"id":2551,"name":"int88","nodeType":"ElementaryTypeName","src":"29276:5:11","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_int88_$","typeString":"type(int88)"}],"id":2550,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"29271:4:11","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":2553,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"29271:11:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_int88","typeString":"type(int88)"}},"id":2554,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"29271:15:11","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"src":"29262:24:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"29234:52:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e2038382062697473","id":2557,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"29288:40:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_ae080bd7a76a46f0a0caf00941bc2cdf6002799ca2813a3af7295019576d715d","typeString":"literal_string \"SafeCast: value doesn't fit in 88 bits\""},"value":"SafeCast: value doesn't fit in 88 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_ae080bd7a76a46f0a0caf00941bc2cdf6002799ca2813a3af7295019576d715d","typeString":"literal_string \"SafeCast: value doesn't fit in 88 bits\""}],"id":2541,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"29226:7:11","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2558,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"29226:103:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2559,"nodeType":"ExpressionStatement","src":"29226:103:11"},{"expression":{"arguments":[{"id":2562,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2536,"src":"29352:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":2561,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"29346:5:11","typeDescriptions":{"typeIdentifier":"t_type$_t_int88_$","typeString":"type(int88)"},"typeName":{"id":2560,"name":"int88","nodeType":"ElementaryTypeName","src":"29346:5:11","typeDescriptions":{}}},"id":2563,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"29346:12:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"functionReturnParameters":2540,"id":2564,"nodeType":"Return","src":"29339:19:11"}]},"documentation":{"id":2534,"nodeType":"StructuredDocumentation","src":"28805:345:11","text":" @dev Returns the downcasted int88 from int256, reverting on\n overflow (when the input is less than smallest int88 or\n greater than largest int88).\n Counterpart to Solidity's `int88` operator.\n Requirements:\n - input must fit into 88 bits\n _Available since v4.7._"},"id":2566,"implemented":true,"kind":"function","modifiers":[],"name":"toInt88","nameLocation":"29164:7:11","nodeType":"FunctionDefinition","parameters":{"id":2537,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2536,"mutability":"mutable","name":"value","nameLocation":"29179:5:11","nodeType":"VariableDeclaration","scope":2566,"src":"29172:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2535,"name":"int256","nodeType":"ElementaryTypeName","src":"29172:6:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"29171:14:11"},"returnParameters":{"id":2540,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2539,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2566,"src":"29209:5:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"},"typeName":{"id":2538,"name":"int88","nodeType":"ElementaryTypeName","src":"29209:5:11","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"visibility":"internal"}],"src":"29208:7:11"},"scope":2925,"src":"29155:210:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2598,"nodeType":"Block","src":"29782:149:11","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2589,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":2581,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2575,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2569,"src":"29800:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"expression":{"arguments":[{"id":2578,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"29814:5:11","typeDescriptions":{"typeIdentifier":"t_type$_t_int80_$","typeString":"type(int80)"},"typeName":{"id":2577,"name":"int80","nodeType":"ElementaryTypeName","src":"29814:5:11","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_int80_$","typeString":"type(int80)"}],"id":2576,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"29809:4:11","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":2579,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"29809:11:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_int80","typeString":"type(int80)"}},"id":2580,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"min","nodeType":"MemberAccess","src":"29809:15:11","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"src":"29800:24:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":2588,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2582,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2569,"src":"29828:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":2585,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"29842:5:11","typeDescriptions":{"typeIdentifier":"t_type$_t_int80_$","typeString":"type(int80)"},"typeName":{"id":2584,"name":"int80","nodeType":"ElementaryTypeName","src":"29842:5:11","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_int80_$","typeString":"type(int80)"}],"id":2583,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"29837:4:11","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":2586,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"29837:11:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_int80","typeString":"type(int80)"}},"id":2587,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"29837:15:11","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"src":"29828:24:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"29800:52:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e2038302062697473","id":2590,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"29854:40:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_3cba87c71fade7d3cd7b673c159aab98afc040a5369691a33559d905d20ab5d1","typeString":"literal_string \"SafeCast: value doesn't fit in 80 bits\""},"value":"SafeCast: value doesn't fit in 80 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_3cba87c71fade7d3cd7b673c159aab98afc040a5369691a33559d905d20ab5d1","typeString":"literal_string \"SafeCast: value doesn't fit in 80 bits\""}],"id":2574,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"29792:7:11","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2591,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"29792:103:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2592,"nodeType":"ExpressionStatement","src":"29792:103:11"},{"expression":{"arguments":[{"id":2595,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2569,"src":"29918:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":2594,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"29912:5:11","typeDescriptions":{"typeIdentifier":"t_type$_t_int80_$","typeString":"type(int80)"},"typeName":{"id":2593,"name":"int80","nodeType":"ElementaryTypeName","src":"29912:5:11","typeDescriptions":{}}},"id":2596,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"29912:12:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"functionReturnParameters":2573,"id":2597,"nodeType":"Return","src":"29905:19:11"}]},"documentation":{"id":2567,"nodeType":"StructuredDocumentation","src":"29371:345:11","text":" @dev Returns the downcasted int80 from int256, reverting on\n overflow (when the input is less than smallest int80 or\n greater than largest int80).\n Counterpart to Solidity's `int80` operator.\n Requirements:\n - input must fit into 80 bits\n _Available since v4.7._"},"id":2599,"implemented":true,"kind":"function","modifiers":[],"name":"toInt80","nameLocation":"29730:7:11","nodeType":"FunctionDefinition","parameters":{"id":2570,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2569,"mutability":"mutable","name":"value","nameLocation":"29745:5:11","nodeType":"VariableDeclaration","scope":2599,"src":"29738:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2568,"name":"int256","nodeType":"ElementaryTypeName","src":"29738:6:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"29737:14:11"},"returnParameters":{"id":2573,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2572,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2599,"src":"29775:5:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"},"typeName":{"id":2571,"name":"int80","nodeType":"ElementaryTypeName","src":"29775:5:11","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"visibility":"internal"}],"src":"29774:7:11"},"scope":2925,"src":"29721:210:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2631,"nodeType":"Block","src":"30348:149:11","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2622,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":2614,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2608,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2602,"src":"30366:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"expression":{"arguments":[{"id":2611,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"30380:5:11","typeDescriptions":{"typeIdentifier":"t_type$_t_int72_$","typeString":"type(int72)"},"typeName":{"id":2610,"name":"int72","nodeType":"ElementaryTypeName","src":"30380:5:11","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_int72_$","typeString":"type(int72)"}],"id":2609,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"30375:4:11","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":2612,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"30375:11:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_int72","typeString":"type(int72)"}},"id":2613,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"min","nodeType":"MemberAccess","src":"30375:15:11","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"src":"30366:24:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":2621,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2615,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2602,"src":"30394:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":2618,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"30408:5:11","typeDescriptions":{"typeIdentifier":"t_type$_t_int72_$","typeString":"type(int72)"},"typeName":{"id":2617,"name":"int72","nodeType":"ElementaryTypeName","src":"30408:5:11","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_int72_$","typeString":"type(int72)"}],"id":2616,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"30403:4:11","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":2619,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"30403:11:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_int72","typeString":"type(int72)"}},"id":2620,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"30403:15:11","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"src":"30394:24:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"30366:52:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e2037322062697473","id":2623,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"30420:40:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_71584237cc5250b8f417982144a947efe8f4c76feba008ff32ac480e69d60606","typeString":"literal_string \"SafeCast: value doesn't fit in 72 bits\""},"value":"SafeCast: value doesn't fit in 72 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_71584237cc5250b8f417982144a947efe8f4c76feba008ff32ac480e69d60606","typeString":"literal_string \"SafeCast: value doesn't fit in 72 bits\""}],"id":2607,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"30358:7:11","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2624,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"30358:103:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2625,"nodeType":"ExpressionStatement","src":"30358:103:11"},{"expression":{"arguments":[{"id":2628,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2602,"src":"30484:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":2627,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"30478:5:11","typeDescriptions":{"typeIdentifier":"t_type$_t_int72_$","typeString":"type(int72)"},"typeName":{"id":2626,"name":"int72","nodeType":"ElementaryTypeName","src":"30478:5:11","typeDescriptions":{}}},"id":2629,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"30478:12:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"functionReturnParameters":2606,"id":2630,"nodeType":"Return","src":"30471:19:11"}]},"documentation":{"id":2600,"nodeType":"StructuredDocumentation","src":"29937:345:11","text":" @dev Returns the downcasted int72 from int256, reverting on\n overflow (when the input is less than smallest int72 or\n greater than largest int72).\n Counterpart to Solidity's `int72` operator.\n Requirements:\n - input must fit into 72 bits\n _Available since v4.7._"},"id":2632,"implemented":true,"kind":"function","modifiers":[],"name":"toInt72","nameLocation":"30296:7:11","nodeType":"FunctionDefinition","parameters":{"id":2603,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2602,"mutability":"mutable","name":"value","nameLocation":"30311:5:11","nodeType":"VariableDeclaration","scope":2632,"src":"30304:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2601,"name":"int256","nodeType":"ElementaryTypeName","src":"30304:6:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"30303:14:11"},"returnParameters":{"id":2606,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2605,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2632,"src":"30341:5:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"},"typeName":{"id":2604,"name":"int72","nodeType":"ElementaryTypeName","src":"30341:5:11","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"visibility":"internal"}],"src":"30340:7:11"},"scope":2925,"src":"30287:210:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2664,"nodeType":"Block","src":"30914:149:11","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2655,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":2647,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2641,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2635,"src":"30932:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"expression":{"arguments":[{"id":2644,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"30946:5:11","typeDescriptions":{"typeIdentifier":"t_type$_t_int64_$","typeString":"type(int64)"},"typeName":{"id":2643,"name":"int64","nodeType":"ElementaryTypeName","src":"30946:5:11","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_int64_$","typeString":"type(int64)"}],"id":2642,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"30941:4:11","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":2645,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"30941:11:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_int64","typeString":"type(int64)"}},"id":2646,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"min","nodeType":"MemberAccess","src":"30941:15:11","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"src":"30932:24:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":2654,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2648,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2635,"src":"30960:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":2651,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"30974:5:11","typeDescriptions":{"typeIdentifier":"t_type$_t_int64_$","typeString":"type(int64)"},"typeName":{"id":2650,"name":"int64","nodeType":"ElementaryTypeName","src":"30974:5:11","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_int64_$","typeString":"type(int64)"}],"id":2649,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"30969:4:11","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":2652,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"30969:11:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_int64","typeString":"type(int64)"}},"id":2653,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"30969:15:11","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"src":"30960:24:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"30932:52:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e2036342062697473","id":2656,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"30986:40:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_93ae0c6bf6ffaece591a770b1865daa9f65157e541970aa9d8dc5f89a9490939","typeString":"literal_string \"SafeCast: value doesn't fit in 64 bits\""},"value":"SafeCast: value doesn't fit in 64 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_93ae0c6bf6ffaece591a770b1865daa9f65157e541970aa9d8dc5f89a9490939","typeString":"literal_string \"SafeCast: value doesn't fit in 64 bits\""}],"id":2640,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"30924:7:11","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2657,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"30924:103:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2658,"nodeType":"ExpressionStatement","src":"30924:103:11"},{"expression":{"arguments":[{"id":2661,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2635,"src":"31050:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":2660,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"31044:5:11","typeDescriptions":{"typeIdentifier":"t_type$_t_int64_$","typeString":"type(int64)"},"typeName":{"id":2659,"name":"int64","nodeType":"ElementaryTypeName","src":"31044:5:11","typeDescriptions":{}}},"id":2662,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"31044:12:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"functionReturnParameters":2639,"id":2663,"nodeType":"Return","src":"31037:19:11"}]},"documentation":{"id":2633,"nodeType":"StructuredDocumentation","src":"30503:345:11","text":" @dev Returns the downcasted int64 from int256, reverting on\n overflow (when the input is less than smallest int64 or\n greater than largest int64).\n Counterpart to Solidity's `int64` operator.\n Requirements:\n - input must fit into 64 bits\n _Available since v3.1._"},"id":2665,"implemented":true,"kind":"function","modifiers":[],"name":"toInt64","nameLocation":"30862:7:11","nodeType":"FunctionDefinition","parameters":{"id":2636,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2635,"mutability":"mutable","name":"value","nameLocation":"30877:5:11","nodeType":"VariableDeclaration","scope":2665,"src":"30870:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2634,"name":"int256","nodeType":"ElementaryTypeName","src":"30870:6:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"30869:14:11"},"returnParameters":{"id":2639,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2638,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2665,"src":"30907:5:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"},"typeName":{"id":2637,"name":"int64","nodeType":"ElementaryTypeName","src":"30907:5:11","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"visibility":"internal"}],"src":"30906:7:11"},"scope":2925,"src":"30853:210:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2697,"nodeType":"Block","src":"31480:149:11","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2688,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":2680,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2674,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2668,"src":"31498:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"expression":{"arguments":[{"id":2677,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"31512:5:11","typeDescriptions":{"typeIdentifier":"t_type$_t_int56_$","typeString":"type(int56)"},"typeName":{"id":2676,"name":"int56","nodeType":"ElementaryTypeName","src":"31512:5:11","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_int56_$","typeString":"type(int56)"}],"id":2675,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"31507:4:11","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":2678,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"31507:11:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_int56","typeString":"type(int56)"}},"id":2679,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"min","nodeType":"MemberAccess","src":"31507:15:11","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"src":"31498:24:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":2687,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2681,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2668,"src":"31526:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":2684,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"31540:5:11","typeDescriptions":{"typeIdentifier":"t_type$_t_int56_$","typeString":"type(int56)"},"typeName":{"id":2683,"name":"int56","nodeType":"ElementaryTypeName","src":"31540:5:11","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_int56_$","typeString":"type(int56)"}],"id":2682,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"31535:4:11","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":2685,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"31535:11:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_int56","typeString":"type(int56)"}},"id":2686,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"31535:15:11","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"src":"31526:24:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"31498:52:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e2035362062697473","id":2689,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"31552:40:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_656ad93b5ff6665bfe05d97d51fad7c02ad79e6c43bef066c042a6900f450bc5","typeString":"literal_string \"SafeCast: value doesn't fit in 56 bits\""},"value":"SafeCast: value doesn't fit in 56 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_656ad93b5ff6665bfe05d97d51fad7c02ad79e6c43bef066c042a6900f450bc5","typeString":"literal_string \"SafeCast: value doesn't fit in 56 bits\""}],"id":2673,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"31490:7:11","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2690,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"31490:103:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2691,"nodeType":"ExpressionStatement","src":"31490:103:11"},{"expression":{"arguments":[{"id":2694,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2668,"src":"31616:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":2693,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"31610:5:11","typeDescriptions":{"typeIdentifier":"t_type$_t_int56_$","typeString":"type(int56)"},"typeName":{"id":2692,"name":"int56","nodeType":"ElementaryTypeName","src":"31610:5:11","typeDescriptions":{}}},"id":2695,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"31610:12:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"functionReturnParameters":2672,"id":2696,"nodeType":"Return","src":"31603:19:11"}]},"documentation":{"id":2666,"nodeType":"StructuredDocumentation","src":"31069:345:11","text":" @dev Returns the downcasted int56 from int256, reverting on\n overflow (when the input is less than smallest int56 or\n greater than largest int56).\n Counterpart to Solidity's `int56` operator.\n Requirements:\n - input must fit into 56 bits\n _Available since v4.7._"},"id":2698,"implemented":true,"kind":"function","modifiers":[],"name":"toInt56","nameLocation":"31428:7:11","nodeType":"FunctionDefinition","parameters":{"id":2669,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2668,"mutability":"mutable","name":"value","nameLocation":"31443:5:11","nodeType":"VariableDeclaration","scope":2698,"src":"31436:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2667,"name":"int256","nodeType":"ElementaryTypeName","src":"31436:6:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"31435:14:11"},"returnParameters":{"id":2672,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2671,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2698,"src":"31473:5:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"},"typeName":{"id":2670,"name":"int56","nodeType":"ElementaryTypeName","src":"31473:5:11","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"visibility":"internal"}],"src":"31472:7:11"},"scope":2925,"src":"31419:210:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2730,"nodeType":"Block","src":"32046:149:11","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2721,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":2713,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2707,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2701,"src":"32064:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"expression":{"arguments":[{"id":2710,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"32078:5:11","typeDescriptions":{"typeIdentifier":"t_type$_t_int48_$","typeString":"type(int48)"},"typeName":{"id":2709,"name":"int48","nodeType":"ElementaryTypeName","src":"32078:5:11","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_int48_$","typeString":"type(int48)"}],"id":2708,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"32073:4:11","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":2711,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"32073:11:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_int48","typeString":"type(int48)"}},"id":2712,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"min","nodeType":"MemberAccess","src":"32073:15:11","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"src":"32064:24:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":2720,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2714,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2701,"src":"32092:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":2717,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"32106:5:11","typeDescriptions":{"typeIdentifier":"t_type$_t_int48_$","typeString":"type(int48)"},"typeName":{"id":2716,"name":"int48","nodeType":"ElementaryTypeName","src":"32106:5:11","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_int48_$","typeString":"type(int48)"}],"id":2715,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"32101:4:11","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":2718,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"32101:11:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_int48","typeString":"type(int48)"}},"id":2719,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"32101:15:11","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"src":"32092:24:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"32064:52:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e2034382062697473","id":2722,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"32118:40:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_599034f9324dd4e988c6cea5a00a30f53147fec1b01559682f18cd840028f495","typeString":"literal_string \"SafeCast: value doesn't fit in 48 bits\""},"value":"SafeCast: value doesn't fit in 48 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_599034f9324dd4e988c6cea5a00a30f53147fec1b01559682f18cd840028f495","typeString":"literal_string \"SafeCast: value doesn't fit in 48 bits\""}],"id":2706,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"32056:7:11","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2723,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"32056:103:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2724,"nodeType":"ExpressionStatement","src":"32056:103:11"},{"expression":{"arguments":[{"id":2727,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2701,"src":"32182:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":2726,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"32176:5:11","typeDescriptions":{"typeIdentifier":"t_type$_t_int48_$","typeString":"type(int48)"},"typeName":{"id":2725,"name":"int48","nodeType":"ElementaryTypeName","src":"32176:5:11","typeDescriptions":{}}},"id":2728,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"32176:12:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"functionReturnParameters":2705,"id":2729,"nodeType":"Return","src":"32169:19:11"}]},"documentation":{"id":2699,"nodeType":"StructuredDocumentation","src":"31635:345:11","text":" @dev Returns the downcasted int48 from int256, reverting on\n overflow (when the input is less than smallest int48 or\n greater than largest int48).\n Counterpart to Solidity's `int48` operator.\n Requirements:\n - input must fit into 48 bits\n _Available since v4.7._"},"id":2731,"implemented":true,"kind":"function","modifiers":[],"name":"toInt48","nameLocation":"31994:7:11","nodeType":"FunctionDefinition","parameters":{"id":2702,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2701,"mutability":"mutable","name":"value","nameLocation":"32009:5:11","nodeType":"VariableDeclaration","scope":2731,"src":"32002:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2700,"name":"int256","nodeType":"ElementaryTypeName","src":"32002:6:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"32001:14:11"},"returnParameters":{"id":2705,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2704,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2731,"src":"32039:5:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"},"typeName":{"id":2703,"name":"int48","nodeType":"ElementaryTypeName","src":"32039:5:11","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"visibility":"internal"}],"src":"32038:7:11"},"scope":2925,"src":"31985:210:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2763,"nodeType":"Block","src":"32612:149:11","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2754,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":2746,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2740,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2734,"src":"32630:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"expression":{"arguments":[{"id":2743,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"32644:5:11","typeDescriptions":{"typeIdentifier":"t_type$_t_int40_$","typeString":"type(int40)"},"typeName":{"id":2742,"name":"int40","nodeType":"ElementaryTypeName","src":"32644:5:11","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_int40_$","typeString":"type(int40)"}],"id":2741,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"32639:4:11","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":2744,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"32639:11:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_int40","typeString":"type(int40)"}},"id":2745,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"min","nodeType":"MemberAccess","src":"32639:15:11","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"src":"32630:24:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":2753,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2747,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2734,"src":"32658:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":2750,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"32672:5:11","typeDescriptions":{"typeIdentifier":"t_type$_t_int40_$","typeString":"type(int40)"},"typeName":{"id":2749,"name":"int40","nodeType":"ElementaryTypeName","src":"32672:5:11","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_int40_$","typeString":"type(int40)"}],"id":2748,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"32667:4:11","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":2751,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"32667:11:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_int40","typeString":"type(int40)"}},"id":2752,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"32667:15:11","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"src":"32658:24:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"32630:52:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e2034302062697473","id":2755,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"32684:40:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_b23559c58b98a5d3ed7016699c7171ac8defa5a1d180f9a9ffa60468a5701d37","typeString":"literal_string \"SafeCast: value doesn't fit in 40 bits\""},"value":"SafeCast: value doesn't fit in 40 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_b23559c58b98a5d3ed7016699c7171ac8defa5a1d180f9a9ffa60468a5701d37","typeString":"literal_string \"SafeCast: value doesn't fit in 40 bits\""}],"id":2739,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"32622:7:11","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2756,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"32622:103:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2757,"nodeType":"ExpressionStatement","src":"32622:103:11"},{"expression":{"arguments":[{"id":2760,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2734,"src":"32748:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":2759,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"32742:5:11","typeDescriptions":{"typeIdentifier":"t_type$_t_int40_$","typeString":"type(int40)"},"typeName":{"id":2758,"name":"int40","nodeType":"ElementaryTypeName","src":"32742:5:11","typeDescriptions":{}}},"id":2761,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"32742:12:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"functionReturnParameters":2738,"id":2762,"nodeType":"Return","src":"32735:19:11"}]},"documentation":{"id":2732,"nodeType":"StructuredDocumentation","src":"32201:345:11","text":" @dev Returns the downcasted int40 from int256, reverting on\n overflow (when the input is less than smallest int40 or\n greater than largest int40).\n Counterpart to Solidity's `int40` operator.\n Requirements:\n - input must fit into 40 bits\n _Available since v4.7._"},"id":2764,"implemented":true,"kind":"function","modifiers":[],"name":"toInt40","nameLocation":"32560:7:11","nodeType":"FunctionDefinition","parameters":{"id":2735,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2734,"mutability":"mutable","name":"value","nameLocation":"32575:5:11","nodeType":"VariableDeclaration","scope":2764,"src":"32568:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2733,"name":"int256","nodeType":"ElementaryTypeName","src":"32568:6:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"32567:14:11"},"returnParameters":{"id":2738,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2737,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2764,"src":"32605:5:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"},"typeName":{"id":2736,"name":"int40","nodeType":"ElementaryTypeName","src":"32605:5:11","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"visibility":"internal"}],"src":"32604:7:11"},"scope":2925,"src":"32551:210:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2796,"nodeType":"Block","src":"33178:149:11","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2787,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":2779,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2773,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2767,"src":"33196:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"expression":{"arguments":[{"id":2776,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"33210:5:11","typeDescriptions":{"typeIdentifier":"t_type$_t_int32_$","typeString":"type(int32)"},"typeName":{"id":2775,"name":"int32","nodeType":"ElementaryTypeName","src":"33210:5:11","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_int32_$","typeString":"type(int32)"}],"id":2774,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"33205:4:11","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":2777,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"33205:11:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_int32","typeString":"type(int32)"}},"id":2778,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"min","nodeType":"MemberAccess","src":"33205:15:11","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"src":"33196:24:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":2786,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2780,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2767,"src":"33224:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":2783,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"33238:5:11","typeDescriptions":{"typeIdentifier":"t_type$_t_int32_$","typeString":"type(int32)"},"typeName":{"id":2782,"name":"int32","nodeType":"ElementaryTypeName","src":"33238:5:11","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_int32_$","typeString":"type(int32)"}],"id":2781,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"33233:4:11","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":2784,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"33233:11:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_int32","typeString":"type(int32)"}},"id":2785,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"33233:15:11","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"src":"33224:24:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"33196:52:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e2033322062697473","id":2788,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"33250:40:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_c907489dafcfb622d3b83f2657a14d6da2f59e0de3116af0d6a80554c1a7cb19","typeString":"literal_string \"SafeCast: value doesn't fit in 32 bits\""},"value":"SafeCast: value doesn't fit in 32 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_c907489dafcfb622d3b83f2657a14d6da2f59e0de3116af0d6a80554c1a7cb19","typeString":"literal_string \"SafeCast: value doesn't fit in 32 bits\""}],"id":2772,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"33188:7:11","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2789,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"33188:103:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2790,"nodeType":"ExpressionStatement","src":"33188:103:11"},{"expression":{"arguments":[{"id":2793,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2767,"src":"33314:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":2792,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"33308:5:11","typeDescriptions":{"typeIdentifier":"t_type$_t_int32_$","typeString":"type(int32)"},"typeName":{"id":2791,"name":"int32","nodeType":"ElementaryTypeName","src":"33308:5:11","typeDescriptions":{}}},"id":2794,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"33308:12:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"functionReturnParameters":2771,"id":2795,"nodeType":"Return","src":"33301:19:11"}]},"documentation":{"id":2765,"nodeType":"StructuredDocumentation","src":"32767:345:11","text":" @dev Returns the downcasted int32 from int256, reverting on\n overflow (when the input is less than smallest int32 or\n greater than largest int32).\n Counterpart to Solidity's `int32` operator.\n Requirements:\n - input must fit into 32 bits\n _Available since v3.1._"},"id":2797,"implemented":true,"kind":"function","modifiers":[],"name":"toInt32","nameLocation":"33126:7:11","nodeType":"FunctionDefinition","parameters":{"id":2768,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2767,"mutability":"mutable","name":"value","nameLocation":"33141:5:11","nodeType":"VariableDeclaration","scope":2797,"src":"33134:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2766,"name":"int256","nodeType":"ElementaryTypeName","src":"33134:6:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"33133:14:11"},"returnParameters":{"id":2771,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2770,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2797,"src":"33171:5:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"},"typeName":{"id":2769,"name":"int32","nodeType":"ElementaryTypeName","src":"33171:5:11","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"visibility":"internal"}],"src":"33170:7:11"},"scope":2925,"src":"33117:210:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2829,"nodeType":"Block","src":"33744:149:11","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2820,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":2812,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2806,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2800,"src":"33762:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"expression":{"arguments":[{"id":2809,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"33776:5:11","typeDescriptions":{"typeIdentifier":"t_type$_t_int24_$","typeString":"type(int24)"},"typeName":{"id":2808,"name":"int24","nodeType":"ElementaryTypeName","src":"33776:5:11","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_int24_$","typeString":"type(int24)"}],"id":2807,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"33771:4:11","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":2810,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"33771:11:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_int24","typeString":"type(int24)"}},"id":2811,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"min","nodeType":"MemberAccess","src":"33771:15:11","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"src":"33762:24:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":2819,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2813,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2800,"src":"33790:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":2816,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"33804:5:11","typeDescriptions":{"typeIdentifier":"t_type$_t_int24_$","typeString":"type(int24)"},"typeName":{"id":2815,"name":"int24","nodeType":"ElementaryTypeName","src":"33804:5:11","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_int24_$","typeString":"type(int24)"}],"id":2814,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"33799:4:11","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":2817,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"33799:11:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_int24","typeString":"type(int24)"}},"id":2818,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"33799:15:11","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"src":"33790:24:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"33762:52:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e2032342062697473","id":2821,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"33816:40:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_f68b65aaf4574c34e9b9d1442d19636c6608b8c4dbd9331c7245f7915c8b2f55","typeString":"literal_string \"SafeCast: value doesn't fit in 24 bits\""},"value":"SafeCast: value doesn't fit in 24 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_f68b65aaf4574c34e9b9d1442d19636c6608b8c4dbd9331c7245f7915c8b2f55","typeString":"literal_string \"SafeCast: value doesn't fit in 24 bits\""}],"id":2805,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"33754:7:11","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2822,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"33754:103:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2823,"nodeType":"ExpressionStatement","src":"33754:103:11"},{"expression":{"arguments":[{"id":2826,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2800,"src":"33880:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":2825,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"33874:5:11","typeDescriptions":{"typeIdentifier":"t_type$_t_int24_$","typeString":"type(int24)"},"typeName":{"id":2824,"name":"int24","nodeType":"ElementaryTypeName","src":"33874:5:11","typeDescriptions":{}}},"id":2827,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"33874:12:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"functionReturnParameters":2804,"id":2828,"nodeType":"Return","src":"33867:19:11"}]},"documentation":{"id":2798,"nodeType":"StructuredDocumentation","src":"33333:345:11","text":" @dev Returns the downcasted int24 from int256, reverting on\n overflow (when the input is less than smallest int24 or\n greater than largest int24).\n Counterpart to Solidity's `int24` operator.\n Requirements:\n - input must fit into 24 bits\n _Available since v4.7._"},"id":2830,"implemented":true,"kind":"function","modifiers":[],"name":"toInt24","nameLocation":"33692:7:11","nodeType":"FunctionDefinition","parameters":{"id":2801,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2800,"mutability":"mutable","name":"value","nameLocation":"33707:5:11","nodeType":"VariableDeclaration","scope":2830,"src":"33700:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2799,"name":"int256","nodeType":"ElementaryTypeName","src":"33700:6:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"33699:14:11"},"returnParameters":{"id":2804,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2803,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2830,"src":"33737:5:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"},"typeName":{"id":2802,"name":"int24","nodeType":"ElementaryTypeName","src":"33737:5:11","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"visibility":"internal"}],"src":"33736:7:11"},"scope":2925,"src":"33683:210:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2862,"nodeType":"Block","src":"34310:149:11","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2853,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":2845,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2839,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2833,"src":"34328:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"expression":{"arguments":[{"id":2842,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"34342:5:11","typeDescriptions":{"typeIdentifier":"t_type$_t_int16_$","typeString":"type(int16)"},"typeName":{"id":2841,"name":"int16","nodeType":"ElementaryTypeName","src":"34342:5:11","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_int16_$","typeString":"type(int16)"}],"id":2840,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"34337:4:11","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":2843,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"34337:11:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_int16","typeString":"type(int16)"}},"id":2844,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"min","nodeType":"MemberAccess","src":"34337:15:11","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"src":"34328:24:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":2852,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2846,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2833,"src":"34356:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":2849,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"34370:5:11","typeDescriptions":{"typeIdentifier":"t_type$_t_int16_$","typeString":"type(int16)"},"typeName":{"id":2848,"name":"int16","nodeType":"ElementaryTypeName","src":"34370:5:11","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_int16_$","typeString":"type(int16)"}],"id":2847,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"34365:4:11","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":2850,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"34365:11:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_int16","typeString":"type(int16)"}},"id":2851,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"34365:15:11","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"src":"34356:24:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"34328:52:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e2031362062697473","id":2854,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"34382:40:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_13d3a66f9e0e5c92bbe7743bcd3bdb4695009d5f3a96e5ff49718d715b484033","typeString":"literal_string \"SafeCast: value doesn't fit in 16 bits\""},"value":"SafeCast: value doesn't fit in 16 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_13d3a66f9e0e5c92bbe7743bcd3bdb4695009d5f3a96e5ff49718d715b484033","typeString":"literal_string \"SafeCast: value doesn't fit in 16 bits\""}],"id":2838,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"34320:7:11","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2855,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"34320:103:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2856,"nodeType":"ExpressionStatement","src":"34320:103:11"},{"expression":{"arguments":[{"id":2859,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2833,"src":"34446:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":2858,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"34440:5:11","typeDescriptions":{"typeIdentifier":"t_type$_t_int16_$","typeString":"type(int16)"},"typeName":{"id":2857,"name":"int16","nodeType":"ElementaryTypeName","src":"34440:5:11","typeDescriptions":{}}},"id":2860,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"34440:12:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"functionReturnParameters":2837,"id":2861,"nodeType":"Return","src":"34433:19:11"}]},"documentation":{"id":2831,"nodeType":"StructuredDocumentation","src":"33899:345:11","text":" @dev Returns the downcasted int16 from int256, reverting on\n overflow (when the input is less than smallest int16 or\n greater than largest int16).\n Counterpart to Solidity's `int16` operator.\n Requirements:\n - input must fit into 16 bits\n _Available since v3.1._"},"id":2863,"implemented":true,"kind":"function","modifiers":[],"name":"toInt16","nameLocation":"34258:7:11","nodeType":"FunctionDefinition","parameters":{"id":2834,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2833,"mutability":"mutable","name":"value","nameLocation":"34273:5:11","nodeType":"VariableDeclaration","scope":2863,"src":"34266:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2832,"name":"int256","nodeType":"ElementaryTypeName","src":"34266:6:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"34265:14:11"},"returnParameters":{"id":2837,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2836,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2863,"src":"34303:5:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"},"typeName":{"id":2835,"name":"int16","nodeType":"ElementaryTypeName","src":"34303:5:11","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"visibility":"internal"}],"src":"34302:7:11"},"scope":2925,"src":"34249:210:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2895,"nodeType":"Block","src":"34869:145:11","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2886,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":2878,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2872,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2866,"src":"34887:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"expression":{"arguments":[{"id":2875,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"34901:4:11","typeDescriptions":{"typeIdentifier":"t_type$_t_int8_$","typeString":"type(int8)"},"typeName":{"id":2874,"name":"int8","nodeType":"ElementaryTypeName","src":"34901:4:11","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_int8_$","typeString":"type(int8)"}],"id":2873,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"34896:4:11","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":2876,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"34896:10:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_int8","typeString":"type(int8)"}},"id":2877,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"min","nodeType":"MemberAccess","src":"34896:14:11","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"src":"34887:23:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":2885,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2879,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2866,"src":"34914:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":2882,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"34928:4:11","typeDescriptions":{"typeIdentifier":"t_type$_t_int8_$","typeString":"type(int8)"},"typeName":{"id":2881,"name":"int8","nodeType":"ElementaryTypeName","src":"34928:4:11","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_int8_$","typeString":"type(int8)"}],"id":2880,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"34923:4:11","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":2883,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"34923:10:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_int8","typeString":"type(int8)"}},"id":2884,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"34923:14:11","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"src":"34914:23:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"34887:50:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e20382062697473","id":2887,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"34939:39:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_2610961ba53259047cd57c60366c5ad0b8aabf5eb4132487619b736715a740d1","typeString":"literal_string \"SafeCast: value doesn't fit in 8 bits\""},"value":"SafeCast: value doesn't fit in 8 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_2610961ba53259047cd57c60366c5ad0b8aabf5eb4132487619b736715a740d1","typeString":"literal_string \"SafeCast: value doesn't fit in 8 bits\""}],"id":2871,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"34879:7:11","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2888,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"34879:100:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2889,"nodeType":"ExpressionStatement","src":"34879:100:11"},{"expression":{"arguments":[{"id":2892,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2866,"src":"35001:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":2891,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"34996:4:11","typeDescriptions":{"typeIdentifier":"t_type$_t_int8_$","typeString":"type(int8)"},"typeName":{"id":2890,"name":"int8","nodeType":"ElementaryTypeName","src":"34996:4:11","typeDescriptions":{}}},"id":2893,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"34996:11:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"functionReturnParameters":2870,"id":2894,"nodeType":"Return","src":"34989:18:11"}]},"documentation":{"id":2864,"nodeType":"StructuredDocumentation","src":"34465:340:11","text":" @dev Returns the downcasted int8 from int256, reverting on\n overflow (when the input is less than smallest int8 or\n greater than largest int8).\n Counterpart to Solidity's `int8` operator.\n Requirements:\n - input must fit into 8 bits\n _Available since v3.1._"},"id":2896,"implemented":true,"kind":"function","modifiers":[],"name":"toInt8","nameLocation":"34819:6:11","nodeType":"FunctionDefinition","parameters":{"id":2867,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2866,"mutability":"mutable","name":"value","nameLocation":"34833:5:11","nodeType":"VariableDeclaration","scope":2896,"src":"34826:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2865,"name":"int256","nodeType":"ElementaryTypeName","src":"34826:6:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"34825:14:11"},"returnParameters":{"id":2870,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2869,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2896,"src":"34863:4:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"},"typeName":{"id":2868,"name":"int8","nodeType":"ElementaryTypeName","src":"34863:4:11","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"visibility":"internal"}],"src":"34862:6:11"},"scope":2925,"src":"34810:204:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2923,"nodeType":"Block","src":"35292:233:11","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2914,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2905,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2899,"src":"35409:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"arguments":[{"expression":{"arguments":[{"id":2910,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"35431:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":2909,"name":"int256","nodeType":"ElementaryTypeName","src":"35431:6:11","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"}],"id":2908,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"35426:4:11","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":2911,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"35426:12:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_int256","typeString":"type(int256)"}},"id":2912,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"35426:16:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":2907,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"35418:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":2906,"name":"uint256","nodeType":"ElementaryTypeName","src":"35418:7:11","typeDescriptions":{}}},"id":2913,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"35418:25:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"35409:34:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e20616e20696e74323536","id":2915,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"35445:42:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_d70dcf21692b3c91b4c5fbb89ed57f464aa42efbe5b0ea96c4acb7c080144227","typeString":"literal_string \"SafeCast: value doesn't fit in an int256\""},"value":"SafeCast: value doesn't fit in an int256"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_d70dcf21692b3c91b4c5fbb89ed57f464aa42efbe5b0ea96c4acb7c080144227","typeString":"literal_string \"SafeCast: value doesn't fit in an int256\""}],"id":2904,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"35401:7:11","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2916,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"35401:87:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2917,"nodeType":"ExpressionStatement","src":"35401:87:11"},{"expression":{"arguments":[{"id":2920,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2899,"src":"35512:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2919,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"35505:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":2918,"name":"int256","nodeType":"ElementaryTypeName","src":"35505:6:11","typeDescriptions":{}}},"id":2921,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"35505:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":2903,"id":2922,"nodeType":"Return","src":"35498:20:11"}]},"documentation":{"id":2897,"nodeType":"StructuredDocumentation","src":"35020:203:11","text":" @dev Converts an unsigned uint256 into a signed int256.\n Requirements:\n - input must be less than or equal to maxInt256.\n _Available since v3.0._"},"id":2924,"implemented":true,"kind":"function","modifiers":[],"name":"toInt256","nameLocation":"35237:8:11","nodeType":"FunctionDefinition","parameters":{"id":2900,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2899,"mutability":"mutable","name":"value","nameLocation":"35254:5:11","nodeType":"VariableDeclaration","scope":2924,"src":"35246:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2898,"name":"uint256","nodeType":"ElementaryTypeName","src":"35246:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"35245:15:11"},"returnParameters":{"id":2903,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2902,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2924,"src":"35284:6:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2901,"name":"int256","nodeType":"ElementaryTypeName","src":"35284:6:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"35283:8:11"},"scope":2925,"src":"35228:297:11","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":2926,"src":"842:34685:11"}],"src":"107:35421:11"},"id":11},"contracts/feeds/IPriceFeedProvider.sol":{"ast":{"absolutePath":"contracts/feeds/IPriceFeedProvider.sol","exportedSymbols":{"IPriceFeedProvider":[2971]},"id":2972,"license":"GPL-3.0-or-later","nodeType":"SourceUnit","nodes":[{"id":2927,"literals":["solidity",">=","0.8",".0"],"nodeType":"PragmaDirective","src":"688:24:12"},{"abstract":false,"baseContracts":[],"contractDependencies":[],"contractKind":"interface","documentation":{"id":2928,"nodeType":"StructuredDocumentation","src":"714:115:12","text":" @title IPriceFeedProvider\n @dev Contract providing price feed references for (base, quote) token pairs"},"fullyImplemented":false,"id":2971,"linearizedBaseContracts":[2971],"name":"IPriceFeedProvider","nameLocation":"840:18:12","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":2929,"nodeType":"StructuredDocumentation","src":"865:85:12","text":" @dev Emitted every time a price feed is set for (base, quote) pair"},"id":2937,"name":"PriceFeedSet","nameLocation":"961:12:12","nodeType":"EventDefinition","parameters":{"id":2936,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2931,"indexed":true,"mutability":"mutable","name":"base","nameLocation":"990:4:12","nodeType":"VariableDeclaration","scope":2937,"src":"974:20:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2930,"name":"address","nodeType":"ElementaryTypeName","src":"974:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2933,"indexed":true,"mutability":"mutable","name":"quote","nameLocation":"1012:5:12","nodeType":"VariableDeclaration","scope":2937,"src":"996:21:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2932,"name":"address","nodeType":"ElementaryTypeName","src":"996:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2935,"indexed":false,"mutability":"mutable","name":"feed","nameLocation":"1027:4:12","nodeType":"VariableDeclaration","scope":2937,"src":"1019:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2934,"name":"address","nodeType":"ElementaryTypeName","src":"1019:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"973:59:12"},"src":"955:78:12"},{"documentation":{"id":2938,"nodeType":"StructuredDocumentation","src":"1039:215:12","text":" @dev Tells the price feed address for (base, quote) pair. It returns the zero address if there is no one set.\n @param base Token to be rated\n @param quote Token used for the price rate"},"functionSelector":"9f0514ad","id":2947,"implemented":false,"kind":"function","modifiers":[],"name":"getPriceFeed","nameLocation":"1268:12:12","nodeType":"FunctionDefinition","parameters":{"id":2943,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2940,"mutability":"mutable","name":"base","nameLocation":"1289:4:12","nodeType":"VariableDeclaration","scope":2947,"src":"1281:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2939,"name":"address","nodeType":"ElementaryTypeName","src":"1281:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2942,"mutability":"mutable","name":"quote","nameLocation":"1303:5:12","nodeType":"VariableDeclaration","scope":2947,"src":"1295:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2941,"name":"address","nodeType":"ElementaryTypeName","src":"1295:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1280:29:12"},"returnParameters":{"id":2946,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2945,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2947,"src":"1333:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2944,"name":"address","nodeType":"ElementaryTypeName","src":"1333:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1332:9:12"},"scope":2971,"src":"1259:83:12","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":2948,"nodeType":"StructuredDocumentation","src":"1348:166:12","text":" @dev Sets a of price feed\n @param base Token base to be set\n @param quote Token quote to be set\n @param feed Price feed to be set"},"functionSelector":"67a1d5ab","id":2957,"implemented":false,"kind":"function","modifiers":[],"name":"setPriceFeed","nameLocation":"1528:12:12","nodeType":"FunctionDefinition","parameters":{"id":2955,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2950,"mutability":"mutable","name":"base","nameLocation":"1549:4:12","nodeType":"VariableDeclaration","scope":2957,"src":"1541:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2949,"name":"address","nodeType":"ElementaryTypeName","src":"1541:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2952,"mutability":"mutable","name":"quote","nameLocation":"1563:5:12","nodeType":"VariableDeclaration","scope":2957,"src":"1555:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2951,"name":"address","nodeType":"ElementaryTypeName","src":"1555:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2954,"mutability":"mutable","name":"feed","nameLocation":"1578:4:12","nodeType":"VariableDeclaration","scope":2957,"src":"1570:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2953,"name":"address","nodeType":"ElementaryTypeName","src":"1570:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1540:43:12"},"returnParameters":{"id":2956,"nodeType":"ParameterList","parameters":[],"src":"1592:0:12"},"scope":2971,"src":"1519:74:12","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":2958,"nodeType":"StructuredDocumentation","src":"1599:202:12","text":" @dev Sets a list of price feeds\n @param bases List of token bases to be set\n @param quotes List of token quotes to be set\n @param feeds List of price feeds to be set"},"functionSelector":"4ed31090","id":2970,"implemented":false,"kind":"function","modifiers":[],"name":"setPriceFeeds","nameLocation":"1815:13:12","nodeType":"FunctionDefinition","parameters":{"id":2968,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2961,"mutability":"mutable","name":"bases","nameLocation":"1846:5:12","nodeType":"VariableDeclaration","scope":2970,"src":"1829:22:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":2959,"name":"address","nodeType":"ElementaryTypeName","src":"1829:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2960,"nodeType":"ArrayTypeName","src":"1829:9:12","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":2964,"mutability":"mutable","name":"quotes","nameLocation":"1870:6:12","nodeType":"VariableDeclaration","scope":2970,"src":"1853:23:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":2962,"name":"address","nodeType":"ElementaryTypeName","src":"1853:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2963,"nodeType":"ArrayTypeName","src":"1853:9:12","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":2967,"mutability":"mutable","name":"feeds","nameLocation":"1895:5:12","nodeType":"VariableDeclaration","scope":2970,"src":"1878:22:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":2965,"name":"address","nodeType":"ElementaryTypeName","src":"1878:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2966,"nodeType":"ArrayTypeName","src":"1878:9:12","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"1828:73:12"},"returnParameters":{"id":2969,"nodeType":"ParameterList","parameters":[],"src":"1910:0:12"},"scope":2971,"src":"1806:105:12","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":2972,"src":"830:1083:12"}],"src":"688:1226:12"},"id":12},"contracts/oracle/IPriceOracle.sol":{"ast":{"absolutePath":"contracts/oracle/IPriceOracle.sol","exportedSymbols":{"IImplementation":[464],"IPriceOracle":[2990]},"id":2991,"license":"GPL-3.0-or-later","nodeType":"SourceUnit","nodes":[{"id":2973,"literals":["solidity",">=","0.8",".0"],"nodeType":"PragmaDirective","src":"688:24:13"},{"absolutePath":"@mimic-fi/v2-registry/contracts/implementations/IImplementation.sol","file":"@mimic-fi/v2-registry/contracts/implementations/IImplementation.sol","id":2974,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2991,"sourceUnit":465,"src":"714:77:13","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":2976,"name":"IImplementation","nodeType":"IdentifierPath","referencedDeclaration":464,"src":"999:15:13"},"id":2977,"nodeType":"InheritanceSpecifier","src":"999:15:13"}],"contractDependencies":[464],"contractKind":"interface","documentation":{"id":2975,"nodeType":"StructuredDocumentation","src":"793:179:13","text":" @title IPriceOracle\n @dev Oracle that interfaces with external feeds to provide quotes for tokens based on any other token.\n It must support also `IImplementation`."},"fullyImplemented":false,"id":2990,"linearizedBaseContracts":[2990,464],"name":"IPriceOracle","nameLocation":"983:12:13","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":2978,"nodeType":"StructuredDocumentation","src":"1021:683:13","text":" @dev Tells the price of a token (base) in a given quote. The response is expressed using the corresponding\n number of decimals so that when performing a fixed point product of it by a `base` amount it results in\n a value expressed in `quote` decimals. For example, if `base` is ETH and `quote` is USDC, then the returned\n value is expected to be expressed using 6 decimals:\n FixedPoint.mul(X[ETH], price[USDC/ETH]) = FixedPoint.mul(X[18], price[6]) = X * price [6]\n @param provider Contract providing the price feeds to use by the oracle\n @param base Token to rate\n @param quote Token used for the price rate"},"functionSelector":"7100d05c","id":2989,"implemented":false,"kind":"function","modifiers":[],"name":"getPrice","nameLocation":"1718:8:13","nodeType":"FunctionDefinition","parameters":{"id":2985,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2980,"mutability":"mutable","name":"provider","nameLocation":"1735:8:13","nodeType":"VariableDeclaration","scope":2989,"src":"1727:16:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2979,"name":"address","nodeType":"ElementaryTypeName","src":"1727:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2982,"mutability":"mutable","name":"base","nameLocation":"1753:4:13","nodeType":"VariableDeclaration","scope":2989,"src":"1745:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2981,"name":"address","nodeType":"ElementaryTypeName","src":"1745:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2984,"mutability":"mutable","name":"quote","nameLocation":"1767:5:13","nodeType":"VariableDeclaration","scope":2989,"src":"1759:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2983,"name":"address","nodeType":"ElementaryTypeName","src":"1759:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1726:47:13"},"returnParameters":{"id":2988,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2987,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2989,"src":"1797:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2986,"name":"uint256","nodeType":"ElementaryTypeName","src":"1797:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1796:9:13"},"scope":2990,"src":"1709:97:13","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":2991,"src":"973:835:13"}],"src":"688:1121:13"},"id":13},"contracts/oracle/PriceOracle.sol":{"ast":{"absolutePath":"contracts/oracle/PriceOracle.sol","exportedSymbols":{"Address":[1074],"AggregatorV3Interface":[45],"BaseImplementation":[448],"FixedPoint":[272],"IAuthorizer":[89],"IERC20":[754],"IERC20Metadata":[779],"IImplementation":[464],"IPriceFeedProvider":[2971],"IPriceOracle":[2990],"IRegistry":[525],"Initializable":[676],"PriceOracle":[3378],"SafeCast":[2925],"UncheckedMath":[356]},"id":3379,"license":"GPL-3.0-or-later","nodeType":"SourceUnit","nodes":[{"id":2992,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"688:23:14"},{"absolutePath":"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol","file":"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol","id":2993,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3379,"sourceUnit":46,"src":"713:76:14","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol","file":"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol","id":2994,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3379,"sourceUnit":780,"src":"790:75:14","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/math/SafeCast.sol","file":"@openzeppelin/contracts/utils/math/SafeCast.sol","id":2995,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3379,"sourceUnit":2926,"src":"866:57:14","symbolAliases":[],"unitAlias":""},{"absolutePath":"@mimic-fi/v2-helpers/contracts/math/FixedPoint.sol","file":"@mimic-fi/v2-helpers/contracts/math/FixedPoint.sol","id":2996,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3379,"sourceUnit":273,"src":"925:60:14","symbolAliases":[],"unitAlias":""},{"absolutePath":"@mimic-fi/v2-helpers/contracts/math/UncheckedMath.sol","file":"@mimic-fi/v2-helpers/contracts/math/UncheckedMath.sol","id":2997,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3379,"sourceUnit":357,"src":"986:63:14","symbolAliases":[],"unitAlias":""},{"absolutePath":"@mimic-fi/v2-registry/contracts/implementations/BaseImplementation.sol","file":"@mimic-fi/v2-registry/contracts/implementations/BaseImplementation.sol","id":2998,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3379,"sourceUnit":449,"src":"1050:80:14","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/oracle/IPriceOracle.sol","file":"./IPriceOracle.sol","id":2999,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3379,"sourceUnit":2991,"src":"1132:28:14","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/feeds/IPriceFeedProvider.sol","file":"../feeds/IPriceFeedProvider.sol","id":3000,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3379,"sourceUnit":2972,"src":"1161:41:14","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":3002,"name":"IPriceOracle","nodeType":"IdentifierPath","referencedDeclaration":2990,"src":"2128:12:14"},"id":3003,"nodeType":"InheritanceSpecifier","src":"2128:12:14"},{"baseName":{"id":3004,"name":"BaseImplementation","nodeType":"IdentifierPath","referencedDeclaration":448,"src":"2142:18:14"},"id":3005,"nodeType":"InheritanceSpecifier","src":"2142:18:14"}],"contractDependencies":[448,464,2990],"contractKind":"contract","documentation":{"id":3001,"nodeType":"StructuredDocumentation","src":"1204:899:14","text":" @title PriceOracle\n @dev Oracle that interfaces with external feeds to provide quotes for tokens based on any other token.\n This Price Oracle only operates with ERC20 tokens, it does not allow querying quotes for any other denomination.\n Additionally, it only supports external feeds that implement ChainLink's proposed `AggregatorV3Interface` interface.\n It inherits from BaseImplementation which means it's implementation can be used directly from the Mimic Registry,\n it does not require initialization.\n IMPORTANT! As many other implementations in this repo, this contract is intended to be used as a LIBRARY, not\n a contract. Due to limitations of the Solidity compiler, it's not possible to work with immutable variables in\n libraries yet. Therefore, we are relying on contracts without storage variables so they can be safely\n delegate-called if desired."},"fullyImplemented":true,"id":3378,"linearizedBaseContracts":[3378,448,2990,464],"name":"PriceOracle","nameLocation":"2113:11:14","nodeType":"ContractDefinition","nodes":[{"id":3008,"libraryName":{"id":3006,"name":"FixedPoint","nodeType":"IdentifierPath","referencedDeclaration":272,"src":"2173:10:14"},"nodeType":"UsingForDirective","src":"2167:29:14","typeName":{"id":3007,"name":"uint256","nodeType":"ElementaryTypeName","src":"2188:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},{"id":3011,"libraryName":{"id":3009,"name":"UncheckedMath","nodeType":"IdentifierPath","referencedDeclaration":356,"src":"2207:13:14"},"nodeType":"UsingForDirective","src":"2201:32:14","typeName":{"id":3010,"name":"uint256","nodeType":"ElementaryTypeName","src":"2225:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},{"baseFunctions":[457],"constant":true,"functionSelector":"44ba1fca","id":3017,"mutability":"constant","name":"NAMESPACE","nameLocation":"2354:9:14","nodeType":"VariableDeclaration","overrides":{"id":3013,"nodeType":"OverrideSpecifier","overrides":[],"src":"2345:8:14"},"scope":3378,"src":"2321:70:14","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3012,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2321:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"arguments":[{"hexValue":"50524943455f4f5241434c45","id":3015,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2376:14:14","typeDescriptions":{"typeIdentifier":"t_stringliteral_dd24a0f121e5ab7c3e97c63eaaf859e0b46792c3e0edfd86e2b3ad50f63011d8","typeString":"literal_string \"PRICE_ORACLE\""},"value":"PRICE_ORACLE"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_dd24a0f121e5ab7c3e97c63eaaf859e0b46792c3e0edfd86e2b3ad50f63011d8","typeString":"literal_string \"PRICE_ORACLE\""}],"id":3014,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"2366:9:14","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":3016,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2366:25:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"public"},{"constant":true,"id":3020,"mutability":"constant","name":"FP_DECIMALS","nameLocation":"2485:11:14","nodeType":"VariableDeclaration","scope":3378,"src":"2460:41:14","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3018,"name":"uint256","nodeType":"ElementaryTypeName","src":"2460:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"3138","id":3019,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2499:2:14","typeDescriptions":{"typeIdentifier":"t_rational_18_by_1","typeString":"int_const 18"},"value":"18"},"visibility":"private"},{"constant":true,"id":3023,"mutability":"constant","name":"INVERSE_FEED_MAX_DECIMALS","nameLocation":"2623:25:14","nodeType":"VariableDeclaration","scope":3378,"src":"2598:55:14","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3021,"name":"uint256","nodeType":"ElementaryTypeName","src":"2598:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"3336","id":3022,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2651:2:14","typeDescriptions":{"typeIdentifier":"t_rational_36_by_1","typeString":"int_const 36"},"value":"36"},"visibility":"private"},{"constant":false,"functionSelector":"d77fe1cd","id":3025,"mutability":"immutable","name":"pivot","nameLocation":"2788:5:14","nodeType":"VariableDeclaration","scope":3378,"src":"2763:30:14","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3024,"name":"address","nodeType":"ElementaryTypeName","src":"2763:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"public"},{"body":{"id":3040,"nodeType":"Block","src":"3148:31:14","statements":[{"expression":{"id":3038,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3036,"name":"pivot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3025,"src":"3158:5:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3037,"name":"_pivot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3028,"src":"3166:6:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3158:14:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3039,"nodeType":"ExpressionStatement","src":"3158:14:14"}]},"documentation":{"id":3026,"nodeType":"StructuredDocumentation","src":"2800:266:14","text":" @dev Creates a new Price Oracle implementation with references that should be shared among all implementations\n @param _pivot Address of the token to be used as the pivot\n @param _registry Address of the Mimic Registry to be referenced"},"id":3041,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[{"id":3033,"name":"_registry","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3030,"src":"3137:9:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":3034,"modifierName":{"id":3032,"name":"BaseImplementation","nodeType":"IdentifierPath","referencedDeclaration":448,"src":"3118:18:14"},"nodeType":"ModifierInvocation","src":"3118:29:14"}],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":3031,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3028,"mutability":"mutable","name":"_pivot","nameLocation":"3091:6:14","nodeType":"VariableDeclaration","scope":3041,"src":"3083:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3027,"name":"address","nodeType":"ElementaryTypeName","src":"3083:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3030,"mutability":"mutable","name":"_registry","nameLocation":"3107:9:14","nodeType":"VariableDeclaration","scope":3041,"src":"3099:17:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3029,"name":"address","nodeType":"ElementaryTypeName","src":"3099:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3082:35:14"},"returnParameters":{"id":3035,"nodeType":"ParameterList","parameters":[],"src":"3148:0:14"},"scope":3378,"src":"3071:108:14","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"baseFunctions":[2989],"body":{"id":3115,"nodeType":"Block","src":"3723:811:14","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":3056,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3054,"name":"base","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3046,"src":"3737:4:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":3055,"name":"quote","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3048,"src":"3745:5:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3737:13:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3060,"nodeType":"IfStatement","src":"3733:40:14","trueBody":{"expression":{"expression":{"id":3057,"name":"FixedPoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":272,"src":"3759:10:14","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_FixedPoint_$272_$","typeString":"type(library FixedPoint)"}},"id":3058,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"ONE","nodeType":"MemberAccess","referencedDeclaration":95,"src":"3759:14:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3053,"id":3059,"nodeType":"Return","src":"3752:21:14"}},{"assignments":[3062],"declarations":[{"constant":false,"id":3062,"mutability":"mutable","name":"baseDecimals","nameLocation":"3873:12:14","nodeType":"VariableDeclaration","scope":3115,"src":"3865:20:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3061,"name":"uint256","nodeType":"ElementaryTypeName","src":"3865:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3068,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"arguments":[{"id":3064,"name":"base","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3046,"src":"3903:4:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3063,"name":"IERC20Metadata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":779,"src":"3888:14:14","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20Metadata_$779_$","typeString":"type(contract IERC20Metadata)"}},"id":3065,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3888:20:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20Metadata_$779","typeString":"contract IERC20Metadata"}},"id":3066,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"decimals","nodeType":"MemberAccess","referencedDeclaration":778,"src":"3888:29:14","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_uint8_$","typeString":"function () view external returns (uint8)"}},"id":3067,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3888:31:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"VariableDeclarationStatement","src":"3865:54:14"},{"assignments":[3070],"declarations":[{"constant":false,"id":3070,"mutability":"mutable","name":"quoteDecimals","nameLocation":"3937:13:14","nodeType":"VariableDeclaration","scope":3115,"src":"3929:21:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3069,"name":"uint256","nodeType":"ElementaryTypeName","src":"3929:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3076,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"arguments":[{"id":3072,"name":"quote","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3048,"src":"3968:5:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3071,"name":"IERC20Metadata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":779,"src":"3953:14:14","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20Metadata_$779_$","typeString":"type(contract IERC20Metadata)"}},"id":3073,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3953:21:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20Metadata_$779","typeString":"contract IERC20Metadata"}},"id":3074,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"decimals","nodeType":"MemberAccess","referencedDeclaration":778,"src":"3953:30:14","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_uint8_$","typeString":"function () view external returns (uint8)"}},"id":3075,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3953:32:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"VariableDeclarationStatement","src":"3929:56:14"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3083,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3078,"name":"baseDecimals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3062,"src":"4107:12:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"arguments":[{"id":3081,"name":"FP_DECIMALS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3020,"src":"4150:11:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3079,"name":"quoteDecimals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3070,"src":"4123:13:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3080,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"uncheckedAdd","nodeType":"MemberAccess","referencedDeclaration":291,"src":"4123:26:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":3082,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4123:39:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4107:55:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"424153455f444543494d414c535f544f4f5f424947","id":3084,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4164:23:14","typeDescriptions":{"typeIdentifier":"t_stringliteral_b46f496c2d751f2a4e8069b27d1e80f3d8b7908ddc425c0833bebc662d3a77b2","typeString":"literal_string \"BASE_DECIMALS_TOO_BIG\""},"value":"BASE_DECIMALS_TOO_BIG"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_b46f496c2d751f2a4e8069b27d1e80f3d8b7908ddc425c0833bebc662d3a77b2","typeString":"literal_string \"BASE_DECIMALS_TOO_BIG\""}],"id":3077,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4099:7:14","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3085,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4099:89:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3086,"nodeType":"ExpressionStatement","src":"4099:89:14"},{"assignments":[3088],"declarations":[{"constant":false,"id":3088,"mutability":"mutable","name":"resultDecimals","nameLocation":"4285:14:14","nodeType":"VariableDeclaration","scope":3115,"src":"4277:22:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3087,"name":"uint256","nodeType":"ElementaryTypeName","src":"4277:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3096,"initialValue":{"arguments":[{"id":3094,"name":"baseDecimals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3062,"src":"4355:12:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"id":3091,"name":"FP_DECIMALS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3020,"src":"4329:11:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3089,"name":"quoteDecimals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3070,"src":"4302:13:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3090,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"uncheckedAdd","nodeType":"MemberAccess","referencedDeclaration":291,"src":"4302:26:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":3092,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4302:39:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3093,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"uncheckedSub","nodeType":"MemberAccess","referencedDeclaration":307,"src":"4302:52:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":3095,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4302:66:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"4277:91:14"},{"assignments":[3098,3100],"declarations":[{"constant":false,"id":3098,"mutability":"mutable","name":"price","nameLocation":"4387:5:14","nodeType":"VariableDeclaration","scope":3115,"src":"4379:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3097,"name":"uint256","nodeType":"ElementaryTypeName","src":"4379:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3100,"mutability":"mutable","name":"decimals","nameLocation":"4402:8:14","nodeType":"VariableDeclaration","scope":3115,"src":"4394:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3099,"name":"uint256","nodeType":"ElementaryTypeName","src":"4394:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3108,"initialValue":{"arguments":[{"arguments":[{"id":3103,"name":"provider","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3044,"src":"4443:8:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3102,"name":"IPriceFeedProvider","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2971,"src":"4424:18:14","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IPriceFeedProvider_$2971_$","typeString":"type(contract IPriceFeedProvider)"}},"id":3104,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4424:28:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IPriceFeedProvider_$2971","typeString":"contract IPriceFeedProvider"}},{"id":3105,"name":"base","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3046,"src":"4454:4:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3106,"name":"quote","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3048,"src":"4460:5:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IPriceFeedProvider_$2971","typeString":"contract IPriceFeedProvider"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":3101,"name":"_getPrice","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3209,"src":"4414:9:14","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_contract$_IPriceFeedProvider_$2971_$_t_address_$_t_address_$returns$_t_uint256_$_t_uint256_$","typeString":"function (contract IPriceFeedProvider,address,address) view returns (uint256,uint256)"}},"id":3107,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4414:52:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"4378:88:14"},{"expression":{"arguments":[{"id":3110,"name":"price","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3098,"src":"4495:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3111,"name":"decimals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3100,"src":"4502:8:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3112,"name":"resultDecimals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3088,"src":"4512:14:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3109,"name":"_scalePrice","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3377,"src":"4483:11:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":3113,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4483:44:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3053,"id":3114,"nodeType":"Return","src":"4476:51:14"}]},"documentation":{"id":3042,"nodeType":"StructuredDocumentation","src":"3185:427:14","text":" @dev Tells the price of a token (base) in a given quote. The response is expressed using the corresponding\n number of decimals so that when performing a fixed point product of it by a `base` amount it results in\n a value expressed in `quote` decimals.\n @param provider Provider to fetch the price feeds from\n @param base Token to rate\n @param quote Token used for the price rate"},"functionSelector":"7100d05c","id":3116,"implemented":true,"kind":"function","modifiers":[],"name":"getPrice","nameLocation":"3626:8:14","nodeType":"FunctionDefinition","overrides":{"id":3050,"nodeType":"OverrideSpecifier","overrides":[],"src":"3696:8:14"},"parameters":{"id":3049,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3044,"mutability":"mutable","name":"provider","nameLocation":"3643:8:14","nodeType":"VariableDeclaration","scope":3116,"src":"3635:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3043,"name":"address","nodeType":"ElementaryTypeName","src":"3635:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3046,"mutability":"mutable","name":"base","nameLocation":"3661:4:14","nodeType":"VariableDeclaration","scope":3116,"src":"3653:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3045,"name":"address","nodeType":"ElementaryTypeName","src":"3653:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3048,"mutability":"mutable","name":"quote","nameLocation":"3675:5:14","nodeType":"VariableDeclaration","scope":3116,"src":"3667:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3047,"name":"address","nodeType":"ElementaryTypeName","src":"3667:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3634:47:14"},"returnParameters":{"id":3053,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3052,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3116,"src":"3714:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3051,"name":"uint256","nodeType":"ElementaryTypeName","src":"3714:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3713:9:14"},"scope":3378,"src":"3617:917:14","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":3208,"nodeType":"Block","src":"5049:544:14","statements":[{"assignments":[3132],"declarations":[{"constant":false,"id":3132,"mutability":"mutable","name":"feed","nameLocation":"5067:4:14","nodeType":"VariableDeclaration","scope":3208,"src":"5059:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3131,"name":"address","nodeType":"ElementaryTypeName","src":"5059:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":3138,"initialValue":{"arguments":[{"id":3135,"name":"base","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3122,"src":"5096:4:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3136,"name":"quote","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3124,"src":"5102:5:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":3133,"name":"provider","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3120,"src":"5074:8:14","typeDescriptions":{"typeIdentifier":"t_contract$_IPriceFeedProvider_$2971","typeString":"contract IPriceFeedProvider"}},"id":3134,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"getPriceFeed","nodeType":"MemberAccess","referencedDeclaration":2947,"src":"5074:21:14","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$_t_address_$returns$_t_address_$","typeString":"function (address,address) view external returns (address)"}},"id":3137,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5074:34:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"5059:49:14"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":3144,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3139,"name":"feed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3132,"src":"5122:4:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":3142,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5138:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3141,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5130:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3140,"name":"address","nodeType":"ElementaryTypeName","src":"5130:7:14","typeDescriptions":{}}},"id":3143,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5130:10:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5122:18:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3149,"nodeType":"IfStatement","src":"5118:49:14","trueBody":{"expression":{"arguments":[{"id":3146,"name":"feed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3132,"src":"5162:4:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3145,"name":"_getFeedData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3243,"src":"5149:12:14","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_uint256_$_t_uint256_$","typeString":"function (address) view returns (uint256,uint256)"}},"id":3147,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5149:18:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"functionReturnParameters":3130,"id":3148,"nodeType":"Return","src":"5142:25:14"}},{"assignments":[3151],"declarations":[{"constant":false,"id":3151,"mutability":"mutable","name":"inverseFeed","nameLocation":"5186:11:14","nodeType":"VariableDeclaration","scope":3208,"src":"5178:19:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3150,"name":"address","nodeType":"ElementaryTypeName","src":"5178:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":3157,"initialValue":{"arguments":[{"id":3154,"name":"quote","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3124,"src":"5222:5:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3155,"name":"base","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3122,"src":"5229:4:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":3152,"name":"provider","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3120,"src":"5200:8:14","typeDescriptions":{"typeIdentifier":"t_contract$_IPriceFeedProvider_$2971","typeString":"contract IPriceFeedProvider"}},"id":3153,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"getPriceFeed","nodeType":"MemberAccess","referencedDeclaration":2947,"src":"5200:21:14","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$_t_address_$returns$_t_address_$","typeString":"function (address,address) view external returns (address)"}},"id":3156,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5200:34:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"5178:56:14"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":3163,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3158,"name":"inverseFeed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3151,"src":"5248:11:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":3161,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5271:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3160,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5263:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3159,"name":"address","nodeType":"ElementaryTypeName","src":"5263:7:14","typeDescriptions":{}}},"id":3162,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5263:10:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5248:25:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3168,"nodeType":"IfStatement","src":"5244:67:14","trueBody":{"expression":{"arguments":[{"id":3165,"name":"inverseFeed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3151,"src":"5299:11:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3164,"name":"_getInversePrice","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3284,"src":"5282:16:14","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_uint256_$_t_uint256_$","typeString":"function (address) view returns (uint256,uint256)"}},"id":3166,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5282:29:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"functionReturnParameters":3130,"id":3167,"nodeType":"Return","src":"5275:36:14"}},{"assignments":[3170],"declarations":[{"constant":false,"id":3170,"mutability":"mutable","name":"baseFeed","nameLocation":"5330:8:14","nodeType":"VariableDeclaration","scope":3208,"src":"5322:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3169,"name":"address","nodeType":"ElementaryTypeName","src":"5322:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":3176,"initialValue":{"arguments":[{"id":3173,"name":"base","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3122,"src":"5363:4:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3174,"name":"pivot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3025,"src":"5369:5:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":3171,"name":"provider","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3120,"src":"5341:8:14","typeDescriptions":{"typeIdentifier":"t_contract$_IPriceFeedProvider_$2971","typeString":"contract IPriceFeedProvider"}},"id":3172,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"getPriceFeed","nodeType":"MemberAccess","referencedDeclaration":2947,"src":"5341:21:14","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$_t_address_$returns$_t_address_$","typeString":"function (address,address) view external returns (address)"}},"id":3175,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5341:34:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"5322:53:14"},{"assignments":[3178],"declarations":[{"constant":false,"id":3178,"mutability":"mutable","name":"quoteFeed","nameLocation":"5393:9:14","nodeType":"VariableDeclaration","scope":3208,"src":"5385:17:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3177,"name":"address","nodeType":"ElementaryTypeName","src":"5385:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":3184,"initialValue":{"arguments":[{"id":3181,"name":"quote","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3124,"src":"5427:5:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3182,"name":"pivot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3025,"src":"5434:5:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":3179,"name":"provider","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3120,"src":"5405:8:14","typeDescriptions":{"typeIdentifier":"t_contract$_IPriceFeedProvider_$2971","typeString":"contract IPriceFeedProvider"}},"id":3180,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"getPriceFeed","nodeType":"MemberAccess","referencedDeclaration":2947,"src":"5405:21:14","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$_t_address_$returns$_t_address_$","typeString":"function (address,address) view external returns (address)"}},"id":3183,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5405:35:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"5385:55:14"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3197,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":3190,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3185,"name":"baseFeed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3170,"src":"5454:8:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":3188,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5474:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3187,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5466:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3186,"name":"address","nodeType":"ElementaryTypeName","src":"5466:7:14","typeDescriptions":{}}},"id":3189,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5466:10:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5454:22:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":3196,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3191,"name":"quoteFeed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3178,"src":"5480:9:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":3194,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5501:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3193,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5493:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3192,"name":"address","nodeType":"ElementaryTypeName","src":"5493:7:14","typeDescriptions":{}}},"id":3195,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5493:10:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5480:23:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"5454:49:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3203,"nodeType":"IfStatement","src":"5450:97:14","trueBody":{"expression":{"arguments":[{"id":3199,"name":"baseFeed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3170,"src":"5527:8:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3200,"name":"quoteFeed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3178,"src":"5537:9:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":3198,"name":"_getPivotPrice","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3339,"src":"5512:14:14","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$_t_uint256_$","typeString":"function (address,address) view returns (uint256,uint256)"}},"id":3201,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5512:35:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"functionReturnParameters":3130,"id":3202,"nodeType":"Return","src":"5505:42:14"}},{"expression":{"arguments":[{"hexValue":"4d495353494e475f50524943455f46454544","id":3205,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5565:20:14","typeDescriptions":{"typeIdentifier":"t_stringliteral_8a6c0adeacf05505b44a89a22681e180f480082d38ae2f68f88ba0893b3f86c4","typeString":"literal_string \"MISSING_PRICE_FEED\""},"value":"MISSING_PRICE_FEED"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_8a6c0adeacf05505b44a89a22681e180f480082d38ae2f68f88ba0893b3f86c4","typeString":"literal_string \"MISSING_PRICE_FEED\""}],"id":3204,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[-19,-19],"referencedDeclaration":-19,"src":"5558:6:14","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":3206,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5558:28:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3207,"nodeType":"ExpressionStatement","src":"5558:28:14"}]},"documentation":{"id":3117,"nodeType":"StructuredDocumentation","src":"4540:343:14","text":" @dev Internal function to tell the price of a token (base) in a given quote.\n @param provider Provider to fetch the price feeds from\n @param base Token to rate\n @param quote Token used for the price rate\n @return price Requested price rate\n @return decimals Decimals of the requested price rate"},"id":3209,"implemented":true,"kind":"function","modifiers":[],"name":"_getPrice","nameLocation":"4897:9:14","nodeType":"FunctionDefinition","parameters":{"id":3125,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3120,"mutability":"mutable","name":"provider","nameLocation":"4926:8:14","nodeType":"VariableDeclaration","scope":3209,"src":"4907:27:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IPriceFeedProvider_$2971","typeString":"contract IPriceFeedProvider"},"typeName":{"id":3119,"nodeType":"UserDefinedTypeName","pathNode":{"id":3118,"name":"IPriceFeedProvider","nodeType":"IdentifierPath","referencedDeclaration":2971,"src":"4907:18:14"},"referencedDeclaration":2971,"src":"4907:18:14","typeDescriptions":{"typeIdentifier":"t_contract$_IPriceFeedProvider_$2971","typeString":"contract IPriceFeedProvider"}},"visibility":"internal"},{"constant":false,"id":3122,"mutability":"mutable","name":"base","nameLocation":"4944:4:14","nodeType":"VariableDeclaration","scope":3209,"src":"4936:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3121,"name":"address","nodeType":"ElementaryTypeName","src":"4936:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3124,"mutability":"mutable","name":"quote","nameLocation":"4958:5:14","nodeType":"VariableDeclaration","scope":3209,"src":"4950:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3123,"name":"address","nodeType":"ElementaryTypeName","src":"4950:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4906:58:14"},"returnParameters":{"id":3130,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3127,"mutability":"mutable","name":"price","nameLocation":"5020:5:14","nodeType":"VariableDeclaration","scope":3209,"src":"5012:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3126,"name":"uint256","nodeType":"ElementaryTypeName","src":"5012:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3129,"mutability":"mutable","name":"decimals","nameLocation":"5035:8:14","nodeType":"VariableDeclaration","scope":3209,"src":"5027:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3128,"name":"uint256","nodeType":"ElementaryTypeName","src":"5027:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5011:33:14"},"scope":3378,"src":"4888:705:14","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":3242,"nodeType":"Block","src":"5980:195:14","statements":[{"expression":{"id":3225,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3219,"name":"decimals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3217,"src":"5990:8:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"arguments":[{"id":3221,"name":"feed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3212,"src":"6023:4:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3220,"name":"AggregatorV3Interface","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":45,"src":"6001:21:14","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_AggregatorV3Interface_$45_$","typeString":"type(contract AggregatorV3Interface)"}},"id":3222,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6001:27:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_AggregatorV3Interface_$45","typeString":"contract AggregatorV3Interface"}},"id":3223,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"decimals","nodeType":"MemberAccess","referencedDeclaration":6,"src":"6001:36:14","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_uint8_$","typeString":"function () view external returns (uint8)"}},"id":3224,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6001:38:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"5990:49:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3226,"nodeType":"ExpressionStatement","src":"5990:49:14"},{"assignments":[null,3228,null,null,null],"declarations":[null,{"constant":false,"id":3228,"mutability":"mutable","name":"priceInt","nameLocation":"6059:8:14","nodeType":"VariableDeclaration","scope":3242,"src":"6052:15:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3227,"name":"int256","nodeType":"ElementaryTypeName","src":"6052:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},null,null,null],"id":3234,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"arguments":[{"id":3230,"name":"feed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3212,"src":"6099:4:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3229,"name":"AggregatorV3Interface","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":45,"src":"6077:21:14","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_AggregatorV3Interface_$45_$","typeString":"type(contract AggregatorV3Interface)"}},"id":3231,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6077:27:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_AggregatorV3Interface_$45","typeString":"contract AggregatorV3Interface"}},"id":3232,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"latestRoundData","nodeType":"MemberAccess","referencedDeclaration":44,"src":"6077:43:14","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_uint80_$_t_int256_$_t_uint256_$_t_uint256_$_t_uint80_$","typeString":"function () view external returns (uint80,int256,uint256,uint256,uint80)"}},"id":3233,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6077:45:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint80_$_t_int256_$_t_uint256_$_t_uint256_$_t_uint80_$","typeString":"tuple(uint80,int256,uint256,uint256,uint80)"}},"nodeType":"VariableDeclarationStatement","src":"6049:73:14"},{"expression":{"id":3240,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3235,"name":"price","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3215,"src":"6132:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":3238,"name":"priceInt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3228,"src":"6159:8:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"expression":{"id":3236,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2925,"src":"6140:8:14","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$2925_$","typeString":"type(library SafeCast)"}},"id":3237,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"toUint256","nodeType":"MemberAccess","referencedDeclaration":1873,"src":"6140:18:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_int256_$returns$_t_uint256_$","typeString":"function (int256) pure returns (uint256)"}},"id":3239,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6140:28:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6132:36:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3241,"nodeType":"ExpressionStatement","src":"6132:36:14"}]},"documentation":{"id":3210,"nodeType":"StructuredDocumentation","src":"5599:284:14","text":" @dev Internal function to fetch data from a price feed\n @param feed Address of the price feed to fetch data from. It must support ChainLink's `AggregatorV3Interface`.\n @return price Requested price\n @return decimals Decimals of the requested price"},"id":3243,"implemented":true,"kind":"function","modifiers":[],"name":"_getFeedData","nameLocation":"5897:12:14","nodeType":"FunctionDefinition","parameters":{"id":3213,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3212,"mutability":"mutable","name":"feed","nameLocation":"5918:4:14","nodeType":"VariableDeclaration","scope":3243,"src":"5910:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3211,"name":"address","nodeType":"ElementaryTypeName","src":"5910:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5909:14:14"},"returnParameters":{"id":3218,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3215,"mutability":"mutable","name":"price","nameLocation":"5955:5:14","nodeType":"VariableDeclaration","scope":3243,"src":"5947:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3214,"name":"uint256","nodeType":"ElementaryTypeName","src":"5947:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3217,"mutability":"mutable","name":"decimals","nameLocation":"5970:8:14","nodeType":"VariableDeclaration","scope":3243,"src":"5962:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3216,"name":"uint256","nodeType":"ElementaryTypeName","src":"5962:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5946:33:14"},"scope":3378,"src":"5888:287:14","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":3283,"nodeType":"Block","src":"6533:513:14","statements":[{"assignments":[3254,3256],"declarations":[{"constant":false,"id":3254,"mutability":"mutable","name":"inversePrice","nameLocation":"6552:12:14","nodeType":"VariableDeclaration","scope":3283,"src":"6544:20:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3253,"name":"uint256","nodeType":"ElementaryTypeName","src":"6544:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3256,"mutability":"mutable","name":"inverseFeedDecimals","nameLocation":"6574:19:14","nodeType":"VariableDeclaration","scope":3283,"src":"6566:27:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3255,"name":"uint256","nodeType":"ElementaryTypeName","src":"6566:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3260,"initialValue":{"arguments":[{"id":3258,"name":"inverseFeed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3246,"src":"6610:11:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3257,"name":"_getFeedData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3243,"src":"6597:12:14","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_uint256_$_t_uint256_$","typeString":"function (address) view returns (uint256,uint256)"}},"id":3259,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6597:25:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"6543:79:14"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3264,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3262,"name":"inverseFeedDecimals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3256,"src":"6640:19:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":3263,"name":"INVERSE_FEED_MAX_DECIMALS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3023,"src":"6663:25:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6640:48:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"464545445f444543494d414c535f544f4f5f424947","id":3265,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6690:23:14","typeDescriptions":{"typeIdentifier":"t_stringliteral_cab21dcfbc4e6c212cc45734737c5e1310ee637d1888db1df25253b67fe6e5bc","typeString":"literal_string \"FEED_DECIMALS_TOO_BIG\""},"value":"FEED_DECIMALS_TOO_BIG"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_cab21dcfbc4e6c212cc45734737c5e1310ee637d1888db1df25253b67fe6e5bc","typeString":"literal_string \"FEED_DECIMALS_TOO_BIG\""}],"id":3261,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"6632:7:14","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3266,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6632:82:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3267,"nodeType":"ExpressionStatement","src":"6632:82:14"},{"expression":{"id":3274,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3268,"name":"price","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3249,"src":"6837:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":3272,"name":"inversePrice","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3254,"src":"6868:12:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"expression":{"id":3269,"name":"FixedPoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":272,"src":"6845:10:14","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_FixedPoint_$272_$","typeString":"type(library FixedPoint)"}},"id":3270,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"ONE","nodeType":"MemberAccess","referencedDeclaration":95,"src":"6845:14:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3271,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"divDown","nodeType":"MemberAccess","referencedDeclaration":221,"src":"6845:22:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":3273,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6845:36:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6837:44:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3275,"nodeType":"ExpressionStatement","src":"6837:44:14"},{"expression":{"id":3281,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3276,"name":"decimals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3251,"src":"6969:8:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":3279,"name":"inverseFeedDecimals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3256,"src":"7019:19:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3277,"name":"INVERSE_FEED_MAX_DECIMALS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3023,"src":"6980:25:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3278,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"uncheckedSub","nodeType":"MemberAccess","referencedDeclaration":307,"src":"6980:38:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":3280,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6980:59:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6969:70:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3282,"nodeType":"ExpressionStatement","src":"6969:70:14"}]},"documentation":{"id":3244,"nodeType":"StructuredDocumentation","src":"6181:244:14","text":" @dev Internal function to report a price based on an inverse feed\n @param inverseFeed Price feed of the inverse pair\n @return price Requested price rate\n @return decimals Decimals of the requested price rate"},"id":3284,"implemented":true,"kind":"function","modifiers":[],"name":"_getInversePrice","nameLocation":"6439:16:14","nodeType":"FunctionDefinition","parameters":{"id":3247,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3246,"mutability":"mutable","name":"inverseFeed","nameLocation":"6464:11:14","nodeType":"VariableDeclaration","scope":3284,"src":"6456:19:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3245,"name":"address","nodeType":"ElementaryTypeName","src":"6456:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6455:21:14"},"returnParameters":{"id":3252,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3249,"mutability":"mutable","name":"price","nameLocation":"6508:5:14","nodeType":"VariableDeclaration","scope":3284,"src":"6500:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3248,"name":"uint256","nodeType":"ElementaryTypeName","src":"6500:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3251,"mutability":"mutable","name":"decimals","nameLocation":"6523:8:14","nodeType":"VariableDeclaration","scope":3284,"src":"6515:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3250,"name":"uint256","nodeType":"ElementaryTypeName","src":"6515:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6499:33:14"},"scope":3378,"src":"6430:616:14","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":3338,"nodeType":"Block","src":"7504:770:14","statements":[{"assignments":[3297,3299],"declarations":[{"constant":false,"id":3297,"mutability":"mutable","name":"basePrice","nameLocation":"7523:9:14","nodeType":"VariableDeclaration","scope":3338,"src":"7515:17:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3296,"name":"uint256","nodeType":"ElementaryTypeName","src":"7515:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3299,"mutability":"mutable","name":"baseFeedDecimals","nameLocation":"7542:16:14","nodeType":"VariableDeclaration","scope":3338,"src":"7534:24:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3298,"name":"uint256","nodeType":"ElementaryTypeName","src":"7534:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3303,"initialValue":{"arguments":[{"id":3301,"name":"baseFeed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3287,"src":"7575:8:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3300,"name":"_getFeedData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3243,"src":"7562:12:14","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_uint256_$_t_uint256_$","typeString":"function (address) view returns (uint256,uint256)"}},"id":3302,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7562:22:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"7514:70:14"},{"assignments":[3305,3307],"declarations":[{"constant":false,"id":3305,"mutability":"mutable","name":"quotePrice","nameLocation":"7603:10:14","nodeType":"VariableDeclaration","scope":3338,"src":"7595:18:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3304,"name":"uint256","nodeType":"ElementaryTypeName","src":"7595:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3307,"mutability":"mutable","name":"quoteFeedDecimals","nameLocation":"7623:17:14","nodeType":"VariableDeclaration","scope":3338,"src":"7615:25:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3306,"name":"uint256","nodeType":"ElementaryTypeName","src":"7615:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3311,"initialValue":{"arguments":[{"id":3309,"name":"quoteFeed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3289,"src":"7657:9:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3308,"name":"_getFeedData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3243,"src":"7644:12:14","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_uint256_$_t_uint256_$","typeString":"function (address) view returns (uint256,uint256)"}},"id":3310,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7644:23:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"7594:73:14"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3317,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3313,"name":"quoteFeedDecimals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3307,"src":"7789:17:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3316,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3314,"name":"baseFeedDecimals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3299,"src":"7810:16:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":3315,"name":"FP_DECIMALS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3020,"src":"7829:11:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7810:30:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7789:51:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"51554f54455f464545445f444543494d414c535f544f4f5f424947","id":3318,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7842:29:14","typeDescriptions":{"typeIdentifier":"t_stringliteral_7b4e12a5934c2c0c281891369fdf05fce29180c5a4483ee9b7923d6bbc7bdd72","typeString":"literal_string \"QUOTE_FEED_DECIMALS_TOO_BIG\""},"value":"QUOTE_FEED_DECIMALS_TOO_BIG"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_7b4e12a5934c2c0c281891369fdf05fce29180c5a4483ee9b7923d6bbc7bdd72","typeString":"literal_string \"QUOTE_FEED_DECIMALS_TOO_BIG\""}],"id":3312,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"7781:7:14","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3319,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7781:91:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3320,"nodeType":"ExpressionStatement","src":"7781:91:14"},{"expression":{"id":3326,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3321,"name":"price","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3292,"src":"8057:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":3324,"name":"quotePrice","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3305,"src":"8083:10:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3322,"name":"basePrice","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3297,"src":"8065:9:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3323,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"divDown","nodeType":"MemberAccess","referencedDeclaration":221,"src":"8065:17:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":3325,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8065:29:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8057:37:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3327,"nodeType":"ExpressionStatement","src":"8057:37:14"},{"expression":{"id":3336,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3328,"name":"decimals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3294,"src":"8182:8:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":3334,"name":"quoteFeedDecimals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3307,"src":"8249:17:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"id":3331,"name":"FP_DECIMALS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3020,"src":"8223:11:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3329,"name":"baseFeedDecimals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3299,"src":"8193:16:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3330,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"uncheckedAdd","nodeType":"MemberAccess","referencedDeclaration":291,"src":"8193:29:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":3332,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8193:42:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3333,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"uncheckedSub","nodeType":"MemberAccess","referencedDeclaration":307,"src":"8193:55:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":3335,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8193:74:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8182:85:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3337,"nodeType":"ExpressionStatement","src":"8182:85:14"}]},"documentation":{"id":3285,"nodeType":"StructuredDocumentation","src":"7052:302:14","text":" @dev Internal function to report a price based on two relative price feeds\n @param baseFeed Price feed of the base token\n @param quoteFeed Price feed of the quote token\n @return price Requested price rate\n @return decimals Decimals of the requested price rate"},"id":3339,"implemented":true,"kind":"function","modifiers":[],"name":"_getPivotPrice","nameLocation":"7368:14:14","nodeType":"FunctionDefinition","parameters":{"id":3290,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3287,"mutability":"mutable","name":"baseFeed","nameLocation":"7391:8:14","nodeType":"VariableDeclaration","scope":3339,"src":"7383:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3286,"name":"address","nodeType":"ElementaryTypeName","src":"7383:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3289,"mutability":"mutable","name":"quoteFeed","nameLocation":"7409:9:14","nodeType":"VariableDeclaration","scope":3339,"src":"7401:17:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3288,"name":"address","nodeType":"ElementaryTypeName","src":"7401:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"7382:37:14"},"returnParameters":{"id":3295,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3292,"mutability":"mutable","name":"price","nameLocation":"7475:5:14","nodeType":"VariableDeclaration","scope":3339,"src":"7467:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3291,"name":"uint256","nodeType":"ElementaryTypeName","src":"7467:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3294,"mutability":"mutable","name":"decimals","nameLocation":"7490:8:14","nodeType":"VariableDeclaration","scope":3339,"src":"7482:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3293,"name":"uint256","nodeType":"ElementaryTypeName","src":"7482:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7466:33:14"},"scope":3378,"src":"7359:915:14","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":3376,"nodeType":"Block","src":"8661:221:14","statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3353,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3351,"name":"resultDecimals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3346,"src":"8690:14:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":3352,"name":"priceDecimals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3344,"src":"8708:13:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8690:31:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3372,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3364,"name":"price","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3342,"src":"8818:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3371,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3365,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8826:2:14","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"components":[{"arguments":[{"id":3368,"name":"resultDecimals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3346,"src":"8858:14:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3366,"name":"priceDecimals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3344,"src":"8831:13:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3367,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"uncheckedSub","nodeType":"MemberAccess","referencedDeclaration":307,"src":"8831:26:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":3369,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8831:42:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3370,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"8830:44:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8826:48:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8818:56:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3373,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"8817:58:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3374,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"8690:185:14","trueExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3362,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3354,"name":"price","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3342,"src":"8741:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3361,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3355,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8749:2:14","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"components":[{"arguments":[{"id":3358,"name":"priceDecimals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3344,"src":"8782:13:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3356,"name":"resultDecimals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3346,"src":"8754:14:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3357,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"uncheckedSub","nodeType":"MemberAccess","referencedDeclaration":307,"src":"8754:27:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":3359,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8754:42:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3360,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"8753:44:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8749:48:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8741:56:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3363,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"8740:58:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3350,"id":3375,"nodeType":"Return","src":"8671:204:14"}]},"documentation":{"id":3340,"nodeType":"StructuredDocumentation","src":"8280:261:14","text":" @dev Internal function to upscale or downscale a price rate\n @param price Value to be scaled\n @param priceDecimals Decimals in which `price` is originally represented\n @return resultDecimals Decimals requested for the result"},"id":3377,"implemented":true,"kind":"function","modifiers":[],"name":"_scalePrice","nameLocation":"8555:11:14","nodeType":"FunctionDefinition","parameters":{"id":3347,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3342,"mutability":"mutable","name":"price","nameLocation":"8575:5:14","nodeType":"VariableDeclaration","scope":3377,"src":"8567:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3341,"name":"uint256","nodeType":"ElementaryTypeName","src":"8567:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3344,"mutability":"mutable","name":"priceDecimals","nameLocation":"8590:13:14","nodeType":"VariableDeclaration","scope":3377,"src":"8582:21:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3343,"name":"uint256","nodeType":"ElementaryTypeName","src":"8582:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3346,"mutability":"mutable","name":"resultDecimals","nameLocation":"8613:14:14","nodeType":"VariableDeclaration","scope":3377,"src":"8605:22:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3345,"name":"uint256","nodeType":"ElementaryTypeName","src":"8605:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8566:62:14"},"returnParameters":{"id":3350,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3349,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3377,"src":"8652:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3348,"name":"uint256","nodeType":"ElementaryTypeName","src":"8652:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8651:9:14"},"scope":3378,"src":"8546:336:14","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":3379,"src":"2104:6780:14"}],"src":"688:8197:14"},"id":14}},"contracts":{"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol":{"AggregatorV3Interface":{"abi":[{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"description","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint80","name":"_roundId","type":"uint80"}],"name":"getRoundData","outputs":[{"internalType":"uint80","name":"roundId","type":"uint80"},{"internalType":"int256","name":"answer","type":"int256"},{"internalType":"uint256","name":"startedAt","type":"uint256"},{"internalType":"uint256","name":"updatedAt","type":"uint256"},{"internalType":"uint80","name":"answeredInRound","type":"uint80"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"latestRoundData","outputs":[{"internalType":"uint80","name":"roundId","type":"uint80"},{"internalType":"int256","name":"answer","type":"int256"},{"internalType":"uint256","name":"startedAt","type":"uint256"},{"internalType":"uint256","name":"updatedAt","type":"uint256"},{"internalType":"uint80","name":"answeredInRound","type":"uint80"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"version","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"decimals()":"313ce567","description()":"7284e416","getRoundData(uint80)":"9a6fc8f5","latestRoundData()":"feaf968c","version()":"54fd4d50"}},"metadata":"{\"compiler\":{\"version\":\"0.8.3+commit.8d00100c\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"description\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint80\",\"name\":\"_roundId\",\"type\":\"uint80\"}],\"name\":\"getRoundData\",\"outputs\":[{\"internalType\":\"uint80\",\"name\":\"roundId\",\"type\":\"uint80\"},{\"internalType\":\"int256\",\"name\":\"answer\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"startedAt\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"updatedAt\",\"type\":\"uint256\"},{\"internalType\":\"uint80\",\"name\":\"answeredInRound\",\"type\":\"uint80\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"latestRoundData\",\"outputs\":[{\"internalType\":\"uint80\",\"name\":\"roundId\",\"type\":\"uint80\"},{\"internalType\":\"int256\",\"name\":\"answer\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"startedAt\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"updatedAt\",\"type\":\"uint256\"},{\"internalType\":\"uint80\",\"name\":\"answeredInRound\",\"type\":\"uint80\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"version\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":\"AggregatorV3Interface\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":10000},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":{\"keccak256\":\"0xf2b6c9adb3552254df1445b73563cf014434ff5e78663e9b961b6c059506ceb5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c1f59e0c7334c22fb54288728fc32546bdc9c8133d6db0d60223e3c28f52120\",\"dweb:/ipfs/QmeuxawUVBhMWQJXaEhhnubCTc4Jwn5wYK8gbhq6NjrpfG\"]}},\"version\":1}"}},"@mimic-fi/v2-helpers/contracts/auth/IAuthorizer.sol":{"IAuthorizer":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"who","type":"address"},{"indexed":false,"internalType":"bytes4","name":"what","type":"bytes4"}],"name":"Authorized","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"who","type":"address"},{"indexed":false,"internalType":"bytes4","name":"what","type":"bytes4"}],"name":"Unauthorized","type":"event"},{"inputs":[{"internalType":"address","name":"who","type":"address"},{"internalType":"bytes4","name":"what","type":"bytes4"}],"name":"authorize","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"who","type":"address"},{"internalType":"bytes4","name":"what","type":"bytes4"}],"name":"isAuthorized","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"who","type":"address"},{"internalType":"bytes4","name":"what","type":"bytes4"}],"name":"unauthorize","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"authorize(address,bytes4)":"933f0f3c","isAuthorized(address,bytes4)":"d9972b96","unauthorize(address,bytes4)":"6646a436"}},"metadata":"{\"compiler\":{\"version\":\"0.8.3+commit.8d00100c\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"who\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes4\",\"name\":\"what\",\"type\":\"bytes4\"}],\"name\":\"Authorized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"who\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes4\",\"name\":\"what\",\"type\":\"bytes4\"}],\"name\":\"Unauthorized\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"who\",\"type\":\"address\"},{\"internalType\":\"bytes4\",\"name\":\"what\",\"type\":\"bytes4\"}],\"name\":\"authorize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"who\",\"type\":\"address\"},{\"internalType\":\"bytes4\",\"name\":\"what\",\"type\":\"bytes4\"}],\"name\":\"isAuthorized\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"who\",\"type\":\"address\"},{\"internalType\":\"bytes4\",\"name\":\"what\",\"type\":\"bytes4\"}],\"name\":\"unauthorize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"Authorized(address,bytes4)\":{\"details\":\"Emitted when an account is authorized to call a function\"},\"Unauthorized(address,bytes4)\":{\"details\":\"Emitted when an account is unauthorized to call a function\"}},\"kind\":\"dev\",\"methods\":{\"authorize(address,bytes4)\":{\"details\":\"Authorizes someone to call a function. Sender must be authorize to do so.\",\"params\":{\"what\":\"Function selector to be granted\",\"who\":\"Address to be authorized\"}},\"isAuthorized(address,bytes4)\":{\"details\":\"Tells whether someone is allowed to call a function or not. It returns true if it's allowed to anyone.\",\"params\":{\"what\":\"Function selector asking permission for\",\"who\":\"Address asking permission for\"}},\"unauthorize(address,bytes4)\":{\"details\":\"Unauthorizes someone to call a function. Sender must be authorize to do so.\",\"params\":{\"what\":\"Function selector to be revoked\",\"who\":\"Address to be unauthorized\"}}},\"title\":\"IAuthorizer\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@mimic-fi/v2-helpers/contracts/auth/IAuthorizer.sol\":\"IAuthorizer\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":10000},\"remappings\":[]},\"sources\":{\"@mimic-fi/v2-helpers/contracts/auth/IAuthorizer.sol\":{\"keccak256\":\"0x7e5d1c440a02d16c3d62d8ca982749b4cf044ba14e0a40c4f2fe23257a5304d2\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://bdad507d0bdc80eb1ca9fc01d4ef4ff5e0258b631305033b5945aad85fa5068a\",\"dweb:/ipfs/QmaRdsSorrzkxYpeTNMrZvH5RbbM9JYPQ9HyNAcQGmXNAe\"]}},\"version\":1}"}},"@mimic-fi/v2-helpers/contracts/math/FixedPoint.sol":{"FixedPoint":{"abi":[],"evm":{"bytecode":{"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212203d7b471405af165218207e5151fcc2999ef9c1b1a13b867b42a0e6f9346b38fa64736f6c63430008030033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 RETURNDATASIZE PUSH28 0x471405AF165218207E5151FCC2999EF9C1B1A13B867B42A0E6F9346B CODESIZE STATICCALL PUSH5 0x736F6C6343 STOP ADDMOD SUB STOP CALLER ","sourceMap":"815:1608:2:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;815:1608:2;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212203d7b471405af165218207e5151fcc2999ef9c1b1a13b867b42a0e6f9346b38fa64736f6c63430008030033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 RETURNDATASIZE PUSH28 0x471405AF165218207E5151FCC2999EF9C1B1A13B867B42A0E6F9346B CODESIZE STATICCALL PUSH5 0x736F6C6343 STOP ADDMOD SUB STOP CALLER ","sourceMap":"815:1608:2:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.3+commit.8d00100c\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Math library to operate with fixed point values with 18 decimals\",\"kind\":\"dev\",\"methods\":{},\"title\":\"FixedPoint\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@mimic-fi/v2-helpers/contracts/math/FixedPoint.sol\":\"FixedPoint\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":10000},\"remappings\":[]},\"sources\":{\"@mimic-fi/v2-helpers/contracts/math/FixedPoint.sol\":{\"keccak256\":\"0x1acd83a44406a524ffc2cd2b9f52d1ab1f0933216ed8155badc4ba5daf0d756d\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://9b153168a8af8d21ad6e83c66a6d0a74b8c2482c41914ab52800ad4d9b1046fd\",\"dweb:/ipfs/QmRPjPCqLLrj6xJuzWyEeBCGVxK2cFA4876b5pChu7SCae\"]}},\"version\":1}"}},"@mimic-fi/v2-helpers/contracts/math/UncheckedMath.sol":{"UncheckedMath":{"abi":[],"evm":{"bytecode":{"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212202571b693cbd9fccd229da424e249566b2a553ea99b7680e895f1e95fe8c7ce4164736f6c63430008030033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x25 PUSH18 0xB693CBD9FCCD229DA424E249566B2A553EA9 SWAP12 PUSH23 0x80E895F1E95FE8C7CE4164736F6C634300080300330000 ","sourceMap":"798:1084:3:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;798:1084:3;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212202571b693cbd9fccd229da424e249566b2a553ea99b7680e895f1e95fe8c7ce4164736f6c63430008030033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x25 PUSH18 0xB693CBD9FCCD229DA424E249566B2A553EA9 SWAP12 PUSH23 0x80E895F1E95FE8C7CE4164736F6C634300080300330000 ","sourceMap":"798:1084:3:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.3+commit.8d00100c\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Math library to perform unchecked operations\",\"kind\":\"dev\",\"methods\":{},\"title\":\"UncheckedMath\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@mimic-fi/v2-helpers/contracts/math/UncheckedMath.sol\":\"UncheckedMath\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":10000},\"remappings\":[]},\"sources\":{\"@mimic-fi/v2-helpers/contracts/math/UncheckedMath.sol\":{\"keccak256\":\"0x0521515cc3d9bb160250175613575c85286db3f308f522dc98bbf637efa78bfb\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://acd315fd1ef1d6408682ba6f7943470361baefff1a5675da40aab21673e42b55\",\"dweb:/ipfs/QmSg9WHAMVLk9i2rR8DQSomXLaKBW9gWcTRAwzbdxMLU7h\"]}},\"version\":1}"}},"@mimic-fi/v2-registry/contracts/implementations/BaseImplementation.sol":{"BaseImplementation":{"abi":[{"inputs":[],"name":"NAMESPACE","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"registry","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"NAMESPACE()":"44ba1fca","registry()":"7b103999"}},"metadata":"{\"compiler\":{\"version\":\"0.8.3+commit.8d00100c\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"NAMESPACE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"registry\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"This implementation contract comes with an immutable reference to an implementations registry where it should be registered as well (checked during initialization). It allows requesting new instances of other registered implementations to as another safety check to make sure valid instances are referenced in case it's needed.\",\"kind\":\"dev\",\"methods\":{\"NAMESPACE()\":{\"details\":\"Tells the namespace under which the implementation is registered in the Mimic Registry\"},\"constructor\":{\"details\":\"Creates a new BaseImplementation\",\"params\":{\"_registry\":\"Address of the Mimic Registry where dependencies will be validated against\"}}},\"stateVariables\":{\"registry\":{\"details\":\"Tells the address of the Mimic Registry\"}},\"title\":\"BaseImplementation\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@mimic-fi/v2-registry/contracts/implementations/BaseImplementation.sol\":\"BaseImplementation\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":10000},\"remappings\":[]},\"sources\":{\"@mimic-fi/v2-helpers/contracts/auth/IAuthorizer.sol\":{\"keccak256\":\"0x7e5d1c440a02d16c3d62d8ca982749b4cf044ba14e0a40c4f2fe23257a5304d2\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://bdad507d0bdc80eb1ca9fc01d4ef4ff5e0258b631305033b5945aad85fa5068a\",\"dweb:/ipfs/QmaRdsSorrzkxYpeTNMrZvH5RbbM9JYPQ9HyNAcQGmXNAe\"]},\"@mimic-fi/v2-registry/contracts/implementations/BaseImplementation.sol\":{\"keccak256\":\"0xef331bd88660d3c89ea771c3a8a4392412a409f886411d740d056d547ca4098e\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://5615ee18477db1336aaa7908852e5b5f90a07d8bf90568ef87bab9043f19d819\",\"dweb:/ipfs/QmYJhtFsJAKsAjbbnFJbKxqxVzkQwxs6s3FehKfHZSouAo\"]},\"@mimic-fi/v2-registry/contracts/implementations/IImplementation.sol\":{\"keccak256\":\"0x621ffadea8fdc214f95fa95ff480ebc7f5f51d9678544883def90b59a3851f78\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://9933e44069dee9bf8410f405d734b1320e2b26f11108e723576f9df6ff410b59\",\"dweb:/ipfs/QmfEmrt9bRhjN86BJRST7ZSjkDjegJgd9JtLheizUNzDwN\"]},\"@mimic-fi/v2-registry/contracts/registry/IRegistry.sol\":{\"keccak256\":\"0xeb2662066535134308d0ba955c88e7de4a17d1681b148371dd6dd4b581b2f381\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://7d8f6509d822fea1cea9b6b81a9745fdcdfad4199e69cd3562ffeb234d0e3eac\",\"dweb:/ipfs/QmS74Fkt8nyoGUyNhrqmqrCXQcmboBciFY7zLSwpjytFtU\"]},\"@openzeppelin/contracts/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x2a21b14ff90012878752f230d3ffd5c3405e5938d06c97a7d89c0a64561d0d66\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3313a8f9bb1f9476857c9050067b31982bf2140b83d84f3bc0cec1f62bbe947f\",\"dweb:/ipfs/Qma17Pk8NRe7aB4UD3jjVxk7nSFaov3eQyv86hcyqkwJRV\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xd6153ce99bcdcce22b124f755e72553295be6abcd63804cfdffceb188b8bef10\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://35c47bece3c03caaa07fab37dd2bb3413bfbca20db7bd9895024390e0a469487\",\"dweb:/ipfs/QmPGWT2x3QHcKxqe6gRmAkdakhbaRgx3DLzcakHz5M4eXG\"]}},\"version\":1}"}},"@mimic-fi/v2-registry/contracts/implementations/IImplementation.sol":{"IImplementation":{"abi":[{"inputs":[],"name":"NAMESPACE","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"registry","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"NAMESPACE()":"44ba1fca","registry()":"7b103999"}},"metadata":"{\"compiler\":{\"version\":\"0.8.3+commit.8d00100c\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"NAMESPACE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"registry\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation interface that must be followed for implementations to be registered in the Mimic Registry\",\"kind\":\"dev\",\"methods\":{\"NAMESPACE()\":{\"details\":\"Tells the namespace under which the implementation is registered in the Mimic Registry\"},\"registry()\":{\"details\":\"Tells the address of the Mimic Registry\"}},\"title\":\"IImplementation\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@mimic-fi/v2-registry/contracts/implementations/IImplementation.sol\":\"IImplementation\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":10000},\"remappings\":[]},\"sources\":{\"@mimic-fi/v2-registry/contracts/implementations/IImplementation.sol\":{\"keccak256\":\"0x621ffadea8fdc214f95fa95ff480ebc7f5f51d9678544883def90b59a3851f78\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://9933e44069dee9bf8410f405d734b1320e2b26f11108e723576f9df6ff410b59\",\"dweb:/ipfs/QmfEmrt9bRhjN86BJRST7ZSjkDjegJgd9JtLheizUNzDwN\"]}},\"version\":1}"}},"@mimic-fi/v2-registry/contracts/registry/IRegistry.sol":{"IRegistry":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"who","type":"address"},{"indexed":false,"internalType":"bytes4","name":"what","type":"bytes4"}],"name":"Authorized","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"namespace","type":"bytes32"},{"indexed":true,"internalType":"address","name":"implementation","type":"address"}],"name":"Deprecated","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"namespace","type":"bytes32"},{"indexed":true,"internalType":"address","name":"implementation","type":"address"},{"indexed":false,"internalType":"bool","name":"stateless","type":"bool"}],"name":"Registered","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"who","type":"address"},{"indexed":false,"internalType":"bytes4","name":"what","type":"bytes4"}],"name":"Unauthorized","type":"event"},{"inputs":[{"internalType":"address","name":"who","type":"address"},{"internalType":"bytes4","name":"what","type":"bytes4"}],"name":"authorize","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"implementation","type":"address"}],"name":"deprecate","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"implementation","type":"address"}],"name":"implementationData","outputs":[{"internalType":"bool","name":"stateless","type":"bool"},{"internalType":"bool","name":"deprecated","type":"bool"},{"internalType":"bytes32","name":"namespace","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"namespace","type":"bytes32"},{"internalType":"address","name":"implementation","type":"address"}],"name":"isActive","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"who","type":"address"},{"internalType":"bytes4","name":"what","type":"bytes4"}],"name":"isAuthorized","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"namespace","type":"bytes32"},{"internalType":"address","name":"implementation","type":"address"},{"internalType":"bool","name":"stateless","type":"bool"}],"name":"register","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"who","type":"address"},{"internalType":"bytes4","name":"what","type":"bytes4"}],"name":"unauthorize","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"authorize(address,bytes4)":"933f0f3c","deprecate(address)":"0753c30c","implementationData(address)":"9235dcf8","isActive(bytes32,address)":"ca0f8f3b","isAuthorized(address,bytes4)":"d9972b96","register(bytes32,address,bool)":"678449d4","unauthorize(address,bytes4)":"6646a436"}},"metadata":"{\"compiler\":{\"version\":\"0.8.3+commit.8d00100c\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"who\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes4\",\"name\":\"what\",\"type\":\"bytes4\"}],\"name\":\"Authorized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"namespace\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"Deprecated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"namespace\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"stateless\",\"type\":\"bool\"}],\"name\":\"Registered\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"who\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes4\",\"name\":\"what\",\"type\":\"bytes4\"}],\"name\":\"Unauthorized\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"who\",\"type\":\"address\"},{\"internalType\":\"bytes4\",\"name\":\"what\",\"type\":\"bytes4\"}],\"name\":\"authorize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"deprecate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"implementationData\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"stateless\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"deprecated\",\"type\":\"bool\"},{\"internalType\":\"bytes32\",\"name\":\"namespace\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"namespace\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"isActive\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"who\",\"type\":\"address\"},{\"internalType\":\"bytes4\",\"name\":\"what\",\"type\":\"bytes4\"}],\"name\":\"isAuthorized\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"namespace\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"stateless\",\"type\":\"bool\"}],\"name\":\"register\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"who\",\"type\":\"address\"},{\"internalType\":\"bytes4\",\"name\":\"what\",\"type\":\"bytes4\"}],\"name\":\"unauthorize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Registry interface, it must follow the IAuthorizer interface.\",\"events\":{\"Deprecated(bytes32,address)\":{\"details\":\"Emitted every time an implementation is deprecated\"},\"Registered(bytes32,address,bool)\":{\"details\":\"Emitted every time a new implementation is registered\"}},\"kind\":\"dev\",\"methods\":{\"authorize(address,bytes4)\":{\"details\":\"Authorizes someone to call a function. Sender must be authorize to do so.\",\"params\":{\"what\":\"Function selector to be granted\",\"who\":\"Address to be authorized\"}},\"deprecate(address)\":{\"details\":\"Deprecates a registered implementation\",\"params\":{\"implementation\":\"Address of the implementation to be deprecated\"}},\"implementationData(address)\":{\"details\":\"Tells the data of an implementation:\",\"params\":{\"implementation\":\"Address of the implementation to request it's data\"}},\"isActive(bytes32,address)\":{\"details\":\"Tells if a specific implementation is registered under a certain namespace and it's not deprecated\",\"params\":{\"implementation\":\"Address of the implementation to be checked\",\"namespace\":\"Namespace asking for\"}},\"isAuthorized(address,bytes4)\":{\"details\":\"Tells whether someone is allowed to call a function or not. It returns true if it's allowed to anyone.\",\"params\":{\"what\":\"Function selector asking permission for\",\"who\":\"Address asking permission for\"}},\"register(bytes32,address,bool)\":{\"details\":\"Registers a new implementation for a given namespace\",\"params\":{\"implementation\":\"Address of the implementation to be registered\",\"namespace\":\"Namespace to be used for the implementation\",\"stateless\":\"Whether the implementation is stateless or not\"}},\"unauthorize(address,bytes4)\":{\"details\":\"Unauthorizes someone to call a function. Sender must be authorize to do so.\",\"params\":{\"what\":\"Function selector to be revoked\",\"who\":\"Address to be unauthorized\"}}},\"title\":\"IRegistry\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@mimic-fi/v2-registry/contracts/registry/IRegistry.sol\":\"IRegistry\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":10000},\"remappings\":[]},\"sources\":{\"@mimic-fi/v2-helpers/contracts/auth/IAuthorizer.sol\":{\"keccak256\":\"0x7e5d1c440a02d16c3d62d8ca982749b4cf044ba14e0a40c4f2fe23257a5304d2\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://bdad507d0bdc80eb1ca9fc01d4ef4ff5e0258b631305033b5945aad85fa5068a\",\"dweb:/ipfs/QmaRdsSorrzkxYpeTNMrZvH5RbbM9JYPQ9HyNAcQGmXNAe\"]},\"@mimic-fi/v2-registry/contracts/registry/IRegistry.sol\":{\"keccak256\":\"0xeb2662066535134308d0ba955c88e7de4a17d1681b148371dd6dd4b581b2f381\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://7d8f6509d822fea1cea9b6b81a9745fdcdfad4199e69cd3562ffeb234d0e3eac\",\"dweb:/ipfs/QmS74Fkt8nyoGUyNhrqmqrCXQcmboBciFY7zLSwpjytFtU\"]}},\"version\":1}"}},"@openzeppelin/contracts/proxy/utils/Initializable.sol":{"Initializable":{"abi":[{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint8","name":"version","type":"uint8"}],"name":"Initialized","type":"event"}],"evm":{"bytecode":{"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.3+commit.8d00100c\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"}],\"devdoc\":{\"custom:oz-upgrades-unsafe-allow\":\"constructor constructor() {     _disableInitializers(); } ``` ====\",\"details\":\"This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer function so it can only be called once. The {initializer} modifier provided by this contract will have this effect. The initialization functions use a version number. Once a version number is used, it is consumed and cannot be reused. This mechanism prevents re-execution of each \\\"step\\\" but allows the creation of new initialization steps in case an upgrade adds a module that needs to be initialized. For example: [.hljs-theme-light.nopadding] ``` contract MyToken is ERC20Upgradeable {     function initialize() initializer public {         __ERC20_init(\\\"MyToken\\\", \\\"MTK\\\");     } } contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {     function initializeV2() reinitializer(2) public {         __ERC20Permit_init(\\\"MyToken\\\");     } } ``` TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}. CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure that all initializers are idempotent. This is not verified automatically as constructors are by Solidity. [CAUTION] ==== Avoid leaving a contract uninitialized. An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke the {_disableInitializers} function in the constructor to automatically lock it when it is deployed: [.hljs-theme-light.nopadding] ```\",\"events\":{\"Initialized(uint8)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{},\"stateVariables\":{\"_initialized\":{\"custom:oz-retyped-from\":\"bool\",\"details\":\"Indicates that the contract has been initialized.\"},\"_initializing\":{\"details\":\"Indicates that the contract is in the process of being initialized.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/proxy/utils/Initializable.sol\":\"Initializable\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":10000},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x2a21b14ff90012878752f230d3ffd5c3405e5938d06c97a7d89c0a64561d0d66\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3313a8f9bb1f9476857c9050067b31982bf2140b83d84f3bc0cec1f62bbe947f\",\"dweb:/ipfs/Qma17Pk8NRe7aB4UD3jjVxk7nSFaov3eQyv86hcyqkwJRV\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xd6153ce99bcdcce22b124f755e72553295be6abcd63804cfdffceb188b8bef10\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://35c47bece3c03caaa07fab37dd2bb3413bfbca20db7bd9895024390e0a469487\",\"dweb:/ipfs/QmPGWT2x3QHcKxqe6gRmAkdakhbaRgx3DLzcakHz5M4eXG\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"IERC20":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.3+commit.8d00100c\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":10000},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol":{"IERC20Metadata":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","decimals()":"313ce567","name()":"06fdde03","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.3+commit.8d00100c\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC20 standard. _Available since v4.1._\",\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":\"IERC20Metadata\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":10000},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd\",\"dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/Address.sol":{"Address":{"abi":[],"evm":{"bytecode":{"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122041497d3a81e969a4d7c01e9faf5c2945dd14f91546df0e6ec6e832fea756aa9364736f6c63430008030033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 COINBASE 0x49 PUSH30 0x3A81E969A4D7C01E9FAF5C2945DD14F91546DF0E6EC6E832FEA756AA9364 PUSH20 0x6F6C634300080300330000000000000000000000 ","sourceMap":"194:8111:10:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;194:8111:10;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122041497d3a81e969a4d7c01e9faf5c2945dd14f91546df0e6ec6e832fea756aa9364736f6c63430008030033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 COINBASE 0x49 PUSH30 0x3A81E969A4D7C01E9FAF5C2945DD14F91546DF0E6EC6E832FEA756AA9364 PUSH20 0x6F6C634300080300330000000000000000000000 ","sourceMap":"194:8111:10:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.3+commit.8d00100c\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Address.sol\":\"Address\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":10000},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xd6153ce99bcdcce22b124f755e72553295be6abcd63804cfdffceb188b8bef10\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://35c47bece3c03caaa07fab37dd2bb3413bfbca20db7bd9895024390e0a469487\",\"dweb:/ipfs/QmPGWT2x3QHcKxqe6gRmAkdakhbaRgx3DLzcakHz5M4eXG\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/math/SafeCast.sol":{"SafeCast":{"abi":[],"evm":{"bytecode":{"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220414af25303008aa496b5022c4d18b1733427cecf5767ac8225767ccebf771a6364736f6c63430008030033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 COINBASE 0x4A CALLCODE MSTORE8 SUB STOP DUP11 LOG4 SWAP7 0xB5 MUL 0x2C 0x4D XOR 0xB1 PUSH20 0x3427CECF5767AC8225767CCEBF771A6364736F6C PUSH4 0x43000803 STOP CALLER ","sourceMap":"842:34685:11:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;842:34685:11;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220414af25303008aa496b5022c4d18b1733427cecf5767ac8225767ccebf771a6364736f6c63430008030033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 COINBASE 0x4A CALLCODE MSTORE8 SUB STOP DUP11 LOG4 SWAP7 0xB5 MUL 0x2C 0x4D XOR 0xB1 PUSH20 0x3427CECF5767AC8225767CCEBF771A6364736F6C PUSH4 0x43000803 STOP CALLER ","sourceMap":"842:34685:11:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.3+commit.8d00100c\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers over Solidity's uintXX/intXX casting operators with added overflow checks. Downcasting from uint256/int256 in Solidity does not revert on overflow. This can easily result in undesired exploitation or bugs, since developers usually assume that overflows raise errors. `SafeCast` restores this intuition by reverting the transaction when such an operation overflows. Using this library instead of the unchecked operations eliminates an entire class of bugs, so it's recommended to use it always. Can be combined with {SafeMath} and {SignedSafeMath} to extend it to smaller types, by performing all math on `uint256` and `int256` and then downcasting.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/SafeCast.sol\":\"SafeCast\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":10000},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x02686c31ccb9ee77a299fa5f47327af5271f251a707a0e24f321957166ff0434\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cb562d8ae1da31249ca0d8553df9f89ef4c3c110a018c4449dde68ae30e51ec1\",\"dweb:/ipfs/QmUwxjtTUYB89ymeV46TZPmTsGnYrKNcgTHk7MQA1MG3hj\"]}},\"version\":1}"}},"contracts/feeds/IPriceFeedProvider.sol":{"IPriceFeedProvider":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"base","type":"address"},{"indexed":true,"internalType":"address","name":"quote","type":"address"},{"indexed":false,"internalType":"address","name":"feed","type":"address"}],"name":"PriceFeedSet","type":"event"},{"inputs":[{"internalType":"address","name":"base","type":"address"},{"internalType":"address","name":"quote","type":"address"}],"name":"getPriceFeed","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"base","type":"address"},{"internalType":"address","name":"quote","type":"address"},{"internalType":"address","name":"feed","type":"address"}],"name":"setPriceFeed","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address[]","name":"bases","type":"address[]"},{"internalType":"address[]","name":"quotes","type":"address[]"},{"internalType":"address[]","name":"feeds","type":"address[]"}],"name":"setPriceFeeds","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"getPriceFeed(address,address)":"9f0514ad","setPriceFeed(address,address,address)":"67a1d5ab","setPriceFeeds(address[],address[],address[])":"4ed31090"}},"metadata":"{\"compiler\":{\"version\":\"0.8.3+commit.8d00100c\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"base\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"quote\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"feed\",\"type\":\"address\"}],\"name\":\"PriceFeedSet\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"base\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"quote\",\"type\":\"address\"}],\"name\":\"getPriceFeed\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"base\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"quote\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"feed\",\"type\":\"address\"}],\"name\":\"setPriceFeed\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"bases\",\"type\":\"address[]\"},{\"internalType\":\"address[]\",\"name\":\"quotes\",\"type\":\"address[]\"},{\"internalType\":\"address[]\",\"name\":\"feeds\",\"type\":\"address[]\"}],\"name\":\"setPriceFeeds\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract providing price feed references for (base, quote) token pairs\",\"events\":{\"PriceFeedSet(address,address,address)\":{\"details\":\"Emitted every time a price feed is set for (base, quote) pair\"}},\"kind\":\"dev\",\"methods\":{\"getPriceFeed(address,address)\":{\"details\":\"Tells the price feed address for (base, quote) pair. It returns the zero address if there is no one set.\",\"params\":{\"base\":\"Token to be rated\",\"quote\":\"Token used for the price rate\"}},\"setPriceFeed(address,address,address)\":{\"details\":\"Sets a of price feed\",\"params\":{\"base\":\"Token base to be set\",\"feed\":\"Price feed to be set\",\"quote\":\"Token quote to be set\"}},\"setPriceFeeds(address[],address[],address[])\":{\"details\":\"Sets a list of price feeds\",\"params\":{\"bases\":\"List of token bases to be set\",\"feeds\":\"List of price feeds to be set\",\"quotes\":\"List of token quotes to be set\"}}},\"title\":\"IPriceFeedProvider\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/feeds/IPriceFeedProvider.sol\":\"IPriceFeedProvider\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":10000},\"remappings\":[]},\"sources\":{\"contracts/feeds/IPriceFeedProvider.sol\":{\"keccak256\":\"0x4eb3e69eebade2d21f479426e2a96322f22872e48f608c85d3bbe704126b2067\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://2ba2229ac4ed40bbef1d6d2d49382fcdac2db180b8de8454ce16b43b7271ca0c\",\"dweb:/ipfs/QmRemCwZB13B5owhZTUuB5DDGP25YKNr6uZ5oMEy8JxWp5\"]}},\"version\":1}"}},"contracts/oracle/IPriceOracle.sol":{"IPriceOracle":{"abi":[{"inputs":[],"name":"NAMESPACE","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"provider","type":"address"},{"internalType":"address","name":"base","type":"address"},{"internalType":"address","name":"quote","type":"address"}],"name":"getPrice","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"registry","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"NAMESPACE()":"44ba1fca","getPrice(address,address,address)":"7100d05c","registry()":"7b103999"}},"metadata":"{\"compiler\":{\"version\":\"0.8.3+commit.8d00100c\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"NAMESPACE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"provider\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"base\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"quote\",\"type\":\"address\"}],\"name\":\"getPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"registry\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Oracle that interfaces with external feeds to provide quotes for tokens based on any other token. It must support also `IImplementation`.\",\"kind\":\"dev\",\"methods\":{\"NAMESPACE()\":{\"details\":\"Tells the namespace under which the implementation is registered in the Mimic Registry\"},\"getPrice(address,address,address)\":{\"details\":\"Tells the price of a token (base) in a given quote. The response is expressed using the corresponding number of decimals so that when performing a fixed point product of it by a `base` amount it results in a value expressed in `quote` decimals. For example, if `base` is ETH and `quote` is USDC, then the returned value is expected to be expressed using 6 decimals: FixedPoint.mul(X[ETH], price[USDC/ETH]) = FixedPoint.mul(X[18], price[6]) = X * price [6]\",\"params\":{\"base\":\"Token to rate\",\"provider\":\"Contract providing the price feeds to use by the oracle\",\"quote\":\"Token used for the price rate\"}},\"registry()\":{\"details\":\"Tells the address of the Mimic Registry\"}},\"title\":\"IPriceOracle\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/oracle/IPriceOracle.sol\":\"IPriceOracle\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":10000},\"remappings\":[]},\"sources\":{\"@mimic-fi/v2-registry/contracts/implementations/IImplementation.sol\":{\"keccak256\":\"0x621ffadea8fdc214f95fa95ff480ebc7f5f51d9678544883def90b59a3851f78\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://9933e44069dee9bf8410f405d734b1320e2b26f11108e723576f9df6ff410b59\",\"dweb:/ipfs/QmfEmrt9bRhjN86BJRST7ZSjkDjegJgd9JtLheizUNzDwN\"]},\"contracts/oracle/IPriceOracle.sol\":{\"keccak256\":\"0xd552588ae1e1447ba60d3e15c11c3d57f7ed6226bcd2d9e888f1f75b3fcdee6b\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://d5db66a7e8ca87dfc745fd043cdc5206302ac59bf85f959ddec65c7050abc25c\",\"dweb:/ipfs/Qmap47gLM3hsmjNJQVSCa9ait3ZJSs1G3NY8HJAH892c42\"]}},\"version\":1}"}},"contracts/oracle/PriceOracle.sol":{"PriceOracle":{"abi":[{"inputs":[{"internalType":"address","name":"_pivot","type":"address"},{"internalType":"address","name":"_registry","type":"address"}],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[],"name":"NAMESPACE","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"provider","type":"address"},{"internalType":"address","name":"base","type":"address"},{"internalType":"address","name":"quote","type":"address"}],"name":"getPrice","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"pivot","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"registry","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:501:15","statements":[{"nodeType":"YulBlock","src":"6:3:15","statements":[]},{"body":{"nodeType":"YulBlock","src":"74:117:15","statements":[{"nodeType":"YulAssignment","src":"84:22:15","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"99:6:15"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"93:5:15"},"nodeType":"YulFunctionCall","src":"93:13:15"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"84:5:15"}]},{"body":{"nodeType":"YulBlock","src":"169:16:15","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"178:1:15","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"181:1:15","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"171:6:15"},"nodeType":"YulFunctionCall","src":"171:12:15"},"nodeType":"YulExpressionStatement","src":"171:12:15"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"128:5:15"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"139:5:15"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"154:3:15","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"159:1:15","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"150:3:15"},"nodeType":"YulFunctionCall","src":"150:11:15"},{"kind":"number","nodeType":"YulLiteral","src":"163:1:15","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"146:3:15"},"nodeType":"YulFunctionCall","src":"146:19:15"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"135:3:15"},"nodeType":"YulFunctionCall","src":"135:31:15"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"125:2:15"},"nodeType":"YulFunctionCall","src":"125:42:15"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"118:6:15"},"nodeType":"YulFunctionCall","src":"118:50:15"},"nodeType":"YulIf","src":"115:2:15"}]},"name":"abi_decode_address_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"53:6:15","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"64:5:15","type":""}],"src":"14:177:15"},{"body":{"nodeType":"YulBlock","src":"294:205:15","statements":[{"body":{"nodeType":"YulBlock","src":"340:26:15","statements":[{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"349:6:15"},{"name":"value0","nodeType":"YulIdentifier","src":"357:6:15"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"342:6:15"},"nodeType":"YulFunctionCall","src":"342:22:15"},"nodeType":"YulExpressionStatement","src":"342:22:15"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"315:7:15"},{"name":"headStart","nodeType":"YulIdentifier","src":"324:9:15"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"311:3:15"},"nodeType":"YulFunctionCall","src":"311:23:15"},{"kind":"number","nodeType":"YulLiteral","src":"336:2:15","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"307:3:15"},"nodeType":"YulFunctionCall","src":"307:32:15"},"nodeType":"YulIf","src":"304:2:15"},{"nodeType":"YulAssignment","src":"375:50:15","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"415:9:15"}],"functionName":{"name":"abi_decode_address_fromMemory","nodeType":"YulIdentifier","src":"385:29:15"},"nodeType":"YulFunctionCall","src":"385:40:15"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"375:6:15"}]},{"nodeType":"YulAssignment","src":"434:59:15","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"478:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"489:2:15","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"474:3:15"},"nodeType":"YulFunctionCall","src":"474:18:15"}],"functionName":{"name":"abi_decode_address_fromMemory","nodeType":"YulIdentifier","src":"444:29:15"},"nodeType":"YulFunctionCall","src":"444:49:15"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"434:6:15"}]}]},"name":"abi_decode_tuple_t_addresst_address_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"252:9:15","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"263:7:15","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"275:6:15","type":""},{"name":"value1","nodeType":"YulTypedName","src":"283:6:15","type":""}],"src":"196:303:15"}]},"contents":"{\n    { }\n    function abi_decode_address_fromMemory(offset) -> value\n    {\n        value := mload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_address_fromMemory(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(value0, value0) }\n        value0 := abi_decode_address_fromMemory(headStart)\n        value1 := abi_decode_address_fromMemory(add(headStart, 32))\n    }\n}","id":15,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"","opcodes":"PUSH1 0xC0 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0xFDF CODESIZE SUB DUP1 PUSH2 0xFDF DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH2 0x2F SWAP2 PUSH2 0x6A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB NOT PUSH1 0x60 SWAP2 DUP3 SHL DUP2 AND PUSH1 0x80 MSTORE SWAP2 SWAP1 SHL AND PUSH1 0xA0 MSTORE PUSH2 0x9C JUMP JUMPDEST DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x65 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x7C JUMPI DUP2 DUP3 REVERT JUMPDEST PUSH2 0x85 DUP4 PUSH2 0x4E JUMP JUMPDEST SWAP2 POP PUSH2 0x93 PUSH1 0x20 DUP5 ADD PUSH2 0x4E JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH1 0x60 SHR PUSH1 0xA0 MLOAD PUSH1 0x60 SHR PUSH2 0xF0C PUSH2 0xD3 PUSH1 0x0 CODECOPY PUSH1 0x0 DUP2 DUP2 PUSH1 0xEF ADD MSTORE DUP2 DUP2 PUSH2 0x528 ADD MSTORE PUSH2 0x5F3 ADD MSTORE PUSH1 0x0 PUSH1 0xA3 ADD MSTORE PUSH2 0xF0C PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x4C JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x44BA1FCA EQ PUSH2 0x51 JUMPI DUP1 PUSH4 0x7100D05C EQ PUSH2 0x8B JUMPI DUP1 PUSH4 0x7B103999 EQ PUSH2 0x9E JUMPI DUP1 PUSH4 0xD77FE1CD EQ PUSH2 0xEA JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x78 PUSH32 0xDD24A0F121E5AB7C3E97C63EAAF859E0B46792C3E0EDFD86E2B3AD50F63011D8 DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x78 PUSH2 0x99 CALLDATASIZE PUSH1 0x4 PUSH2 0xC08 JUMP JUMPDEST PUSH2 0x111 JUMP JUMPDEST PUSH2 0xC5 PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x82 JUMP JUMPDEST PUSH2 0xC5 PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x156 JUMPI POP PUSH8 0xDE0B6B3A7640000 PUSH2 0x315 JUMP JUMPDEST PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x313CE567 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x19E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1B2 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1D6 SWAP2 SWAP1 PUSH2 0xCA1 JUMP JUMPDEST PUSH1 0xFF AND SWAP1 POP PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x313CE567 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x223 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x237 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x25B SWAP2 SWAP1 PUSH2 0xCA1 JUMP JUMPDEST PUSH1 0xFF AND SWAP1 POP PUSH2 0x26B DUP2 PUSH1 0x12 PUSH2 0x31C JUMP JUMPDEST DUP3 GT ISZERO PUSH2 0x2D9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x424153455F444543494D414C535F544F4F5F4249470000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x2EE DUP4 PUSH2 0x2EA DUP5 PUSH1 0x12 PUSH2 0x31C JUMP JUMPDEST SUB SWAP1 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP1 PUSH2 0x2FE DUP10 DUP10 DUP10 PUSH2 0x326 JUMP JUMPDEST SWAP2 POP SWAP2 POP PUSH2 0x30D DUP3 DUP3 DUP6 PUSH2 0x73D JUMP JUMPDEST SWAP6 POP POP POP POP POP POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP2 DUP2 ADD JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x9F0514AD00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE DUP3 DUP2 AND PUSH1 0x24 DUP4 ADD MSTORE PUSH1 0x0 SWAP2 DUP3 SWAP2 DUP3 SWAP2 SWAP1 DUP8 AND SWAP1 PUSH4 0x9F0514AD SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x39D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x3B1 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x3D5 SWAP2 SWAP1 PUSH2 0xBEC JUMP JUMPDEST SWAP1 POP PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND ISZERO PUSH2 0x406 JUMPI PUSH2 0x3FC DUP2 PUSH2 0x782 JUMP JUMPDEST SWAP3 POP SWAP3 POP POP PUSH2 0x735 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x9F0514AD00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP6 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE DUP7 DUP2 AND PUSH1 0x24 DUP4 ADD MSTORE PUSH1 0x0 SWAP2 SWAP1 DUP9 AND SWAP1 PUSH4 0x9F0514AD SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x479 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x48D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x4B1 SWAP2 SWAP1 PUSH2 0xBEC JUMP JUMPDEST SWAP1 POP PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND ISZERO PUSH2 0x4E3 JUMPI PUSH2 0x4D8 DUP2 PUSH2 0x89F JUMP JUMPDEST SWAP4 POP SWAP4 POP POP POP PUSH2 0x735 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x9F0514AD00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP8 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH32 0x0 DUP2 AND PUSH1 0x24 DUP4 ADD MSTORE PUSH1 0x0 SWAP2 SWAP1 DUP10 AND SWAP1 PUSH4 0x9F0514AD SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x576 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x58A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x5AE SWAP2 SWAP1 PUSH2 0xBEC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x9F0514AD00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP9 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH32 0x0 DUP2 AND PUSH1 0x24 DUP4 ADD MSTORE SWAP2 SWAP3 POP PUSH1 0x0 SWAP2 DUP11 AND SWAP1 PUSH4 0x9F0514AD SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x643 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x657 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x67B SWAP2 SWAP1 PUSH2 0xBEC JUMP JUMPDEST SWAP1 POP PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND ISZERO DUP1 ISZERO SWAP1 PUSH2 0x6B7 JUMPI POP PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND ISZERO ISZERO JUMPDEST ISZERO PUSH2 0x6D3 JUMPI PUSH2 0x6C6 DUP3 DUP3 PUSH2 0x93E JUMP JUMPDEST SWAP6 POP SWAP6 POP POP POP POP POP PUSH2 0x735 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4D495353494E475F50524943455F464545440000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x2D0 JUMP JUMPDEST SWAP4 POP SWAP4 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x763 JUMPI PUSH2 0x754 DUP3 DUP5 SUB PUSH1 0xA PUSH2 0xD59 JUMP JUMPDEST PUSH2 0x75E SWAP1 DUP6 PUSH2 0xCDA JUMP JUMPDEST PUSH2 0x77A JUMP JUMPDEST PUSH2 0x770 DUP4 DUP4 SUB PUSH1 0xA PUSH2 0xD59 JUMP JUMPDEST PUSH2 0x77A SWAP1 DUP6 PUSH2 0xE45 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x313CE567 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x7CB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x7DF JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x803 SWAP2 SWAP1 PUSH2 0xCA1 JUMP JUMPDEST PUSH1 0xFF AND SWAP1 POP PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xFEAF968C PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0xA0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x850 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x864 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x888 SWAP2 SWAP1 PUSH2 0xC52 JUMP JUMPDEST POP POP POP SWAP2 POP POP PUSH2 0x897 DUP2 PUSH2 0x9FE JUMP JUMPDEST SWAP3 POP POP SWAP2 POP SWAP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH2 0x8AE DUP6 PUSH2 0x782 JUMP JUMPDEST SWAP2 POP SWAP2 POP PUSH1 0x24 DUP2 GT ISZERO PUSH2 0x91D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x464545445F444543494D414C535F544F4F5F4249470000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x2D0 JUMP JUMPDEST PUSH2 0x92F PUSH8 0xDE0B6B3A7640000 DUP4 PUSH2 0xA72 JUMP JUMPDEST SWAP6 PUSH1 0x24 SWAP2 SWAP1 SWAP2 SUB SWAP5 POP SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH2 0x94D DUP7 PUSH2 0x782 JUMP JUMPDEST SWAP2 POP SWAP2 POP PUSH1 0x0 DUP1 PUSH2 0x95D DUP8 PUSH2 0x782 JUMP JUMPDEST SWAP1 SWAP3 POP SWAP1 POP PUSH2 0x96D PUSH1 0x12 DUP5 PUSH2 0xCC2 JUMP JUMPDEST DUP2 GT ISZERO PUSH2 0x9D6 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x51554F54455F464545445F444543494D414C535F544F4F5F4249470000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x2D0 JUMP JUMPDEST PUSH2 0x9E0 DUP5 DUP4 PUSH2 0xA72 JUMP JUMPDEST SWAP6 POP PUSH2 0x9F1 DUP2 PUSH2 0x2EA DUP6 PUSH1 0x12 PUSH2 0x31C JUMP JUMPDEST SWAP5 POP POP POP POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 SLT ISZERO PUSH2 0xA6A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x53616665436173743A2076616C7565206D75737420626520706F736974697665 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x2D0 JUMP JUMPDEST POP DUP1 JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH2 0xADB JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xD PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5A45524F5F4449564953494F4E00000000000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x2D0 JUMP JUMPDEST DUP3 PUSH2 0xAE8 JUMPI POP PUSH1 0x0 PUSH2 0x320 JUMP JUMPDEST PUSH8 0xDE0B6B3A7640000 DUP4 DUP2 MUL SWAP1 DUP5 DUP3 DUP2 PUSH2 0xB2B JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DIV EQ PUSH2 0xB93 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xC PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4449565F494E5445524E414C0000000000000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x2D0 JUMP JUMPDEST DUP3 DUP2 DUP2 PUSH2 0xBC9 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DIV SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST DUP1 MLOAD PUSH10 0xFFFFFFFFFFFFFFFFFFFF DUP2 AND DUP2 EQ PUSH2 0xA6D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xBFD JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x315 DUP2 PUSH2 0xEB1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xC1C JUMPI DUP2 DUP3 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH2 0xC27 DUP2 PUSH2 0xEB1 JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH2 0xC37 DUP2 PUSH2 0xEB1 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD PUSH2 0xC47 DUP2 PUSH2 0xEB1 JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0xC69 JUMPI DUP1 DUP2 REVERT JUMPDEST PUSH2 0xC72 DUP7 PUSH2 0xBD2 JUMP JUMPDEST SWAP5 POP PUSH1 0x20 DUP7 ADD MLOAD SWAP4 POP PUSH1 0x40 DUP7 ADD MLOAD SWAP3 POP PUSH1 0x60 DUP7 ADD MLOAD SWAP2 POP PUSH2 0xC95 PUSH1 0x80 DUP8 ADD PUSH2 0xBD2 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xCB2 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 MLOAD PUSH1 0xFF DUP2 AND DUP2 EQ PUSH2 0x315 JUMPI DUP2 DUP3 REVERT JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0xCD5 JUMPI PUSH2 0xCD5 PUSH2 0xE82 JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0xD0E JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 DUP2 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST DUP1 DUP3 JUMPDEST PUSH1 0x1 DUP1 DUP7 GT PUSH2 0xD25 JUMPI POP PUSH2 0xD50 JUMP JUMPDEST DUP2 DUP8 DIV DUP3 GT ISZERO PUSH2 0xD37 JUMPI PUSH2 0xD37 PUSH2 0xE82 JUMP JUMPDEST DUP1 DUP7 AND ISZERO PUSH2 0xD44 JUMPI SWAP2 DUP2 MUL SWAP2 JUMPDEST SWAP5 SWAP1 SWAP5 SHR SWAP4 DUP1 MUL PUSH2 0xD16 JUMP JUMPDEST SWAP5 POP SWAP5 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x315 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 DUP5 PUSH1 0x0 DUP3 PUSH2 0xD90 JUMPI POP PUSH1 0x1 PUSH2 0x315 JUMP JUMPDEST DUP2 PUSH2 0xD9D JUMPI POP PUSH1 0x0 PUSH2 0x315 JUMP JUMPDEST DUP2 PUSH1 0x1 DUP2 EQ PUSH2 0xDB3 JUMPI PUSH1 0x2 DUP2 EQ PUSH2 0xDBD JUMPI PUSH2 0xDEA JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP PUSH2 0x315 JUMP JUMPDEST PUSH1 0xFF DUP5 GT ISZERO PUSH2 0xDCE JUMPI PUSH2 0xDCE PUSH2 0xE82 JUMP JUMPDEST PUSH1 0x1 DUP5 SHL SWAP2 POP DUP5 DUP3 GT ISZERO PUSH2 0xDE4 JUMPI PUSH2 0xDE4 PUSH2 0xE82 JUMP JUMPDEST POP PUSH2 0x315 JUMP JUMPDEST POP PUSH1 0x20 DUP4 LT PUSH2 0x133 DUP4 LT AND PUSH1 0x4E DUP5 LT PUSH1 0xB DUP5 LT AND OR ISZERO PUSH2 0xE1D JUMPI POP DUP2 DUP2 EXP DUP4 DUP2 GT ISZERO PUSH2 0xE18 JUMPI PUSH2 0xE18 PUSH2 0xE82 JUMP JUMPDEST PUSH2 0x315 JUMP JUMPDEST PUSH2 0xE2A DUP5 DUP5 DUP5 PUSH1 0x1 PUSH2 0xD13 JUMP JUMPDEST DUP1 DUP7 DIV DUP3 GT ISZERO PUSH2 0xE3C JUMPI PUSH2 0xE3C PUSH2 0xE82 JUMP JUMPDEST MUL SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0xE7D JUMPI PUSH2 0xE7D PUSH2 0xE82 JUMP JUMPDEST POP MUL SWAP1 JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND DUP2 EQ PUSH2 0xED3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE2 STATICCALL 0xD9 0xAA SMOD DELEGATECALL SWAP9 PUSH20 0xFBC5AECFBC401BEA67896D9BA119B2F432B11044 RETURNDATACOPY SWAP15 RETURNDATACOPY 0xA7 PUSH5 0x736F6C6343 STOP ADDMOD SUB STOP CALLER ","sourceMap":"2104:6780:14:-:0;;;3071:108;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;;1590:20:4;;;;;;;;3158:14:14;;;;::::1;::::0;2104:6780;;14:177:15;93:13;;-1:-1:-1;;;;;135:31:15;;125:42;;115:2;;181:1;178;171:12;115:2;74:117;;;:::o;196:303::-;;;336:2;324:9;315:7;311:23;307:32;304:2;;;357:6;349;342:22;304:2;385:40;415:9;385:40;:::i;:::-;375:50;;444:49;489:2;478:9;474:18;444:49;:::i;:::-;434:59;;294:205;;;;;:::o;:::-;2104:6780:14;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:7747:15","statements":[{"nodeType":"YulBlock","src":"6:3:15","statements":[]},{"body":{"nodeType":"YulBlock","src":"73:120:15","statements":[{"nodeType":"YulAssignment","src":"83:22:15","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"98:6:15"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"92:5:15"},"nodeType":"YulFunctionCall","src":"92:13:15"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"83:5:15"}]},{"body":{"nodeType":"YulBlock","src":"171:16:15","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"180:1:15","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"183:1:15","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"173:6:15"},"nodeType":"YulFunctionCall","src":"173:12:15"},"nodeType":"YulExpressionStatement","src":"173:12:15"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"127:5:15"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"138:5:15"},{"kind":"number","nodeType":"YulLiteral","src":"145:22:15","type":"","value":"0xffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"134:3:15"},"nodeType":"YulFunctionCall","src":"134:34:15"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"124:2:15"},"nodeType":"YulFunctionCall","src":"124:45:15"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"117:6:15"},"nodeType":"YulFunctionCall","src":"117:53:15"},"nodeType":"YulIf","src":"114:2:15"}]},"name":"abi_decode_uint80_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"52:6:15","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"63:5:15","type":""}],"src":"14:179:15"},{"body":{"nodeType":"YulBlock","src":"279:180:15","statements":[{"body":{"nodeType":"YulBlock","src":"325:26:15","statements":[{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"334:6:15"},{"name":"value0","nodeType":"YulIdentifier","src":"342:6:15"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"327:6:15"},"nodeType":"YulFunctionCall","src":"327:22:15"},"nodeType":"YulExpressionStatement","src":"327:22:15"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"300:7:15"},{"name":"headStart","nodeType":"YulIdentifier","src":"309:9:15"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"296:3:15"},"nodeType":"YulFunctionCall","src":"296:23:15"},{"kind":"number","nodeType":"YulLiteral","src":"321:2:15","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"292:3:15"},"nodeType":"YulFunctionCall","src":"292:32:15"},"nodeType":"YulIf","src":"289:2:15"},{"nodeType":"YulVariableDeclaration","src":"360:29:15","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"379:9:15"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"373:5:15"},"nodeType":"YulFunctionCall","src":"373:16:15"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"364:5:15","type":""}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"423:5:15"}],"functionName":{"name":"validator_revert_address","nodeType":"YulIdentifier","src":"398:24:15"},"nodeType":"YulFunctionCall","src":"398:31:15"},"nodeType":"YulExpressionStatement","src":"398:31:15"},{"nodeType":"YulAssignment","src":"438:15:15","value":{"name":"value","nodeType":"YulIdentifier","src":"448:5:15"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"438:6:15"}]}]},"name":"abi_decode_tuple_t_address_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"245:9:15","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"256:7:15","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"268:6:15","type":""}],"src":"198:261:15"},{"body":{"nodeType":"YulBlock","src":"568:435:15","statements":[{"body":{"nodeType":"YulBlock","src":"614:26:15","statements":[{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"623:6:15"},{"name":"value1","nodeType":"YulIdentifier","src":"631:6:15"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"616:6:15"},"nodeType":"YulFunctionCall","src":"616:22:15"},"nodeType":"YulExpressionStatement","src":"616:22:15"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"589:7:15"},{"name":"headStart","nodeType":"YulIdentifier","src":"598:9:15"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"585:3:15"},"nodeType":"YulFunctionCall","src":"585:23:15"},{"kind":"number","nodeType":"YulLiteral","src":"610:2:15","type":"","value":"96"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"581:3:15"},"nodeType":"YulFunctionCall","src":"581:32:15"},"nodeType":"YulIf","src":"578:2:15"},{"nodeType":"YulVariableDeclaration","src":"649:36:15","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"675:9:15"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"662:12:15"},"nodeType":"YulFunctionCall","src":"662:23:15"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"653:5:15","type":""}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"719:5:15"}],"functionName":{"name":"validator_revert_address","nodeType":"YulIdentifier","src":"694:24:15"},"nodeType":"YulFunctionCall","src":"694:31:15"},"nodeType":"YulExpressionStatement","src":"694:31:15"},{"nodeType":"YulAssignment","src":"734:15:15","value":{"name":"value","nodeType":"YulIdentifier","src":"744:5:15"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"734:6:15"}]},{"nodeType":"YulVariableDeclaration","src":"758:47:15","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"790:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"801:2:15","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"786:3:15"},"nodeType":"YulFunctionCall","src":"786:18:15"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"773:12:15"},"nodeType":"YulFunctionCall","src":"773:32:15"},"variables":[{"name":"value_1","nodeType":"YulTypedName","src":"762:7:15","type":""}]},{"expression":{"arguments":[{"name":"value_1","nodeType":"YulIdentifier","src":"839:7:15"}],"functionName":{"name":"validator_revert_address","nodeType":"YulIdentifier","src":"814:24:15"},"nodeType":"YulFunctionCall","src":"814:33:15"},"nodeType":"YulExpressionStatement","src":"814:33:15"},{"nodeType":"YulAssignment","src":"856:17:15","value":{"name":"value_1","nodeType":"YulIdentifier","src":"866:7:15"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"856:6:15"}]},{"nodeType":"YulVariableDeclaration","src":"882:47:15","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"914:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"925:2:15","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"910:3:15"},"nodeType":"YulFunctionCall","src":"910:18:15"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"897:12:15"},"nodeType":"YulFunctionCall","src":"897:32:15"},"variables":[{"name":"value_2","nodeType":"YulTypedName","src":"886:7:15","type":""}]},{"expression":{"arguments":[{"name":"value_2","nodeType":"YulIdentifier","src":"963:7:15"}],"functionName":{"name":"validator_revert_address","nodeType":"YulIdentifier","src":"938:24:15"},"nodeType":"YulFunctionCall","src":"938:33:15"},"nodeType":"YulExpressionStatement","src":"938:33:15"},{"nodeType":"YulAssignment","src":"980:17:15","value":{"name":"value_2","nodeType":"YulIdentifier","src":"990:7:15"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"980:6:15"}]}]},"name":"abi_decode_tuple_t_addresst_addresst_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"518:9:15","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"529:7:15","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"541:6:15","type":""},{"name":"value1","nodeType":"YulTypedName","src":"549:6:15","type":""},{"name":"value2","nodeType":"YulTypedName","src":"557:6:15","type":""}],"src":"464:539:15"},{"body":{"nodeType":"YulBlock","src":"1154:337:15","statements":[{"body":{"nodeType":"YulBlock","src":"1201:26:15","statements":[{"expression":{"arguments":[{"name":"value4","nodeType":"YulIdentifier","src":"1210:6:15"},{"name":"value4","nodeType":"YulIdentifier","src":"1218:6:15"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1203:6:15"},"nodeType":"YulFunctionCall","src":"1203:22:15"},"nodeType":"YulExpressionStatement","src":"1203:22:15"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1175:7:15"},{"name":"headStart","nodeType":"YulIdentifier","src":"1184:9:15"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1171:3:15"},"nodeType":"YulFunctionCall","src":"1171:23:15"},{"kind":"number","nodeType":"YulLiteral","src":"1196:3:15","type":"","value":"160"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1167:3:15"},"nodeType":"YulFunctionCall","src":"1167:33:15"},"nodeType":"YulIf","src":"1164:2:15"},{"nodeType":"YulAssignment","src":"1236:49:15","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1275:9:15"}],"functionName":{"name":"abi_decode_uint80_fromMemory","nodeType":"YulIdentifier","src":"1246:28:15"},"nodeType":"YulFunctionCall","src":"1246:39:15"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1236:6:15"}]},{"nodeType":"YulAssignment","src":"1294:35:15","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1314:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"1325:2:15","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1310:3:15"},"nodeType":"YulFunctionCall","src":"1310:18:15"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1304:5:15"},"nodeType":"YulFunctionCall","src":"1304:25:15"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"1294:6:15"}]},{"nodeType":"YulAssignment","src":"1338:35:15","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1358:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"1369:2:15","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1354:3:15"},"nodeType":"YulFunctionCall","src":"1354:18:15"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1348:5:15"},"nodeType":"YulFunctionCall","src":"1348:25:15"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"1338:6:15"}]},{"nodeType":"YulAssignment","src":"1382:35:15","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1402:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"1413:2:15","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1398:3:15"},"nodeType":"YulFunctionCall","src":"1398:18:15"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1392:5:15"},"nodeType":"YulFunctionCall","src":"1392:25:15"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"1382:6:15"}]},{"nodeType":"YulAssignment","src":"1426:59:15","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1469:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"1480:3:15","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1465:3:15"},"nodeType":"YulFunctionCall","src":"1465:19:15"}],"functionName":{"name":"abi_decode_uint80_fromMemory","nodeType":"YulIdentifier","src":"1436:28:15"},"nodeType":"YulFunctionCall","src":"1436:49:15"},"variableNames":[{"name":"value4","nodeType":"YulIdentifier","src":"1426:6:15"}]}]},"name":"abi_decode_tuple_t_uint80t_int256t_uint256t_uint256t_uint80_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1088:9:15","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1099:7:15","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1111:6:15","type":""},{"name":"value1","nodeType":"YulTypedName","src":"1119:6:15","type":""},{"name":"value2","nodeType":"YulTypedName","src":"1127:6:15","type":""},{"name":"value3","nodeType":"YulTypedName","src":"1135:6:15","type":""},{"name":"value4","nodeType":"YulTypedName","src":"1143:6:15","type":""}],"src":"1008:483:15"},{"body":{"nodeType":"YulBlock","src":"1575:214:15","statements":[{"body":{"nodeType":"YulBlock","src":"1621:26:15","statements":[{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"1630:6:15"},{"name":"value0","nodeType":"YulIdentifier","src":"1638:6:15"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1623:6:15"},"nodeType":"YulFunctionCall","src":"1623:22:15"},"nodeType":"YulExpressionStatement","src":"1623:22:15"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1596:7:15"},{"name":"headStart","nodeType":"YulIdentifier","src":"1605:9:15"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1592:3:15"},"nodeType":"YulFunctionCall","src":"1592:23:15"},{"kind":"number","nodeType":"YulLiteral","src":"1617:2:15","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1588:3:15"},"nodeType":"YulFunctionCall","src":"1588:32:15"},"nodeType":"YulIf","src":"1585:2:15"},{"nodeType":"YulVariableDeclaration","src":"1656:29:15","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1675:9:15"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1669:5:15"},"nodeType":"YulFunctionCall","src":"1669:16:15"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"1660:5:15","type":""}]},{"body":{"nodeType":"YulBlock","src":"1733:26:15","statements":[{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"1742:6:15"},{"name":"value0","nodeType":"YulIdentifier","src":"1750:6:15"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1735:6:15"},"nodeType":"YulFunctionCall","src":"1735:22:15"},"nodeType":"YulExpressionStatement","src":"1735:22:15"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1707:5:15"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1718:5:15"},{"kind":"number","nodeType":"YulLiteral","src":"1725:4:15","type":"","value":"0xff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1714:3:15"},"nodeType":"YulFunctionCall","src":"1714:16:15"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"1704:2:15"},"nodeType":"YulFunctionCall","src":"1704:27:15"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1697:6:15"},"nodeType":"YulFunctionCall","src":"1697:35:15"},"nodeType":"YulIf","src":"1694:2:15"},{"nodeType":"YulAssignment","src":"1768:15:15","value":{"name":"value","nodeType":"YulIdentifier","src":"1778:5:15"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1768:6:15"}]}]},"name":"abi_decode_tuple_t_uint8_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1541:9:15","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1552:7:15","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1564:6:15","type":""}],"src":"1496:293:15"},{"body":{"nodeType":"YulBlock","src":"1895:125:15","statements":[{"nodeType":"YulAssignment","src":"1905:26:15","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1917:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"1928:2:15","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1913:3:15"},"nodeType":"YulFunctionCall","src":"1913:18:15"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1905:4:15"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1947:9:15"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"1962:6:15"},{"kind":"number","nodeType":"YulLiteral","src":"1970:42:15","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1958:3:15"},"nodeType":"YulFunctionCall","src":"1958:55:15"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1940:6:15"},"nodeType":"YulFunctionCall","src":"1940:74:15"},"nodeType":"YulExpressionStatement","src":"1940:74:15"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1864:9:15","type":""},{"name":"value0","nodeType":"YulTypedName","src":"1875:6:15","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1886:4:15","type":""}],"src":"1794:226:15"},{"body":{"nodeType":"YulBlock","src":"2154:198:15","statements":[{"nodeType":"YulAssignment","src":"2164:26:15","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2176:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"2187:2:15","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2172:3:15"},"nodeType":"YulFunctionCall","src":"2172:18:15"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"2164:4:15"}]},{"nodeType":"YulVariableDeclaration","src":"2199:52:15","value":{"kind":"number","nodeType":"YulLiteral","src":"2209:42:15","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"2203:2:15","type":""}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2267:9:15"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"2282:6:15"},{"name":"_1","nodeType":"YulIdentifier","src":"2290:2:15"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2278:3:15"},"nodeType":"YulFunctionCall","src":"2278:15:15"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2260:6:15"},"nodeType":"YulFunctionCall","src":"2260:34:15"},"nodeType":"YulExpressionStatement","src":"2260:34:15"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2314:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"2325:2:15","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2310:3:15"},"nodeType":"YulFunctionCall","src":"2310:18:15"},{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"2334:6:15"},{"name":"_1","nodeType":"YulIdentifier","src":"2342:2:15"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2330:3:15"},"nodeType":"YulFunctionCall","src":"2330:15:15"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2303:6:15"},"nodeType":"YulFunctionCall","src":"2303:43:15"},"nodeType":"YulExpressionStatement","src":"2303:43:15"}]},"name":"abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2115:9:15","type":""},{"name":"value1","nodeType":"YulTypedName","src":"2126:6:15","type":""},{"name":"value0","nodeType":"YulTypedName","src":"2134:6:15","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"2145:4:15","type":""}],"src":"2025:327:15"},{"body":{"nodeType":"YulBlock","src":"2458:76:15","statements":[{"nodeType":"YulAssignment","src":"2468:26:15","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2480:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"2491:2:15","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2476:3:15"},"nodeType":"YulFunctionCall","src":"2476:18:15"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"2468:4:15"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2510:9:15"},{"name":"value0","nodeType":"YulIdentifier","src":"2521:6:15"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2503:6:15"},"nodeType":"YulFunctionCall","src":"2503:25:15"},"nodeType":"YulExpressionStatement","src":"2503:25:15"}]},"name":"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2427:9:15","type":""},{"name":"value0","nodeType":"YulTypedName","src":"2438:6:15","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"2449:4:15","type":""}],"src":"2357:177:15"},{"body":{"nodeType":"YulBlock","src":"2713:182:15","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2730:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"2741:2:15","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2723:6:15"},"nodeType":"YulFunctionCall","src":"2723:21:15"},"nodeType":"YulExpressionStatement","src":"2723:21:15"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2764:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"2775:2:15","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2760:3:15"},"nodeType":"YulFunctionCall","src":"2760:18:15"},{"kind":"number","nodeType":"YulLiteral","src":"2780:2:15","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2753:6:15"},"nodeType":"YulFunctionCall","src":"2753:30:15"},"nodeType":"YulExpressionStatement","src":"2753:30:15"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2803:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"2814:2:15","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2799:3:15"},"nodeType":"YulFunctionCall","src":"2799:18:15"},{"kind":"string","nodeType":"YulLiteral","src":"2819:34:15","type":"","value":"SafeCast: value must be positive"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2792:6:15"},"nodeType":"YulFunctionCall","src":"2792:62:15"},"nodeType":"YulExpressionStatement","src":"2792:62:15"},{"nodeType":"YulAssignment","src":"2863:26:15","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2875:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"2886:2:15","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2871:3:15"},"nodeType":"YulFunctionCall","src":"2871:18:15"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"2863:4:15"}]}]},"name":"abi_encode_tuple_t_stringliteral_74e6d3a4204092bea305532ded31d3763fc378e46be3884a93ceff08a0761807__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2690:9:15","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"2704:4:15","type":""}],"src":"2539:356:15"},{"body":{"nodeType":"YulBlock","src":"3074:177:15","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3091:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"3102:2:15","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3084:6:15"},"nodeType":"YulFunctionCall","src":"3084:21:15"},"nodeType":"YulExpressionStatement","src":"3084:21:15"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3125:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"3136:2:15","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3121:3:15"},"nodeType":"YulFunctionCall","src":"3121:18:15"},{"kind":"number","nodeType":"YulLiteral","src":"3141:2:15","type":"","value":"27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3114:6:15"},"nodeType":"YulFunctionCall","src":"3114:30:15"},"nodeType":"YulExpressionStatement","src":"3114:30:15"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3164:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"3175:2:15","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3160:3:15"},"nodeType":"YulFunctionCall","src":"3160:18:15"},{"kind":"string","nodeType":"YulLiteral","src":"3180:29:15","type":"","value":"QUOTE_FEED_DECIMALS_TOO_BIG"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3153:6:15"},"nodeType":"YulFunctionCall","src":"3153:57:15"},"nodeType":"YulExpressionStatement","src":"3153:57:15"},{"nodeType":"YulAssignment","src":"3219:26:15","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3231:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"3242:2:15","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3227:3:15"},"nodeType":"YulFunctionCall","src":"3227:18:15"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"3219:4:15"}]}]},"name":"abi_encode_tuple_t_stringliteral_7b4e12a5934c2c0c281891369fdf05fce29180c5a4483ee9b7923d6bbc7bdd72__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3051:9:15","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"3065:4:15","type":""}],"src":"2900:351:15"},{"body":{"nodeType":"YulBlock","src":"3430:168:15","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3447:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"3458:2:15","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3440:6:15"},"nodeType":"YulFunctionCall","src":"3440:21:15"},"nodeType":"YulExpressionStatement","src":"3440:21:15"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3481:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"3492:2:15","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3477:3:15"},"nodeType":"YulFunctionCall","src":"3477:18:15"},{"kind":"number","nodeType":"YulLiteral","src":"3497:2:15","type":"","value":"18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3470:6:15"},"nodeType":"YulFunctionCall","src":"3470:30:15"},"nodeType":"YulExpressionStatement","src":"3470:30:15"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3520:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"3531:2:15","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3516:3:15"},"nodeType":"YulFunctionCall","src":"3516:18:15"},{"kind":"string","nodeType":"YulLiteral","src":"3536:20:15","type":"","value":"MISSING_PRICE_FEED"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3509:6:15"},"nodeType":"YulFunctionCall","src":"3509:48:15"},"nodeType":"YulExpressionStatement","src":"3509:48:15"},{"nodeType":"YulAssignment","src":"3566:26:15","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3578:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"3589:2:15","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3574:3:15"},"nodeType":"YulFunctionCall","src":"3574:18:15"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"3566:4:15"}]}]},"name":"abi_encode_tuple_t_stringliteral_8a6c0adeacf05505b44a89a22681e180f480082d38ae2f68f88ba0893b3f86c4__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3407:9:15","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"3421:4:15","type":""}],"src":"3256:342:15"},{"body":{"nodeType":"YulBlock","src":"3777:162:15","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3794:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"3805:2:15","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3787:6:15"},"nodeType":"YulFunctionCall","src":"3787:21:15"},"nodeType":"YulExpressionStatement","src":"3787:21:15"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3828:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"3839:2:15","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3824:3:15"},"nodeType":"YulFunctionCall","src":"3824:18:15"},{"kind":"number","nodeType":"YulLiteral","src":"3844:2:15","type":"","value":"12"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3817:6:15"},"nodeType":"YulFunctionCall","src":"3817:30:15"},"nodeType":"YulExpressionStatement","src":"3817:30:15"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3867:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"3878:2:15","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3863:3:15"},"nodeType":"YulFunctionCall","src":"3863:18:15"},{"kind":"string","nodeType":"YulLiteral","src":"3883:14:15","type":"","value":"DIV_INTERNAL"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3856:6:15"},"nodeType":"YulFunctionCall","src":"3856:42:15"},"nodeType":"YulExpressionStatement","src":"3856:42:15"},{"nodeType":"YulAssignment","src":"3907:26:15","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3919:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"3930:2:15","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3915:3:15"},"nodeType":"YulFunctionCall","src":"3915:18:15"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"3907:4:15"}]}]},"name":"abi_encode_tuple_t_stringliteral_b1350abc64906961ed10db639fd26579f160d63de0c3cb6ad9d983a95be6ee97__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3754:9:15","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"3768:4:15","type":""}],"src":"3603:336:15"},{"body":{"nodeType":"YulBlock","src":"4118:171:15","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4135:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"4146:2:15","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4128:6:15"},"nodeType":"YulFunctionCall","src":"4128:21:15"},"nodeType":"YulExpressionStatement","src":"4128:21:15"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4169:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"4180:2:15","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4165:3:15"},"nodeType":"YulFunctionCall","src":"4165:18:15"},{"kind":"number","nodeType":"YulLiteral","src":"4185:2:15","type":"","value":"21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4158:6:15"},"nodeType":"YulFunctionCall","src":"4158:30:15"},"nodeType":"YulExpressionStatement","src":"4158:30:15"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4208:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"4219:2:15","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4204:3:15"},"nodeType":"YulFunctionCall","src":"4204:18:15"},{"kind":"string","nodeType":"YulLiteral","src":"4224:23:15","type":"","value":"BASE_DECIMALS_TOO_BIG"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4197:6:15"},"nodeType":"YulFunctionCall","src":"4197:51:15"},"nodeType":"YulExpressionStatement","src":"4197:51:15"},{"nodeType":"YulAssignment","src":"4257:26:15","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4269:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"4280:2:15","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4265:3:15"},"nodeType":"YulFunctionCall","src":"4265:18:15"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"4257:4:15"}]}]},"name":"abi_encode_tuple_t_stringliteral_b46f496c2d751f2a4e8069b27d1e80f3d8b7908ddc425c0833bebc662d3a77b2__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4095:9:15","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"4109:4:15","type":""}],"src":"3944:345:15"},{"body":{"nodeType":"YulBlock","src":"4468:163:15","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4485:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"4496:2:15","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4478:6:15"},"nodeType":"YulFunctionCall","src":"4478:21:15"},"nodeType":"YulExpressionStatement","src":"4478:21:15"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4519:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"4530:2:15","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4515:3:15"},"nodeType":"YulFunctionCall","src":"4515:18:15"},{"kind":"number","nodeType":"YulLiteral","src":"4535:2:15","type":"","value":"13"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4508:6:15"},"nodeType":"YulFunctionCall","src":"4508:30:15"},"nodeType":"YulExpressionStatement","src":"4508:30:15"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4558:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"4569:2:15","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4554:3:15"},"nodeType":"YulFunctionCall","src":"4554:18:15"},{"kind":"string","nodeType":"YulLiteral","src":"4574:15:15","type":"","value":"ZERO_DIVISION"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4547:6:15"},"nodeType":"YulFunctionCall","src":"4547:43:15"},"nodeType":"YulExpressionStatement","src":"4547:43:15"},{"nodeType":"YulAssignment","src":"4599:26:15","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4611:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"4622:2:15","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4607:3:15"},"nodeType":"YulFunctionCall","src":"4607:18:15"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"4599:4:15"}]}]},"name":"abi_encode_tuple_t_stringliteral_b4ddf0afacdcfca0994ec1d43a02032f771ceb61f93a153d4c00908d431f3487__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4445:9:15","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"4459:4:15","type":""}],"src":"4294:337:15"},{"body":{"nodeType":"YulBlock","src":"4810:171:15","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4827:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"4838:2:15","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4820:6:15"},"nodeType":"YulFunctionCall","src":"4820:21:15"},"nodeType":"YulExpressionStatement","src":"4820:21:15"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4861:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"4872:2:15","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4857:3:15"},"nodeType":"YulFunctionCall","src":"4857:18:15"},{"kind":"number","nodeType":"YulLiteral","src":"4877:2:15","type":"","value":"21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4850:6:15"},"nodeType":"YulFunctionCall","src":"4850:30:15"},"nodeType":"YulExpressionStatement","src":"4850:30:15"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4900:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"4911:2:15","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4896:3:15"},"nodeType":"YulFunctionCall","src":"4896:18:15"},{"kind":"string","nodeType":"YulLiteral","src":"4916:23:15","type":"","value":"FEED_DECIMALS_TOO_BIG"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4889:6:15"},"nodeType":"YulFunctionCall","src":"4889:51:15"},"nodeType":"YulExpressionStatement","src":"4889:51:15"},{"nodeType":"YulAssignment","src":"4949:26:15","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4961:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"4972:2:15","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4957:3:15"},"nodeType":"YulFunctionCall","src":"4957:18:15"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"4949:4:15"}]}]},"name":"abi_encode_tuple_t_stringliteral_cab21dcfbc4e6c212cc45734737c5e1310ee637d1888db1df25253b67fe6e5bc__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4787:9:15","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"4801:4:15","type":""}],"src":"4636:345:15"},{"body":{"nodeType":"YulBlock","src":"5087:76:15","statements":[{"nodeType":"YulAssignment","src":"5097:26:15","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5109:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"5120:2:15","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5105:3:15"},"nodeType":"YulFunctionCall","src":"5105:18:15"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"5097:4:15"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5139:9:15"},{"name":"value0","nodeType":"YulIdentifier","src":"5150:6:15"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5132:6:15"},"nodeType":"YulFunctionCall","src":"5132:25:15"},"nodeType":"YulExpressionStatement","src":"5132:25:15"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5056:9:15","type":""},{"name":"value0","nodeType":"YulTypedName","src":"5067:6:15","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"5078:4:15","type":""}],"src":"4986:177:15"},{"body":{"nodeType":"YulBlock","src":"5216:80:15","statements":[{"body":{"nodeType":"YulBlock","src":"5243:22:15","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"5245:16:15"},"nodeType":"YulFunctionCall","src":"5245:18:15"},"nodeType":"YulExpressionStatement","src":"5245:18:15"}]},"condition":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"5232:1:15"},{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"5239:1:15"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"5235:3:15"},"nodeType":"YulFunctionCall","src":"5235:6:15"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"5229:2:15"},"nodeType":"YulFunctionCall","src":"5229:13:15"},"nodeType":"YulIf","src":"5226:2:15"},{"nodeType":"YulAssignment","src":"5274:16:15","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"5285:1:15"},{"name":"y","nodeType":"YulIdentifier","src":"5288:1:15"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5281:3:15"},"nodeType":"YulFunctionCall","src":"5281:9:15"},"variableNames":[{"name":"sum","nodeType":"YulIdentifier","src":"5274:3:15"}]}]},"name":"checked_add_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"5199:1:15","type":""},{"name":"y","nodeType":"YulTypedName","src":"5202:1:15","type":""}],"returnVariables":[{"name":"sum","nodeType":"YulTypedName","src":"5208:3:15","type":""}],"src":"5168:128:15"},{"body":{"nodeType":"YulBlock","src":"5347:228:15","statements":[{"body":{"nodeType":"YulBlock","src":"5378:168:15","statements":[{"expression":{"arguments":[{"name":"r","nodeType":"YulIdentifier","src":"5399:1:15"},{"kind":"number","nodeType":"YulLiteral","src":"5402:77:15","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5392:6:15"},"nodeType":"YulFunctionCall","src":"5392:88:15"},"nodeType":"YulExpressionStatement","src":"5392:88:15"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5500:1:15","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"5503:4:15","type":"","value":"0x12"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5493:6:15"},"nodeType":"YulFunctionCall","src":"5493:15:15"},"nodeType":"YulExpressionStatement","src":"5493:15:15"},{"expression":{"arguments":[{"name":"r","nodeType":"YulIdentifier","src":"5528:1:15"},{"kind":"number","nodeType":"YulLiteral","src":"5531:4:15","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"5521:6:15"},"nodeType":"YulFunctionCall","src":"5521:15:15"},"nodeType":"YulExpressionStatement","src":"5521:15:15"}]},"condition":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"5367:1:15"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"5360:6:15"},"nodeType":"YulFunctionCall","src":"5360:9:15"},"nodeType":"YulIf","src":"5357:2:15"},{"nodeType":"YulAssignment","src":"5555:14:15","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"5564:1:15"},{"name":"y","nodeType":"YulIdentifier","src":"5567:1:15"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"5560:3:15"},"nodeType":"YulFunctionCall","src":"5560:9:15"},"variableNames":[{"name":"r","nodeType":"YulIdentifier","src":"5555:1:15"}]}]},"name":"checked_div_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"5332:1:15","type":""},{"name":"y","nodeType":"YulTypedName","src":"5335:1:15","type":""}],"returnVariables":[{"name":"r","nodeType":"YulTypedName","src":"5341:1:15","type":""}],"src":"5301:274:15"},{"body":{"nodeType":"YulBlock","src":"5657:376:15","statements":[{"nodeType":"YulAssignment","src":"5667:15:15","value":{"name":"_power","nodeType":"YulIdentifier","src":"5676:6:15"},"variableNames":[{"name":"power","nodeType":"YulIdentifier","src":"5667:5:15"}]},{"nodeType":"YulAssignment","src":"5691:13:15","value":{"name":"_base","nodeType":"YulIdentifier","src":"5699:5:15"},"variableNames":[{"name":"base","nodeType":"YulIdentifier","src":"5691:4:15"}]},{"body":{"nodeType":"YulBlock","src":"5738:289:15","statements":[{"nodeType":"YulVariableDeclaration","src":"5752:11:15","value":{"kind":"number","nodeType":"YulLiteral","src":"5762:1:15","type":"","value":"1"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"5756:2:15","type":""}]},{"body":{"nodeType":"YulBlock","src":"5804:9:15","statements":[{"nodeType":"YulBreak","src":"5806:5:15"}]},"condition":{"arguments":[{"arguments":[{"name":"exponent","nodeType":"YulIdentifier","src":"5789:8:15"},{"name":"_1","nodeType":"YulIdentifier","src":"5799:2:15"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"5786:2:15"},"nodeType":"YulFunctionCall","src":"5786:16:15"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"5779:6:15"},"nodeType":"YulFunctionCall","src":"5779:24:15"},"nodeType":"YulIf","src":"5776:2:15"},{"body":{"nodeType":"YulBlock","src":"5854:22:15","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"5856:16:15"},"nodeType":"YulFunctionCall","src":"5856:18:15"},"nodeType":"YulExpressionStatement","src":"5856:18:15"}]},"condition":{"arguments":[{"name":"base","nodeType":"YulIdentifier","src":"5832:4:15"},{"arguments":[{"name":"max","nodeType":"YulIdentifier","src":"5842:3:15"},{"name":"base","nodeType":"YulIdentifier","src":"5847:4:15"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"5838:3:15"},"nodeType":"YulFunctionCall","src":"5838:14:15"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"5829:2:15"},"nodeType":"YulFunctionCall","src":"5829:24:15"},"nodeType":"YulIf","src":"5826:2:15"},{"body":{"nodeType":"YulBlock","src":"5910:29:15","statements":[{"nodeType":"YulAssignment","src":"5912:25:15","value":{"arguments":[{"name":"power","nodeType":"YulIdentifier","src":"5925:5:15"},{"name":"base","nodeType":"YulIdentifier","src":"5932:4:15"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"5921:3:15"},"nodeType":"YulFunctionCall","src":"5921:16:15"},"variableNames":[{"name":"power","nodeType":"YulIdentifier","src":"5912:5:15"}]}]},"condition":{"arguments":[{"name":"exponent","nodeType":"YulIdentifier","src":"5896:8:15"},{"name":"_1","nodeType":"YulIdentifier","src":"5906:2:15"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"5892:3:15"},"nodeType":"YulFunctionCall","src":"5892:17:15"},"nodeType":"YulIf","src":"5889:2:15"},{"nodeType":"YulAssignment","src":"5952:23:15","value":{"arguments":[{"name":"base","nodeType":"YulIdentifier","src":"5964:4:15"},{"name":"base","nodeType":"YulIdentifier","src":"5970:4:15"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"5960:3:15"},"nodeType":"YulFunctionCall","src":"5960:15:15"},"variableNames":[{"name":"base","nodeType":"YulIdentifier","src":"5952:4:15"}]},{"nodeType":"YulAssignment","src":"5988:29:15","value":{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"6004:2:15"},{"name":"exponent","nodeType":"YulIdentifier","src":"6008:8:15"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"6000:3:15"},"nodeType":"YulFunctionCall","src":"6000:17:15"},"variableNames":[{"name":"exponent","nodeType":"YulIdentifier","src":"5988:8:15"}]}]},"condition":{"kind":"bool","nodeType":"YulLiteral","src":"5721:4:15","type":"","value":"true"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"5726:3:15","statements":[]},"pre":{"nodeType":"YulBlock","src":"5717:3:15","statements":[]},"src":"5713:314:15"}]},"name":"checked_exp_helper","nodeType":"YulFunctionDefinition","parameters":[{"name":"_power","nodeType":"YulTypedName","src":"5608:6:15","type":""},{"name":"_base","nodeType":"YulTypedName","src":"5616:5:15","type":""},{"name":"exponent","nodeType":"YulTypedName","src":"5623:8:15","type":""},{"name":"max","nodeType":"YulTypedName","src":"5633:3:15","type":""}],"returnVariables":[{"name":"power","nodeType":"YulTypedName","src":"5641:5:15","type":""},{"name":"base","nodeType":"YulTypedName","src":"5648:4:15","type":""}],"src":"5580:453:15"},{"body":{"nodeType":"YulBlock","src":"6108:129:15","statements":[{"nodeType":"YulAssignment","src":"6118:113:15","value":{"arguments":[{"name":"base","nodeType":"YulIdentifier","src":"6148:4:15"},{"name":"exponent","nodeType":"YulIdentifier","src":"6154:8:15"},{"kind":"number","nodeType":"YulLiteral","src":"6164:66:15","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"checked_exp_unsigned","nodeType":"YulIdentifier","src":"6127:20:15"},"nodeType":"YulFunctionCall","src":"6127:104:15"},"variableNames":[{"name":"power","nodeType":"YulIdentifier","src":"6118:5:15"}]}]},"name":"checked_exp_t_uint256_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"base","nodeType":"YulTypedName","src":"6079:4:15","type":""},{"name":"exponent","nodeType":"YulTypedName","src":"6085:8:15","type":""}],"returnVariables":[{"name":"power","nodeType":"YulTypedName","src":"6098:5:15","type":""}],"src":"6038:199:15"},{"body":{"nodeType":"YulBlock","src":"6306:858:15","statements":[{"body":{"nodeType":"YulBlock","src":"6344:52:15","statements":[{"nodeType":"YulAssignment","src":"6358:10:15","value":{"kind":"number","nodeType":"YulLiteral","src":"6367:1:15","type":"","value":"1"},"variableNames":[{"name":"power","nodeType":"YulIdentifier","src":"6358:5:15"}]},{"nodeType":"YulLeave","src":"6381:5:15"}]},"condition":{"arguments":[{"name":"exponent","nodeType":"YulIdentifier","src":"6326:8:15"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"6319:6:15"},"nodeType":"YulFunctionCall","src":"6319:16:15"},"nodeType":"YulIf","src":"6316:2:15"},{"body":{"nodeType":"YulBlock","src":"6429:52:15","statements":[{"nodeType":"YulAssignment","src":"6443:10:15","value":{"kind":"number","nodeType":"YulLiteral","src":"6452:1:15","type":"","value":"0"},"variableNames":[{"name":"power","nodeType":"YulIdentifier","src":"6443:5:15"}]},{"nodeType":"YulLeave","src":"6466:5:15"}]},"condition":{"arguments":[{"name":"base","nodeType":"YulIdentifier","src":"6415:4:15"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"6408:6:15"},"nodeType":"YulFunctionCall","src":"6408:12:15"},"nodeType":"YulIf","src":"6405:2:15"},{"cases":[{"body":{"nodeType":"YulBlock","src":"6517:52:15","statements":[{"nodeType":"YulAssignment","src":"6531:10:15","value":{"kind":"number","nodeType":"YulLiteral","src":"6540:1:15","type":"","value":"1"},"variableNames":[{"name":"power","nodeType":"YulIdentifier","src":"6531:5:15"}]},{"nodeType":"YulLeave","src":"6554:5:15"}]},"nodeType":"YulCase","src":"6510:59:15","value":{"kind":"number","nodeType":"YulLiteral","src":"6515:1:15","type":"","value":"1"}},{"body":{"nodeType":"YulBlock","src":"6585:176:15","statements":[{"body":{"nodeType":"YulBlock","src":"6620:22:15","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"6622:16:15"},"nodeType":"YulFunctionCall","src":"6622:18:15"},"nodeType":"YulExpressionStatement","src":"6622:18:15"}]},"condition":{"arguments":[{"name":"exponent","nodeType":"YulIdentifier","src":"6605:8:15"},{"kind":"number","nodeType":"YulLiteral","src":"6615:3:15","type":"","value":"255"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"6602:2:15"},"nodeType":"YulFunctionCall","src":"6602:17:15"},"nodeType":"YulIf","src":"6599:2:15"},{"nodeType":"YulAssignment","src":"6655:25:15","value":{"arguments":[{"name":"exponent","nodeType":"YulIdentifier","src":"6668:8:15"},{"kind":"number","nodeType":"YulLiteral","src":"6678:1:15","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"6664:3:15"},"nodeType":"YulFunctionCall","src":"6664:16:15"},"variableNames":[{"name":"power","nodeType":"YulIdentifier","src":"6655:5:15"}]},{"body":{"nodeType":"YulBlock","src":"6711:22:15","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"6713:16:15"},"nodeType":"YulFunctionCall","src":"6713:18:15"},"nodeType":"YulExpressionStatement","src":"6713:18:15"}]},"condition":{"arguments":[{"name":"power","nodeType":"YulIdentifier","src":"6699:5:15"},{"name":"max","nodeType":"YulIdentifier","src":"6706:3:15"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"6696:2:15"},"nodeType":"YulFunctionCall","src":"6696:14:15"},"nodeType":"YulIf","src":"6693:2:15"},{"nodeType":"YulLeave","src":"6746:5:15"}]},"nodeType":"YulCase","src":"6578:183:15","value":{"kind":"number","nodeType":"YulLiteral","src":"6583:1:15","type":"","value":"2"}}],"expression":{"name":"base","nodeType":"YulIdentifier","src":"6497:4:15"},"nodeType":"YulSwitch","src":"6490:271:15"},{"body":{"nodeType":"YulBlock","src":"6859:123:15","statements":[{"nodeType":"YulAssignment","src":"6873:28:15","value":{"arguments":[{"name":"base","nodeType":"YulIdentifier","src":"6886:4:15"},{"name":"exponent","nodeType":"YulIdentifier","src":"6892:8:15"}],"functionName":{"name":"exp","nodeType":"YulIdentifier","src":"6882:3:15"},"nodeType":"YulFunctionCall","src":"6882:19:15"},"variableNames":[{"name":"power","nodeType":"YulIdentifier","src":"6873:5:15"}]},{"body":{"nodeType":"YulBlock","src":"6932:22:15","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"6934:16:15"},"nodeType":"YulFunctionCall","src":"6934:18:15"},"nodeType":"YulExpressionStatement","src":"6934:18:15"}]},"condition":{"arguments":[{"name":"power","nodeType":"YulIdentifier","src":"6920:5:15"},{"name":"max","nodeType":"YulIdentifier","src":"6927:3:15"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"6917:2:15"},"nodeType":"YulFunctionCall","src":"6917:14:15"},"nodeType":"YulIf","src":"6914:2:15"},{"nodeType":"YulLeave","src":"6967:5:15"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"base","nodeType":"YulIdentifier","src":"6783:4:15"},{"kind":"number","nodeType":"YulLiteral","src":"6789:2:15","type":"","value":"11"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"6780:2:15"},"nodeType":"YulFunctionCall","src":"6780:12:15"},{"arguments":[{"name":"exponent","nodeType":"YulIdentifier","src":"6797:8:15"},{"kind":"number","nodeType":"YulLiteral","src":"6807:2:15","type":"","value":"78"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"6794:2:15"},"nodeType":"YulFunctionCall","src":"6794:16:15"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"6776:3:15"},"nodeType":"YulFunctionCall","src":"6776:35:15"},{"arguments":[{"arguments":[{"name":"base","nodeType":"YulIdentifier","src":"6820:4:15"},{"kind":"number","nodeType":"YulLiteral","src":"6826:3:15","type":"","value":"307"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"6817:2:15"},"nodeType":"YulFunctionCall","src":"6817:13:15"},{"arguments":[{"name":"exponent","nodeType":"YulIdentifier","src":"6835:8:15"},{"kind":"number","nodeType":"YulLiteral","src":"6845:2:15","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"6832:2:15"},"nodeType":"YulFunctionCall","src":"6832:16:15"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"6813:3:15"},"nodeType":"YulFunctionCall","src":"6813:36:15"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"6773:2:15"},"nodeType":"YulFunctionCall","src":"6773:77:15"},"nodeType":"YulIf","src":"6770:2:15"},{"nodeType":"YulVariableDeclaration","src":"6991:65:15","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7033:1:15","type":"","value":"1"},{"name":"base","nodeType":"YulIdentifier","src":"7036:4:15"},{"name":"exponent","nodeType":"YulIdentifier","src":"7042:8:15"},{"name":"max","nodeType":"YulIdentifier","src":"7052:3:15"}],"functionName":{"name":"checked_exp_helper","nodeType":"YulIdentifier","src":"7014:18:15"},"nodeType":"YulFunctionCall","src":"7014:42:15"},"variables":[{"name":"power_1","nodeType":"YulTypedName","src":"6995:7:15","type":""},{"name":"base_1","nodeType":"YulTypedName","src":"7004:6:15","type":""}]},{"body":{"nodeType":"YulBlock","src":"7098:22:15","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"7100:16:15"},"nodeType":"YulFunctionCall","src":"7100:18:15"},"nodeType":"YulExpressionStatement","src":"7100:18:15"}]},"condition":{"arguments":[{"name":"power_1","nodeType":"YulIdentifier","src":"7071:7:15"},{"arguments":[{"name":"max","nodeType":"YulIdentifier","src":"7084:3:15"},{"name":"base_1","nodeType":"YulIdentifier","src":"7089:6:15"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"7080:3:15"},"nodeType":"YulFunctionCall","src":"7080:16:15"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"7068:2:15"},"nodeType":"YulFunctionCall","src":"7068:29:15"},"nodeType":"YulIf","src":"7065:2:15"},{"nodeType":"YulAssignment","src":"7129:29:15","value":{"arguments":[{"name":"power_1","nodeType":"YulIdentifier","src":"7142:7:15"},{"name":"base_1","nodeType":"YulIdentifier","src":"7151:6:15"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"7138:3:15"},"nodeType":"YulFunctionCall","src":"7138:20:15"},"variableNames":[{"name":"power","nodeType":"YulIdentifier","src":"7129:5:15"}]}]},"name":"checked_exp_unsigned","nodeType":"YulFunctionDefinition","parameters":[{"name":"base","nodeType":"YulTypedName","src":"6272:4:15","type":""},{"name":"exponent","nodeType":"YulTypedName","src":"6278:8:15","type":""},{"name":"max","nodeType":"YulTypedName","src":"6288:3:15","type":""}],"returnVariables":[{"name":"power","nodeType":"YulTypedName","src":"6296:5:15","type":""}],"src":"6242:922:15"},{"body":{"nodeType":"YulBlock","src":"7221:176:15","statements":[{"body":{"nodeType":"YulBlock","src":"7340:22:15","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"7342:16:15"},"nodeType":"YulFunctionCall","src":"7342:18:15"},"nodeType":"YulExpressionStatement","src":"7342:18:15"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"7252:1:15"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"7245:6:15"},"nodeType":"YulFunctionCall","src":"7245:9:15"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"7238:6:15"},"nodeType":"YulFunctionCall","src":"7238:17:15"},{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"7260:1:15"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7267:66:15","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"},{"name":"x","nodeType":"YulIdentifier","src":"7335:1:15"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"7263:3:15"},"nodeType":"YulFunctionCall","src":"7263:74:15"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"7257:2:15"},"nodeType":"YulFunctionCall","src":"7257:81:15"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"7234:3:15"},"nodeType":"YulFunctionCall","src":"7234:105:15"},"nodeType":"YulIf","src":"7231:2:15"},{"nodeType":"YulAssignment","src":"7371:20:15","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"7386:1:15"},{"name":"y","nodeType":"YulIdentifier","src":"7389:1:15"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"7382:3:15"},"nodeType":"YulFunctionCall","src":"7382:9:15"},"variableNames":[{"name":"product","nodeType":"YulIdentifier","src":"7371:7:15"}]}]},"name":"checked_mul_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"7200:1:15","type":""},{"name":"y","nodeType":"YulTypedName","src":"7203:1:15","type":""}],"returnVariables":[{"name":"product","nodeType":"YulTypedName","src":"7209:7:15","type":""}],"src":"7169:228:15"},{"body":{"nodeType":"YulBlock","src":"7434:152:15","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7451:1:15","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"7454:77:15","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7444:6:15"},"nodeType":"YulFunctionCall","src":"7444:88:15"},"nodeType":"YulExpressionStatement","src":"7444:88:15"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7548:1:15","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"7551:4:15","type":"","value":"0x11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7541:6:15"},"nodeType":"YulFunctionCall","src":"7541:15:15"},"nodeType":"YulExpressionStatement","src":"7541:15:15"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7572:1:15","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"7575:4:15","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"7565:6:15"},"nodeType":"YulFunctionCall","src":"7565:15:15"},"nodeType":"YulExpressionStatement","src":"7565:15:15"}]},"name":"panic_error_0x11","nodeType":"YulFunctionDefinition","src":"7402:184:15"},{"body":{"nodeType":"YulBlock","src":"7636:109:15","statements":[{"body":{"nodeType":"YulBlock","src":"7723:16:15","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7732:1:15","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"7735:1:15","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"7725:6:15"},"nodeType":"YulFunctionCall","src":"7725:12:15"},"nodeType":"YulExpressionStatement","src":"7725:12:15"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"7659:5:15"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"7670:5:15"},{"kind":"number","nodeType":"YulLiteral","src":"7677:42:15","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"7666:3:15"},"nodeType":"YulFunctionCall","src":"7666:54:15"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"7656:2:15"},"nodeType":"YulFunctionCall","src":"7656:65:15"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"7649:6:15"},"nodeType":"YulFunctionCall","src":"7649:73:15"},"nodeType":"YulIf","src":"7646:2:15"}]},"name":"validator_revert_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"7625:5:15","type":""}],"src":"7591:154:15"}]},"contents":"{\n    { }\n    function abi_decode_uint80_fromMemory(offset) -> value\n    {\n        value := mload(offset)\n        if iszero(eq(value, and(value, 0xffffffffffffffffffff))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        let value := mload(headStart)\n        validator_revert_address(value)\n        value0 := value\n    }\n    function abi_decode_tuple_t_addresst_addresst_address(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(value1, value1) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        let value_1 := calldataload(add(headStart, 32))\n        validator_revert_address(value_1)\n        value1 := value_1\n        let value_2 := calldataload(add(headStart, 64))\n        validator_revert_address(value_2)\n        value2 := value_2\n    }\n    function abi_decode_tuple_t_uint80t_int256t_uint256t_uint256t_uint80_fromMemory(headStart, dataEnd) -> value0, value1, value2, value3, value4\n    {\n        if slt(sub(dataEnd, headStart), 160) { revert(value4, value4) }\n        value0 := abi_decode_uint80_fromMemory(headStart)\n        value1 := mload(add(headStart, 32))\n        value2 := mload(add(headStart, 64))\n        value3 := mload(add(headStart, 96))\n        value4 := abi_decode_uint80_fromMemory(add(headStart, 128))\n    }\n    function abi_decode_tuple_t_uint8_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        let value := mload(headStart)\n        if iszero(eq(value, and(value, 0xff))) { revert(value0, value0) }\n        value0 := value\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n    }\n    function abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        let _1 := 0xffffffffffffffffffffffffffffffffffffffff\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n    }\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_stringliteral_74e6d3a4204092bea305532ded31d3763fc378e46be3884a93ceff08a0761807__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"SafeCast: value must be positive\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_7b4e12a5934c2c0c281891369fdf05fce29180c5a4483ee9b7923d6bbc7bdd72__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 27)\n        mstore(add(headStart, 64), \"QUOTE_FEED_DECIMALS_TOO_BIG\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_8a6c0adeacf05505b44a89a22681e180f480082d38ae2f68f88ba0893b3f86c4__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 18)\n        mstore(add(headStart, 64), \"MISSING_PRICE_FEED\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_b1350abc64906961ed10db639fd26579f160d63de0c3cb6ad9d983a95be6ee97__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 12)\n        mstore(add(headStart, 64), \"DIV_INTERNAL\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_b46f496c2d751f2a4e8069b27d1e80f3d8b7908ddc425c0833bebc662d3a77b2__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 21)\n        mstore(add(headStart, 64), \"BASE_DECIMALS_TOO_BIG\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_b4ddf0afacdcfca0994ec1d43a02032f771ceb61f93a153d4c00908d431f3487__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 13)\n        mstore(add(headStart, 64), \"ZERO_DIVISION\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_cab21dcfbc4e6c212cc45734737c5e1310ee637d1888db1df25253b67fe6e5bc__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 21)\n        mstore(add(headStart, 64), \"FEED_DECIMALS_TOO_BIG\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        if gt(x, not(y)) { panic_error_0x11() }\n        sum := add(x, y)\n    }\n    function checked_div_t_uint256(x, y) -> r\n    {\n        if iszero(y)\n        {\n            mstore(r, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n            mstore(4, 0x12)\n            revert(r, 0x24)\n        }\n        r := div(x, y)\n    }\n    function checked_exp_helper(_power, _base, exponent, max) -> power, base\n    {\n        power := _power\n        base := _base\n        for { } true { }\n        {\n            let _1 := 1\n            if iszero(gt(exponent, _1)) { break }\n            if gt(base, div(max, base)) { panic_error_0x11() }\n            if and(exponent, _1) { power := mul(power, base) }\n            base := mul(base, base)\n            exponent := shr(_1, exponent)\n        }\n    }\n    function checked_exp_t_uint256_t_uint256(base, exponent) -> power\n    {\n        power := checked_exp_unsigned(base, exponent, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n    }\n    function checked_exp_unsigned(base, exponent, max) -> power\n    {\n        if iszero(exponent)\n        {\n            power := 1\n            leave\n        }\n        if iszero(base)\n        {\n            power := 0\n            leave\n        }\n        switch base\n        case 1 {\n            power := 1\n            leave\n        }\n        case 2 {\n            if gt(exponent, 255) { panic_error_0x11() }\n            power := shl(exponent, 1)\n            if gt(power, max) { panic_error_0x11() }\n            leave\n        }\n        if or(and(lt(base, 11), lt(exponent, 78)), and(lt(base, 307), lt(exponent, 32)))\n        {\n            power := exp(base, exponent)\n            if gt(power, max) { panic_error_0x11() }\n            leave\n        }\n        let power_1, base_1 := checked_exp_helper(1, base, exponent, max)\n        if gt(power_1, div(max, base_1)) { panic_error_0x11() }\n        power := mul(power_1, base_1)\n    }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        if and(iszero(iszero(x)), gt(y, div(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, x))) { panic_error_0x11() }\n        product := mul(x, y)\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function validator_revert_address(value)\n    {\n        if iszero(eq(value, and(value, 0xffffffffffffffffffffffffffffffffffffffff))) { revert(0, 0) }\n    }\n}","id":15,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{"367":[{"length":32,"start":163}],"3025":[{"length":32,"start":239},{"length":32,"start":1320},{"length":32,"start":1523}]},"linkReferences":{},"object":"608060405234801561001057600080fd5b506004361061004c5760003560e01c806344ba1fca146100515780637100d05c1461008b5780637b1039991461009e578063d77fe1cd146100ea575b600080fd5b6100787fdd24a0f121e5ab7c3e97c63eaaf859e0b46792c3e0edfd86e2b3ad50f63011d881565b6040519081526020015b60405180910390f35b610078610099366004610c08565b610111565b6100c57f000000000000000000000000000000000000000000000000000000000000000081565b60405173ffffffffffffffffffffffffffffffffffffffff9091168152602001610082565b6100c57f000000000000000000000000000000000000000000000000000000000000000081565b60008173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614156101565750670de0b6b3a7640000610315565b60008373ffffffffffffffffffffffffffffffffffffffff1663313ce5676040518163ffffffff1660e01b815260040160206040518083038186803b15801561019e57600080fd5b505afa1580156101b2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101d69190610ca1565b60ff16905060008373ffffffffffffffffffffffffffffffffffffffff1663313ce5676040518163ffffffff1660e01b815260040160206040518083038186803b15801561022357600080fd5b505afa158015610237573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061025b9190610ca1565b60ff16905061026b81601261031c565b8211156102d9576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601560248201527f424153455f444543494d414c535f544f4f5f424947000000000000000000000060448201526064015b60405180910390fd5b60006102ee836102ea84601261031c565b0390565b90506000806102fe898989610326565b9150915061030d82828561073d565b955050505050505b9392505050565b8181015b92915050565b6040517f9f0514ad00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff838116600483015282811660248301526000918291829190871690639f0514ad9060440160206040518083038186803b15801561039d57600080fd5b505afa1580156103b1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103d59190610bec565b905073ffffffffffffffffffffffffffffffffffffffff811615610406576103fc81610782565b9250925050610735565b6040517f9f0514ad00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff8581166004830152868116602483015260009190881690639f0514ad9060440160206040518083038186803b15801561047957600080fd5b505afa15801561048d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104b19190610bec565b905073ffffffffffffffffffffffffffffffffffffffff8116156104e3576104d88161089f565b935093505050610735565b6040517f9f0514ad00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff87811660048301527f00000000000000000000000000000000000000000000000000000000000000008116602483015260009190891690639f0514ad9060440160206040518083038186803b15801561057657600080fd5b505afa15801561058a573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105ae9190610bec565b6040517f9f0514ad00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff88811660048301527f0000000000000000000000000000000000000000000000000000000000000000811660248301529192506000918a1690639f0514ad9060440160206040518083038186803b15801561064357600080fd5b505afa158015610657573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061067b9190610bec565b905073ffffffffffffffffffffffffffffffffffffffff8216158015906106b7575073ffffffffffffffffffffffffffffffffffffffff811615155b156106d3576106c6828261093e565b9550955050505050610735565b6040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601260248201527f4d495353494e475f50524943455f46454544000000000000000000000000000060448201526064016102d0565b935093915050565b60008282101561076357610754828403600a610d59565b61075e9085610cda565b61077a565b610770838303600a610d59565b61077a9085610e45565b949350505050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663313ce5676040518163ffffffff1660e01b815260040160206040518083038186803b1580156107cb57600080fd5b505afa1580156107df573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108039190610ca1565b60ff16905060008373ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b15801561085057600080fd5b505afa158015610864573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108889190610c52565b505050915050610897816109fe565b925050915091565b6000806000806108ae85610782565b91509150602481111561091d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601560248201527f464545445f444543494d414c535f544f4f5f424947000000000000000000000060448201526064016102d0565b61092f670de0b6b3a764000083610a72565b95602491909103945092505050565b60008060008061094d86610782565b9150915060008061095d87610782565b909250905061096d601284610cc2565b8111156109d6576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601b60248201527f51554f54455f464545445f444543494d414c535f544f4f5f424947000000000060448201526064016102d0565b6109e08483610a72565b95506109f1816102ea85601261031c565b9450505050509250929050565b600080821215610a6a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f53616665436173743a2076616c7565206d75737420626520706f73697469766560448201526064016102d0565b50805b919050565b600081610adb576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600d60248201527f5a45524f5f4449564953494f4e0000000000000000000000000000000000000060448201526064016102d0565b82610ae857506000610320565b670de0b6b3a764000083810290848281610b2b577f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b0414610b93576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600c60248201527f4449565f494e5445524e414c000000000000000000000000000000000000000060448201526064016102d0565b828181610bc9577f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b04949350505050565b805169ffffffffffffffffffff81168114610a6d57600080fd5b600060208284031215610bfd578081fd5b815161031581610eb1565b600080600060608486031215610c1c578182fd5b8335610c2781610eb1565b92506020840135610c3781610eb1565b91506040840135610c4781610eb1565b809150509250925092565b600080600080600060a08688031215610c69578081fd5b610c7286610bd2565b9450602086015193506040860151925060608601519150610c9560808701610bd2565b90509295509295909350565b600060208284031215610cb2578081fd5b815160ff81168114610315578182fd5b60008219821115610cd557610cd5610e82565b500190565b600082610d0e577f4e487b710000000000000000000000000000000000000000000000000000000081526012600452602481fd5b500490565b80825b6001808611610d255750610d50565b818704821115610d3757610d37610e82565b80861615610d4457918102915b9490941c938002610d16565b94509492505050565b60006103157fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8484600082610d9057506001610315565b81610d9d57506000610315565b8160018114610db35760028114610dbd57610dea565b6001915050610315565b60ff841115610dce57610dce610e82565b6001841b915084821115610de457610de4610e82565b50610315565b5060208310610133831016604e8410600b8410161715610e1d575081810a83811115610e1857610e18610e82565b610315565b610e2a8484846001610d13565b808604821115610e3c57610e3c610e82565b02949350505050565b6000817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610e7d57610e7d610e82565b500290565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b73ffffffffffffffffffffffffffffffffffffffff81168114610ed357600080fd5b5056fea2646970667358221220e2fad9aa07f49873fbc5aecfbc401bea67896d9ba119b2f432b110443e9e3ea764736f6c63430008030033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x4C JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x44BA1FCA EQ PUSH2 0x51 JUMPI DUP1 PUSH4 0x7100D05C EQ PUSH2 0x8B JUMPI DUP1 PUSH4 0x7B103999 EQ PUSH2 0x9E JUMPI DUP1 PUSH4 0xD77FE1CD EQ PUSH2 0xEA JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x78 PUSH32 0xDD24A0F121E5AB7C3E97C63EAAF859E0B46792C3E0EDFD86E2B3AD50F63011D8 DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x78 PUSH2 0x99 CALLDATASIZE PUSH1 0x4 PUSH2 0xC08 JUMP JUMPDEST PUSH2 0x111 JUMP JUMPDEST PUSH2 0xC5 PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x82 JUMP JUMPDEST PUSH2 0xC5 PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x156 JUMPI POP PUSH8 0xDE0B6B3A7640000 PUSH2 0x315 JUMP JUMPDEST PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x313CE567 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x19E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1B2 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1D6 SWAP2 SWAP1 PUSH2 0xCA1 JUMP JUMPDEST PUSH1 0xFF AND SWAP1 POP PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x313CE567 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x223 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x237 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x25B SWAP2 SWAP1 PUSH2 0xCA1 JUMP JUMPDEST PUSH1 0xFF AND SWAP1 POP PUSH2 0x26B DUP2 PUSH1 0x12 PUSH2 0x31C JUMP JUMPDEST DUP3 GT ISZERO PUSH2 0x2D9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x424153455F444543494D414C535F544F4F5F4249470000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x2EE DUP4 PUSH2 0x2EA DUP5 PUSH1 0x12 PUSH2 0x31C JUMP JUMPDEST SUB SWAP1 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP1 PUSH2 0x2FE DUP10 DUP10 DUP10 PUSH2 0x326 JUMP JUMPDEST SWAP2 POP SWAP2 POP PUSH2 0x30D DUP3 DUP3 DUP6 PUSH2 0x73D JUMP JUMPDEST SWAP6 POP POP POP POP POP POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP2 DUP2 ADD JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x9F0514AD00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE DUP3 DUP2 AND PUSH1 0x24 DUP4 ADD MSTORE PUSH1 0x0 SWAP2 DUP3 SWAP2 DUP3 SWAP2 SWAP1 DUP8 AND SWAP1 PUSH4 0x9F0514AD SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x39D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x3B1 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x3D5 SWAP2 SWAP1 PUSH2 0xBEC JUMP JUMPDEST SWAP1 POP PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND ISZERO PUSH2 0x406 JUMPI PUSH2 0x3FC DUP2 PUSH2 0x782 JUMP JUMPDEST SWAP3 POP SWAP3 POP POP PUSH2 0x735 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x9F0514AD00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP6 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE DUP7 DUP2 AND PUSH1 0x24 DUP4 ADD MSTORE PUSH1 0x0 SWAP2 SWAP1 DUP9 AND SWAP1 PUSH4 0x9F0514AD SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x479 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x48D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x4B1 SWAP2 SWAP1 PUSH2 0xBEC JUMP JUMPDEST SWAP1 POP PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND ISZERO PUSH2 0x4E3 JUMPI PUSH2 0x4D8 DUP2 PUSH2 0x89F JUMP JUMPDEST SWAP4 POP SWAP4 POP POP POP PUSH2 0x735 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x9F0514AD00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP8 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH32 0x0 DUP2 AND PUSH1 0x24 DUP4 ADD MSTORE PUSH1 0x0 SWAP2 SWAP1 DUP10 AND SWAP1 PUSH4 0x9F0514AD SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x576 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x58A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x5AE SWAP2 SWAP1 PUSH2 0xBEC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x9F0514AD00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP9 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH32 0x0 DUP2 AND PUSH1 0x24 DUP4 ADD MSTORE SWAP2 SWAP3 POP PUSH1 0x0 SWAP2 DUP11 AND SWAP1 PUSH4 0x9F0514AD SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x643 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x657 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x67B SWAP2 SWAP1 PUSH2 0xBEC JUMP JUMPDEST SWAP1 POP PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND ISZERO DUP1 ISZERO SWAP1 PUSH2 0x6B7 JUMPI POP PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND ISZERO ISZERO JUMPDEST ISZERO PUSH2 0x6D3 JUMPI PUSH2 0x6C6 DUP3 DUP3 PUSH2 0x93E JUMP JUMPDEST SWAP6 POP SWAP6 POP POP POP POP POP PUSH2 0x735 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4D495353494E475F50524943455F464545440000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x2D0 JUMP JUMPDEST SWAP4 POP SWAP4 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x763 JUMPI PUSH2 0x754 DUP3 DUP5 SUB PUSH1 0xA PUSH2 0xD59 JUMP JUMPDEST PUSH2 0x75E SWAP1 DUP6 PUSH2 0xCDA JUMP JUMPDEST PUSH2 0x77A JUMP JUMPDEST PUSH2 0x770 DUP4 DUP4 SUB PUSH1 0xA PUSH2 0xD59 JUMP JUMPDEST PUSH2 0x77A SWAP1 DUP6 PUSH2 0xE45 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x313CE567 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x7CB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x7DF JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x803 SWAP2 SWAP1 PUSH2 0xCA1 JUMP JUMPDEST PUSH1 0xFF AND SWAP1 POP PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xFEAF968C PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0xA0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x850 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x864 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x888 SWAP2 SWAP1 PUSH2 0xC52 JUMP JUMPDEST POP POP POP SWAP2 POP POP PUSH2 0x897 DUP2 PUSH2 0x9FE JUMP JUMPDEST SWAP3 POP POP SWAP2 POP SWAP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH2 0x8AE DUP6 PUSH2 0x782 JUMP JUMPDEST SWAP2 POP SWAP2 POP PUSH1 0x24 DUP2 GT ISZERO PUSH2 0x91D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x464545445F444543494D414C535F544F4F5F4249470000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x2D0 JUMP JUMPDEST PUSH2 0x92F PUSH8 0xDE0B6B3A7640000 DUP4 PUSH2 0xA72 JUMP JUMPDEST SWAP6 PUSH1 0x24 SWAP2 SWAP1 SWAP2 SUB SWAP5 POP SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH2 0x94D DUP7 PUSH2 0x782 JUMP JUMPDEST SWAP2 POP SWAP2 POP PUSH1 0x0 DUP1 PUSH2 0x95D DUP8 PUSH2 0x782 JUMP JUMPDEST SWAP1 SWAP3 POP SWAP1 POP PUSH2 0x96D PUSH1 0x12 DUP5 PUSH2 0xCC2 JUMP JUMPDEST DUP2 GT ISZERO PUSH2 0x9D6 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x51554F54455F464545445F444543494D414C535F544F4F5F4249470000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x2D0 JUMP JUMPDEST PUSH2 0x9E0 DUP5 DUP4 PUSH2 0xA72 JUMP JUMPDEST SWAP6 POP PUSH2 0x9F1 DUP2 PUSH2 0x2EA DUP6 PUSH1 0x12 PUSH2 0x31C JUMP JUMPDEST SWAP5 POP POP POP POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 SLT ISZERO PUSH2 0xA6A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x53616665436173743A2076616C7565206D75737420626520706F736974697665 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x2D0 JUMP JUMPDEST POP DUP1 JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH2 0xADB JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xD PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5A45524F5F4449564953494F4E00000000000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x2D0 JUMP JUMPDEST DUP3 PUSH2 0xAE8 JUMPI POP PUSH1 0x0 PUSH2 0x320 JUMP JUMPDEST PUSH8 0xDE0B6B3A7640000 DUP4 DUP2 MUL SWAP1 DUP5 DUP3 DUP2 PUSH2 0xB2B JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DIV EQ PUSH2 0xB93 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xC PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4449565F494E5445524E414C0000000000000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x2D0 JUMP JUMPDEST DUP3 DUP2 DUP2 PUSH2 0xBC9 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DIV SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST DUP1 MLOAD PUSH10 0xFFFFFFFFFFFFFFFFFFFF DUP2 AND DUP2 EQ PUSH2 0xA6D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xBFD JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x315 DUP2 PUSH2 0xEB1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xC1C JUMPI DUP2 DUP3 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH2 0xC27 DUP2 PUSH2 0xEB1 JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH2 0xC37 DUP2 PUSH2 0xEB1 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD PUSH2 0xC47 DUP2 PUSH2 0xEB1 JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0xC69 JUMPI DUP1 DUP2 REVERT JUMPDEST PUSH2 0xC72 DUP7 PUSH2 0xBD2 JUMP JUMPDEST SWAP5 POP PUSH1 0x20 DUP7 ADD MLOAD SWAP4 POP PUSH1 0x40 DUP7 ADD MLOAD SWAP3 POP PUSH1 0x60 DUP7 ADD MLOAD SWAP2 POP PUSH2 0xC95 PUSH1 0x80 DUP8 ADD PUSH2 0xBD2 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xCB2 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 MLOAD PUSH1 0xFF DUP2 AND DUP2 EQ PUSH2 0x315 JUMPI DUP2 DUP3 REVERT JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0xCD5 JUMPI PUSH2 0xCD5 PUSH2 0xE82 JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0xD0E JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 DUP2 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST DUP1 DUP3 JUMPDEST PUSH1 0x1 DUP1 DUP7 GT PUSH2 0xD25 JUMPI POP PUSH2 0xD50 JUMP JUMPDEST DUP2 DUP8 DIV DUP3 GT ISZERO PUSH2 0xD37 JUMPI PUSH2 0xD37 PUSH2 0xE82 JUMP JUMPDEST DUP1 DUP7 AND ISZERO PUSH2 0xD44 JUMPI SWAP2 DUP2 MUL SWAP2 JUMPDEST SWAP5 SWAP1 SWAP5 SHR SWAP4 DUP1 MUL PUSH2 0xD16 JUMP JUMPDEST SWAP5 POP SWAP5 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x315 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 DUP5 PUSH1 0x0 DUP3 PUSH2 0xD90 JUMPI POP PUSH1 0x1 PUSH2 0x315 JUMP JUMPDEST DUP2 PUSH2 0xD9D JUMPI POP PUSH1 0x0 PUSH2 0x315 JUMP JUMPDEST DUP2 PUSH1 0x1 DUP2 EQ PUSH2 0xDB3 JUMPI PUSH1 0x2 DUP2 EQ PUSH2 0xDBD JUMPI PUSH2 0xDEA JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP PUSH2 0x315 JUMP JUMPDEST PUSH1 0xFF DUP5 GT ISZERO PUSH2 0xDCE JUMPI PUSH2 0xDCE PUSH2 0xE82 JUMP JUMPDEST PUSH1 0x1 DUP5 SHL SWAP2 POP DUP5 DUP3 GT ISZERO PUSH2 0xDE4 JUMPI PUSH2 0xDE4 PUSH2 0xE82 JUMP JUMPDEST POP PUSH2 0x315 JUMP JUMPDEST POP PUSH1 0x20 DUP4 LT PUSH2 0x133 DUP4 LT AND PUSH1 0x4E DUP5 LT PUSH1 0xB DUP5 LT AND OR ISZERO PUSH2 0xE1D JUMPI POP DUP2 DUP2 EXP DUP4 DUP2 GT ISZERO PUSH2 0xE18 JUMPI PUSH2 0xE18 PUSH2 0xE82 JUMP JUMPDEST PUSH2 0x315 JUMP JUMPDEST PUSH2 0xE2A DUP5 DUP5 DUP5 PUSH1 0x1 PUSH2 0xD13 JUMP JUMPDEST DUP1 DUP7 DIV DUP3 GT ISZERO PUSH2 0xE3C JUMPI PUSH2 0xE3C PUSH2 0xE82 JUMP JUMPDEST MUL SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0xE7D JUMPI PUSH2 0xE7D PUSH2 0xE82 JUMP JUMPDEST POP MUL SWAP1 JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND DUP2 EQ PUSH2 0xED3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE2 STATICCALL 0xD9 0xAA SMOD DELEGATECALL SWAP9 PUSH20 0xFBC5AECFBC401BEA67896D9BA119B2F432B11044 RETURNDATACOPY SWAP15 RETURNDATACOPY 0xA7 PUSH5 0x736F6C6343 STOP ADDMOD SUB STOP CALLER ","sourceMap":"2104:6780:14:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2321:70;;2366:25;2321:70;;;;;2503:25:15;;;2491:2;2476:18;2321:70:14;;;;;;;;3617:917;;;;;;:::i;:::-;;:::i;1340:42:4:-;;;;;;;;1970::15;1958:55;;;1940:74;;1928:2;1913:18;1340:42:4;1895:125:15;2763:30:14;;;;;3617:917;3714:7;3745:5;3737:13;;:4;:13;;;3733:40;;;-1:-1:-1;921:4:2;3752:21:14;;3733:40;3865:20;3903:4;3888:29;;;:31;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3865:54;;;;3929:21;3968:5;3953:30;;;:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3929:56;;;-1:-1:-1;4123:39:14;3929:56;2499:2;4123:26;:39::i;:::-;4107:12;:55;;4099:89;;;;;;;4146:2:15;4099:89:14;;;4128:21:15;4185:2;4165:18;;;4158:30;4224:23;4204:18;;;4197:51;4265:18;;4099:89:14;;;;;;;;;4277:22;4302:66;4355:12;4302:39;:13;2499:2;4302:26;:39::i;:::-;1221:5:3;;1104:139;4302:66:14;4277:91;;4379:13;4394:16;4414:52;4443:8;4454:4;4460:5;4414:9;:52::i;:::-;4378:88;;;;4483:44;4495:5;4502:8;4512:14;4483:11;:44::i;:::-;4476:51;;;;;;;3617:917;;;;;;:::o;890:139:3:-;1007:5;;;890:139;;;;;:::o;4888:705:14:-;5074:34;;;;;:21;2278:15:15;;;5074:34:14;;;2260::15;2330:15;;;2310:18;;;2303:43;5012:13:14;;;;;;5074:21;;;;;;2172:18:15;;5074:34:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5059:49;-1:-1:-1;5122:18:14;;;;5118:49;;5149:18;5162:4;5149:12;:18::i;:::-;5142:25;;;;;;;5118:49;5200:34;;;;;:21;2278:15:15;;;5200:34:14;;;2260::15;2330:15;;;2310:18;;;2303:43;5178:19:14;;5200:21;;;;;;2172:18:15;;5200:34:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5178:56;-1:-1:-1;5248:25:14;;;;5244:67;;5282:29;5299:11;5282:16;:29::i;:::-;5275:36;;;;;;;;5244:67;5341:34;;;;;:21;2278:15:15;;;5341:34:14;;;2260::15;5369:5:14;2330:15:15;;2310:18;;;2303:43;5322:16:14;;5341:21;;;;;;2172:18:15;;5341:34:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5405:35;;;;;:21;2278:15:15;;;5405:35:14;;;2260:34:15;5434:5:14;2330:15:15;;2310:18;;;2303:43;5322:53:14;;-1:-1:-1;5385:17:14;;5405:21;;;;;2172:18:15;;5405:35:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5385:55;-1:-1:-1;5454:22:14;;;;;;;:49;;-1:-1:-1;5480:23:14;;;;;5454:49;5450:97;;;5512:35;5527:8;5537:9;5512:14;:35::i;:::-;5505:42;;;;;;;;;;5450:97;5558:28;;;;;3458:2:15;5558:28:14;;;3440:21:15;3497:2;3477:18;;;3470:30;3536:20;3516:18;;;3509:48;3574:18;;5558:28:14;3430:168:15;4888:705:14;;;;;;;:::o;8546:336::-;8652:7;8708:13;8690:14;:31;;:185;;8826:48;1221:5:3;;;8826:2:14;:48;:::i;:::-;8818:56;;:5;:56;:::i;:::-;8690:185;;;8749:48;1221:5:3;;;8749:2:14;:48;:::i;:::-;8741:56;;:5;:56;:::i;:::-;8671:204;8546:336;-1:-1:-1;;;;8546:336:14:o;5888:287::-;5947:13;5962:16;6023:4;6001:36;;;:38;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5990:49;;;;6052:15;6099:4;6077:43;;;:45;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;6049:73;;;;;;6140:28;6159:8;6140:18;:28::i;:::-;6132:36;;5888:287;;;;:::o;6430:616::-;6500:13;6515:16;6544:20;6566:27;6597:25;6610:11;6597:12;:25::i;:::-;6543:79;;;;2651:2;6640:19;:48;;6632:82;;;;;;;4838:2:15;6632:82:14;;;4820:21:15;4877:2;4857:18;;;4850:30;4916:23;4896:18;;;4889:51;4957:18;;6632:82:14;4810:171:15;6632:82:14;6845:36;921:4:2;6868:12:14;6845:22;:36::i;:::-;6837:44;2651:2;1221:5:3;;;;;-1:-1:-1;6430:616:14;-1:-1:-1;;;6430:616:14:o;7359:915::-;7467:13;7482:16;7515:17;7534:24;7562:22;7575:8;7562:12;:22::i;:::-;7514:70;;;;7595:18;7615:25;7644:23;7657:9;7644:12;:23::i;:::-;7594:73;;-1:-1:-1;7594:73:14;-1:-1:-1;7810:30:14;2499:2;7810:16;:30;:::i;:::-;7789:17;:51;;7781:91;;;;;;;3102:2:15;7781:91:14;;;3084:21:15;3141:2;3121:18;;;3114:30;3180:29;3160:18;;;3153:57;3227:18;;7781:91:14;3074:177:15;7781:91:14;8065:29;:9;8083:10;8065:17;:29::i;:::-;8057:37;-1:-1:-1;8193:74:14;8249:17;8193:42;:16;2499:2;8193:29;:42::i;:74::-;8182:85;;7359:915;;;;;;;;;:::o;17102:168:11:-;17158:7;17194:1;17185:5;:10;;17177:55;;;;;;;2741:2:15;17177:55:11;;;2723:21:15;;;2760:18;;;2753:30;2819:34;2799:18;;;2792:62;2871:18;;17177:55:11;2713:182:15;17177:55:11;-1:-1:-1;17257:5:11;17102:168;;;;:::o;1689:322:2:-;1751:7;1802:6;1794:32;;;;;;;4496:2:15;1794:32:2;;;4478:21:15;4535:2;4515:18;;;4508:30;4574:15;4554:18;;;4547:43;4607:18;;1794:32:2;4468:163:15;1794:32:2;1844:6;1840:20;;-1:-1:-1;1859:1:2;1852:8;;1840:20;921:4;1894:7;;;;:1;:7;:1;1923:13;;;;;;;;;;;;;:20;1915:45;;;;;;;3805:2:15;1915:45:2;;;3787:21:15;3844:2;3824:18;;;3817:30;3883:14;3863:18;;;3856:42;3915:18;;1915:45:2;3777:162:15;1915:45:2;1993:1;1981:9;:13;;;;;;;;;;;;;;;1689:322;-1:-1:-1;;;;1689:322:2:o;14:179:15:-;92:13;;145:22;134:34;;124:45;;114:2;;183:1;180;173:12;198:261;;321:2;309:9;300:7;296:23;292:32;289:2;;;342:6;334;327:22;289:2;379:9;373:16;398:31;423:5;398:31;:::i;464:539::-;;;;610:2;598:9;589:7;585:23;581:32;578:2;;;631:6;623;616:22;578:2;675:9;662:23;694:31;719:5;694:31;:::i;:::-;744:5;-1:-1:-1;801:2:15;786:18;;773:32;814:33;773:32;814:33;:::i;:::-;866:7;-1:-1:-1;925:2:15;910:18;;897:32;938:33;897:32;938:33;:::i;:::-;990:7;980:17;;;568:435;;;;;:::o;1008:483::-;;;;;;1196:3;1184:9;1175:7;1171:23;1167:33;1164:2;;;1218:6;1210;1203:22;1164:2;1246:39;1275:9;1246:39;:::i;:::-;1236:49;;1325:2;1314:9;1310:18;1304:25;1294:35;;1369:2;1358:9;1354:18;1348:25;1338:35;;1413:2;1402:9;1398:18;1392:25;1382:35;;1436:49;1480:3;1469:9;1465:19;1436:49;:::i;:::-;1426:59;;1154:337;;;;;;;;:::o;1496:293::-;;1617:2;1605:9;1596:7;1592:23;1588:32;1585:2;;;1638:6;1630;1623:22;1585:2;1675:9;1669:16;1725:4;1718:5;1714:16;1707:5;1704:27;1694:2;;1750:6;1742;1735:22;5168:128;;5239:1;5235:6;5232:1;5229:13;5226:2;;;5245:18;;:::i;:::-;-1:-1:-1;5281:9:15;;5216:80::o;5301:274::-;;5367:1;5357:2;;5402:77;5399:1;5392:88;5503:4;5500:1;5493:15;5531:4;5528:1;5521:15;5357:2;-1:-1:-1;5560:9:15;;5347:228::o;5580:453::-;5676:6;5699:5;5713:314;5762:1;5799:2;5789:8;5786:16;5776:2;;5806:5;;;5776:2;5847:4;5842:3;5838:14;5832:4;5829:24;5826:2;;;5856:18;;:::i;:::-;5906:2;5896:8;5892:17;5889:2;;;5921:16;;;;5889:2;6000:17;;;;;5960:15;;5713:314;;;5657:376;;;;;;;:::o;6038:199::-;;6127:104;6164:66;6154:8;6148:4;6242:922;6326:8;6316:2;;-1:-1:-1;6367:1:15;6381:5;;6316:2;6415:4;6405:2;;-1:-1:-1;6452:1:15;6466:5;;6405:2;6497:4;6515:1;6510:59;;;;6583:1;6578:183;;;;6490:271;;6510:59;6540:1;6531:10;;6554:5;;;6578:183;6615:3;6605:8;6602:17;6599:2;;;6622:18;;:::i;:::-;6678:1;6668:8;6664:16;6655:25;;6706:3;6699:5;6696:14;6693:2;;;6713:18;;:::i;:::-;6746:5;;;6490:271;;6845:2;6835:8;6832:16;6826:3;6820:4;6817:13;6813:36;6807:2;6797:8;6794:16;6789:2;6783:4;6780:12;6776:35;6773:77;6770:2;;;-1:-1:-1;6882:19:15;;;6917:14;;;6914:2;;;6934:18;;:::i;:::-;6967:5;;6770:2;7014:42;7052:3;7042:8;7036:4;7033:1;7014:42;:::i;:::-;7089:6;7084:3;7080:16;7071:7;7068:29;7065:2;;;7100:18;;:::i;:::-;7138:20;;6306:858;-1:-1:-1;;;;6306:858:15:o;7169:228::-;;7335:1;7267:66;7263:74;7260:1;7257:81;7252:1;7245:9;7238:17;7234:105;7231:2;;;7342:18;;:::i;:::-;-1:-1:-1;7382:9:15;;7221:176::o;7402:184::-;7454:77;7451:1;7444:88;7551:4;7548:1;7541:15;7575:4;7572:1;7565:15;7591:154;7677:42;7670:5;7666:54;7659:5;7656:65;7646:2;;7735:1;7732;7725:12;7646:2;7636:109;:::o"},"methodIdentifiers":{"NAMESPACE()":"44ba1fca","getPrice(address,address,address)":"7100d05c","pivot()":"d77fe1cd","registry()":"7b103999"}},"metadata":"{\"compiler\":{\"version\":\"0.8.3+commit.8d00100c\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_pivot\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_registry\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"NAMESPACE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"provider\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"base\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"quote\",\"type\":\"address\"}],\"name\":\"getPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pivot\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"registry\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Oracle that interfaces with external feeds to provide quotes for tokens based on any other token. This Price Oracle only operates with ERC20 tokens, it does not allow querying quotes for any other denomination. Additionally, it only supports external feeds that implement ChainLink's proposed `AggregatorV3Interface` interface. It inherits from BaseImplementation which means it's implementation can be used directly from the Mimic Registry, it does not require initialization. IMPORTANT! As many other implementations in this repo, this contract is intended to be used as a LIBRARY, not a contract. Due to limitations of the Solidity compiler, it's not possible to work with immutable variables in libraries yet. Therefore, we are relying on contracts without storage variables so they can be safely delegate-called if desired.\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Creates a new Price Oracle implementation with references that should be shared among all implementations\",\"params\":{\"_pivot\":\"Address of the token to be used as the pivot\",\"_registry\":\"Address of the Mimic Registry to be referenced\"}},\"getPrice(address,address,address)\":{\"details\":\"Tells the price of a token (base) in a given quote. The response is expressed using the corresponding number of decimals so that when performing a fixed point product of it by a `base` amount it results in a value expressed in `quote` decimals.\",\"params\":{\"base\":\"Token to rate\",\"provider\":\"Provider to fetch the price feeds from\",\"quote\":\"Token used for the price rate\"}}},\"stateVariables\":{\"NAMESPACE\":{\"details\":\"Tells the namespace under which the implementation is registered in the Mimic Registry\"}},\"title\":\"PriceOracle\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/oracle/PriceOracle.sol\":\"PriceOracle\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":10000},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":{\"keccak256\":\"0xf2b6c9adb3552254df1445b73563cf014434ff5e78663e9b961b6c059506ceb5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c1f59e0c7334c22fb54288728fc32546bdc9c8133d6db0d60223e3c28f52120\",\"dweb:/ipfs/QmeuxawUVBhMWQJXaEhhnubCTc4Jwn5wYK8gbhq6NjrpfG\"]},\"@mimic-fi/v2-helpers/contracts/auth/IAuthorizer.sol\":{\"keccak256\":\"0x7e5d1c440a02d16c3d62d8ca982749b4cf044ba14e0a40c4f2fe23257a5304d2\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://bdad507d0bdc80eb1ca9fc01d4ef4ff5e0258b631305033b5945aad85fa5068a\",\"dweb:/ipfs/QmaRdsSorrzkxYpeTNMrZvH5RbbM9JYPQ9HyNAcQGmXNAe\"]},\"@mimic-fi/v2-helpers/contracts/math/FixedPoint.sol\":{\"keccak256\":\"0x1acd83a44406a524ffc2cd2b9f52d1ab1f0933216ed8155badc4ba5daf0d756d\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://9b153168a8af8d21ad6e83c66a6d0a74b8c2482c41914ab52800ad4d9b1046fd\",\"dweb:/ipfs/QmRPjPCqLLrj6xJuzWyEeBCGVxK2cFA4876b5pChu7SCae\"]},\"@mimic-fi/v2-helpers/contracts/math/UncheckedMath.sol\":{\"keccak256\":\"0x0521515cc3d9bb160250175613575c85286db3f308f522dc98bbf637efa78bfb\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://acd315fd1ef1d6408682ba6f7943470361baefff1a5675da40aab21673e42b55\",\"dweb:/ipfs/QmSg9WHAMVLk9i2rR8DQSomXLaKBW9gWcTRAwzbdxMLU7h\"]},\"@mimic-fi/v2-registry/contracts/implementations/BaseImplementation.sol\":{\"keccak256\":\"0xef331bd88660d3c89ea771c3a8a4392412a409f886411d740d056d547ca4098e\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://5615ee18477db1336aaa7908852e5b5f90a07d8bf90568ef87bab9043f19d819\",\"dweb:/ipfs/QmYJhtFsJAKsAjbbnFJbKxqxVzkQwxs6s3FehKfHZSouAo\"]},\"@mimic-fi/v2-registry/contracts/implementations/IImplementation.sol\":{\"keccak256\":\"0x621ffadea8fdc214f95fa95ff480ebc7f5f51d9678544883def90b59a3851f78\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://9933e44069dee9bf8410f405d734b1320e2b26f11108e723576f9df6ff410b59\",\"dweb:/ipfs/QmfEmrt9bRhjN86BJRST7ZSjkDjegJgd9JtLheizUNzDwN\"]},\"@mimic-fi/v2-registry/contracts/registry/IRegistry.sol\":{\"keccak256\":\"0xeb2662066535134308d0ba955c88e7de4a17d1681b148371dd6dd4b581b2f381\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://7d8f6509d822fea1cea9b6b81a9745fdcdfad4199e69cd3562ffeb234d0e3eac\",\"dweb:/ipfs/QmS74Fkt8nyoGUyNhrqmqrCXQcmboBciFY7zLSwpjytFtU\"]},\"@openzeppelin/contracts/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x2a21b14ff90012878752f230d3ffd5c3405e5938d06c97a7d89c0a64561d0d66\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3313a8f9bb1f9476857c9050067b31982bf2140b83d84f3bc0cec1f62bbe947f\",\"dweb:/ipfs/Qma17Pk8NRe7aB4UD3jjVxk7nSFaov3eQyv86hcyqkwJRV\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd\",\"dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xd6153ce99bcdcce22b124f755e72553295be6abcd63804cfdffceb188b8bef10\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://35c47bece3c03caaa07fab37dd2bb3413bfbca20db7bd9895024390e0a469487\",\"dweb:/ipfs/QmPGWT2x3QHcKxqe6gRmAkdakhbaRgx3DLzcakHz5M4eXG\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x02686c31ccb9ee77a299fa5f47327af5271f251a707a0e24f321957166ff0434\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cb562d8ae1da31249ca0d8553df9f89ef4c3c110a018c4449dde68ae30e51ec1\",\"dweb:/ipfs/QmUwxjtTUYB89ymeV46TZPmTsGnYrKNcgTHk7MQA1MG3hj\"]},\"contracts/feeds/IPriceFeedProvider.sol\":{\"keccak256\":\"0x4eb3e69eebade2d21f479426e2a96322f22872e48f608c85d3bbe704126b2067\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://2ba2229ac4ed40bbef1d6d2d49382fcdac2db180b8de8454ce16b43b7271ca0c\",\"dweb:/ipfs/QmRemCwZB13B5owhZTUuB5DDGP25YKNr6uZ5oMEy8JxWp5\"]},\"contracts/oracle/IPriceOracle.sol\":{\"keccak256\":\"0xd552588ae1e1447ba60d3e15c11c3d57f7ed6226bcd2d9e888f1f75b3fcdee6b\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://d5db66a7e8ca87dfc745fd043cdc5206302ac59bf85f959ddec65c7050abc25c\",\"dweb:/ipfs/Qmap47gLM3hsmjNJQVSCa9ait3ZJSs1G3NY8HJAH892c42\"]},\"contracts/oracle/PriceOracle.sol\":{\"keccak256\":\"0xa1c7dec9eef70f51e7ec019a22ba6f8d35bcbe3fd0d4ae066382dfdcb7549c8d\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://e1c8d6987b528f5def670969b05aa7df04c5aec63ac06627c94a413a2f4a91b6\",\"dweb:/ipfs/QmbdGHQXQArswvKMKDjBkmazcjdnvRGaeUJ4FtS7ymKFkq\"]}},\"version\":1}"}}}}}